var searchIndex = {};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[6,"__BitFlagsWidth","bitflags","",null,null],[14,"bitflags","","The `bitflags!` macro generates a `struct` that holds a set of C-style bitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex["event_loop"] = {"doc":"A Piston event loop for games and interactive applications","items":[[3,"EventSettings","event_loop","Stores event loop settings.",null,null],[12,"max_fps","","The maximum number of frames per second",0,null],[12,"ups","","The number of updates per second",0,null],[12,"ups_reset","","The number of delayed updates before skipping them to catch up. When set to `0`, it will always try to catch up.",0,null],[12,"swap_buffers","","Enable or disable automatic swapping of buffers.",0,null],[12,"bench_mode","","Enable or disable benchmark mode. When enabled, it will render and update without sleep and ignore input. Used to test performance by playing through as fast as possible. Requires `lazy` to be set to `false`.",0,null],[12,"lazy","","Enable or disable rendering only when receiving input. When enabled, update events are disabled. Idle events are emitted while receiving input.",0,null],[3,"Events","","An event loop iterator",null,null],[17,"DEFAULT_UPS","","The default updates per second.",null,null],[17,"DEFAULT_UPS_RESET","","The default delayed updates reset.",null,null],[17,"DEFAULT_MAX_FPS","","The default maximum frames per second.",null,null],[8,"EventLoop","","Methods implemented for changing event loop settings.",null,null],[10,"get_event_settings","","Returns event loop settings.",1,{"inputs":[{"name":"self"}],"output":{"name":"eventsettings"}}],[10,"set_event_settings","","Sets event loop settings.",1,{"inputs":[{"name":"self"},{"name":"eventsettings"}],"output":null}],[11,"set_ups","","The number of updates per second",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"ups","","The number of updates per second",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"self"}}],[11,"set_ups_reset","","The number of delayed updates before skipping them to catch up. When set to `0`, it will always try to catch up.",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"ups_reset","","The number of delayed updates before skipping them to catch up. When set to `0`, it will always try to catch up.",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"self"}}],[11,"set_max_fps","","The maximum number of frames per second",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"max_fps","","The maximum number of frames per second",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"self"}}],[11,"set_swap_buffers","","Enable or disable automatic swapping of buffers.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"swap_buffers","","Enable or disable automatic swapping of buffers.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"set_bench_mode","","Enable or disable benchmark mode. When enabled, it will render and update without sleep and ignore input. Used to test performance by playing through as fast as possible. Requires `lazy` to be set to `false`.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"bench_mode","","Enable or disable benchmark mode. When enabled, it will render and update without sleep and ignore input. Used to test performance by playing through as fast as possible. Requires `lazy` to be set to `false`.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"set_lazy","","Enable or disable rendering only when receiving input. When enabled, update events are disabled. Idle events are emitted while receiving input.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"lazy","","Enable or disable rendering only when receiving input. When enabled, update events are disabled. Idle events are emitted while receiving input.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"eventsettings"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates new with default settings.",0,{"inputs":[],"output":{"name":"eventsettings"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"eventsettings"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"events"}}],[11,"new","","Creates a new event iterator with default UPS and FPS settings.",2,{"inputs":[{"name":"eventsettings"}],"output":{"name":"events"}}],[11,"next","","Returns the next game event.",2,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"option"}}],[11,"get_event_settings","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"set_event_settings","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":null}],[11,"get_event_settings","","",2,{"inputs":[{"name":"self"}],"output":{"name":"eventsettings"}}],[11,"set_event_settings","","",2,{"inputs":[{"name":"self"},{"name":"eventsettings"}],"output":null}]],"paths":[[3,"EventSettings"],[8,"EventLoop"],[3,"Events"]]};
searchIndex["float"] = {"doc":"Traits for generic floats in game programming","items":[[8,"Float","float","Convenience trait for floats.",null,null],[8,"Min","","Minimum value.",null,null],[10,"min","","Returns the minimum value of self or other.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"Max","","Maximum value.",null,null],[10,"max","","Returns the maximum value of self or other.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"Signum","","The sign of the number.",null,null],[10,"signum","","Returns number representing the sign of self",2,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[8,"Powf","","Floating number power.",null,null],[10,"powf","","Returns floating power of the number.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"Radians","","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",4,{"inputs":[],"output":{"name":"self"}}],[10,"_180","","Returns radians corresponding to 180 degrees.",4,{"inputs":[],"output":{"name":"self"}}],[10,"_360","","Returns radians corresponding to 360 degrees.",4,{"inputs":[],"output":{"name":"self"}}],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to `value * (π / 180)`.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to `value * (180 / π)`.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[8,"One","","Number 1.",null,null],[10,"one","","Returns 1.",5,{"inputs":[],"output":{"name":"self"}}],[8,"Zero","","Number 0.",null,null],[10,"zero","","Returns 0.",6,{"inputs":[],"output":{"name":"self"}}],[8,"Sqrt","","Square root.",null,null],[10,"sqrt","","Returns square root.",7,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[8,"Trig","","Basic trigonometry functions",null,null],[10,"sin","","Returns sine of self.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","Returns cosine of self.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","Returns tangent of self.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","Returns inverse sine of self.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","Returns inverse cosine of self.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","Returns inverse tangent of self.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","Returns the four quadrant arctangent of self (y) and other (x).",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","Returns hyperbolic sine of self.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","Returns hyperbolic cosine of self.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","Returns hyperbolic tangent of self.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","Returns inverse hyperbolic sine of self.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","Returns inverse hyperbolic cosine of self.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","Returns inverse hyperbolic tangent of self.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[8,"Cast","","Casts into another type.",null,null],[10,"cast","","Casts into other type.",9,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[8,"FromPrimitive","","Trait for converting from different numeric types",null,null],[10,"from_f64","","from a f64",10,{"inputs":[{"name":"f64"}],"output":{"name":"self"}}],[10,"from_f32","","from a f32",10,{"inputs":[{"name":"f32"}],"output":{"name":"self"}}],[10,"from_isize","","from a isze",10,{"inputs":[{"name":"isize"}],"output":{"name":"self"}}],[10,"from_u32","","from a u32",10,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[10,"from_i32","","from a i32",10,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}]],"paths":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Powf"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]};
searchIndex["input"] = {"doc":"A flexible structure for user interactions to be used in window frameworks and widgets libraries.","items":[[3,"AfterRenderArgs","input","After render arguments.",null,null],[3,"CloseArgs","","Close arguments.",null,null],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds.",null,null],[12,"dt","","Expected idle time in seconds.",0,null],[3,"RenderArgs","","Render arguments",null,null],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",1,null],[12,"width","","The width of rendered area in points.",1,null],[12,"height","","The height of rendered area in points.",1,null],[12,"draw_width","","The width of rendered area in pixels.",1,null],[12,"draw_height","","The height of rendered area in pixels.",1,null],[3,"TouchArgs","","Touch arguments",null,null],[12,"device","","A unique identifier for touch device.",2,null],[12,"id","","A unique identifier for touch event.",2,null],[12,"x","","The x coordinate of the touch position, normalized 0..1.",2,null],[12,"y","","The y coordinate of the touch position, normalized 0..1.",2,null],[12,"z","","The z coordinate of the touch position, normalized 0..1.",2,null],[12,"px","","The x coordinate of the touch pressure direction.",2,null],[12,"py","","The y coordinate of the touch pressure direction.",2,null],[12,"pz","","The z coordinate of the touch pressure direction.",2,null],[12,"is_3d","","Whether the touch is in 3D.",2,null],[12,"touch","","The touch state.",2,null],[3,"UpdateArgs","","Update arguments, such as delta time in seconds",null,null],[12,"dt","","Delta time in seconds.",3,null],[3,"EventId","","Used to identify events arguments provided by traits.",null,null],[12,"0","","",4,null],[4,"Touch","","Stores the touch state.",null,null],[13,"Start","","The start of touch, for example a finger pressed down on a touch screen.",5,null],[13,"Move","","The move of touch, for example a finger moving while touching a touch screen.",5,null],[13,"End","","The end of touch, for example taking a finger away from a touch screen.",5,null],[13,"Cancel","","The cancel of touch, for example the window loses focus.",5,null],[4,"Button","","Models different kinds of buttons.",null,null],[13,"Keyboard","","A keyboard button.",6,null],[13,"Mouse","","A mouse button.",6,null],[13,"Controller","","A controller button.",6,null],[4,"Motion","","Models different kinds of motion.",null,null],[13,"MouseCursor","","x and y in window coordinates.",7,null],[13,"MouseRelative","","x and y in relative coordinates.",7,null],[13,"MouseScroll","","x and y in scroll ticks.",7,null],[13,"ControllerAxis","","controller axis move event.",7,null],[13,"Touch","","touch event.",7,null],[4,"Input","","Models input events.",null,null],[13,"Press","","Pressed a button.",8,null],[13,"Release","","Released a button.",8,null],[13,"Move","","Moved mouse cursor.",8,null],[13,"Text","","Text (usually from keyboard).",8,null],[13,"Resize","","Window got resized.",8,null],[13,"Focus","","Window gained or lost focus.",8,null],[13,"Cursor","","Window gained or lost cursor.",8,null],[13,"Close","","Window closed.",8,null],[13,"Render","","Render graphics.",8,null],[13,"AfterRender","","After rendering and swapping buffers.",8,null],[13,"Update","","Update the state of the application.",8,null],[13,"Idle","","Do background tasks that can be done incrementally.",8,null],[13,"Custom","","Custom event.",8,null],[0,"controller","","Back-end agnostic controller events.",null,null],[3,"ControllerButton","input::controller","Components of a controller button event. Not guaranteed consistent across backends.",null,null],[12,"id","","Which controller was the button on.",9,null],[12,"button","","Which button was pressed.",9,null],[3,"ControllerAxisArgs","","Components of a controller axis move event. Not guaranteed consistent across backends.",null,null],[12,"id","","Which controller moved.",10,null],[12,"axis","","The axis that moved.",10,null],[12,"position","","Position of the controller. Usually [-1.0, 1.0], though backends may use a different range for various devices.",10,null],[8,"ControllerAxisEvent","","The position of a controller axis changed.",null,null],[10,"from_controller_axis_args","","Creates a controller axis event.",11,{"inputs":[{"name":"controlleraxisargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"controller_axis","","Calls closure if this is a controller axis event.",11,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"controller_axis_args","","Returns controller axis arguments.",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"controllerbutton"}}],[11,"decode","","",9,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",9,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"controllerbutton"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"controllerbutton"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",9,null],[11,"new","","Create a new ControllerButton object. Intended for use by backends when emitting events.",9,{"inputs":[{"name":"i32"},{"name":"u8"}],"output":{"name":"self"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"controlleraxisargs"}}],[11,"decode","","",10,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",10,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"controlleraxisargs"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"controlleraxisargs"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new ControllerAxisArgs object. Intended for use by backends when emitting events.",10,{"inputs":[{"name":"i32"},{"name":"u8"},{"name":"f64"}],"output":{"name":"self"}}],[11,"from_controller_axis_args","input","",8,{"inputs":[{"name":"controlleraxisargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"controller_axis","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[0,"keyboard","","Back-end agnostic keyboard keys.",null,null],[3,"ModifierKey","input::keyboard","",null,null],[4,"Key","","Represent a keyboard key. Keycodes follows SDL http://wiki.libsdl.org/SDLKeycodeLookup",null,null],[13,"Unknown","","",12,null],[13,"Backspace","","",12,null],[13,"Tab","","",12,null],[13,"Return","","",12,null],[13,"Escape","","",12,null],[13,"Space","","",12,null],[13,"Exclaim","","",12,null],[13,"Quotedbl","","",12,null],[13,"Hash","","",12,null],[13,"Dollar","","",12,null],[13,"Percent","","",12,null],[13,"Ampersand","","",12,null],[13,"Quote","","",12,null],[13,"LeftParen","","",12,null],[13,"RightParen","","",12,null],[13,"Asterisk","","",12,null],[13,"Plus","","",12,null],[13,"Comma","","",12,null],[13,"Minus","","",12,null],[13,"Period","","",12,null],[13,"Slash","","",12,null],[13,"D0","","",12,null],[13,"D1","","",12,null],[13,"D2","","",12,null],[13,"D3","","",12,null],[13,"D4","","",12,null],[13,"D5","","",12,null],[13,"D6","","",12,null],[13,"D7","","",12,null],[13,"D8","","",12,null],[13,"D9","","",12,null],[13,"Colon","","",12,null],[13,"Semicolon","","",12,null],[13,"Less","","",12,null],[13,"Equals","","",12,null],[13,"Greater","","",12,null],[13,"Question","","",12,null],[13,"At","","",12,null],[13,"LeftBracket","","",12,null],[13,"Backslash","","",12,null],[13,"RightBracket","","",12,null],[13,"Caret","","",12,null],[13,"Underscore","","",12,null],[13,"Backquote","","",12,null],[13,"A","","",12,null],[13,"B","","",12,null],[13,"C","","",12,null],[13,"D","","",12,null],[13,"E","","",12,null],[13,"F","","",12,null],[13,"G","","",12,null],[13,"H","","",12,null],[13,"I","","",12,null],[13,"J","","",12,null],[13,"K","","",12,null],[13,"L","","",12,null],[13,"M","","",12,null],[13,"N","","",12,null],[13,"O","","",12,null],[13,"P","","",12,null],[13,"Q","","",12,null],[13,"R","","",12,null],[13,"S","","",12,null],[13,"T","","",12,null],[13,"U","","",12,null],[13,"V","","",12,null],[13,"W","","",12,null],[13,"X","","",12,null],[13,"Y","","",12,null],[13,"Z","","",12,null],[13,"Delete","","",12,null],[13,"CapsLock","","",12,null],[13,"F1","","",12,null],[13,"F2","","",12,null],[13,"F3","","",12,null],[13,"F4","","",12,null],[13,"F5","","",12,null],[13,"F6","","",12,null],[13,"F7","","",12,null],[13,"F8","","",12,null],[13,"F9","","",12,null],[13,"F10","","",12,null],[13,"F11","","",12,null],[13,"F12","","",12,null],[13,"PrintScreen","","",12,null],[13,"ScrollLock","","",12,null],[13,"Pause","","",12,null],[13,"Insert","","",12,null],[13,"Home","","",12,null],[13,"PageUp","","",12,null],[13,"End","","",12,null],[13,"PageDown","","",12,null],[13,"Right","","",12,null],[13,"Left","","",12,null],[13,"Down","","",12,null],[13,"Up","","",12,null],[13,"NumLockClear","","",12,null],[13,"NumPadDivide","","",12,null],[13,"NumPadMultiply","","",12,null],[13,"NumPadMinus","","",12,null],[13,"NumPadPlus","","",12,null],[13,"NumPadEnter","","",12,null],[13,"NumPad1","","",12,null],[13,"NumPad2","","",12,null],[13,"NumPad3","","",12,null],[13,"NumPad4","","",12,null],[13,"NumPad5","","",12,null],[13,"NumPad6","","",12,null],[13,"NumPad7","","",12,null],[13,"NumPad8","","",12,null],[13,"NumPad9","","",12,null],[13,"NumPad0","","",12,null],[13,"NumPadPeriod","","",12,null],[13,"Application","","",12,null],[13,"Power","","",12,null],[13,"NumPadEquals","","",12,null],[13,"F13","","",12,null],[13,"F14","","",12,null],[13,"F15","","",12,null],[13,"F16","","",12,null],[13,"F17","","",12,null],[13,"F18","","",12,null],[13,"F19","","",12,null],[13,"F20","","",12,null],[13,"F21","","",12,null],[13,"F22","","",12,null],[13,"F23","","",12,null],[13,"F24","","",12,null],[13,"Execute","","",12,null],[13,"Help","","",12,null],[13,"Menu","","",12,null],[13,"Select","","",12,null],[13,"Stop","","",12,null],[13,"Again","","",12,null],[13,"Undo","","",12,null],[13,"Cut","","",12,null],[13,"Copy","","",12,null],[13,"Paste","","",12,null],[13,"Find","","",12,null],[13,"Mute","","",12,null],[13,"VolumeUp","","",12,null],[13,"VolumeDown","","",12,null],[13,"NumPadComma","","",12,null],[13,"NumPadEqualsAS400","","",12,null],[13,"AltErase","","",12,null],[13,"Sysreq","","",12,null],[13,"Cancel","","",12,null],[13,"Clear","","",12,null],[13,"Prior","","",12,null],[13,"Return2","","",12,null],[13,"Separator","","",12,null],[13,"Out","","",12,null],[13,"Oper","","",12,null],[13,"ClearAgain","","",12,null],[13,"CrSel","","",12,null],[13,"ExSel","","",12,null],[13,"NumPad00","","",12,null],[13,"NumPad000","","",12,null],[13,"ThousandsSeparator","","",12,null],[13,"DecimalSeparator","","",12,null],[13,"CurrencyUnit","","",12,null],[13,"CurrencySubUnit","","",12,null],[13,"NumPadLeftParen","","",12,null],[13,"NumPadRightParen","","",12,null],[13,"NumPadLeftBrace","","",12,null],[13,"NumPadRightBrace","","",12,null],[13,"NumPadTab","","",12,null],[13,"NumPadBackspace","","",12,null],[13,"NumPadA","","",12,null],[13,"NumPadB","","",12,null],[13,"NumPadC","","",12,null],[13,"NumPadD","","",12,null],[13,"NumPadE","","",12,null],[13,"NumPadF","","",12,null],[13,"NumPadXor","","",12,null],[13,"NumPadPower","","",12,null],[13,"NumPadPercent","","",12,null],[13,"NumPadLess","","",12,null],[13,"NumPadGreater","","",12,null],[13,"NumPadAmpersand","","",12,null],[13,"NumPadDblAmpersand","","",12,null],[13,"NumPadVerticalBar","","",12,null],[13,"NumPadDblVerticalBar","","",12,null],[13,"NumPadColon","","",12,null],[13,"NumPadHash","","",12,null],[13,"NumPadSpace","","",12,null],[13,"NumPadAt","","",12,null],[13,"NumPadExclam","","",12,null],[13,"NumPadMemStore","","",12,null],[13,"NumPadMemRecall","","",12,null],[13,"NumPadMemClear","","",12,null],[13,"NumPadMemAdd","","",12,null],[13,"NumPadMemSubtract","","",12,null],[13,"NumPadMemMultiply","","",12,null],[13,"NumPadMemDivide","","",12,null],[13,"NumPadPlusMinus","","",12,null],[13,"NumPadClear","","",12,null],[13,"NumPadClearEntry","","",12,null],[13,"NumPadBinary","","",12,null],[13,"NumPadOctal","","",12,null],[13,"NumPadDecimal","","",12,null],[13,"NumPadHexadecimal","","",12,null],[13,"LCtrl","","",12,null],[13,"LShift","","",12,null],[13,"LAlt","","",12,null],[13,"LGui","","",12,null],[13,"RCtrl","","",12,null],[13,"RShift","","",12,null],[13,"RAlt","","",12,null],[13,"RGui","","",12,null],[13,"Mode","","",12,null],[13,"AudioNext","","",12,null],[13,"AudioPrev","","",12,null],[13,"AudioStop","","",12,null],[13,"AudioPlay","","",12,null],[13,"AudioMute","","",12,null],[13,"MediaSelect","","",12,null],[13,"Www","","",12,null],[13,"Mail","","",12,null],[13,"Calculator","","",12,null],[13,"Computer","","",12,null],[13,"AcSearch","","",12,null],[13,"AcHome","","",12,null],[13,"AcBack","","",12,null],[13,"AcForward","","",12,null],[13,"AcStop","","",12,null],[13,"AcRefresh","","",12,null],[13,"AcBookmarks","","",12,null],[13,"BrightnessDown","","",12,null],[13,"BrightnessUp","","",12,null],[13,"DisplaySwitch","","",12,null],[13,"KbdIllumToggle","","",12,null],[13,"KbdIllumDown","","",12,null],[13,"KbdIllumUp","","",12,null],[13,"Eject","","",12,null],[13,"Sleep","","",12,null],[17,"NO_MODIFIER","","No modifier.",null,null],[17,"CTRL","","Ctrl.",null,null],[17,"SHIFT","","Shift.",null,null],[17,"ALT","","Alt.",null,null],[17,"GUI","","Gui.",null,null],[17,"CTRL_SHIFT","","Ctrl + Shift.",null,null],[17,"CTRL_ALT","","Ctrl + Alt.",null,null],[17,"CTRL_GUI","","Ctrl + Gui.",null,null],[17,"CTRL_SHIFT_ALT","","Ctrl + Shift + Alt.",null,null],[17,"CTRL_SHIFT_GUI","","Ctrl + Shift + Gui.",null,null],[17,"CTRL_SHIFT_ALT_GUI","","Ctrl + Shift + Alt + Gui.",null,null],[17,"SHIFT_ALT","","Shift + Alt.",null,null],[17,"SHIFT_GUI","","Shift + Gui.",null,null],[17,"SHIFT_ALT_GUI","","Shift + Alt + Gui.",null,null],[17,"ALT_GUI","","Alt + Gui.",null,null],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"modifierkey"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"cmp","","",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":{"name":"ordering"}}],[11,"hash","","",13,null],[11,"decode","","",13,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",13,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",13,{"inputs":[],"output":{"name":"modifierkey"}}],[11,"all","","Returns the set containing all flags.",13,{"inputs":[],"output":{"name":"modifierkey"}}],[11,"bits","","Returns the raw value of the flags currently stored.",13,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",13,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",13,{"inputs":[{"name":"u8"}],"output":{"name":"modifierkey"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",13,{"inputs":[{"name":"self"},{"name":"modifierkey"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bitor_assign","","Adds the set of flags.",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bitxor_assign","","Toggles the set of flags.",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"sub_assign","","Disables all flags enabled in the set.",13,{"inputs":[{"name":"self"},{"name":"modifierkey"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",13,{"inputs":[{"name":"self"}],"output":{"name":"modifierkey"}}],[11,"extend","","",13,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",13,{"inputs":[{"name":"t"}],"output":{"name":"modifierkey"}}],[11,"event","","Change modifier key state depending on input.",13,{"inputs":[{"name":"self"},{"name":"e"}],"output":null}],[11,"default","","",13,{"inputs":[],"output":{"name":"modifierkey"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"key"}}],[11,"decode","","",12,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",12,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",12,null],[11,"from","","",12,{"inputs":[{"name":"u32"}],"output":{"name":"key"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"key"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"self"},{"name":"key"}],"output":{"name":"option"}}],[11,"cmp","","",12,{"inputs":[{"name":"self"},{"name":"key"}],"output":{"name":"ordering"}}],[11,"code","","Returns an id of the key",12,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[0,"mouse","input","Back-end agnostic mouse buttons.",null,null],[4,"MouseButton","input::mouse","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",14,null],[13,"Left","","Left mouse button.",14,null],[13,"Right","","Right mouse button.",14,null],[13,"Middle","","Middle mouse button.",14,null],[13,"X1","","Extra mouse button number 1.",14,null],[13,"X2","","Extra mouse button number 2.",14,null],[13,"Button6","","Mouse button number 6.",14,null],[13,"Button7","","Mouse button number 7.",14,null],[13,"Button8","","Mouse button number 8.",14,null],[8,"MouseCursorEvent","","The position of the mouse cursor",null,null],[10,"from_xy","","Creates a mouse cursor event.",15,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"MouseRelativeEvent","","The relative movement of mouse cursor",null,null],[10,"from_xy","","Creates a mouse relative event.",16,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",16,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_relative_args","","Returns mouse relative arguments.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"MouseScrollEvent","","The scroll of the mouse wheel",null,null],[10,"from_xy","","Creates a mouse scroll event.",17,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"mousebutton"}}],[11,"decode","","",14,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",14,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"cmp","","",14,{"inputs":[{"name":"self"},{"name":"mousebutton"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"self"},{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"hash","","",14,null],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",14,{"inputs":[{"name":"u32"}],"output":{"name":"mousebutton"}}],[11,"from_xy","input","",8,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[11,"mouse_cursor","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"from_xy","","",8,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[11,"mouse_relative","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"from_xy","","",8,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[11,"mouse_scroll","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[0,"generic_event","","Trait for generic events",null,null],[8,"GenericEvent","input::generic_event","Implemented by all events",null,null],[10,"event_id","","The id of this event.",18,{"inputs":[{"name":"self"}],"output":{"name":"eventid"}}],[10,"with_args","","Calls closure with arguments",18,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u"}}],[11,"event_id","input","",8,{"inputs":[{"name":"self"}],"output":{"name":"eventid"}}],[11,"with_args","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"afterrenderargs"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"afterrenderargs"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",19,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",19,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"from_after_render_args","","",8,{"inputs":[{"name":"afterrenderargs"},{"name":"input"}],"output":{"name":"option"}}],[11,"after_render","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"closeargs"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"closeargs"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",20,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",20,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"from_close_args","","",8,{"inputs":[{"name":"closeargs"},{"name":"input"}],"output":{"name":"option"}}],[11,"close","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"from_cursor","","",8,{"inputs":[{"name":"bool"},{"name":"self"}],"output":{"name":"option"}}],[11,"cursor","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"from_focused","","",8,{"inputs":[{"name":"bool"},{"name":"self"}],"output":{"name":"option"}}],[11,"focus","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"idleargs"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"idleargs"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"idleargs"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"from_idle_args","","",8,{"inputs":[{"name":"idleargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"idle","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"from_button","","",8,{"inputs":[{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[11,"press","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"from_button","","",8,{"inputs":[{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[11,"release","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"renderargs"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"renderargs"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"renderargs"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",1,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"viewport","","Returns viewport information filling entire render area.",1,{"inputs":[{"name":"self"}],"output":{"name":"viewport"}}],[11,"from_render_args","","",8,{"inputs":[{"name":"renderargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"render","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"from_width_height","","",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"self"}],"output":{"name":"option"}}],[11,"resize","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"from_text","","",8,{"inputs":[{"name":"str"},{"name":"self"}],"output":{"name":"option"}}],[11,"text","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"touch"}}],[11,"decode","","",5,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",5,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"touch"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"touchargs"}}],[11,"decode","","",2,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",2,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"touchargs"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"touchargs"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates arguments for 2D touch.",2,null],[11,"new_3d","","Creates arguments for 3D touch.",2,null],[11,"position","","The position of the touch in 2D.",2,null],[11,"position_3d","","The position of the touch in 3D.",2,null],[11,"pressure","","The pressure magnitude, normalized 0..1.",2,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"pressure_3d","","The pressure vector in 3D.",2,null],[11,"from_touch_args","","",8,{"inputs":[{"name":"touchargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"touch","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"updateargs"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"updateargs"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"updateargs"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",3,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"from_update_args","","",8,{"inputs":[{"name":"updateargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"update","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[8,"AfterRenderEvent","","After rendering and buffers are swapped.",null,null],[10,"from_after_render_args","","Creates an after render event.",21,{"inputs":[{"name":"afterrenderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"after_render","","Calls closure if this is an after render event.",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"after_render_args","","Returns after render arguments.",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"CloseEvent","","Window is closing.",null,null],[10,"from_close_args","","Creates a close event from arguments.",22,{"inputs":[{"name":"closeargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"close","","Calls closure if this is a close event.",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"close_args","","Returns close arguments.",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"CursorEvent","","When window gets or loses cursor",null,null],[10,"from_cursor","","Creates a cursor event.",23,{"inputs":[{"name":"bool"},{"name":"self"}],"output":{"name":"option"}}],[10,"cursor","","Calls closure if this is a cursor event.",23,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"cursor_args","","Returns cursor arguments.",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"FocusEvent","","When window gets or loses focus",null,null],[10,"from_focused","","Creates a focus event.",24,{"inputs":[{"name":"bool"},{"name":"self"}],"output":{"name":"option"}}],[10,"focus","","Calls closure if this is a focus event.",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"focus_args","","Returns focus arguments.",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"IdleEvent","","When background tasks should be performed",null,null],[10,"from_idle_args","","Creates an idle event.",25,{"inputs":[{"name":"idleargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",25,{"inputs":[{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"idle","","Calls closure if this is an idle event.",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"idle_args","","Returns idle arguments.",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"PressEvent","","The press of a button",null,null],[10,"from_button","","Creates a press event.",26,{"inputs":[{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"press","","Calls closure if this is a press event.",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"press_args","","Returns press arguments.",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"ReleaseEvent","","The release of a button",null,null],[10,"from_button","","Creates a release event.",27,{"inputs":[{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"release","","Calls closure if this is a release event.",27,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"release_args","","Returns release arguments.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"ResizeEvent","","When the window is resized",null,null],[10,"from_width_height","","Creates a resize event.",28,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"self"}],"output":{"name":"option"}}],[10,"resize","","Calls closure if this is a resize event.",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"resize_args","","Returns resize arguments.",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"RenderEvent","","When the next frame should be rendered",null,null],[10,"from_render_args","","Creates a render event.",29,{"inputs":[{"name":"renderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"render","","Calls closure if this is a render event.",29,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"render_args","","Returns render arguments.",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"TextEvent","","When receiving text from user, such as typing a character",null,null],[10,"from_text","","Creates a text event.",30,{"inputs":[{"name":"str"},{"name":"self"}],"output":{"name":"option"}}],[10,"text","","Calls closure if this is a text event.",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"text_args","","Returns text arguments.",30,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"TouchEvent","","When a touch is started, moved, ended or cancelled.",null,null],[10,"from_touch_args","","Creates a touch event.",31,{"inputs":[{"name":"touchargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"touch","","Calls closure if this is a touch event.",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"touch_args","","Returns touch arguments.",31,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"UpdateEvent","","When the application state should be updated",null,null],[10,"from_update_args","","Creates an update event.",32,{"inputs":[{"name":"updateargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",32,{"inputs":[{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"update","","Calls closure if this is an update event.",32,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"update_args","","Returns update arguments.",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"eventid"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"button"}}],[11,"decode","","",6,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",6,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"button"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"button"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"motion"}}],[11,"decode","","",7,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",7,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"motion"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"motion"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"input"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"input"}],"output":{"name":"bool"}}],[11,"decode","","",8,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"from","","",6,{"inputs":[{"name":"key"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"mousebutton"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"controllerbutton"}],"output":{"name":"self"}}],[11,"from","","",7,{"inputs":[{"name":"controlleraxisargs"}],"output":{"name":"self"}}],[11,"from","","",8,{"inputs":[{"name":"motion"}],"output":{"name":"self"}}],[11,"from","","",8,{"inputs":[{"name":"renderargs"}],"output":{"name":"self"}}],[11,"from","","",8,{"inputs":[{"name":"afterrenderargs"}],"output":{"name":"self"}}],[11,"from","","",8,{"inputs":[{"name":"updateargs"}],"output":{"name":"self"}}],[11,"from","","",8,{"inputs":[{"name":"idleargs"}],"output":{"name":"self"}}],[11,"after_render_args","","Returns after render arguments.",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"close_args","","Returns close arguments.",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"cursor_args","","Returns cursor arguments.",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"focus_args","","Returns focus arguments.",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",25,{"inputs":[{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[11,"idle_args","","Returns idle arguments.",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"press_args","","Returns press arguments.",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"release_args","","Returns release arguments.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"render_args","","Returns render arguments.",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"resize_args","","Returns resize arguments.",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"text_args","","Returns text arguments.",30,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"touch_args","","Returns touch arguments.",31,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",32,{"inputs":[{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[11,"update_args","","Returns update arguments.",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"IdleArgs"],[3,"RenderArgs"],[3,"TouchArgs"],[3,"UpdateArgs"],[3,"EventId"],[4,"Touch"],[4,"Button"],[4,"Motion"],[4,"Input"],[3,"ControllerButton"],[3,"ControllerAxisArgs"],[8,"ControllerAxisEvent"],[4,"Key"],[3,"ModifierKey"],[4,"MouseButton"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"GenericEvent"],[3,"AfterRenderArgs"],[3,"CloseArgs"],[8,"AfterRenderEvent"],[8,"CloseEvent"],[8,"CursorEvent"],[8,"FocusEvent"],[8,"IdleEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"ResizeEvent"],[8,"RenderEvent"],[8,"TextEvent"],[8,"TouchEvent"],[8,"UpdateEvent"]]};
searchIndex["piston"] = {"doc":"A user friendly game engine written in Rust.","items":[],"paths":[]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified format configuration, returning the owned string.",4,{"inputs":[{"name":"self"},{"name":"config"}],"output":{"name":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into an owned vector of bytes, returning the vector.",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"characterset"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"newline"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"config"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"frombase64error"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned string.",7,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data, into an owned vector of bytes, returning the vector.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"fromhexerror"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical structure of the JSON stream. For example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming an iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack. For example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the StackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON on-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON on-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,{"inputs":[{"name":"self"}],"output":{"name":"json"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"json"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"errorcode"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"parsererror"}],"output":{"name":"bool"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"encodererror"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",12,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",12,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",13,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",13,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable JSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact JSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level. This is safe to set during encoding.",17,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"emit_nil","","",17,{"inputs":[{"name":"self"}],"output":{"name":"encoderesult"}}],[11,"emit_usize","","",17,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"encoderesult"}}],[11,"emit_u64","","",17,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",17,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",17,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_u8","","",17,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_isize","","",17,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"encoderesult"}}],[11,"emit_i64","","",17,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",17,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_i16","","",17,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"encoderesult"}}],[11,"emit_i8","","",17,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"encoderesult"}}],[11,"emit_bool","","",17,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"encoderesult"}}],[11,"emit_f64","","",17,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"encoderesult"}}],[11,"emit_f32","","",17,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"encoderesult"}}],[11,"emit_char","","",17,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"encoderesult"}}],[11,"emit_str","","",17,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_enum","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant_arg","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct_field","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_arg","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option_none","","",17,{"inputs":[{"name":"self"}],"output":{"name":"encoderesult"}}],[11,"emit_option_some","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq_elt","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_key","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_val","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"encode","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",9,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty representation for it via `Display`.",9,{"inputs":[{"name":"self"}],"output":{"name":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key. Otherwise, returns None.",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`. If any key is found not to exist, find_path will return None. Otherwise, it will return the Json value associated with the final key.",9,null],[11,"search","","If the Json value is an Object, performs a depth-first search until a value associated with the provided key is found. If no value is found or the Json value is not an Object, returns None.",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_object","","If the Json value is an Object, returns a reference to the associated BTreeMap. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns a mutable reference to the associated BTreeMap. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_object","","If the Json value is an Object, returns the associated BTreeMap. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_array","","If the Json value is an Array, returns a reference to the associated vector. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns a mutable reference to the associated vector. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_array","","If the Json value is an Array, returns the associated vector. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_null","","If the Json value is a Null, returns (). Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"index","","",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"json"}}],[11,"index","","",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"json"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"stackelement"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",18,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",18,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get","","Provides access to the StackElement at a given index. lower indices are at the bottom of the stack while higher indices are at the top.",18,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as the ones passed as parameter.",18,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as the ones passed as parameter.",18,null],[11,"top","","Returns the top-most element (if any).",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",19,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Creates the JSON parser.",19,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the JSON stream.",19,{"inputs":[{"name":"self"}],"output":{"name":"stack"}}],[11,"new","","Create a JSON Builder.",20,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",20,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_usize","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_u8","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_u16","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_u32","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_u64","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_isize","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_i8","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_i16","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_i32","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_i64","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_f32","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_f64","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_bool","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_char","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_str","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_enum","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_variant","","",21,null],[11,"read_enum_variant_arg","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_struct_variant","","",21,null],[11,"read_enum_struct_variant_field","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct_field","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_arg","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct_arg","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_option","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq_elt","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_key","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_val","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"error","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"decodererror"}}],[11,"to_json","","",9,{"inputs":[{"name":"self"}],"output":{"name":"json"}}],[11,"fmt","","Encodes a json value into a string",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",24,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","Trait for reading in an encoding for deserialization.",null,null],[16,"Error","","The error type for method results.",25,null],[10,"read_nil","","Read a nil value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_usize","","Read a usize value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_u64","","Read a u64 value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_u32","","Read a u32 value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_u16","","Read a u16 value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_u8","","Read a u8 value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_isize","","Read a isize value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_i64","","Read a i64 value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_i32","","Read a i32 value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_i16","","Read a i16 value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_i8","","Read a i8 value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_bool","","Read a bool value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_f64","","Read a f64 value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_f32","","Read a f32 value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_char","","Read a char value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_str","","Read a string value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_enum","","Read an enumeration value.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_variant","","Read an enumeration value.",25,null],[10,"read_enum_variant_arg","","Read an unnamed data item for an enumeration variant.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_struct_variant","","Read an enumeration value.",25,null],[10,"read_enum_struct_variant_field","","Read a named data item for an enumeration variant.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct","","Read an struct value.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct_field","","Read a field for a struct value.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple","","Read a tuple value.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_arg","","Read a data item for a tuple.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct","","Read a tuple struct value.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct_arg","","Read a data item for a tuple struct.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_option","","Read an optional value.",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq","","Read a sequence of values.",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq_elt","","Read an element in the sequence.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map","","Read an associative container (map).",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_key","","Read the key for an entry in a map.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_val","","Read the value for an entry in a map.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"error","","Record a decoding error.",25,null],[8,"Encoder","","Trait for writing out an encoding when serializing.",null,null],[16,"Error","","The error type for method results.",26,null],[10,"emit_nil","","Emit a nil value.",26,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"emit_usize","","Emit a usize value.",26,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"emit_u64","","Emit a u64 value.",26,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[10,"emit_u32","","Emit a u32 value.",26,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"emit_u16","","Emit a u16 value.",26,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[10,"emit_u8","","Emit a u8 value.",26,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[10,"emit_isize","","Emit a isize value.",26,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"result"}}],[10,"emit_i64","","Emit a i64 value.",26,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[10,"emit_i32","","Emit a i32 value.",26,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[10,"emit_i16","","Emit a i16 value.",26,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[10,"emit_i8","","Emit a i8 value.",26,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[10,"emit_bool","","Emit a bool value.",26,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"emit_f64","","Emit a f64 value.",26,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[10,"emit_f32","","Emit a f32 value.",26,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[10,"emit_char","","Emit a char value.",26,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"result"}}],[10,"emit_str","","Emit a string value.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"emit_enum","","Emit an enumeration value.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant","","Emit a enumeration variant value with no or unnamed data.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant_arg","","Emit an unnamed data item for an enumeration variant.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant","","Emit a enumeration variant value with no or named data.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant_field","","Emit a named data item for an enumeration variant.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct","","Emit a struct value.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct_field","","Emit a field item for a struct.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple","","Emit a tuple value.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_arg","","Emit a data item for a tuple.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct","","Emit a tuple struct value.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct_arg","","Emit a data item for a tuple struct.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option","","Emit an optional value.",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option_none","","Emit the `None` optional value.",26,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"emit_option_some","","Emit the `Some(x)` optional value.",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq","","Emit a sequence of values.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq_elt","","Emit an element in a sequence.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map","","Emit an associative container (map).",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_key","","Emit the key for an entry in a map.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_val","","Emit the value for an entry in a map.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[8,"Decodable","","Trait for deserializing a type.",null,null],[10,"decode","","Deserialize a value using a `Decoder`.",27,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","Trait for serializing a type.",null,null],[10,"encode","","Serialize a value using an `Encoder`.",28,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[8,"DecoderHelpers","","Trait with helper functions for implementing `Decodable`.",null,null],[10,"read_to_vec","","Read a sequence into a vector.",29,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[8,"EncoderHelpers","","Trait with helper functions for implementing `Encodable`.",null,null],[10,"emit_from_vec","","Emit a vector as a sequence.",30,null]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["shader_version"] = {"doc":"A helper library for detecting and picking compatible shaders.","items":[[3,"Shaders","shader_version","Shader picker.",null,null],[0,"opengl","","Models versions of OpenGL",null,null],[4,"OpenGL","shader_version::opengl","",null,null],[13,"V2_0","","",0,null],[13,"V2_1","","",0,null],[13,"V3_0","","",0,null],[13,"V3_1","","",0,null],[13,"V3_2","","",0,null],[13,"V3_3","","",0,null],[13,"V4_0","","",0,null],[13,"V4_1","","",0,null],[13,"V4_2","","",0,null],[13,"V4_3","","",0,null],[13,"V4_4","","",0,null],[13,"V4_5","","",0,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"opengl"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"opengl"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"opengl"}],"output":{"name":"ordering"}}],[11,"get_major_minor","","Gets the minor version of OpenGL.",0,null],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,{"inputs":[{"name":"self"}],"output":{"name":"glsl"}}],[0,"glsl","shader_version","Models versions of OpenGL Shader Language (GLSL)",null,null],[4,"GLSL","shader_version::glsl","For OpenGL version 3.3 and above, the GLSL version is the same as the OpenGL version.",null,null],[13,"V1_10","","",1,null],[13,"V1_20","","",1,null],[13,"V1_30","","",1,null],[13,"V1_40","","",1,null],[13,"V1_50","","",1,null],[13,"V3_30","","",1,null],[13,"V4_00","","",1,null],[13,"V4_10","","",1,null],[13,"V4_20","","",1,null],[13,"V4_30","","",1,null],[13,"V4_40","","",1,null],[13,"V4_50","","",1,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"glsl"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"glsl"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"glsl"}],"output":{"name":"ordering"}}],[11,"to_opengl","","Gets OpenGL version associated with GLSL.",1,{"inputs":[{"name":"self"}],"output":{"name":"opengl"}}],[11,"pick_shader","","",1,{"inputs":[{"name":"self"},{"name":"shaders"}],"output":{"name":"option"}}],[8,"PickShader","shader_version","Implemented by shader version enums.",null,null],[10,"pick_shader","","Pick shader.",2,{"inputs":[{"name":"self"},{"name":"shaders"}],"output":{"name":"option"}}],[11,"new","","Creates a new shader picker.",3,{"inputs":[],"output":{"name":"self"}}],[11,"set","","Sets source for a shader version.",3,{"inputs":[{"name":"self"},{"name":"v"},{"name":"s"}],"output":{"name":"self"}}],[11,"get","","Get the closest shader to a shader version.",3,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"option"}}]],"paths":[[4,"OpenGL"],[4,"GLSL"],[8,"PickShader"],[3,"Shaders"]]};
searchIndex["viewport"] = {"doc":"A library for storing viewport information","items":[[3,"Viewport","viewport","Stores viewport information.",null,null],[12,"rect","","Viewport in pixels. `[x, y, width height]` where `(x, y)` is lower left corner.",0,null],[12,"draw_size","","The size of frame buffer in pixels.",0,null],[12,"window_size","","The size of window in points.",0,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"viewport"}}],[11,"abs_transform","","Computes absolute transform for 2D graphics, which uses a row major 2x3 matrix. The origin is in the upper left corner of the viewport rectangle. The x axis points to the right, and the y axis points down. The units are in points (window coordinates).",0,null]],"paths":[[3,"Viewport"]]};
searchIndex["window"] = {"doc":"Window storage and interfacing traits.","items":[[3,"NoWindow","window","A window without user interface, often used in server event loops.",null,null],[3,"Size","","Structure to store the window size.",null,null],[12,"width","","The width.",0,null],[12,"height","","The height.",0,null],[3,"Position","","Structure to store the window position.",null,null],[12,"x","","The x coordinate.",1,null],[12,"y","","The y coordinate.",1,null],[3,"WindowSettings","","Settings structure for window behavior.",null,null],[11,"new","","Creates a new `NoWindow`.",2,{"inputs":[{"name":"windowsettings"}],"output":{"name":"nowindow"}}],[11,"should_close","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_should_close","","",2,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"size","","",2,{"inputs":[{"name":"self"}],"output":{"name":"size"}}],[11,"swap_buffers","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"wait_event","","",2,{"inputs":[{"name":"self"}],"output":{"name":"input"}}],[11,"wait_event_timeout","","",2,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"poll_event","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"draw_size","","",2,{"inputs":[{"name":"self"}],"output":{"name":"size"}}],[11,"build_from_window_settings","","Errors",2,{"inputs":[{"name":"windowsettings"}],"output":{"name":"result"}}],[11,"get_title","","",2,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"set_title","","",2,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"get_exit_on_esc","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_exit_on_esc","","",2,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"set_capture_cursor","","",2,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"show","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"hide","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"get_position","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_position","","",2,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[6,"ProcAddress","","The type of an OpenGL function address.",null,null],[8,"BuildFromWindowSettings","","Constructs a window from a `WindowSettings` object.",null,null],[10,"build_from_window_settings","","Builds the window from a `WindowSettings` object.",3,{"inputs":[{"name":"windowsettings"}],"output":{"name":"result"}}],[8,"Window","","Trait representing the minimum requirements for defining a window.",null,null],[10,"set_should_close","","Tells the window to close or stay open.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"should_close","","Returns true if the window should close.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"size","","Gets the size of the window.",4,{"inputs":[{"name":"self"}],"output":{"name":"size"}}],[10,"swap_buffers","","Swaps render buffers.",4,{"inputs":[{"name":"self"}],"output":null}],[10,"wait_event","","Wait indefinitely for an input event to be available from the window.",4,{"inputs":[{"name":"self"}],"output":{"name":"input"}}],[10,"wait_event_timeout","","Wait for an input event to be available from the window or for the specified timeout to be reached.",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[10,"poll_event","","Polls an input event from the window.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"draw_size","","Gets the draw size of the window.",4,{"inputs":[{"name":"self"}],"output":{"name":"size"}}],[8,"AdvancedWindow","","Trait representing a window with the most features that are still generic.",null,null],[10,"get_title","","Gets a copy of the title of the window.",5,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[10,"set_title","","Sets the title of the window.",5,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"title","","Sets title on window.",5,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"self"}}],[10,"get_exit_on_esc","","Gets whether to exit when pressing esc.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_exit_on_esc","","Sets whether to exit when pressing esc.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"exit_on_esc","","Sets whether to exit when pressing the Esc button.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[10,"set_capture_cursor","","Sets whether to capture/grab the cursor.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"capture_cursor","","Sets whether to capture/grab the cursor.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[10,"show","","Shows the window.",5,{"inputs":[{"name":"self"}],"output":null}],[10,"hide","","Hides the window.",5,{"inputs":[{"name":"self"}],"output":null}],[10,"get_position","","Gets the position of window.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_position","","Sets the position of window.",5,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[11,"position","","Sets the position of window.",5,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"self"}}],[8,"OpenGLWindow","","Trait for OpenGL specific operations on a window.",null,null],[10,"get_proc_address","","Returns the address of the specified OpenGL function if it exists.",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"procaddress"}}],[10,"is_current","","Returns true if this window's gl context is the current gl context.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"make_current","","Make the window's gl context the current gl context.",6,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"size"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"size"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"size"}],"output":{"name":"bool"}}],[11,"from","","",0,null],[11,"from","","",0,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from","","",1,null],[11,"from","","",1,null],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"windowsettings"}}],[11,"new","","Creates window settings with defaults.",7,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"windowsettings"}}],[11,"build","","Builds window from the given settings.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get_title","","Gets the title of built windows.",7,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"set_title","","Sets the title of built windows.",7,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"title","","Sets the title of built windows.",7,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"self"}}],[11,"get_size","","Gets the size of built windows.",7,{"inputs":[{"name":"self"}],"output":{"name":"size"}}],[11,"set_size","","Sets the size of built windows.",7,{"inputs":[{"name":"self"},{"name":"size"}],"output":null}],[11,"size","","Sets the size of built windows.",7,{"inputs":[{"name":"self"},{"name":"size"}],"output":{"name":"self"}}],[11,"get_fullscreen","","Gets whether built windows will be fullscreen.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_fullscreen","","Sets whether built windows will be fullscreen.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"fullscreen","","Sets whether built windows will be fullscreen.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_exit_on_esc","","Gets whether built windows should exit when the Esc key is pressed.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_exit_on_esc","","Sets whether built windows should exit when the Esc key is pressed.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"exit_on_esc","","Sets whether built windows should exit when the Esc key is pressed.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_samples","","Gets the number of samples to use for anti-aliasing.",7,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_samples","","Sets the number of samples to use for anti-aliasing.",7,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"samples","","Sets the number of samples to use for anti-aliasing.",7,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"self"}}],[11,"get_vsync","","Gets whether built windows should use vsync.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_vsync","","Sets whether built windows should use vsync.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"vsync","","Sets whether built windows should use vsync.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_maybe_opengl","","Gets the OpenGL version of built windows.",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_maybe_opengl","","Sets OpenGL version of built windows.",7,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[11,"maybe_opengl","","Sets OpenGL version of built windows.",7,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"self"}}],[11,"set_opengl","","Sets OpenGL version of built windows.",7,{"inputs":[{"name":"self"},{"name":"opengl"}],"output":null}],[11,"opengl","","Sets the OpenGL version of built windows.",7,{"inputs":[{"name":"self"},{"name":"opengl"}],"output":{"name":"self"}}],[11,"get_srgb","","Gets whether built windows should use hardware accelerated color conversion.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_srgb","","Sets whether built windows should use hardware accelerated color conversion.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"srgb","","Sets whether built windows should use hardware accelerated color conversion.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_resizable","","Gets whether built windows should be resizable.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_resizable","","Sets whether built windows should be resizable.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"resizable","","Sets whether built windows should be resizable.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_decorated","","Gets whether built windows should be decorated.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_decorated","","Sets whether built windows should be decorated.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"decorated","","Sets whether built windows should be decorated.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_controllers","","Gets whether built windows should listen to controller input.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_controllers","","Sets whether built windows should listen to controller input.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"controllers","","Sets whether build windows should listen to controller input.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}]],"paths":[[3,"Size"],[3,"Position"],[3,"NoWindow"],[8,"BuildFromWindowSettings"],[8,"Window"],[8,"AdvancedWindow"],[8,"OpenGLWindow"],[3,"WindowSettings"]]};
initSearch(searchIndex);
