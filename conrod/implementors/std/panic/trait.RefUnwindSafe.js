(function() {var implementors = {};
implementors["andrew"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for Canvas&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Endian","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Line","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sides","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontConfig","synthetic":true,"types":[]}];
implementors["approx"] = [{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; RefUnwindSafe for AbsDiff&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; RefUnwindSafe for Relative&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; RefUnwindSafe for Ulps&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; RefUnwindSafe for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for CapacityError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; RefUnwindSafe for Drain&lt;'a, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ash"] = [{"text":"impl RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; RefUnwindSafe for EntryCustom&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LoadingError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Align&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for AlignIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCacheCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CullModeFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceQueueCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryPropertyFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryHeapFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccessFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferUsageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageUsageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageViewCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineShaderStageCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorComponentFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FenceCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatFeatureFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryControlFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryResultFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferUsageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPipelineStatisticFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageAspectFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageFormatFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMemoryBindFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineStageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPoolResetFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferResetFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SampleCountFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentDescriptionFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilFaceFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DependencyFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreWaitFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlaneAlphaFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompositeAlphaFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceTransformFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainImageUsageFlagsANDROID","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugReportFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryHandleTypeFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryFeatureFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubgroupFeatureFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndirectCommandsLayoutUsageFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndirectStateFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayoutCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryFeatureFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalSemaphoreHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalSemaphoreFeatureFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreImportFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalFenceHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalFenceFeatureFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FenceImportFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceCounterFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PeerMemoryFeatureFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryAllocateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupPresentModeFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDescriptionFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessageSeverityFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessageTypeFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorBindingFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConditionalRenderingFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResolveModeFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryInstanceFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuildAccelerationStructureFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FramebufferCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceDiagnosticsConfigFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCreationFeedbackFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceCounterDescriptionFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcquireProfilingLockFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderCorePropertiesFlagsAMD","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderModuleCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCompilerControlFlagsAMD","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolPurposeFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineLayoutCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineDepthStencilStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineDynamicStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineColorBlendStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineMultisampleStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineTessellationStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineInputAssemblyStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineVertexInputStateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferViewCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryMapFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolResetFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorUpdateTemplateCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModeCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplaySurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViSurfaceCreateFlagsNN","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaylandSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Win32SurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XlibSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XcbSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IOSSurfaceCreateFlagsMVK","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MacOSSurfaceCreateFlagsMVK","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetalSurfaceCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImagePipeSurfaceCreateFlagsFUCHSIA","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StreamDescriptorSurfaceCreateFlagsGGP","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeadlessSurfaceCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPoolTrimFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportSwizzleStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineDiscardRectangleStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCoverageToColorStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCoverageModulationStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCoverageReductionStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationCacheCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessengerCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessengerCallbackDataFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationConservativeStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationStateStreamCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationDepthClipStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Queue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceMemory","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Buffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderModule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pipeline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sampler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fence","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Semaphore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Framebuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCache","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndirectCommandsLayoutNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorUpdateTemplate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerYcbcrConversion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationCacheEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceConfigurationINTEL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeferredOperationKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugReportCallbackEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessengerEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaseOutStructure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaseInStructure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Offset2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Offset2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Offset3D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Offset3DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extent2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Extent2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extent3D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Extent3DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Viewport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ViewportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rect2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Rect2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearRect","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ClearRectBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComponentMapping","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ComponentMappingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtensionProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExtensionPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayerProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for LayerPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplicationInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ApplicationInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AllocationCallbacks","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AllocationCallbacksBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceQueueCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceQueueCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for InstanceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFamilyProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueueFamilyPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageMemoryRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseImageMemoryRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryTypeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryHeap","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryHeapBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MappedMemoryRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MappedMemoryRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorBufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorBufferInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorImageInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteDescriptorSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WriteDescriptorSetBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyDescriptorSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CopyDescriptorSetBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferViewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferViewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageSubresource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageSubresourceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageSubresourceLayers","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageSubresourceLayersBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageSubresourceRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageSubresourceRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferMemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferMemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageMemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageMemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubresourceLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubresourceLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageViewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageViewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMemoryBind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseMemoryBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageMemoryBind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseImageMemoryBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseBufferMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseBufferMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageOpaqueMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseImageOpaqueMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseImageMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindSparseInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindSparseInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageBlit","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageBlitBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferImageCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageResolve","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageResolveBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderModuleCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ShaderModuleCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorSetLayoutBindingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorSetLayoutCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolSize","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorPoolSizeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorSetAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecializationMapEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SpecializationMapEntryBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecializationInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SpecializationInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineShaderStageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineShaderStageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComputePipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ComputePipelineCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexInputBindingDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VertexInputBindingDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexInputAttributeDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VertexInputAttributeDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineVertexInputStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineVertexInputStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineInputAssemblyStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineInputAssemblyStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineTessellationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineTessellationStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineViewportStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineRasterizationStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineMultisampleStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineMultisampleStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineColorBlendAttachmentState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineColorBlendAttachmentStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineColorBlendStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineColorBlendStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineDynamicStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineDynamicStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilOpState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StencilOpStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineDepthStencilStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineDepthStencilStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GraphicsPipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GraphicsPipelineCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCacheCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineCacheCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PushConstantRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PushConstantRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineLayoutCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SamplerCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CommandPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CommandBufferAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferInheritanceInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CommandBufferInheritanceInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CommandBufferBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearDepthStencilValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ClearDepthStencilValueBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearAttachment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ClearAttachmentBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttachmentDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentReference","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttachmentReferenceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassDependencyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for EventCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FenceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FenceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSparseProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSparsePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceLimits","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceLimitsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SemaphoreCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueryPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FramebufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FramebufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DrawIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawIndexedIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DrawIndexedIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DispatchIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DispatchIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlanePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPlanePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModeParametersKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayModeParametersKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayModePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModeCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayModeCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlaneCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPlaneCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplaySurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplaySurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AndroidSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViSurfaceCreateInfoNN","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ViSurfaceCreateInfoNNBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaylandSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WaylandSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Win32SurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Win32SurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XlibSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for XlibSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XcbSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for XcbSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImagePipeSurfaceCreateInfoFUCHSIA","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImagePipeSurfaceCreateInfoFUCHSIABuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StreamDescriptorSurfaceCreateInfoGGP","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StreamDescriptorSurfaceCreateInfoGGPBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceFormatKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceFormatKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugReportCallbackCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugReportCallbackCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationFlagsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ValidationFlagsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ValidationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationStateRasterizationOrderAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineRasterizationStateRasterizationOrderAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugMarkerObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugMarkerObjectNameInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugMarkerObjectTagInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugMarkerObjectTagInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugMarkerMarkerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugMarkerMarkerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DedicatedAllocationImageCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DedicatedAllocationImageCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DedicatedAllocationBufferCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DedicatedAllocationBufferCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DedicatedAllocationMemoryAllocateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DedicatedAllocationMemoryAllocateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalImageFormatPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalImageFormatPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryImageCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalMemoryImageCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportMemoryAllocateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportMemoryAllocateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportMemoryWin32HandleInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportMemoryWin32HandleInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportMemoryWin32HandleInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportMemoryWin32HandleInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Win32KeyedMutexAcquireReleaseInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Win32KeyedMutexAcquireReleaseInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDeviceGeneratedCommandsFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDeviceGeneratedCommandsPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDeviceGeneratedCommandsPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GraphicsShaderGroupCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GraphicsShaderGroupCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GraphicsPipelineShaderGroupsCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GraphicsPipelineShaderGroupsCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindShaderGroupIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindShaderGroupIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindIndexBufferIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindIndexBufferIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindVertexBufferIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindVertexBufferIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetStateFlagsIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SetStateFlagsIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndirectCommandsStreamNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IndirectCommandsStreamNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndirectCommandsLayoutTokenNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IndirectCommandsLayoutTokenNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndirectCommandsLayoutCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IndirectCommandsLayoutCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeneratedCommandsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GeneratedCommandsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeneratedCommandsMemoryRequirementsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GeneratedCommandsMemoryRequirementsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFeatures2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceFeatures2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageFormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceImageFormatInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceImageFormatInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFamilyProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueueFamilyProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMemoryProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMemoryProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageFormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseImageFormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSparseImageFormatInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSparseImageFormatInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePushDescriptorPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePushDescriptorPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConformanceVersion","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ConformanceVersionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDriverProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDriverPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentRegionsKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PresentRegionsKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentRegionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PresentRegionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RectLayerKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RectLayerKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVariablePointersFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVariablePointersFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceExternalImageFormatInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceExternalImageFormatInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceExternalBufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceExternalBufferInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalBufferProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalBufferPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceIDProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceIDPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryImageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalMemoryImageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryBufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalMemoryBufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportMemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportMemoryAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportMemoryWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportMemoryWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportMemoryWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportMemoryWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryWin32HandlePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryWin32HandlePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportMemoryFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportMemoryFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryFdPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryFdPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Win32KeyedMutexAcquireReleaseInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Win32KeyedMutexAcquireReleaseInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceExternalSemaphoreInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceExternalSemaphoreInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalSemaphoreProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalSemaphorePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportSemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportSemaphoreCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportSemaphoreWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportSemaphoreWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportSemaphoreWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportSemaphoreWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D3D12FenceSubmitInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for D3D12FenceSubmitInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SemaphoreGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportSemaphoreFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportSemaphoreFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SemaphoreGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceExternalFenceInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceExternalFenceInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalFenceProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalFencePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportFenceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportFenceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportFenceWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportFenceWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportFenceWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExportFenceWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FenceGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FenceGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportFenceFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportFenceFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FenceGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FenceGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMultiviewFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMultiviewFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMultiviewProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMultiviewPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassMultiviewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassMultiviewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceCapabilities2EXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceCapabilities2EXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPowerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPowerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceEventInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceEventInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayEventInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayEventInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainCounterCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SwapchainCounterCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceGroupProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceGroupPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryAllocateFlagsInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryAllocateFlagsInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindBufferMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindBufferMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindBufferMemoryDeviceGroupInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindBufferMemoryDeviceGroupInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindImageMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindImageMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindImageMemoryDeviceGroupInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindImageMemoryDeviceGroupInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupRenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupRenderPassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupCommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupCommandBufferBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupBindSparseInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupBindSparseInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupPresentCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupPresentCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageSwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageSwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindImageMemorySwapchainInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindImageMemorySwapchainInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcquireNextImageInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AcquireNextImageInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupPresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupDeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupDeviceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceGroupSwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceGroupSwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorUpdateTemplateEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorUpdateTemplateEntryBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorUpdateTemplateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorUpdateTemplateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XYColorEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for XYColorEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HdrMetadataEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for HdrMetadataEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayNativeHdrSurfaceCapabilitiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayNativeHdrSurfaceCapabilitiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainDisplayNativeHdrCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SwapchainDisplayNativeHdrCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RefreshCycleDurationGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RefreshCycleDurationGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PastPresentationTimingGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PastPresentationTimingGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentTimesInfoGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PresentTimesInfoGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentTimeGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PresentTimeGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IOSSurfaceCreateInfoMVKBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MacOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MacOSSurfaceCreateInfoMVKBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetalSurfaceCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MetalSurfaceCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewportWScalingNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ViewportWScalingNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportWScalingStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineViewportWScalingStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewportSwizzleNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ViewportSwizzleNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportSwizzleStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineViewportSwizzleStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDiscardRectanglePropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDiscardRectanglePropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineDiscardRectangleStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineDiscardRectangleStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMultiviewPerViewAttributesPropertiesNVXBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputAttachmentAspectReference","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for InputAttachmentAspectReferenceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassInputAttachmentAspectCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassInputAttachmentAspectCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSurfaceInfo2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSurfaceInfo2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceCapabilities2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceCapabilities2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceFormat2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceFormat2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlaneProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPlaneProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModeProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayModeProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlaneInfo2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPlaneInfo2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlaneCapabilities2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayPlaneCapabilities2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SharedPresentSurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SharedPresentSurfaceCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevice16BitStorageFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevice16BitStorageFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSubgroupProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSubgroupPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderSubgroupExtendedTypesFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderSubgroupExtendedTypesFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageSparseMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageSparseMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryRequirements2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryRequirements2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageMemoryRequirements2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SparseImageMemoryRequirements2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePointClippingProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePointClippingPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryDedicatedRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryDedicatedRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryDedicatedAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryDedicatedAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageViewUsageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageViewUsageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineTessellationDomainOriginStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineTessellationDomainOriginStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerYcbcrConversionInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SamplerYcbcrConversionInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerYcbcrConversionCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SamplerYcbcrConversionCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindImagePlaneMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindImagePlaneMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImagePlaneMemoryRequirementsInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImagePlaneMemoryRequirementsInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSamplerYcbcrConversionFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSamplerYcbcrConversionFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerYcbcrConversionImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SamplerYcbcrConversionImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureLODGatherFormatPropertiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TextureLODGatherFormatPropertiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConditionalRenderingBeginInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ConditionalRenderingBeginInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtectedSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ProtectedSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceProtectedMemoryFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceProtectedMemoryFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceProtectedMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceProtectedMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceQueueInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceQueueInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCoverageToColorStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineCoverageToColorStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSamplerFilterMinmaxProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSamplerFilterMinmaxPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SampleLocationEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SampleLocationEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SampleLocationsInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SampleLocationsInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentSampleLocationsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttachmentSampleLocationsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassSampleLocationsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassSampleLocationsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassSampleLocationsBeginInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassSampleLocationsBeginInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineSampleLocationsStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineSampleLocationsStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSampleLocationsPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSampleLocationsPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MultisamplePropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MultisamplePropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerReductionModeCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SamplerReductionModeCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceBlendOperationAdvancedFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceBlendOperationAdvancedFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceBlendOperationAdvancedPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceBlendOperationAdvancedPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineColorBlendAdvancedStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineColorBlendAdvancedStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceInlineUniformBlockFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceInlineUniformBlockFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceInlineUniformBlockPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceInlineUniformBlockPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteDescriptorSetInlineUniformBlockEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WriteDescriptorSetInlineUniformBlockEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolInlineUniformBlockCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorPoolInlineUniformBlockCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCoverageModulationStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineCoverageModulationStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFormatListCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageFormatListCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationCacheCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ValidationCacheCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderModuleValidationCacheCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ShaderModuleValidationCacheCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMaintenance3Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMaintenance3PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayoutSupport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorSetLayoutSupportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderDrawParametersFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderDrawParametersFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderFloat16Int8Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderFloat16Int8FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFloatControlsProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceFloatControlsPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceHostQueryResetFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceHostQueryResetFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NativeBufferUsage2ANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for NativeBufferUsage2ANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NativeBufferANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for NativeBufferANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainImageCreateInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SwapchainImageCreateInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePresentationPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePresentationPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderResourceUsageAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ShaderResourceUsageAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderStatisticsInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ShaderStatisticsInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceQueueGlobalPriorityCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceQueueGlobalPriorityCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugUtilsObjectNameInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsObjectTagInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugUtilsObjectTagInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsLabelEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugUtilsLabelEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessengerCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugUtilsMessengerCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessengerCallbackDataEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DebugUtilsMessengerCallbackDataEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportMemoryHostPointerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportMemoryHostPointerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryHostPointerPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryHostPointerPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceExternalMemoryHostPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceExternalMemoryHostPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceConservativeRasterizationPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceConservativeRasterizationPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CalibratedTimestampInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CalibratedTimestampInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderCorePropertiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderCorePropertiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderCoreProperties2AMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderCoreProperties2AMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationConservativeStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineRasterizationConservativeStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDescriptorIndexingFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDescriptorIndexingFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDescriptorIndexingProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDescriptorIndexingPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayoutBindingFlagsCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorSetLayoutBindingFlagsCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetVariableDescriptorCountAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorSetVariableDescriptorCountAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetVariableDescriptorCountLayoutSupport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorSetVariableDescriptorCountLayoutSupportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentDescription2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttachmentDescription2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentReference2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttachmentReference2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDescription2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassDescription2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDependency2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassDependency2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassCreateInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassCreateInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassEndInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassEndInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceTimelineSemaphoreFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceTimelineSemaphoreFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceTimelineSemaphoreProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceTimelineSemaphorePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreTypeCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SemaphoreTypeCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimelineSemaphoreSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TimelineSemaphoreSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreWaitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SemaphoreWaitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreSignalInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SemaphoreSignalInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexInputBindingDivisorDescriptionEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VertexInputBindingDivisorDescriptionEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineVertexInputDivisorStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineVertexInputDivisorStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVertexAttributeDivisorPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVertexAttributeDivisorPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePCIBusInfoPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePCIBusInfoPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportAndroidHardwareBufferInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImportAndroidHardwareBufferInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidHardwareBufferUsageANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AndroidHardwareBufferUsageANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidHardwareBufferPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AndroidHardwareBufferPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryGetAndroidHardwareBufferInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryGetAndroidHardwareBufferInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidHardwareBufferFormatPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AndroidHardwareBufferFormatPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferInheritanceConditionalRenderingInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CommandBufferInheritanceConditionalRenderingInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalFormatANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ExternalFormatANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevice8BitStorageFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevice8BitStorageFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceConditionalRenderingFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceConditionalRenderingFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVulkanMemoryModelFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVulkanMemoryModelFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderAtomicInt64Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderAtomicInt64FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVertexAttributeDivisorFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVertexAttributeDivisorFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFamilyCheckpointPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueueFamilyCheckpointPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckpointDataNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CheckpointDataNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDepthStencilResolveProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDepthStencilResolvePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDescriptionDepthStencilResolve","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassDescriptionDepthStencilResolveBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageViewASTCDecodeModeEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageViewASTCDecodeModeEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceASTCDecodeFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceASTCDecodeFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceTransformFeedbackFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceTransformFeedbackFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceTransformFeedbackPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceTransformFeedbackPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationStateStreamCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineRasterizationStateStreamCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceRepresentativeFragmentTestFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceRepresentativeFragmentTestFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRepresentativeFragmentTestStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineRepresentativeFragmentTestStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceExclusiveScissorFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceExclusiveScissorFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportExclusiveScissorStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineViewportExclusiveScissorStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceCornerSampledImageFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceCornerSampledImageFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceComputeShaderDerivativesFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceComputeShaderDerivativesFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFragmentShaderBarycentricFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceFragmentShaderBarycentricFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderImageFootprintFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderImageFootprintFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShadingRatePaletteNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ShadingRatePaletteNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportShadingRateImageStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineViewportShadingRateImageStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShadingRateImageFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShadingRateImageFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShadingRateImagePropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShadingRateImagePropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CoarseSampleLocationNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CoarseSampleLocationNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CoarseSampleOrderCustomNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CoarseSampleOrderCustomNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportCoarseSampleOrderStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineViewportCoarseSampleOrderStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMeshShaderFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMeshShaderFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMeshShaderPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMeshShaderPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawMeshTasksIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DrawMeshTasksIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracingShaderGroupCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RayTracingShaderGroupCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracingShaderGroupCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RayTracingShaderGroupCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracingPipelineCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RayTracingPipelineCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracingPipelineCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RayTracingPipelineCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryTrianglesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GeometryTrianglesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryAABBNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GeometryAABBNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryDataNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GeometryDataNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GeometryNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindAccelerationStructureMemoryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindAccelerationStructureMemoryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteDescriptorSetAccelerationStructureKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WriteDescriptorSetAccelerationStructureKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureMemoryRequirementsInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureMemoryRequirementsInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureMemoryRequirementsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureMemoryRequirementsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceRayTracingFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceRayTracingFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceRayTracingPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceRayTracingPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceRayTracingPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceRayTracingPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StridedBufferRegionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StridedBufferRegionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraceRaysIndirectCommandKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TraceRaysIndirectCommandKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrmFormatModifierPropertiesListEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DrmFormatModifierPropertiesListEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrmFormatModifierPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DrmFormatModifierPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceImageDrmFormatModifierInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceImageDrmFormatModifierInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageDrmFormatModifierListCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageDrmFormatModifierListCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageDrmFormatModifierExplicitCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageDrmFormatModifierExplicitCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageDrmFormatModifierPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageDrmFormatModifierPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageStencilUsageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageStencilUsageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceMemoryOverallocationCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceMemoryOverallocationCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFragmentDensityMapFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceFragmentDensityMapFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFragmentDensityMapPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceFragmentDensityMapPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassFragmentDensityMapCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassFragmentDensityMapCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceScalarBlockLayoutFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceScalarBlockLayoutFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceProtectedCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceProtectedCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceUniformBufferStandardLayoutFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceUniformBufferStandardLayoutFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDepthClipEnableFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDepthClipEnableFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationDepthClipStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineRasterizationDepthClipStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMemoryBudgetPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMemoryBudgetPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMemoryPriorityFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceMemoryPriorityFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryPriorityAllocateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryPriorityAllocateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceBufferDeviceAddressFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceBufferDeviceAddressFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceBufferDeviceAddressFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceBufferDeviceAddressFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferDeviceAddressInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferDeviceAddressInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferOpaqueCaptureAddressCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferOpaqueCaptureAddressCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferDeviceAddressCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferDeviceAddressCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceImageViewImageFormatInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceImageViewImageFormatInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterCubicImageViewImageFormatPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FilterCubicImageViewImageFormatPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceImagelessFramebufferFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceImagelessFramebufferFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FramebufferAttachmentsCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FramebufferAttachmentsCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FramebufferAttachmentImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FramebufferAttachmentImageInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassAttachmentBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassAttachmentBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceTextureCompressionASTCHDRFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceCooperativeMatrixFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceCooperativeMatrixFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceCooperativeMatrixPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceCooperativeMatrixPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CooperativeMatrixPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CooperativeMatrixPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceYcbcrImageArraysFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceYcbcrImageArraysFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageViewHandleInfoNVX","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageViewHandleInfoNVXBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentFrameTokenGGP","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PresentFrameTokenGGPBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCreationFeedbackEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineCreationFeedbackEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCreationFeedbackCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineCreationFeedbackCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceFullScreenExclusiveInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceFullScreenExclusiveInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceFullScreenExclusiveWin32InfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceFullScreenExclusiveWin32InfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceCapabilitiesFullScreenExclusiveEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SurfaceCapabilitiesFullScreenExclusiveEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePerformanceQueryFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePerformanceQueryFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePerformanceQueryPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePerformanceQueryPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceCounterKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceCounterKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceCounterDescriptionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceCounterDescriptionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPoolPerformanceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueryPoolPerformanceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcquireProfilingLockInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AcquireProfilingLockInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceQuerySubmitInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceQuerySubmitInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeadlessSurfaceCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for HeadlessSurfaceCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceCoverageReductionModeFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceCoverageReductionModeFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCoverageReductionStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineCoverageReductionStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FramebufferMixedSamplesCombinationNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FramebufferMixedSamplesCombinationNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderIntegerFunctions2FeaturesINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceValueINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceValueINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitializePerformanceApiInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for InitializePerformanceApiInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPoolPerformanceQueryCreateInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueryPoolPerformanceQueryCreateInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceMarkerInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceMarkerInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceStreamMarkerInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceStreamMarkerInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceOverrideInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceOverrideInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceConfigurationAcquireInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PerformanceConfigurationAcquireInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderClockFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderClockFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceIndexTypeUint8FeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceIndexTypeUint8FeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderSMBuiltinsPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderSMBuiltinsPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderSMBuiltinsFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderSMBuiltinsFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFragmentShaderInterlockFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceFragmentShaderInterlockFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSeparateDepthStencilLayoutsFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSeparateDepthStencilLayoutsFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentReferenceStencilLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttachmentReferenceStencilLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentDescriptionStencilLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttachmentDescriptionStencilLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePipelineExecutablePropertiesFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineExecutablePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineExecutablePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineExecutableInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineExecutableInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineExecutableStatisticKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineExecutableStatisticKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineExecutableInternalRepresentationKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineExecutableInternalRepresentationKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceTexelBufferAlignmentFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceTexelBufferAlignmentFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceTexelBufferAlignmentPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceTexelBufferAlignmentPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSubgroupSizeControlFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSubgroupSizeControlFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSubgroupSizeControlPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceSubgroupSizeControlPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineShaderStageRequiredSubgroupSizeCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryOpaqueCaptureAddressAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryOpaqueCaptureAddressAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceMemoryOpaqueCaptureAddressInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceMemoryOpaqueCaptureAddressInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceLineRasterizationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceLineRasterizationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceLineRasterizationPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceLineRasterizationPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationLineStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineRasterizationLineStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePipelineCreationCacheControlFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicePipelineCreationCacheControlFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVulkan11Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVulkan11FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVulkan11Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVulkan11PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVulkan12Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVulkan12FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceVulkan12Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceVulkan12PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCompilerControlCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineCompilerControlCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceCoherentMemoryFeaturesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceCoherentMemoryFeaturesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceToolPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceToolPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureGeometryTrianglesDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureGeometryTrianglesDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureGeometryAabbsDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureGeometryAabbsDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureGeometryInstancesDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureGeometryInstancesDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureGeometryKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureGeometryKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureBuildGeometryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureBuildGeometryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureBuildOffsetInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureBuildOffsetInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureCreateGeometryTypeInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureCreateGeometryTypeInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AabbPositionsKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AabbPositionsKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransformMatrixKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureInstanceKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureDeviceAddressInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureDeviceAddressInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureVersionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AccelerationStructureVersionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyAccelerationStructureInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CopyAccelerationStructureInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyAccelerationStructureToMemoryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CopyAccelerationStructureToMemoryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyMemoryToAccelerationStructureInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CopyMemoryToAccelerationStructureInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracingPipelineInterfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RayTracingPipelineInterfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeferredOperationInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeferredOperationInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineLibraryCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineLibraryCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassTransformBeginInfoQCOM","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassTransformBeginInfoQCOMBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferInheritanceRenderPassTransformInfoQCOM","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CommandBufferInheritanceRenderPassTransformInfoQCOMBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceDiagnosticsConfigFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceDiagnosticsConfigFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceDiagnosticsConfigCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DeviceDiagnosticsConfigCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageTiling","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageViewType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferLevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComponentSwizzle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorderColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineBindPoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCacheHeaderVersion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SharingMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerMipmapMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerAddressMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompareOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PolygonMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendFactor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogicOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InternalAllocationType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SystemAllocationScope","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexInputRate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructureType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassContents","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Result","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DynamicState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorUpdateTemplateType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ObjectType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentModeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorSpaceKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeDomainEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugReportObjectTypeEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RasterizationOrderAMD","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationCheckEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationFeatureEnableEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationFeatureDisableEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndirectCommandsTokenTypeNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPowerStateEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceEventTypeEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayEventTypeEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewportCoordinateSwizzleNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiscardRectangleModeEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PointClippingBehavior","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerReductionMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TessellationDomainOrigin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerYcbcrModelConversion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerYcbcrRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChromaLocation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendOverlapEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CoverageModulationModeNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CoverageReductionModeNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationCacheHeaderVersionEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderInfoTypeAMD","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueGlobalPriorityEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConservativeRasterizationModeEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VendorId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DriverId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShadingRatePaletteEntryNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CoarseSampleOrderTypeNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyAccelerationStructureModeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureTypeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryTypeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureMemoryRequirementsTypeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureBuildTypeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracingShaderGroupTypeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryOverallocationBehaviorAMD","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScopeNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComponentTypeNV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FullScreenExclusiveEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceCounterScopeKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceCounterUnitKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceCounterStorageKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceConfigurationTypeINTEL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPoolSamplingModeINTEL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceOverrideTypeINTEL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceParameterTypeINTEL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceValueTypeINTEL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderFloatControlsIndependence","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineExecutableStatisticFormatKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LineRasterizationModeEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSwapchainFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDisplayFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDisplaySwapchainFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrXlibSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrXcbSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrWaylandSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrMirSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrAndroidSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrWin32SurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidNativeBufferFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDebugReportFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvGlslShaderFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDepthRangeUnrestrictedFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSamplerMirrorClampToEdgeFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImgFilterCubicFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension17Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension18Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdRasterizationOrderFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension20Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderTrinaryMinmaxFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderExplicitVertexParameterFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDebugMarkerFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension24Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension25Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdGcnShaderFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvDedicatedAllocationFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension28Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtTransformFeedbackFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvxExtension30Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvxImageViewHandleFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension32Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension33Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdDrawIndirectCountFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension35Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdNegativeViewportHeightFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdGpuShaderHalfFloatFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderBallotFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension39Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension40Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension41Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdTextureGatherBiasLodFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderInfoFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension44Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension45Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension46Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderImageLoadStoreLodFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvxExtension48Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleExtension49Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GgpStreamDescriptorSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvCornerSampledImageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension52Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension53Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrMultiviewFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImgFormatPvrtcFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExternalMemoryCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExternalMemoryFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExternalMemoryWin32Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvWin32KeyedMutexFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrGetPhysicalDeviceProperties2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDeviceGroupFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtValidationFlagsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NnViSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrShaderDrawParametersFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtShaderSubgroupBallotFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtShaderSubgroupVoteFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtTextureCompressionAstcHdrFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtAstcDecodeModeFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImgExtension69Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrMaintenance1Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDeviceGroupCreationFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalMemoryCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalMemoryFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalMemoryWin32Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalMemoryFdFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrWin32KeyedMutexFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalSemaphoreCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalSemaphoreFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalSemaphoreWin32Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalSemaphoreFdFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrPushDescriptorFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtConditionalRenderingFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrShaderFloat16Int8Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Khr16bitStorageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrIncrementalPresentFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDescriptorUpdateTemplateFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvxDeviceGeneratedCommandsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvClipSpaceWScalingFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDirectModeDisplayFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtAcquireXlibDisplayFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDisplaySurfaceCounterFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDisplayControlFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleDisplayTimingFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvSampleMaskOverrideCoverageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvGeometryShaderPassthroughFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvViewportArray2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvxMultiviewPerViewAttributesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvViewportSwizzleFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDiscardRectanglesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension101Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtConservativeRasterizationFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDepthClipEnableFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension104Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtSwapchainColorspaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtHdrMetadataFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImgExtension107Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImgExtension108Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrImagelessFramebufferFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrCreateRenderpass2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImgExtension111Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSharedPresentableImageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalFenceCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalFenceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalFenceWin32Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExternalFenceFdFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrPerformanceQueryFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrMaintenance2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension119Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrGetSurfaceCapabilities2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrVariablePointersFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrGetDisplayProperties2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MvkIosSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MvkMacosSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MvkMoltenvkFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExternalMemoryDmaBufFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtQueueFamilyForeignFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDedicatedAllocationFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDebugUtilsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidExternalMemoryAndroidHardwareBufferFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtSamplerFilterMinmaxFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrStorageBufferStorageClassFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdGpuShaderInt16Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension134Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension135Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension136Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdMixedAttachmentSamplesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderFragmentMaskFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtInlineUniformBlockFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension140Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtShaderStencilExportFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension142Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension143Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtSampleLocationsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrRelaxedBlockLayoutFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrGetMemoryRequirements2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrImageFormatListFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtBlendOperationAdvancedFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvFragmentCoverageToColorFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrRayTracingFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension152Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvFramebufferMixedSamplesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvFillRectangleFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvShaderSmBuiltinsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtPostDepthCoverageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSamplerYcbcrConversionFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrBindMemory2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtImageDrmFormatModifierFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension160Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtValidationCacheFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtDescriptorIndexingFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtShaderViewportIndexLayerFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension164Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvShadingRateImageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvRayTracingFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvRepresentativeFragmentTestFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension168Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrMaintenance3Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDrawIndirectCountFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtFilterCubicFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension172Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension173Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension174Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtGlobalPriorityFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrShaderSubgroupExtendedTypesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension177Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Khr8bitStorageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExternalMemoryHostFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdBufferMarkerFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrShaderAtomicInt64Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrShaderClockFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension183Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdPipelineCompilerControlFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtCalibratedTimestampsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderCorePropertiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension187Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension188Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension189Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdMemoryOverallocationBehaviorFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtVertexAttributeDivisorFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GgpFrameTokenFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtPipelineCreationFeedbackFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleExtension194Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleExtension195Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleExtension196Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDriverPropertiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrShaderFloatControlsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvShaderSubgroupPartitionedFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDepthStencilResolveFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSwapchainMutableFormatFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvComputeShaderDerivativesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvMeshShaderFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvFragmentShaderBarycentricFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvShaderImageFootprintFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvScissorExclusiveFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvDeviceDiagnosticCheckpointsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrTimelineSemaphoreFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension209Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntelShaderIntegerFunctions2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntelPerformanceQueryFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrVulkanMemoryModelFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtPciBusInfoFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdDisplayNativeHdrFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FuchsiaImagepipeSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleExtension216Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleExtension217Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtMetalSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtFragmentDensityMapFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension220Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension221Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtScalarBlockLayoutFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension223Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleHlslFunctionality1Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleDecorateStringFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtSubgroupSizeControlFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension227Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdShaderCoreProperties2Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension229Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdDeviceCoherentMemoryFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension231Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension232Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension233Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension234Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension235Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension236Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSpirv14Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtMemoryBudgetFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtMemoryPriorityFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSurfaceProtectedCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvDedicatedAllocationImageAliasingFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrSeparateDepthStencilLayoutsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntelExtension243Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MesaExtension244Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtBufferDeviceAddressFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtToolingInfoFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtSeparateStencilUsageFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtValidationFeaturesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension249Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvCooperativeMatrixFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvCoverageReductionModeFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtFragmentShaderInterlockFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtYcbcrImageArraysFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrUniformBufferStandardLayoutFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension255Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtFullScreenExclusiveFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtHeadlessSurfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrBufferDeviceAddressFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension259Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtLineRasterizationFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension261Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtHostQueryResetFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GgpExtension263Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BrcmExtension264Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BrcmExtension265Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtIndexTypeUint8Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension267Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension268Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrDeferredHostOperationsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrPipelineExecutablePropertiesFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntelExtension271Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntelExtension272Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntelExtension273Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntelExtension274Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension275Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension276Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtShaderDemoteToHelperInvocationFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvDeviceGeneratedCommandsFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension279Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension280Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ArmExtension281Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtTexelBufferAlignmentFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomRenderPassTransformFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension284Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension285Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension286Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvxExtension287Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvxExtension288Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension289Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GoogleUserTypeFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrPipelineLibraryFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension292Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension293Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrShaderNonSemanticInfoFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension295Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension296Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension297Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtPipelineCreationCacheControlFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension299Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension300Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvDeviceDiagnosticsConfigFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension302Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension303Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension304Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension305Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension306Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension307Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension308Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KhrExtension309Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QcomExtension310Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NvExtension311Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension312Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtExtension313Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension314Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension315Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension316Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension317Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension318Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension319Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension320Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension321Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension322Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdExtension323Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StaticFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryFnV1_0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceFnV1_0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceFnV1_0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryFnV1_1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceFnV1_1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceFnV1_1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryFnV1_2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceFnV1_2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceFnV1_2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearColorValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceCounterResultKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PerformanceValueDataINTEL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineExecutableStatisticValueKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceOrHostAddressKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceOrHostAddressConstKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelerationStructureGeometryDataKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaSqShaderStageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaDeviceClockModeAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaPerfBlockAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaSampleTypeAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaSessionAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaSessionCreateInfoAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaPerfBlockPropertiesAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceGpaFeaturesAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceGpaPropertiesAmd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceGpaPropertiesAmdBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaPerfCounterAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaSampleBeginInfoAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpaDeviceClockModeInfoAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AmdGpaInterfaceFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceWaveLimitPropertiesAmd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDeviceWaveLimitPropertiesAmdBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineShaderStageCreateInfoWaveLimitAmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugMarker","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugReport","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtils","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetalSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplaySwapchain","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawIndirectCount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalMemoryFd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PushDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracing","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Swapchain","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimelineSemaphore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaylandSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Win32Surface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XcbSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XlibSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IOSSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MacOSSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MeshShader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RayTracing","synthetic":true,"types":[]}];
implementors["atom"] = [{"text":"impl&lt;P&gt; RefUnwindSafe for Atom&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; RefUnwindSafe for AtomSetOnce&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["backtrace"] = [{"text":"impl RefUnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SymbolName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !RefUnwindSafe for BacktraceFmt&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'fmt, 'a, 'b&gt; !RefUnwindSafe for BacktraceFrameFmt&lt;'fmt, 'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Backtrace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BacktraceFrame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BacktraceSymbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BytesOrWideString&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintFmt","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl RefUnwindSafe for BigEndian","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LittleEndian","synthetic":true,"types":[]}];
implementors["calloop"] = [{"text":"impl&lt;Data&gt; !RefUnwindSafe for EventLoop&lt;Data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !RefUnwindSafe for InsertError&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Data&gt; !RefUnwindSafe for LoopHandle&lt;Data&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LoopSignal","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !RefUnwindSafe for Source&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Idle","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Channel&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !RefUnwindSafe for Generic&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !RefUnwindSafe for Event&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for EventedFd&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventedRawFd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Signals","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Timer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TimerHandle&lt;T&gt;","synthetic":true,"types":[]}];
implementors["colorful"] = [{"text":"impl RefUnwindSafe for Colorado","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Symbol","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RGB","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HSL","synthetic":true,"types":[]}];
implementors["conrod_core"] = [{"text":"impl !RefUnwindSafe for Ui","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for UiCell&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UiBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bordering","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Hsla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Text","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Motion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Press","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MousePress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyPress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Release","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MouseRelease","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyRelease","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Drag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Click","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DoubleClick","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scroll","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Input","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ui","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Widget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Button","synthetic":true,"types":[]},{"text":"impl&lt;State, Style&gt; RefUnwindSafe for UniqueWidgetState&lt;State, Style&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;State: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Style: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Container","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsOverFn","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Graph","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Node","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Edge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PickWidgets","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PickScrollableWidgets","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthOrder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Id","synthetic":true,"types":[]},{"text":"impl&lt;Img&gt; !RefUnwindSafe for Map&lt;Img&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NewIds","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Motion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Start","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Touch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mouse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonMap","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PressedButtons&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonPosition","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Widget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Mouse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Events&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Presses&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MousePresses&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MouseButtonPresses&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for KeyPresses&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Releases&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MouseButtonReleases&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MouseReleases&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for KeyReleases&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Clicks&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ButtonClicks&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Taps&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Drags&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ButtonDrags&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Texts&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Scrolls&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Global","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Events&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for UiEvents&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Id","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Touch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Phase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mesh","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scizzor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Commands&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fill","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Command","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Draw","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Padding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Axis","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Relative","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Direction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Align","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Place","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dimension","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Range","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Edge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Corner","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Primitives&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OwnedPrimitives","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Primitive&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WalkOwnedPrimitives&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for PrimitiveKind&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; RefUnwindSafe for Lines&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Justify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Id","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Map","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NewIds","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Ids&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; RefUnwindSafe for Rects&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; RefUnwindSafe for RectsPerLine&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; RefUnwindSafe for SelectedRectsPerLine&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; RefUnwindSafe for SelectedRects&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; RefUnwindSafe for XysPerLine&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for XysPerLineFromText&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; RefUnwindSafe for Xs&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Index","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Info","synthetic":true,"types":[]},{"text":"impl&lt;'a, F&gt; RefUnwindSafe for Infos&lt;'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Rects&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; RefUnwindSafe for SelectedRects&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Break","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Theme","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WidgetDefault","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for UniqueDefault&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, I&gt; RefUnwindSafe for IterDiff&lt;E, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, 'c, 'd, W&gt; !RefUnwindSafe for UpdateArgs&lt;'a, 'b, 'c, 'd, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !RefUnwindSafe for KidAreaArgs&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KidArea","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Floating","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommonStyle","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for State&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PreUpdateCache","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for PostUpdateCache&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as Widget&gt;::State: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as Widget&gt;::Style: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaybeParent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsOver","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Generator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for List","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ListWalk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scroll","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for State&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for X","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Y","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Line","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pattern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for PointPath&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Triangles&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Circle","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for Oval&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Full","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Section","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for State&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Circumference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Triangles","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Polygon&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Triangles&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl&lt;S, I&gt; RefUnwindSafe for Triangles&lt;S, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SingleColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MultiColor","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for Triangle&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for State&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, I&gt; RefUnwindSafe for TrianglesUnpositioned&lt;S, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Wrap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorderedRectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RoundedBorderTriangles","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; RefUnwindSafe for Button&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlatIds","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageIds","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimesClicked","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageColor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Canvas&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Length","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Direction","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CollapsibleArea&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ids","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Area","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for DropDownList&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxHeight","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; RefUnwindSafe for EnvelopeEditor&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as EnvelopePoint&gt;::X: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as EnvelopePoint&gt;::Y: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for Event&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as EnvelopePoint&gt;::X: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as EnvelopePoint&gt;::Y: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FileNavigator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Directory","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Types&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DirectoryView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;X, Y, I&gt; RefUnwindSafe for Grid&lt;X, Y, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Lines&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;X, Y&gt; RefUnwindSafe for Axis&lt;X, Y&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; RefUnwindSafe for List&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dynamic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; RefUnwindSafe for Item&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for Scrollbar&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; RefUnwindSafe for Items&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Up","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Down","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Left","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Right","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemInstantiation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScrollbarPosition","synthetic":true,"types":[]},{"text":"impl&lt;M, D, S&gt; RefUnwindSafe for ListSelect&lt;M, D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;M, D, S&gt; RefUnwindSafe for Events&lt;M, D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as Mode&gt;::Selection: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Single","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Multiple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ListDirection","synthetic":true,"types":[]},{"text":"impl&lt;Selection, Direction, Size&gt; RefUnwindSafe for Event&lt;Selection, Direction, Size&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Direction: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Selection: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Size: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; RefUnwindSafe for Selection&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Matrix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Elements","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Element","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; RefUnwindSafe for Layout&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E&gt; RefUnwindSafe for Graph&lt;'a, N, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; RefUnwindSafe for State&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; RefUnwindSafe for NodeSocket&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Camera","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; RefUnwindSafe for Session&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; RefUnwindSafe for SessionEvents&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; RefUnwindSafe for SessionNodes&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; RefUnwindSafe for SessionEdges&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; RefUnwindSafe for Events&lt;'a, NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; RefUnwindSafe for Nodes&lt;'a, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; RefUnwindSafe for NodeContext&lt;'a, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI, W&gt; !RefUnwindSafe for NodeWidget&lt;'a, NI, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; RefUnwindSafe for Edges&lt;'a, NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; RefUnwindSafe for Edge&lt;'a, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI, W&gt; !RefUnwindSafe for EdgeWidget&lt;'a, NI, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; RefUnwindSafe for Event&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; RefUnwindSafe for NodeEvent&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; RefUnwindSafe for EdgeEvent&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for Node&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for Event&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketRects","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketSide","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketType","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for NumberDialer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlyphSlot","synthetic":true,"types":[]},{"text":"impl&lt;X, Y, F&gt; RefUnwindSafe for PlotPath&lt;X, Y, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for RangeSlider&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Drag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Edge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RoundedRectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Points","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for Scrollbar&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Slider&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Tabs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tab","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TabRects&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Layout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TextBox&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TextEdit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Drag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cursor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TitleBar&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Toggle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimesClicked","synthetic":true,"types":[]},{"text":"impl&lt;'a, X, Y&gt; RefUnwindSafe for XYPad&lt;'a, X, Y&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MouseCursor","synthetic":true,"types":[]}];
implementors["conrod_example_shared"] = [{"text":"impl RefUnwindSafe for DemoApp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ids","synthetic":true,"types":[]}];
implementors["conrod_gfx"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for Commands&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !RefUnwindSafe for Renderer&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Command&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Draw&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RendererCreationError","synthetic":true,"types":[]}];
implementors["conrod_glium"] = [{"text":"impl !RefUnwindSafe for GlyphCache","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Renderer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Commands&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Command&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Draw&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RendererCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawError","synthetic":true,"types":[]}];
implementors["conrod_rendy"] = [{"text":"impl&lt;B&gt; RefUnwindSafe for UiTexture&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UiPipelineDesc","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for UiPipeline&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for SimpleUiAux&lt;B&gt;","synthetic":true,"types":[]}];
implementors["conrod_vulkano"] = [{"text":"impl RefUnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Renderer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GlyphCacheCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DrawCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RendererCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawError","synthetic":true,"types":[]}];
implementors["conrod_wgpu"] = [{"text":"impl !RefUnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Renderer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for GlyphCacheCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Render&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for RenderPassCommand&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["copyless"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for BoxAllocation&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for VecAllocation&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for VecEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["copypasta"] = [{"text":"impl RefUnwindSafe for Clipboard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Primary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Primary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Clipboard","synthetic":true,"types":[]},{"text":"impl&lt;S&nbsp;=&nbsp;Clipboard&gt; !RefUnwindSafe for X11ClipboardContext&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NopClipboardContext","synthetic":true,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for TryIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Select&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SelectedOperation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadyTimeoutError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelectTimeoutError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TryReadyError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TrySelectError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecvTimeoutError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Receiver&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; !RefUnwindSafe for Worker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Stealer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Injector&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Steal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Atomic&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g, T, P&gt; RefUnwindSafe for CompareAndSetError&lt;'g, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Owned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g, T&gt; RefUnwindSafe for Shared&lt;'g, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Collector","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LocalHandle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Guard","synthetic":true,"types":[]}];
implementors["crossbeam_queue"] = [{"text":"impl&lt;T&gt; !RefUnwindSafe for ArrayQueue&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PopError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for PushError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SegQueue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for CachePadded&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Backoff","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Parker","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Unparker","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; RefUnwindSafe for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; RefUnwindSafe for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for Scope&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; !RefUnwindSafe for ScopedThreadBuilder&lt;'scope, 'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; !RefUnwindSafe for ScopedJoinHandle&lt;'scope, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for AtomicCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; RefUnwindSafe for ShardedLock&lt;T&gt;","synthetic":false,"types":[]}];
implementors["daggy"] = [{"text":"impl&lt;N, E, Ix&gt; RefUnwindSafe for Dag&lt;N, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ix&gt; RefUnwindSafe for Children&lt;N, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ix&gt; RefUnwindSafe for Parents&lt;N, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; RefUnwindSafe for EdgeIndices&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for WouldCycle&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, F&gt; RefUnwindSafe for Recursive&lt;G, Ix, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, A, B&gt; RefUnwindSafe for Chain&lt;G, Ix, A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, P&gt; RefUnwindSafe for Filter&lt;W, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, W&gt; RefUnwindSafe for Peekable&lt;G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, P&gt; RefUnwindSafe for SkipWhile&lt;W, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, P&gt; RefUnwindSafe for TakeWhile&lt;W, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, W&gt; RefUnwindSafe for Skip&lt;G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, W&gt; RefUnwindSafe for Take&lt;G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, W&gt; RefUnwindSafe for Cycle&lt;G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; RefUnwindSafe for Inspect&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; RefUnwindSafe for Iter&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; RefUnwindSafe for IterEdges&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; RefUnwindSafe for IterNodes&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; RefUnwindSafe for IterWeights&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; RefUnwindSafe for IterEdgeWeights&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; RefUnwindSafe for IterNodeWeights&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["dlib"] = [{"text":"impl RefUnwindSafe for DlError","synthetic":true,"types":[]}];
implementors["draw_state"] = [{"text":"impl RefUnwindSafe for Offset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MultiSample","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rasterizer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilSide","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stencil","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Depth","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendChannel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Blend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RefValues","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CullFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RasterMethod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Comparison","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Equation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Factor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mirror","synthetic":true,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; RefUnwindSafe for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["fixedbitset"] = [{"text":"impl RefUnwindSafe for FixedBitSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Difference&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Intersection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Union&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Ones&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl RefUnwindSafe for FnvHasher","synthetic":true,"types":[]}];
implementors["fxhash"] = [{"text":"impl RefUnwindSafe for FxHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FxHasher64","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FxHasher32","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]}];
implementors["gfx"] = [{"text":"impl&lt;R, C&gt; !RefUnwindSafe for Encoder&lt;R, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !RefUnwindSafe for Slice&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, D&gt; RefUnwindSafe for CopyError&lt;S, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for UpdateError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for PipelineStateError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !RefUnwindSafe for IndexBuffer&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for RawDataSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Sampler: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::ShaderResourceView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::UnorderedAccessView: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, M&gt; RefUnwindSafe for PipelineState&lt;R, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::PipelineStateObject: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for ElementError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for InitError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; RefUnwindSafe for VertexBufferCommon&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawVertexBuffer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for ConstantBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawConstantBuffer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Global&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawGlobal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NonInstanced","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instanced","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for ShaderResource&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawShaderResource","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for UnorderedAccess&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sampler","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TextureSampler&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for RenderTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for BlendTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawRenderTarget","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for DepthTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for StencilTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for DepthStencilTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scissor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendRef","synthetic":true,"types":[]},{"text":"impl&lt;R, Data&gt; !RefUnwindSafe for Bundle&lt;R, Data&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProgramError","synthetic":true,"types":[]}];
implementors["gfx_backend_empty"] = [{"text":"impl RefUnwindSafe for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFamily","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Swapchain","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Backend","synthetic":true,"types":[]}];
implementors["gfx_backend_vulkan"] = [{"text":"impl RefUnwindSafe for VK_ENTRY","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawInstance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFamily","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceCreationFeatures","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugMessenger","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Backend","synthetic":true,"types":[]}];
implementors["gfx_core"] = [{"text":"impl&lt;R&gt; RefUnwindSafe for VertexShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for HullShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for DomainShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for GeometryShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for PixelShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capabilities","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdapterInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for ShaderSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Primitive","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubmissionError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !RefUnwindSafe for Raw&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Info","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Role","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !RefUnwindSafe for AccessInfo&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !RefUnwindSafe for AccessGuard&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !RefUnwindSafe for AccessGuardBuffers&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !RefUnwindSafe for AccessGuardBuffersChain&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DummyDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DummyFence","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DummyMapping","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DummyCommandBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DummyResources","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceViewError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TargetViewError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CombinedError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Swizzle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for U8Norm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for I8Norm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for U16Norm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for I16Norm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for F16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChannelType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Int","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Inorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Float","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R4_G4","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R4_G4_B4_A4","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R5_G5_B5_A1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R5_G6_B5","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8_G8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8_G8_B8_A8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R10_G10_B10_A2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R11_G11_B10","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16_G16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16_G16_B16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16_G16_B16_A16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32_G32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32_G32_B32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32_G32_B32_A32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8_G8_R8_A8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D24","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D24_S8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC1_R8_G8_B8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC3_R8_G8_B8_A8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChannelSource","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !RefUnwindSafe for RawBuffer&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; !RefUnwindSafe for Buffer&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Shader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Program&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for RawPipelineState&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::PipelineStateObject: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for RawTexture&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, S&gt; RefUnwindSafe for Texture&lt;R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !RefUnwindSafe for RawShaderResourceView&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; !RefUnwindSafe for ShaderResourceView&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !RefUnwindSafe for RawUnorderedAccessView&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; !RefUnwindSafe for UnorderedAccessView&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for RawRenderTargetView&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for RawDepthStencilView&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; RefUnwindSafe for RenderTargetView&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; RefUnwindSafe for DepthStencilView&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Sampler&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Fence&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Fence: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !RefUnwindSafe for Manager&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T&gt; !RefUnwindSafe for Reader&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T&gt; !RefUnwindSafe for Writer&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Access","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Usage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthStencilInfo","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for Element&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexBufferDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Descriptor","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for VertexBufferSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for ConstantBufferParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for ResourceViewParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::ShaderResourceView: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for UnorderedViewParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::UnorderedAccessView: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for SamplerParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for PixelTargetSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Usage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttributeVar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConstVar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConstantBufferVar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureVar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnorderedVar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerVar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutputVar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProgramInfo","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Program&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateProgramError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsComparison","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsMultiSample","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsRect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaseType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContainerType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UniformValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompatibilityError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateShaderError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Raw&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for ImageInfoCommon&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TextureCopyRegion&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PackedColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Info","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthStencilFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthStencilDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayerError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AaMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterMethod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CubeFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mipmap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WrapMode","synthetic":true,"types":[]}];
implementors["gfx_descriptor"] = [{"text":"impl&lt;B&gt; RefUnwindSafe for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for DescriptorAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorCounts","synthetic":true,"types":[]}];
implementors["gfx_hal"] = [{"text":"impl RefUnwindSafe for Features","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Hints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Limits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsupportedBackend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryTypeId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Gpu&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdapterInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Usage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Access","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for IndexBufferView&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearDepthStencil","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferCopy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageCopy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageResolve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageBlit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for CommandBufferInheritanceInfo&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentClear","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassContents","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceLost","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceLost","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowInUse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutOfMemory","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OomOrDeviceLost","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AllocationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaitFor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Aspects","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatBits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Swizzle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Properties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFeature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferFeature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaseFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg4Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba4Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra4Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R5g6b5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B5g6r5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R5g5b5a1Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B5g5r5a1Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A1r5g5b5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2r10g10b10Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2r10g10b10Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2r10g10b10Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2r10g10b10Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2r10g10b10Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2r10g10b10Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2b10g10r10Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2b10g10r10Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2b10g10r10Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2b10g10r10Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2b10g10r10Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2b10g10r10Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg16Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg16Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg16Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg16Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg16Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg16Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb16Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb16Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb16Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb16Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb16Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb16Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba16Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba16Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba16Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba16Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba16Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba16Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg32Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg32Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb32Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb32Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba32Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba32Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg64Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg64Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg64Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb64Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb64Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb64Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba64Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba64Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba64Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B10g11r11Ufloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for E5b9g9r9Ufloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for X8D24Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for S8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D16UnormS8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D24UnormS8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D32SfloatS8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc1RgbUnorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc1RgbSrgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc1RgbaUnorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc1RgbaSrgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc2Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc2Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc3Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc3Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc4Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc4Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc5Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc6hUfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc6hSfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc7Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bc7Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Etc2R8g8b8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Etc2R8g8b8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Etc2R8g8b8a1Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Etc2R8g8b8a1Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Etc2R8g8b8a8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Etc2R8g8b8a8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EacR11Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EacR11Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EacR11g11Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EacR11g11Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc4x4Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc4x4Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc5x4Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc5x4Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc5x5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc5x5Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc6x5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc6x5Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc6x6Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc6x6Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc8x5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc8x5Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc8x6Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc8x6Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc8x8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc8x8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x5Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x5Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x6Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x6Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x10Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc10x10Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc12x10Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc12x10Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc12x12Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Astc12x12Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Component","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChannelType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Offset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewCapabilities","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Usage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PackedColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Access","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Subresource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubresourceLayers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubresourceRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubresourceFootprint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tiling","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayerError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CubeFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WrapMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Layout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Properties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dependencies","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Requirements","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Segment","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for Barrier&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentOps","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Attachment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubpassDesc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for Subpass&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for ComputePipelineDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorRangeDesc","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, WI&gt; RefUnwindSafe for DescriptorSetWrite&lt;'a, B, WI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;WI: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for DescriptorSetCopy&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearRect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Viewport","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for GraphicsShaderSet&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BakedStates","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for GraphicsPipelineDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthBias","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rasterizer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Multisampling","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for Element&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexBufferDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttributeDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputAssemblerDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorBlendDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthTest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilFace","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Sided&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilTest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthStencilDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Face","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecializationConstant","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Specialization&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineStage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for EntryPoint&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCreationFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferDescriptorType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferDescriptorFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageDescriptorType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AllocationError","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for Descriptor&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::BufferView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PolygonMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogicOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexInputRate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Primitive","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Comparison","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Factor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stage","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; RefUnwindSafe for BasePipeline&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for State&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for Query&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueryPool: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ControlFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResultFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineStatistic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl&lt;Ic, Iw, Is&gt; RefUnwindSafe for Submission&lt;Ic, Iw, Is&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ic: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Is: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Iw: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFamilyId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for QueueGroup&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extent2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceCapabilities","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompositeAlphaMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Suboptimal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcquireError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitError","synthetic":true,"types":[]}];
implementors["gfx_memory"] = [{"text":"impl RefUnwindSafe for DedicatedAllocator","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for DedicatedBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for GeneralAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for GeneralBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeneralConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for LinearAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for LinearBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinearConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Heaps&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for MemoryBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for MappedRange&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, T, B&gt; RefUnwindSafe for Writer&lt;'a, 'b, T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Memory&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryUtilization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryHeapUtilization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryTypeUtilization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TotalMemoryUtilization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeapsError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryUsage","synthetic":true,"types":[]}];
implementors["glium"] = [{"text":"impl RefUnwindSafe for Blend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Depth","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for IndexBuffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for VertexBuffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinearSyncFence","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SyncFence","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlitTarget","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IncompatibleOpenGl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Profile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendingFunction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinearBlendingFactor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthTest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilTest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Api","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Handle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawUniformValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapBuffersError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReleaseBehavior","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GlutinBackend","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DisplayCreationError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Headless","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GlutinBackend","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Buffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BufferAny","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for BufferMutSlice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for BufferSlice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for BufferAnySlice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'b, D&gt; !RefUnwindSafe for Mapping&lt;'b, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'b, D&gt; !RefUnwindSafe for WriteMapping&lt;'b, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'b, D&gt; !RefUnwindSafe for ReadMapping&lt;'b, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Inserter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TimestampQuery","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DebugCallbackBehavior","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Severity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SamplesPassedQuery","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TimeElapsedQuery","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PrimitivesGeneratedQuery","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AnySamplesPassedQuery","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TransformFeedbackPrimitivesWrittenQuery","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stencil","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for DrawParameters&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ConditionalRendering&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthClamp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BackfaceCullingMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PolygonMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Smooth","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProvokingVertex","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SamplesQueryParam&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DefaultFramebuffer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RenderBuffer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RenderBufferAny","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthRenderBuffer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StencilRenderBuffer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthStencilRenderBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SimpleFrameBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for MultiOutputFrameBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EmptyFrameBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultFramebufferAttachment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidationError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ColorAttachment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for DepthAttachment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for StencilAttachment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for DepthStencilAttachment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for IndexBufferSlice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IndexBufferAny","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DrawCommandsNoIndicesBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawCommandNoIndices","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DrawCommandsIndicesBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawCommandIndices","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoIndices","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for IndicesSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrimitiveType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ComputeShader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComputeCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Uniform","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UniformBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransformFeedbackVarying","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransformFeedbackBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubroutineData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubroutineUniform","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SourceCode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Binary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutputPrimitives","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransformFeedbackMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderStage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProgramCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProgramChooserCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetBinaryError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ProgramCreationInput&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for UniformBuffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t, T&gt; RefUnwindSafe for Sampler&lt;'t, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerBehavior","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmptyUniforms","synthetic":true,"types":[]},{"text":"impl&lt;'n, T, R&gt; RefUnwindSafe for UniformsStorage&lt;'n, T, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerWrapFunction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MagnifySamplerFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinifySamplerFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthTextureComparison","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for UniformValue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UniformType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayoutMismatchError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VertexBufferAny","synthetic":true,"types":[]},{"text":"impl&lt;'b, T&gt; !RefUnwindSafe for VertexBufferSlice&lt;'b, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for TransformFeedbackSession&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmptyVertexAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmptyInstanceAttributes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for PerInstance&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttributeType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for VerticesSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TextureAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for TextureAnyMipmap&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for TextureAnyLayer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for TextureAnyLayerMipmap&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for TextureAnyImage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for RawImage1d&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for RawImage2d&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for RawImage3d&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClientFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UncompressedFloatFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UncompressedIntFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UncompressedUintFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompressedFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthStencilFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompressedSrgbFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SrgbFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dimensions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InternalFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InternalFormatType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetFormatError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CubeLayer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MipmapsOption","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompressedMipmapsOption","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureCreationError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ResidentTexture","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for TextureHandle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindlessTexturesNotSupportedError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for BufferTexture&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferTextureRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferTextureType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureBufferContentType","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for PixelBuffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Texture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for Texture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompressedTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SrgbTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompressedSrgbTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IntegralTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnsignedTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StencilTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthStencilTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Texture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for Texture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompressedTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SrgbTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompressedSrgbTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IntegralTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnsignedTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StencilTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthStencilTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Texture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for Texture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IntegralTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SrgbTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnsignedTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StencilTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthStencilTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Texture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for Texture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompressedTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SrgbTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompressedSrgbTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IntegralTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnsignedTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthStencilTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Texture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for Texture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for Texture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for Texture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompressedTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SrgbTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompressedSrgbTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IntegralTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnsignedTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StencilTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthStencilTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Texture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for Texture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for Texture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for Texture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompressedTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SrgbTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompressedSrgbTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IntegralTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnsignedTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StencilTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthStencilTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Texture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for Texture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for Texture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for Texture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SrgbTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IntegralTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnsignedTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StencilTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthStencilTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Cubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompressedCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SrgbCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompressedSrgbCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IntegralCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnsignedCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StencilCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthStencilCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompressedCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SrgbCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for SrgbCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompressedSrgbCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for CompressedSrgbCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IntegralCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for IntegralCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnsignedCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for UnsignedCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StencilCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for StencilCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DepthStencilCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !RefUnwindSafe for DepthStencilCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]}];
implementors["glutin"] = [{"text":"impl !RefUnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RawContext","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WindowedContext","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ContextBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PixelFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PixelFormatRequirements","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for GlAttributes&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ContextError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Api","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlProfile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Robustness","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReleaseBehavior","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawHandle","synthetic":true,"types":[]}];
implementors["glutin_egl_sys"] = [{"text":"impl RefUnwindSafe for FnPtr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Egl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EGLClientPixmapHI","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __eglMustCastToProperFunctionPointerType_fn","synthetic":true,"types":[]}];
implementors["glutin_glx_sys"] = [{"text":"impl RefUnwindSafe for FnPtr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Glx","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XVisualInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLXPbufferClobberEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLXBufferSwapComplete","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLXBufferClobberEventSGIX","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLXHyperpipeNetworkSGIX","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLXHyperpipeConfigSGIX","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLXPipeRect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLXPipeRectLimits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __GLsync","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _cl_context","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _cl_event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Visual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __GLXextFuncPtr_fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FnPtr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Glx","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XVisualInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLXPbufferClobberEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLXBufferSwapComplete","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLXBufferClobberEventSGIX","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLXHyperpipeNetworkSGIX","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLXHyperpipeConfigSGIX","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLXPipeRect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLXPipeRectLimits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __GLsync","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _cl_context","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _cl_event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Visual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __GLXextFuncPtr_fn","synthetic":true,"types":[]}];
implementors["graphics"] = [{"text":"impl RefUnwindSafe for DrawState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Blend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stencil","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Character&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Polygon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Line","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CircleArc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Border","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ellipse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Border","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Text","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Grid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GridCells","synthetic":true,"types":[]},{"text":"impl&lt;'a, F, T&gt; RefUnwindSafe for GlyphCache&lt;'a, F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TexturePacker&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["hibitset"] = [{"text":"impl RefUnwindSafe for AtomicBitSet","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for BitIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for DrainBitIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BitSetAll","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for BitSetAnd&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for BitSetNot&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for BitSetOr&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for BitSetXor&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BitSet","synthetic":true,"types":[]}];
implementors["input"] = [{"text":"impl RefUnwindSafe for AfterRenderArgs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CloseArgs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IdleArgs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonArgs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeArgs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderArgs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TouchArgs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UpdateArgs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Touch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Button","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Motion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HatState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileDrag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Input","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Loop","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ControllerButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ControllerHat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ControllerAxisArgs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModifierKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MouseButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventId","synthetic":true,"types":[]}];
implementors["interpolation"] = [{"text":"impl RefUnwindSafe for EaseFunction","synthetic":true,"types":[]}];
implementors["iovec"] = [{"text":"impl RefUnwindSafe for IoVec","synthetic":true,"types":[]}];
implementors["libloading"] = [{"text":"impl RefUnwindSafe for Library","synthetic":true,"types":[]},{"text":"impl&lt;'lib, T&gt; RefUnwindSafe for Symbol&lt;'lib, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Library","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Symbol&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["line_drawing"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Bresenham&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; RefUnwindSafe for Midpoint&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; RefUnwindSafe for XiaolinWu&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for WalkGrid&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Supercover&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Bresenham3d&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; RefUnwindSafe for WalkVoxels&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for BresenhamCircle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VoxelOrigin","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; RefUnwindSafe for Steps&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Octant","synthetic":true,"types":[]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K, V, S&gt; RefUnwindSafe for LinkedHashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; RefUnwindSafe for Entries&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Keys&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Values&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; RefUnwindSafe for OccupiedEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; RefUnwindSafe for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; RefUnwindSafe for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["memmap"] = [{"text":"impl RefUnwindSafe for MmapOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mmap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MmapMut","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl !RefUnwindSafe for Poll","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Registration","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SetReadiness","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PollOpt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ready","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Token","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Events","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for EventedFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixReady","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpListener","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UdpSocket","synthetic":true,"types":[]}];
implementors["mio_extras"] = [{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for SyncSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for SendError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for TrySendError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Timer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Timeout","synthetic":true,"types":[]}];
implementors["net2"] = [{"text":"impl !RefUnwindSafe for TcpBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UdpBuilder","synthetic":true,"types":[]}];
implementors["nix"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dir","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; RefUnwindSafe for Iter&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Errno","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SealFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FdFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpliceFFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FallocateFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FcntlArg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlockArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InterfaceAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InterfaceAddressIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModuleInitFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeleteModuleFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MsFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MntFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MQ_OFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FdFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MqAttr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InterfaceFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PollFd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PollFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpenptyResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ForkptyResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PtyMaster","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CloneFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CpuSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for AioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for LioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AioFsyncMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LioOpcode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LioMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AioCancelStat","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpollFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpollCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpollEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpollOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EfdFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemFdCreateFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MsFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MlockAllFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MmapAdvise","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Options","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuotaValidFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dqblk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuotaType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuotaFmt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RebootMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FdSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SigEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SaFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SigSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SigAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Signal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SigmaskHow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SigHandler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SigevNotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SfdFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalFd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinkAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NetlinkAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AlgAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SockFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MsgFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixCredentials","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpMembershipRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv6MembershipRequest","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for CmsgSpace&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RecvMsg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CmsgIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddressFamily","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SockAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InetAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SockType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SockProtocol","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ControlMessageOwned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ControlMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SockLevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shutdown","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReuseAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReusePort","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpNoDelay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Linger","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpAddMembership","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpDropMembership","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv6AddMembership","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv6DropMembership","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpMulticastTtl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpMulticastLoop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReceiveTimeout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SendTimeout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Broadcast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OobInline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeepAlive","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PeerCredentials","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpKeepIdle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RcvBuf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SndBuf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RcvBufForce","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SndBufForce","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SockType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcceptConn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OriginalDst","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReceiveTimestamp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpTransparent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mark","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PassCred","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpCongestion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv4PacketInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv6RecvPacketInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AlgSetAeadAuthSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for AlgSetKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FchmodatFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UtimensatFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FsFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Statvfs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SysInfo","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Termios","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutputFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ControlFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LocalFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaudRate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlushArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlowArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecialCharacterIndices","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeVal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RemoteIoVec","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IoVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UtsName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaitPidFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaitStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddWatchFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Inotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WatchDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Uid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccessFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ForkResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FchownatFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Whence","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathconfVar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SysconfVar","synthetic":true,"types":[]}];
implementors["num_bigint"] = [{"text":"impl RefUnwindSafe for ParseBigIntError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BigUint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BigInt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sign","synthetic":true,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Complex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for ParseComplexError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; RefUnwindSafe for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_iter"] = [{"text":"impl&lt;A&gt; RefUnwindSafe for Range&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for RangeInclusive&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for RangeStep&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for RangeStepInclusive&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for RangeFrom&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for RangeStepFrom&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseRatioError","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl RefUnwindSafe for ParseFloatError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FloatErrorKind","synthetic":true,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for OrderedFloat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for NotNan&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FloatIsNan","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for ParseNotNanError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ordermap"] = [{"text":"impl&lt;K, V, S&gt; RefUnwindSafe for OrderMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; RefUnwindSafe for OccupiedEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; RefUnwindSafe for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Keys&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Values&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for ValuesMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Drain&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; RefUnwindSafe for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; RefUnwindSafe for OrderSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; RefUnwindSafe for Difference&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; RefUnwindSafe for Intersection&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S1, S2&gt; RefUnwindSafe for SymmetricDifference&lt;'a, T, S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; RefUnwindSafe for Union&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["osmesa_sys"] = [{"text":"impl RefUnwindSafe for OsMesa","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for osmesa_context","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl RefUnwindSafe for Condvar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Once","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawMutex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawRwLock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawThreadId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl RefUnwindSafe for ParkToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnparkResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnparkToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpinWait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParkResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequeueOp","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl RefUnwindSafe for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["petgraph"] = [{"text":"impl RefUnwindSafe for Direction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Directed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Undirected","synthetic":true,"types":[]},{"text":"impl&lt;G, F&gt; RefUnwindSafe for NodeFiltered&lt;G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; RefUnwindSafe for NodeFilteredNeighbors&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; RefUnwindSafe for NodeFilteredNodes&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, I, F&gt; RefUnwindSafe for NodeFilteredEdgeReferences&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, I, F&gt; RefUnwindSafe for NodeFilteredEdges&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, F&gt; RefUnwindSafe for EdgeFiltered&lt;G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, F&gt; RefUnwindSafe for EdgeFilteredNeighbors&lt;'a, G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IntoEdges&gt;::Edges: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, I, F&gt; RefUnwindSafe for EdgeFilteredEdges&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; RefUnwindSafe for Reversed&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for ReversedEdgeReference&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for ReversedEdgeReferences&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Time","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; RefUnwindSafe for Dfs&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; RefUnwindSafe for DfsPostOrder&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; RefUnwindSafe for Bfs&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; RefUnwindSafe for Topo&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, C&gt; RefUnwindSafe for WalkerIter&lt;W, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; RefUnwindSafe for DfsEvent&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Control&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; RefUnwindSafe for FilterElements&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E&gt; RefUnwindSafe for Element&lt;N, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; RefUnwindSafe for DfsSpace&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; RefUnwindSafe for MinSpanningTree&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as Data&gt;::EdgeWeight: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as GraphBase&gt;::NodeId: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IntoNodeReferences&gt;::NodeReferences: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; RefUnwindSafe for Cycle&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NegativeCycle","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; RefUnwindSafe for Dominators&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N&gt; RefUnwindSafe for DominatorsIter&lt;'a, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ty&gt; RefUnwindSafe for GraphMap&lt;N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N&gt; RefUnwindSafe for Nodes&lt;'a, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ty&gt; RefUnwindSafe for Neighbors&lt;'a, N, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ty&gt; RefUnwindSafe for NeighborsDirected&lt;'a, N, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; RefUnwindSafe for Edges&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; RefUnwindSafe for AllEdges&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; RefUnwindSafe for AllEdgesMut&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'b, T&gt; RefUnwindSafe for Ptr&lt;'b, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; RefUnwindSafe for NodeIdentifiers&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; RefUnwindSafe for NodeReferences&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; RefUnwindSafe for NodeIndex&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; RefUnwindSafe for EdgeIndex&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, Ix&gt; RefUnwindSafe for Node&lt;N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, Ix&gt; RefUnwindSafe for Edge&lt;E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ty, Ix&gt; RefUnwindSafe for Graph&lt;N, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ty, Ix&gt; RefUnwindSafe for Externals&lt;'a, N, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; RefUnwindSafe for Neighbors&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; RefUnwindSafe for Edges&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ix&gt; RefUnwindSafe for NodeWeightsMut&lt;'a, N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; RefUnwindSafe for EdgeWeightsMut&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; RefUnwindSafe for WalkNeighbors&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; RefUnwindSafe for NodeIndices&lt;Ix&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; RefUnwindSafe for EdgeIndices&lt;Ix&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; RefUnwindSafe for EdgeReference&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ix&gt; RefUnwindSafe for NodeReferences&lt;'a, N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; RefUnwindSafe for EdgeReferences&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G&gt; RefUnwindSafe for Frozen&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ty, Ix&gt; RefUnwindSafe for StableGraph&lt;N, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ix&gt; RefUnwindSafe for NodeReferences&lt;'a, N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; RefUnwindSafe for EdgeReference&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; RefUnwindSafe for Edges&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; RefUnwindSafe for EdgeReferences&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; RefUnwindSafe for Neighbors&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; RefUnwindSafe for WalkNeighbors&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ix&gt; RefUnwindSafe for NodeIndices&lt;'a, N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; RefUnwindSafe for EdgeIndices&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G&gt; RefUnwindSafe for Dot&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; RefUnwindSafe for UnionFind&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ty, Ix&gt; RefUnwindSafe for Csr&lt;N, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EdgesNotSorted","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; RefUnwindSafe for Edges&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; RefUnwindSafe for EdgeReference&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; RefUnwindSafe for EdgeReferences&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Ix&gt; RefUnwindSafe for Neighbors&lt;'a, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; RefUnwindSafe for NodeIdentifiers&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl !RefUnwindSafe for TokenStream","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LexError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Punct","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Ident","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TokenTree","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Delimiter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Spacing","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IntoIter","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl RefUnwindSafe for Bernoulli","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Open01","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpenClosed01","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Binomial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cauchy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dirichlet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Beta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChiSquared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FisherF","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StudentT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Normal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StandardNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pareto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Poisson","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Triangular","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnitCircle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; RefUnwindSafe for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Standard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BernoulliError","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UniformDuration","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WeightedError","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntropyRng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StdRng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadRng","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; RefUnwindSafe for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StepRng","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; RefUnwindSafe for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexVecIntoIter","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl RefUnwindSafe for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OsRng","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; RefUnwindSafe for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; RefUnwindSafe for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["relevant"] = [{"text":"impl RefUnwindSafe for Relevant","synthetic":true,"types":[]}];
implementors["rendy_chain"] = [{"text":"impl RefUnwindSafe for Id","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Chain&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Link&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for LinkNode&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Chains","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unsynchronized","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Node","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for State&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Buffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for Family&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for Queue&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueId","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for Schedule&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for Submission&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubmissionId","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Barrier&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Guard","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for Signal&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, W&gt; RefUnwindSafe for SyncData&lt;S, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for Wait&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_command"] = [{"text":"impl RefUnwindSafe for DrawCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawIndexedCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DispatchCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, C&gt; RefUnwindSafe for EncoderCommon&lt;'a, B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for RenderPassEncoder&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for RenderPassInlineEncoder&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for RenderPassSecondaryEncoder&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, C, L&gt; RefUnwindSafe for Encoder&lt;'a, B, C, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrimaryLevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SecondaryLevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndividualReset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoIndividualReset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitialState","synthetic":true,"types":[]},{"text":"impl&lt;U, P&gt; RefUnwindSafe for RecordingState&lt;U, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;U, P&gt; RefUnwindSafe for ExecutableState&lt;U, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; RefUnwindSafe for PendingState&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidState","synthetic":true,"types":[]},{"text":"impl&lt;B, S, L, P&gt; RefUnwindSafe for Submit&lt;B, S, L, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OneShot","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for MultiShot&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SimultaneousUse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoSimultaneousUse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassContinue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutsideRenderPass","synthetic":true,"types":[]},{"text":"impl&lt;B, C, S, L, R&gt; RefUnwindSafe for CommandBuffer&lt;B, C, S, L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Transfer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Execute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Compute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Graphics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for General","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Queue&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, W, C, S&gt; RefUnwindSafe for Submission&lt;B, W, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FamilyId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueId","synthetic":true,"types":[]},{"text":"impl&lt;B, C&gt; RefUnwindSafe for Family&lt;B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Families&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FenceEpoch","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Fence&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, C, R&gt; RefUnwindSafe for CommandPool&lt;B, C, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_core"] = [{"text":"impl RefUnwindSafe for ParseBackendError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NotEnabled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Instance&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Instance: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Device&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnabledBackend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Backend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Layout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttrUuid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Normal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tangent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TexCoord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexFormat","synthetic":true,"types":[]},{"text":"impl&lt;N, I&gt; RefUnwindSafe for AttrGenIter&lt;N, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PosColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PosNorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PosColorNorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PosTex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PosNormTex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PosNormTangTex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Model","synthetic":true,"types":[]}];
implementors["rendy_descriptor"] = [{"text":"impl&lt;B&gt; RefUnwindSafe for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for DescriptorAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorRanges","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DescriptorRangesIter&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["rendy_factory"] = [{"text":"impl&lt;B&gt; RefUnwindSafe for Barriers&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for Blitter&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlitRegion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlitImageState","synthetic":true,"types":[]},{"text":"impl&lt;D, H, Q&gt; RefUnwindSafe for Config&lt;D, H, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OneGraphicsQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SavedQueueConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BasicHeapsConfigure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SavedHeapsConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BasicDevicesConfigure","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for Factory&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UploadError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageStateOrLayout","synthetic":true,"types":[]}];
implementors["rendy_frame"] = [{"text":"impl RefUnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompleteFrame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FramesRange","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Frames&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I, P&gt; RefUnwindSafe for InitialRef&lt;'a, T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I, P&gt; RefUnwindSafe for ReadyRef&lt;'a, T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, I, P&gt; RefUnwindSafe for Cirque&lt;T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, I, P&gt; RefUnwindSafe for DependentCirque&lt;T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I, P&gt; RefUnwindSafe for CirqueRef&lt;'a, T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_graph"] = [{"text":"impl RefUnwindSafe for BufferId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NodeId","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; !RefUnwindSafe for Graph&lt;B, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for GraphContext&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; !RefUnwindSafe for GraphBuilder&lt;B, T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferAccess","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferBarrier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NodeBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageAccess","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageBarrier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NodeImage","synthetic":true,"types":[]},{"text":"impl&lt;B, T:&nbsp;?Sized, N&gt; RefUnwindSafe for DescBuilder&lt;B, T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GraphBuildError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NodeBuildError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for PresentNode&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Semaphore: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Swapchain: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for PresentBuilder&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrepareResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pipeline","synthetic":true,"types":[]},{"text":"impl&lt;B, P&gt; RefUnwindSafe for SimpleRenderGroup&lt;B, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; RefUnwindSafe for SimpleRenderGroupDesc&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; !RefUnwindSafe for SubpassBuilder&lt;B, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; !RefUnwindSafe for RenderPassNodeBuilder&lt;B, T&gt;","synthetic":true,"types":[]}];
implementors["rendy_init"] = [{"text":"impl&lt;B&gt; !RefUnwindSafe for Rendy&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RendyAutoInitError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RendyInitError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnyRendy","synthetic":true,"types":[]}];
implementors["rendy_memory"] = [{"text":"impl RefUnwindSafe for DedicatedAllocator","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for DedicatedBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for DynamicAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for DynamicBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DynamicConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for LinearAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for LinearBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinearConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Heaps&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeapsConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for MemoryBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Coherent","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, C&gt; RefUnwindSafe for MappedRange&lt;'a, B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaybeCoherent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NonCoherent","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Memory&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Data","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dynamic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Upload","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Download","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryUtilization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryHeapUtilization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryTypeUtilization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TotalMemoryUtilization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeapsError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryUsageValue","synthetic":true,"types":[]}];
implementors["rendy_mesh"] = [{"text":"impl RefUnwindSafe for VertexBufferLayout","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for IndexBuffer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MeshBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Mesh&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Incompatible","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Indices&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["rendy_resource"] = [{"text":"impl RefUnwindSafe for BufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Buffer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Escape&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Terminal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Handle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Image&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageViewInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for ImageView&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for ResourceTracker&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for SamplerCache&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Sampler&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for DescriptorSetLayout&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for CreationError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_shader"] = [{"text":"impl RefUnwindSafe for SpirvShader","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for ShaderSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecConstantSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for ShaderStorage&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderError","synthetic":true,"types":[]}];
implementors["rendy_texture"] = [{"text":"impl&lt;B&gt; RefUnwindSafe for Texture&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TextureBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MipLevels","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuildError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Inorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Int","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Iscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Float","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _64","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgba","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bgra","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abgr","synthetic":true,"types":[]},{"text":"impl&lt;C, S, T&gt; RefUnwindSafe for Pixel&lt;C, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as PixelRepr&lt;S, T&gt;&gt;::Repr: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_wsi"] = [{"text":"impl&lt;B&gt; RefUnwindSafe for Surface&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Target&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Swapchain: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; RefUnwindSafe for NextImages&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Swapchain: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainError","synthetic":true,"types":[]}];
implementors["rustc_hash"] = [{"text":"impl RefUnwindSafe for FxHasher","synthetic":true,"types":[]}];
implementors["rusttype"] = [{"text":"impl RefUnwindSafe for Curve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Line","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; RefUnwindSafe for Point&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; RefUnwindSafe for Rect&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; RefUnwindSafe for Vector&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FontCollection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Font&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Codepoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlyphId","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Glyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SharedGlyphData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HMetrics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ScaledGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PositionedGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scale","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IntoFontsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, I&gt; RefUnwindSafe for GlyphIter&lt;'a, 'b, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; RefUnwindSafe for LayoutIter&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Contour","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SharedBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Segment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'font&gt; RefUnwindSafe for Cache&lt;'font&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CacheBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CacheReadErr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CacheWriteErr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CachedBy","synthetic":true,"types":[]}];
implementors["same_file"] = [{"text":"impl RefUnwindSafe for Handle","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl RefUnwindSafe for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; RefUnwindSafe for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; RefUnwindSafe for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; RefUnwindSafe for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; RefUnwindSafe for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; RefUnwindSafe for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; RefUnwindSafe for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; RefUnwindSafe for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;R&gt; RefUnwindSafe for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; RefUnwindSafe for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; RefUnwindSafe for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Number","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Category","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CharEscape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Serializer","synthetic":true,"types":[]}];
implementors["shaderc"] = [{"text":"impl RefUnwindSafe for Compiler","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for CompileOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResolvedInclude","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompilationArtifact","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TargetEnv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SourceLanguage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlslProfile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OptimizationLevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Limit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IncludeType","synthetic":true,"types":[]}];
implementors["shaderc_sys"] = [{"text":"impl RefUnwindSafe for shaderc_include_result","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShadercCompiler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShadercCompileOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShadercCompilationResult","synthetic":true,"types":[]}];
implementors["shared_library"] = [{"text":"impl RefUnwindSafe for LoadingError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DynamicLibrary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecialHandles","synthetic":true,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Slab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for VacantEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["smithay_client_toolkit"] = [{"text":"impl !RefUnwindSafe for Environment","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Shell","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataDevice","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataOffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadPipe","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WritePipe","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for DndEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataSourceEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModifiersState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RMLVO","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyRepeatEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyRepeatKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutputInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutputMgr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ThemeManager","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ThemedPointer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AutoThemer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AutoPointer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DoubleMemPool","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MemPool","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BasicFrame","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConceptFrame","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !RefUnwindSafe for Window&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FrameRequest","synthetic":true,"types":[]}];
implementors["smithay_clipboard"] = [{"text":"impl !RefUnwindSafe for ThreadedClipboard","synthetic":true,"types":[]}];
implementors["stb_truetype"] = [{"text":"impl&lt;Data&gt; RefUnwindSafe for FontInfo&lt;Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HMetrics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a, Data&gt; RefUnwindSafe for FontNameIter&lt;'a, Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlatformId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnicodeEid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MicrosoftEid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MacEid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MicrosoftLang","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MacLang","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlatformEncodingLanguageId","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl !RefUnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MetaList","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MetaNameValue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FieldsNamed","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Variant","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VisCrate","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VisPublic","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VisRestricted","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Arm","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FieldValue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Label","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MethodTurbofish","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprArray","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprAssign","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprAsync","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprAwait","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprBinary","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprBlock","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprBox","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprBreak","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprCall","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprCast","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprClosure","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprContinue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprField","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprForLoop","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprGroup","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprIf","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprIndex","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprLet","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprLit","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprLoop","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprMacro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprMatch","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprParen","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprPath","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprRange","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprReference","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprRepeat","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprReturn","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprStruct","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprTry","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprTuple","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprUnary","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprWhile","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprYield","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Index","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConstParam","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Generics","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LifetimeDef","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PredicateEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PredicateType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TraitBound","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeParam","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ForeignItemFn","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ForeignItemMacro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ForeignItemStatic","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ForeignItemType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ImplItemConst","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ImplItemMacro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ImplItemMethod","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ImplItemType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemConst","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemEnum","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemExternCrate","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemFn","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemForeignMod","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemImpl","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemMacro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemMacro2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemMod","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemStatic","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemStruct","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemTrait","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemTraitAlias","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemUnion","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemUse","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Receiver","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Signature","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TraitItemConst","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TraitItemMacro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TraitItemMethod","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TraitItemType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UseGlob","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UseGroup","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UseName","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UsePath","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UseRename","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for File","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Lifetime","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitBool","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitByte","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitByteStr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitChar","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitFloat","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitInt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitStr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataEnum","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataStruct","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataUnion","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DeriveInput","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Local","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Abi","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BareFnArg","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeArray","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeBareFn","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeGroup","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeInfer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeMacro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeNever","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeParen","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypePath","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypePtr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeReference","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeSlice","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeTuple","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Variadic","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FieldPat","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatBox","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatIdent","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatLit","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatMacro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatOr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatPath","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatRange","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatReference","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatRest","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatSlice","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatStruct","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatTuple","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatWild","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Binding","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Constraint","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Path","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PathSegment","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for QSelf","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AttrStyle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Meta","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for NestedMeta","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Fields","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Visibility","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GenericMethodArgument","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RangeLimits","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Expr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Member","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GenericParam","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeParamBound","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WherePredicate","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FnArg","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ForeignItem","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ImplItem","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Item","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TraitItem","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UseTree","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Lit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StrStyle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Data","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BinOp","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnOp","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Stmt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReturnType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Pat","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GenericArgument","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PathArguments","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Underscore","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Abstract","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for As","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Async","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Auto","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Await","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Become","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Box","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Break","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Const","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Continue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Crate","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Default","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Do","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dyn","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Else","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Enum","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Extern","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Final","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Fn","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for For","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for If","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Impl","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for In","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Let","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Loop","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Match","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Mod","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Move","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Mut","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Override","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Priv","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Pub","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Ref","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Return","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SelfType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SelfValue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Static","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Struct","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Super","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Trait","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Try","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Typeof","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Union","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Unsafe","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Unsized","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Use","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Virtual","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Where","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for While","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Yield","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Add","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AddEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for And","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AndAnd","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AndEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for At","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Bang","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Caret","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CaretEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Colon","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Colon2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Comma","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Div","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DivEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dollar","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dot","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dot2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dot3","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DotDotEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Eq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EqEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Ge","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Gt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Le","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Lt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MulEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Ne","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Or","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OrEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OrOr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Pound","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Question","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RArrow","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LArrow","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Rem","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RemEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FatArrow","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Semi","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Shl","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ShlEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Shr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ShrEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Star","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Sub","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SubEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Tilde","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Brace","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Bracket","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Paren","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; RefUnwindSafe for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; RefUnwindSafe for PairsMut&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; !RefUnwindSafe for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Nothing","synthetic":true,"types":[]}];
implementors["synstructure"] = [{"text":"impl&lt;'a&gt; !RefUnwindSafe for BindingInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for VariantAst&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for VariantInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Structure&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddBounds","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindStyle","synthetic":true,"types":[]}];
implementors["texture"] = [{"text":"impl RefUnwindSafe for TextureSettings","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Wrap","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl RefUnwindSafe for Duration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Timespec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PreciseTime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SteadyTime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TmFmt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseError","synthetic":true,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; RefUnwindSafe for VecMap&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for VacantEntry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for OccupiedEntry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Iter&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for IterMut&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Keys&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Values&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for ValuesMut&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for IntoIter&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Drain&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Entry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["viewport"] = [{"text":"impl RefUnwindSafe for Viewport","synthetic":true,"types":[]}];
implementors["vk_sys"] = [{"text":"impl RefUnwindSafe for ApplicationInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AllocationCallbacks","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFeatures","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extent3D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFormatProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceLimits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSparseProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFamilyProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryHeap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMemoryProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceQueueCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtensionProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayerProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubmitInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MappedMemoryRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryRequirements","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageFormatProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageMemoryRequirements","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMemoryBind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseBufferMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageOpaqueMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageSubresource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Offset3D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageMemoryBind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindSparseInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FenceCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferViewCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferDeviceAddressInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubresourceLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComponentMapping","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageSubresourceRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageViewCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderModuleCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCacheCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecializationMapEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecializationInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineShaderStageCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexInputBindingDescription","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexInputAttributeDescription","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineVertexInputStateCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineInputAssemblyStateCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineTessellationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Viewport","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Offset2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extent2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rect2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineViewportStateCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineRasterizationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineMultisampleStateCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilOpState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineDepthStencilStateCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineColorBlendAttachmentState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineColorBlendStateCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineDynamicStateCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GraphicsPipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComputePipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PushConstantRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorSetAllocateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorImageInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorBufferInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteDescriptorSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyDescriptorSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FramebufferCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentDescription","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentReference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDescription","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassDependency","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferAllocateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferInheritanceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferCopy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageSubresourceLayers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageCopy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageBlit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearDepthStencilValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearAttachment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearRect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageResolve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryBarrier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferMemoryBarrier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageMemoryBarrier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DispatchIndirectCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawIndexedIndirectCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawIndirectCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceFormatKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentInfoKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPropertiesKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModeParametersKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModePropertiesKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayModeCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlaneCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlanePropertiesKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplaySurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XlibSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XcbSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaylandSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndroidSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Win32SurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MacOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MVKDeviceConfiguration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MVKPhysicalDeviceMetalFeatures","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MVKSwapchainPerformance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceFeatures2KHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceProperties2KHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSubgroupProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatProperties2KHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFormatProperties2KHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceImageFormatInfo2KHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueFamilyProperties2KHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceMemoryProperties2KHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseImageFormatProperties2KHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceSparseImageFormatInfo2KHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceBufferAddressFeaturesEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViSurfaceCreateInfoNN","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevicePushDescriptorPropertiesKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorUpdateTemplateEntryKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorUpdateTemplateCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryDedicatedRequirementsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryDedicatedAllocateInfoKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferMemoryRequirementsInfo2KHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageMemoryRequirementsInfo2KHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryRequirements2KHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RectLayerKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentRegionKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentRegionsKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessengerCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsMessengerCallbackDataEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsLabelEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDevice16BitStorageFeaturesKHR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugUtilsObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceFullScreenExclusiveInfoEXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Static","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryPoints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstancePointers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DevicePointers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearColorValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearValue","synthetic":true,"types":[]}];
implementors["void"] = [{"text":"impl RefUnwindSafe for Void","synthetic":true,"types":[]}];
implementors["vulkano"] = [{"text":"impl RefUnwindSafe for OomError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Features","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, B&gt; RefUnwindSafe for BufferSlice&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferInner&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferUsage","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, A&gt; RefUnwindSafe for CpuAccessibleBuffer&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; RefUnwindSafe for ReadLock&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; RefUnwindSafe for WriteLock&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadLockError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteLockError","synthetic":true,"types":[]},{"text":"impl&lt;T, A&gt; RefUnwindSafe for CpuBufferPool&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, A&gt; RefUnwindSafe for CpuBufferPoolChunk&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as MemoryPool&gt;::Alloc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, A&gt; RefUnwindSafe for CpuBufferPoolSubbuffer&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as MemoryPool&gt;::Alloc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, A&gt; RefUnwindSafe for DeviceLocalBuffer&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, A&gt; RefUnwindSafe for ImmutableBuffer&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, A&gt; RefUnwindSafe for ImmutableBufferInitialization&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseLevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferCreationError","synthetic":true,"types":[]},{"text":"impl&lt;F, B&gt; RefUnwindSafe for BufferView&lt;F, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferViewCreationError","synthetic":true,"types":[]},{"text":"impl&lt;P&nbsp;=&nbsp;StandardCommandPoolAlloc&gt; !RefUnwindSafe for AutoCommandBuffer&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;P&nbsp;=&nbsp;StandardCommandPoolBuilder&gt; !RefUnwindSafe for AutoCommandBufferBuilder&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateCacher","synthetic":true,"types":[]},{"text":"impl&lt;F, Cb&gt; RefUnwindSafe for CommandBufferExecFuture&lt;F, Cb&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Cb: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawIndirectCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawIndexedIndirectCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DispatchIndirectCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DynamicState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AutoCommandBufferBuilderContextError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BeginRenderPassError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlitImageError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuildError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearColorImageError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyBufferError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyBufferImageError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyImageError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DispatchError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawIndexedError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawIndexedIndirectError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawIndirectError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExecuteCommandsError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FillBufferError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UpdateBufferError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateCacherOutcome","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferExecError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeCommandPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeCommandPoolAlloc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeCommandPoolAllocIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandPoolTrimError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StandardCommandPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StandardCommandPoolBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StandardCommandPoolAlloc","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubmitBindSparseBatchBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubmitBindSparseBufferBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubmitBindSparseBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubmitBindSparseImageBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubmitBindSparseImageOpaqueBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubmitPresentBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubmitCommandBufferBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubmitSemaphoresWaitBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubmitBindSparseError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubmitPresentError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubmitCommandBufferError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubmitAnyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; !RefUnwindSafe for SyncCommandBuffer&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; RefUnwindSafe for SyncCommandBufferBuilder&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'b, P&gt; !RefUnwindSafe for SyncCommandBufferBuilderBindDescriptorSets&lt;'b, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; !RefUnwindSafe for SyncCommandBufferBuilderBindVertexBuffer&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; !RefUnwindSafe for SyncCommandBufferBuilderExecuteCommands&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SyncCommandBufferBuilderError","synthetic":true,"types":[]},{"text":"impl&lt;R, F&gt; RefUnwindSafe for KindSecondaryRenderPass&lt;R, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; RefUnwindSafe for UnsafeCommandBufferBuilder&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeCommandBufferBuilderBindVertexBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeCommandBufferBuilderExecuteCommands","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeCommandBufferBuilderImageAspect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeCommandBufferBuilderColorImageClear","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeCommandBufferBuilderBufferImageCopy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeCommandBufferBuilderImageCopy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeCommandBufferBuilderImageBlit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeCommandBufferBuilderPipelineBarrier","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; RefUnwindSafe for UnsafeCommandBuffer&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, F&gt; RefUnwindSafe for Kind&lt;R, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KindOcclusionQuery","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckCopyBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckIndexBuffer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CheckVertexBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckBlitImageError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckClearColorImageError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckCopyBufferError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckCopyImageError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckCopyBufferImageError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckCopyBufferImageTy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckDescriptorSetsValidityError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckDispatchError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckDynamicStateValidityError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckFillBufferError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckIndexBufferError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckPushConstantsValidityError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckUpdateBufferError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckVertexBufferError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorImageDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorBufferDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderStages","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorDescTy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorImageDescArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorImageDescDimensions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorDescSupersetError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderStagesSupersetError","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; RefUnwindSafe for FixedSizeDescriptorSet&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; RefUnwindSafe for FixedSizeDescriptorSetBuilder&lt;'a, L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; RefUnwindSafe for FixedSizeDescriptorSetBuilderArray&lt;'a, L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; RefUnwindSafe for FixedSizeDescriptorSetsPool&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R, P&gt; RefUnwindSafe for PersistentDescriptorSet&lt;L, R, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for PersistentDescriptorSetBuf&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for PersistentDescriptorSetBufView&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; RefUnwindSafe for PersistentDescriptorSetBuilder&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; RefUnwindSafe for PersistentDescriptorSetBuilderArray&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for PersistentDescriptorSetImg&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PersistentDescriptorSetSampler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StdDescriptorPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StdDescriptorPoolAlloc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorWrite","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorsCount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeDescriptorPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeDescriptorPoolAllocIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeDescriptorSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeDescriptorSetLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PersistentDescriptorSetBuildError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PersistentDescriptorSetError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorPoolAllocError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmptyPipelineDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RuntimePipelineDesc","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; RefUnwindSafe for PipelineLayout&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PipelineLayoutSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineLayoutDescPcRange","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for PipelineLayoutDescUnion&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineLayoutLimitsError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RuntimePipelineDescError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineLayoutCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineLayoutNotSupersetError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceExtensions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawDeviceExtensions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueuesIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Queue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IncompatiblePixelsType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R4G4UnormPack8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R4G4B4A4UnormPack16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B4G4R4A4UnormPack16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R5G6B5UnormPack16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B5G6R5UnormPack16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R5G5B5A1UnormPack16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B5G5R5A1UnormPack16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A1R5G5B5UnormPack16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8B8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8B8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8B8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8B8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8B8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8B8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8B8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8G8R8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8G8R8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8G8R8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8G8R8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8G8R8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8G8R8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8G8R8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8B8A8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8B8A8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8B8A8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8B8A8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8B8A8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8B8A8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R8G8B8A8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8G8R8A8Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8G8R8A8Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8G8R8A8Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8G8R8A8Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8G8R8A8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8G8R8A8Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B8G8R8A8Srgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A8B8G8R8UnormPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A8B8G8R8SnormPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A8B8G8R8UscaledPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A8B8G8R8SscaledPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A8B8G8R8UintPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A8B8G8R8SintPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A8B8G8R8SrgbPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2R10G10B10UnormPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2R10G10B10SnormPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2R10G10B10UscaledPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2R10G10B10SscaledPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2R10G10B10UintPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2R10G10B10SintPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2B10G10R10UnormPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2B10G10R10SnormPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2B10G10R10UscaledPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2B10G10R10SscaledPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2B10G10R10UintPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for A2B10G10R10SintPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16B16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16B16Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16B16Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16B16Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16B16Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16B16Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16B16Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16B16A16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16B16A16Snorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16B16A16Uscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16B16A16Sscaled","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16B16A16Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16B16A16Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R16G16B16A16Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32G32Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32G32Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32G32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32G32B32Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32G32B32Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32G32B32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32G32B32A32Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32G32B32A32Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R32G32B32A32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64G64Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64G64Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64G64Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64G64B64Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64G64B64Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64G64B64Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64G64B64A64Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64G64B64A64Sint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for R64G64B64A64Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for B10G11R11UfloatPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for E5B9G9R9UfloatPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D16Unorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for X8_D24UnormPack32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D32Sfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for S8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D16Unorm_S8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D24Unorm_S8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for D32Sfloat_S8Uint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC1_RGBUnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC1_RGBSrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC1_RGBAUnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC1_RGBASrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC2UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC2SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC3UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC3SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC4UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC4SnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC5UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC5SnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC6HUfloatBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC6HSfloatBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC7UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BC7SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ETC2_R8G8B8UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ETC2_R8G8B8SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ETC2_R8G8B8A1UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ETC2_R8G8B8A1SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ETC2_R8G8B8A8UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ETC2_R8G8B8A8SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EAC_R11UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EAC_R11SnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EAC_R11G11UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EAC_R11G11SnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_4x4UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_4x4SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_5x4UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_5x4SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_5x5UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_5x5SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_6x5UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_6x5SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_6x6UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_6x6SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_8x5UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_8x5SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_8x6UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_8x6SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_8x8UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_8x8SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_10x5UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_10x5SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_10x6UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_10x6SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_10x8UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_10x8SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_10x10UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_10x10SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_12x10UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_12x10SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_12x12UnormBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ASTC_12x12SrgbBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatTy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClearValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentDescription","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PassDependencyDescription","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PassDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for RenderPassDescAttachments&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for RenderPassDescDependencies&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for RenderPassDescSubpasses&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmptySinglePassRenderPassDesc","synthetic":true,"types":[]},{"text":"impl&lt;Rp, A&gt; RefUnwindSafe for Framebuffer&lt;Rp, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rp: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Rp, A&gt; RefUnwindSafe for FramebufferBuilder&lt;Rp, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rp: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FramebufferSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; RefUnwindSafe for RenderPass&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RenderPassSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; RefUnwindSafe for Subpass&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IncompatibleRenderPassAttachmentError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StoreOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FramebufferCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPassCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpassContents","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; RefUnwindSafe for StorageImage&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as MemoryPool&gt;::Alloc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageUsage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Swizzle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MipmapsCount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComponentSwizzle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dimensions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageDimensions","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; RefUnwindSafe for AttachmentImage&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; RefUnwindSafe for ImmutableImage&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; RefUnwindSafe for ImmutableImageInitialization&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for SwapchainImage&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinearLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeImageView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageCreationError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageInner&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for ImageAccessFromUndefinedLayout&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceExtensions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawInstanceExtensions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ApplicationInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryHeap&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryHeapsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryType&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MemoryTypesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PhysicalDevicesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueueFamiliesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueueFamily&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayerProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayersIterator","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Limits&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstanceCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalDeviceType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayersListError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DebugCallback","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Message&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageSeverity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugCallbackCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DynamicLibraryLoader","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; RefUnwindSafe for FunctionPointers&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadingError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; RefUnwindSafe for CpuAccess&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceMemory","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MappedDeviceMemory","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryRequirements","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceMemoryAllocError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DedicatedAlloc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StdHostVisibleMemoryTypePool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StdHostVisibleMemoryTypePoolAlloc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StdNonHostVisibleMemoryTypePool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StdNonHostVisibleMemoryTypePoolAlloc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StdMemoryPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StdMemoryPoolAlloc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AllocFromRequirementsFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MappingRequirement","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AllocLayout","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for PotentialDedicatedAllocation&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Pl&gt; RefUnwindSafe for ComputePipeline&lt;Pl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pl: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ComputePipelineSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;VertexDefinition, Layout, RenderP&gt; RefUnwindSafe for GraphicsPipeline&lt;VertexDefinition, Layout, RenderP&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Layout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;RenderP: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;VertexDefinition: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Vdef, Vs, Vss, Tcs, Tcss, Tes, Tess, Gs, Gss, Fs, Fss, Rp&gt; RefUnwindSafe for GraphicsPipelineBuilder&lt;Vdef, Vs, Vss, Tcs, Tcss, Tes, Tess, Gs, Gss, Fs, Fss, Rp&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fs: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fss: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Gs: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Gss: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rp: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Tcs: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Tcss: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Tes: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Tess: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vdef: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vs: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vss: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GraphicsPipelineSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComputePipelineCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GraphicsPipelineCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Blend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentBlend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttachmentsBlend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogicOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendFactor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineCache","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthStencil","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stencil","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DynamicStencilValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilFaceFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthBounds","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Compare","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputAssembly","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Multisample","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rasterization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthBias","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthBiasControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CullMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PolygonMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderModule","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, I, O, L&gt; RefUnwindSafe for GraphicsEntryPoint&lt;'a, S, I, O, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, L&gt; RefUnwindSafe for ComputeEntryPoint&lt;'a, S, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderInterfaceDefEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmptyShaderInterfaceDef","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecializationMapEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GraphicsShaderType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryShaderExecutionMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmptyEntryPointDummy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderInterfaceMismatchError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferlessDefinition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferlessVertices","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttributeInfo","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SingleInstanceBufferDefinition&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; RefUnwindSafe for OneVertexOneInstanceDefinition&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SingleBufferDefinition&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; RefUnwindSafe for TwoBuffersDefinition&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexMemberInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IncompatibleVertexDefinitionError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputRate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexMemberTy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Viewport","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scissor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewportsState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsafeQueryPool","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for UnsafeQuery&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for UnsafeQueriesRange&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPipelineStatisticFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OcclusionQueriesPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPoolCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sampler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MipmapMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerAddressMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnnormalizedSamplerAddressMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorderColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capabilities","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SupportedCompositeAlpha","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SupportedCompositeAlphaIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SupportedPresentModes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SupportedPresentModesIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SupportedSurfaceTransforms","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SupportedSurfaceTransformsIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentRegion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RectangleLayer","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for Surface&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcquiredImage","synthetic":true,"types":[]},{"text":"impl&lt;P, W&gt; RefUnwindSafe for PresentFuture&lt;P, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for Swapchain&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for SwapchainAcquireFuture&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorSpace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompositeAlpha","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceTransform","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CapabilitiesError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcquireError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapchainCreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayPlane","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; RefUnwindSafe for Fence&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for FenceSignalFuture&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for JoinFuture&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NowFuture","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for SemaphoreSignalFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccessFlagBits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineStages","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; RefUnwindSafe for Semaphore&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FenceWaitError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccessCheckError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccessError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlushError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SharingMode","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Sharing&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instance","synthetic":false,"types":[]}];
implementors["walkdir"] = [{"text":"impl RefUnwindSafe for DirEntry","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WalkDir","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; RefUnwindSafe for FilterEntry&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["wayland_client"] = [{"text":"impl !RefUnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtocolError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EventQueue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for QueueToken","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReadEventsGuard","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GlobalManager","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for NewProxy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !RefUnwindSafe for Proxy&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AnonymousObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnectError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlobalError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlobalEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CursorTheme","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for CursorImageBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WlEglSurface","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for BlockingMsgIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlDisplay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlRegistry","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlCallback","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlCompositor","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlShmPool","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlShm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlDataOffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlDataSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlDataDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DndAction","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlDataDeviceManager","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlShell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Resize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Transient","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlShellSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FullscreenMethod","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlSeat","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlPointer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Axis","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AxisSource","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlKeyboard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeymapFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlTouch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlOutput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Subpixel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Transform","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlRegion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlSubcompositor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WlSubsurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]}];
implementors["wayland_commons"] = [{"text":"impl RefUnwindSafe for AnonymousObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoMessage","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; RefUnwindSafe for Object&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; RefUnwindSafe for ObjectMap&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Socket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferedSocket","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UserData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UserDataMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ArgumentType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Argument","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageWriteError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageParseError","synthetic":true,"types":[]}];
implementors["wayland_protocols"] = [{"text":"impl !RefUnwindSafe for ZwpFullscreenShellV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentMethod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpFullscreenShellModeFeedbackV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpIdleInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpIdleInhibitorV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpInputMethodContextV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpInputMethodV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpInputPanelV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpInputPanelSurfaceV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpInputTimestampsManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpInputTimestampsV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpKeyboardShortcutsInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpKeyboardShortcutsInhibitorV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpLinuxDmabufV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpLinuxBufferParamsV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpLinuxExplicitSynchronizationV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpLinuxSurfaceSynchronizationV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpLinuxBufferReleaseV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPointerConstraintsV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lifetime","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpLockedPointerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpConfinedPointerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPointerGesturesV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPointerGestureSwipeV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPointerGesturePinchV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPrimarySelectionDeviceManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPrimarySelectionDeviceV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPrimarySelectionOfferV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpPrimarySelectionSourceV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpRelativePointerManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpRelativePointerV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletSeatV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletToolV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletManagerV2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletSeatV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletToolV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletPadRingV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletPadStripV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletPadGroupV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTabletPadV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTextInputV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentHint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentPurpose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PreeditStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextDirection","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTextInputManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentHint","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTextInputV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChangeCause","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentPurpose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpTextInputManagerV3","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgDecorationManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgToplevelDecorationV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgExporterV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgImporterV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgExportedV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgImportedV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgExporterV2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgImporterV2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgExportedV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgImportedV2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgOutputManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgOutputV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgShell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeEdge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgPopup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgShellV6","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gravity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgPositionerV6","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgSurfaceV6","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgToplevelV6","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeEdge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZxdgPopupV6","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpXwaylandKeyboardGrabManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwpXwaylandKeyboardGrabV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GtkPrimarySelectionDeviceManager","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GtkPrimarySelectionDevice","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GtkPrimarySelectionOffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GtkPrimarySelectionSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrDataControlManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrDataControlDeviceV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrDataControlSourceV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrDataControlOfferV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrExportDmabufManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrExportDmabufFrameV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CancelReason","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrForeignToplevelManagerV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrForeignToplevelHandleV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrGammaControlManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrGammaControlV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrInputInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrInputInhibitorV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrLayerShellV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Layer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrLayerSurfaceV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrScreencopyManagerV1","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ZwlrScreencopyFrameV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WpPresentation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WpPresentationFeedback","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgWmBase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgPositioner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gravity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgToplevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeEdge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for XdgPopup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WpViewporter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WpViewport","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]}];
implementors["wayland_sys"] = [{"text":"impl RefUnwindSafe for wl_message","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_interface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_list","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_array","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_argument","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaylandClient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WAYLAND_CLIENT_OPTION","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WAYLAND_CLIENT_HANDLE","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_proxy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_display","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_event_queue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaylandEgl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WAYLAND_EGL_OPTION","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WAYLAND_EGL_HANDLE","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_egl_window","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_cursor_image","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_cursor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaylandCursor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WAYLAND_CURSOR_OPTION","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WAYLAND_CURSOR_HANDLE","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for wl_cursor_theme","synthetic":true,"types":[]}];
implementors["wgpu"] = [{"text":"impl RefUnwindSafe for Adapter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RequestAdapterOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Buffer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Texture","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TextureView","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Sampler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SwapChain","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BindGroupLayout","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BindGroup","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ShaderModule","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PipelineLayout","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RenderPipeline","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ComputePipeline","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CommandBuffer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CommandEncoder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for RenderPass&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ComputePass&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Queue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Binding&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindGroupLayoutEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindGroupLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for BindGroupDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for PipelineLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ProgrammableStageDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VertexStateDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VertexBufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for RenderPipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ComputePipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !RefUnwindSafe for RenderPassDescriptor&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CommandEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TextureDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SwapChainOutput","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for BufferCopyView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for TextureCopyView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for CreateBufferMapped&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferAsyncErr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BufferReadMapping","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BufferWriteMapping","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeOut","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Maintain","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for BindingResource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindingType","synthetic":true,"types":[]}];
implementors["wgpu_core"] = [{"text":"impl RefUnwindSafe for RefCount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for U32Array","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindGroupLayoutEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindGroupLayoutDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for BindGroupLayout&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PipelineLayoutDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for PipelineLayout&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BufferBinding","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BindGroupEntry","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BindGroupDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for BindGroup&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindingType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BindingResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComputePassDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for RenderPassDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IndexState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexBufferState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexState","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BufferCopyView","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TextureCopyView","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RawPass","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for RenderBundle&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for CommandBuffer&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for Device&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IdentityManager","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; RefUnwindSafe for Storage&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Token&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IdentityManagerFactory","synthetic":true,"types":[]},{"text":"impl&lt;T, I, F&gt; !RefUnwindSafe for Registry&lt;T, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B, F&gt; !RefUnwindSafe for Hub&lt;B, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !RefUnwindSafe for Hubs&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; !RefUnwindSafe for Global&lt;G&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Root","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Id&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequestAdapterOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdapterInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceType","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; RefUnwindSafe for AdapterInputs&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexBufferLayoutDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexStateDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderModuleDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for ShaderModule&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ProgrammableStageDescriptor","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ComputePipelineDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for ComputePipeline&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RenderPipelineDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipelineFlags","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for RenderPipeline&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferPendingMapping","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for Buffer&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for Texture&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for TextureView&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for Sampler&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferMapAsyncStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferMapState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferMapOperation","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for SwapChain&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SwapChainOutput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapChainGetNextTextureError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureState","synthetic":true,"types":[]},{"text":"impl&lt;U&gt; RefUnwindSafe for Unit&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for PendingTransition&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ResourceState&gt;::Id: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ResourceState&gt;::Selector: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ResourceState&gt;::Usage: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for ResourceTracker&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ResourceState&gt;::Id: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ResourceState&gt;::Selector: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ResourceState&gt;::Usage: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TrackerSet","synthetic":true,"types":[]}];
implementors["wgpu_types"] = [{"text":"impl RefUnwindSafe for BackendBit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extensions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Limits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderStage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorStateDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RasterizationStateDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorWrite","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthStencilStateDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilStateFaceDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexAttributeDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferUsage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandEncoderDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureUsage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwapChainDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for RenderPassColorAttachmentDescriptorBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for RenderPassDepthStencilAttachmentDescriptorBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Origin3d","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extent3d","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureViewDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplerDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBufferDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Backend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PowerPreference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureViewDimension","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendFactor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlendOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CullMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StencilOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompareFunction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputStepMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VertexFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PresentMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StoreOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureDimension","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureAspect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddressMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureComponentType","synthetic":true,"types":[]}];
implementors["winit"] = [{"text":"impl RefUnwindSafe for KeyboardInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Touch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModifiersState","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AvailableMonitorsIter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MonitorId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Icon","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceId","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EventsLoop","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EventsLoopProxy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventsLoopClosed","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WindowBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WindowAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TouchPhase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ElementState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MouseButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MouseScrollDelta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VirtualKeyCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BadIcon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ControlFlow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MouseCursor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogicalPosition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalPosition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogicalSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysicalSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XNotSupported","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaylandTheme","synthetic":true,"types":[]}];
implementors["x11"] = [{"text":"impl RefUnwindSafe for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XcmsColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbBounds","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControls","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbMods","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOutline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbProperty","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbRow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbSection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbShape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XAnyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XButtonEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XColormapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XErrorEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExposeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGravityEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMappingEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMotionEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XReparentEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Depth","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Screen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScreenFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Visual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XArc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XChar2b","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCharStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XClassHint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XComposeStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExtCodes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExtData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFontProp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFontStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGCValues","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XHostAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIconSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeyboardState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XmbTextItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XrmValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSegment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSizeHints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XStandardColormap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTextItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTextItem16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTextProperty","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTimeCoord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XVisualInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XwcTextItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XWindowChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XWMHints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMCallback","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMText","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XICCallback","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AspectRatio","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClientMessageData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFns","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMTextString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XDisplay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XIC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XIM","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XRegion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XOC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XOM","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorComment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorComments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorImages","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftFont","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftCharSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftFontSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcCharSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcPattern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcEndian","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftFontInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftDraw","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftPattern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFeedbackState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XInputClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIModifierState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIValuatorState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIEventMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIRawEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _AtomRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuArea","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuScanline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuSegment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRPanning","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordRange8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordRange16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XCircle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XFilters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XIndexValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XLineFixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XPointDouble","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XPointFixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRenderColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XSpanFix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTrap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTriangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTransform","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Arg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _TranslationData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _WidgetRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XtWidgetGeometry","synthetic":true,"types":[]}];
implementors["x11_clipboard"] = [{"text":"impl RefUnwindSafe for Atoms","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Clipboard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]}];
implementors["x11_dl"] = [{"text":"impl RefUnwindSafe for OpenError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpenErrorKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xlib","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XcmsColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbBounds","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControls","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbMods","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOutline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbProperty","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbRow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbSection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbShape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XAnyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XButtonEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XColormapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XErrorEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExposeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGravityEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMappingEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XMotionEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XReparentEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Depth","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Screen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScreenFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Visual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XArc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XChar2b","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XCharStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XClassHint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XComposeStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExtCodes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExtData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFontProp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFontStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGCValues","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XHostAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIconSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XKeyboardState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XmbTextItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XrmValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSegment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XSizeHints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XStandardColormap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTextItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTextItem16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTextProperty","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XTimeCoord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XVisualInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XwcTextItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XWindowChanges","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XWMHints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMCallback","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMText","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XICCallback","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AspectRatio","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClientMessageData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageFns","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMTextString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XDisplay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XIC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XIM","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XRegion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XOC","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XOM","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Glx","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xcursor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorComment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorComments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XcursorImages","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xf86vmode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xft","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftFont","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftCharSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftFontSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcCharSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcPattern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcEndian","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftFontInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftDraw","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XftPattern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xlib","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XFeedbackState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XInputClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XInput2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIModifierState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIButtonState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIValuatorState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIEventMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIRawEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xmu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _AtomRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuArea","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuScanline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuSegment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xf86vmode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordRange8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordRange16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRecordState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xrender","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XCircle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XFilters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XIndexValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XLineFixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XPointDouble","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XPointFixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRenderColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XSpanFix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTrap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTriangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XTransform","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xss","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Arg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _TranslationData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _WidgetRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _XtResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XtWidgetGeometry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xf86vmode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xlib_xcb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xrandr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRPanning","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xrandr_2_2_0","synthetic":true,"types":[]}];
implementors["xcb"] = [{"text":"impl&lt;'a, T&gt; RefUnwindSafe for StructPtr&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Error&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Cookie&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Reply&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Connection","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for QueryExtensionData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequestError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValueError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PixmapError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtomError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CursorError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatchError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawableError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccessError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AllocError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColormapError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GContextError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IdChoiceError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NameError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LengthError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImplementationError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Char2b","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Point","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Arc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Visualtype","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Timecoord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fontprop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Charinfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Segment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Coloritem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rgb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PictFormatError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PictureError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PictOpError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlyphSetError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlyphError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Directformat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pictforminfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pictvisual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Indexvalue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pointfix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Linefix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Triangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Trapezoid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Glyphinfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Transform","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Animcursorelt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Spanfix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Trap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BadRegionError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_generic_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_generic_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_generic_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_ge_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_generic_error_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_void_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_auth_info_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_connection_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_extension_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_special_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_char2b_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_char2b_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_window_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_pixmap_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_cursor_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_font_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_gcontext_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_colormap_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_atom_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_drawable_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_fontable_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_visualid_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_timestamp_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_keysym_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_keycode_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_button_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_point_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_point_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_rectangle_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_rectangle_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_arc_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_arc_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_format_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_format_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_visualtype_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_visualtype_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_depth_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for xcb_depth_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_screen_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for xcb_screen_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_setup_request_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for xcb_setup_request_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_setup_failed_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for xcb_setup_failed_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_setup_authenticate_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for xcb_setup_authenticate_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_setup_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for xcb_setup_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_key_press_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_button_press_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_motion_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_enter_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_focus_in_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_keymap_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_expose_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_graphics_exposure_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_no_exposure_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_visibility_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_create_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_destroy_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_unmap_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_map_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_map_request_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_reparent_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_configure_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_configure_request_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_gravity_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_resize_request_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_circulate_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_property_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_selection_clear_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_selection_request_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_selection_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_colormap_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_client_message_data_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_client_message_data_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_client_message_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_mapping_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_ge_generic_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_request_error_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_value_error_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_create_window_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_change_window_attributes_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_window_attributes_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_window_attributes_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_window_attributes_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_destroy_window_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_destroy_subwindows_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_change_save_set_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_reparent_window_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_map_window_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_map_subwindows_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_unmap_window_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_unmap_subwindows_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_configure_window_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_circulate_window_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_geometry_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_geometry_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_geometry_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_tree_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_tree_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_tree_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_intern_atom_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_intern_atom_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_intern_atom_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_atom_name_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_atom_name_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_atom_name_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_change_property_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_delete_property_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_property_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_property_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_property_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_properties_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_properties_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_properties_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_set_selection_owner_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_selection_owner_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_selection_owner_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_selection_owner_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_convert_selection_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_send_event_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_grab_pointer_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_grab_pointer_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_grab_pointer_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_ungrab_pointer_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_grab_button_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_ungrab_button_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_change_active_pointer_grab_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_grab_keyboard_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_grab_keyboard_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_grab_keyboard_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_ungrab_keyboard_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_grab_key_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_ungrab_key_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_allow_events_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_grab_server_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_ungrab_server_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_pointer_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_pointer_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_pointer_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_timecoord_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_timecoord_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_motion_events_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_motion_events_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_motion_events_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_translate_coordinates_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_translate_coordinates_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_translate_coordinates_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_warp_pointer_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_set_input_focus_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_input_focus_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_input_focus_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_input_focus_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_keymap_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_keymap_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_keymap_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_open_font_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_close_font_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_fontprop_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_fontprop_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_charinfo_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_charinfo_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_font_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_font_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_font_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_text_extents_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_text_extents_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_text_extents_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_str_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for xcb_str_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_fonts_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_fonts_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_fonts_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_fonts_with_info_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_fonts_with_info_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_fonts_with_info_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_set_font_path_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_font_path_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_font_path_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_font_path_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_create_pixmap_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_free_pixmap_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_create_gc_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_change_gc_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_copy_gc_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_set_dashes_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_set_clip_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_free_gc_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_clear_area_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_copy_area_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_copy_plane_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_poly_point_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_poly_line_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_segment_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_segment_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_poly_segment_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_poly_rectangle_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_poly_arc_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_fill_poly_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_poly_fill_rectangle_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_poly_fill_arc_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_put_image_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_image_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_image_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_image_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_poly_text_8_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_poly_text_16_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_image_text_8_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_image_text_16_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_create_colormap_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_free_colormap_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_copy_colormap_and_free_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_install_colormap_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_uninstall_colormap_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_installed_colormaps_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_installed_colormaps_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_installed_colormaps_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_alloc_color_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_alloc_color_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_alloc_color_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_alloc_named_color_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_alloc_named_color_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_alloc_named_color_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_alloc_color_cells_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_alloc_color_cells_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_alloc_color_cells_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_alloc_color_planes_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_alloc_color_planes_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_alloc_color_planes_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_free_colors_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_coloritem_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_coloritem_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_store_colors_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_store_named_color_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_rgb_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_rgb_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_colors_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_colors_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_colors_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_lookup_color_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_lookup_color_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_lookup_color_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_create_cursor_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_create_glyph_cursor_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_free_cursor_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_recolor_cursor_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_best_size_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_best_size_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_best_size_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_extension_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_extension_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_query_extension_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_extensions_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_extensions_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_extensions_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_change_keyboard_mapping_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_keyboard_mapping_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_keyboard_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_keyboard_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_change_keyboard_control_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_keyboard_control_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_keyboard_control_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_keyboard_control_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_bell_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_change_pointer_control_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_pointer_control_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_pointer_control_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_pointer_control_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_set_screen_saver_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_screen_saver_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_screen_saver_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_screen_saver_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_change_hosts_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_host_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for xcb_host_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_hosts_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_hosts_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_list_hosts_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_set_access_control_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_set_close_down_mode_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_kill_client_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_rotate_properties_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_force_screen_saver_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_set_pointer_mapping_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_set_pointer_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_set_pointer_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_pointer_mapping_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_pointer_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_pointer_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_set_modifier_mapping_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_set_modifier_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_set_modifier_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_modifier_mapping_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_modifier_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_get_modifier_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_no_operation_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_big_requests_enable_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_big_requests_enable_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_big_requests_enable_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xc_misc_get_version_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xc_misc_get_version_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xc_misc_get_version_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xc_misc_get_xid_range_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xc_misc_get_xid_range_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xc_misc_get_xid_range_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xc_misc_get_xid_list_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xc_misc_get_xid_list_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xc_misc_get_xid_list_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_glyph_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_glyphset_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_picture_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_pictformat_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_fixed_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_pict_format_error_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_picture_error_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_pict_op_error_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_glyph_set_error_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_glyph_error_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_directformat_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_directformat_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_pictforminfo_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_pictforminfo_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_pictvisual_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_pictvisual_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_pictdepth_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for xcb_render_pictdepth_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_pictscreen_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for xcb_render_pictscreen_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_indexvalue_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_indexvalue_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_color_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_color_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_pointfix_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_pointfix_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_linefix_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_linefix_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_triangle_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_triangle_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_trapezoid_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_trapezoid_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_glyphinfo_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_glyphinfo_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_query_version_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_query_version_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_query_version_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_query_pict_formats_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_query_pict_formats_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_query_pict_formats_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_query_pict_index_values_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_query_pict_index_values_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_query_pict_index_values_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_create_picture_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_change_picture_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_set_picture_clip_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_free_picture_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_composite_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_trapezoids_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_triangles_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_tri_strip_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_tri_fan_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_create_glyph_set_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_reference_glyph_set_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_free_glyph_set_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_add_glyphs_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_free_glyphs_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_composite_glyphs_8_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_composite_glyphs_16_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_composite_glyphs_32_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_fill_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_create_cursor_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_transform_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_transform_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_set_picture_transform_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_query_filters_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_query_filters_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_query_filters_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_set_picture_filter_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_animcursorelt_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_animcursorelt_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_create_anim_cursor_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_spanfix_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_spanfix_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_trap_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_trap_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_add_traps_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_create_solid_fill_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_create_linear_gradient_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_create_radial_gradient_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_render_create_conical_gradient_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_op_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_kind_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_query_version_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_query_version_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_query_version_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_mask_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_combine_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_offset_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_query_extents_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_query_extents_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_query_extents_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_select_input_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_input_selected_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_input_selected_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_input_selected_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_get_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_get_rectangles_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_shape_get_rectangles_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_query_version_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_query_version_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_query_version_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_change_save_set_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_selection_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_select_selection_input_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_cursor_notify_event_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_select_cursor_input_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_get_cursor_image_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_get_cursor_image_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_get_cursor_image_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_region_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_bad_region_error_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_create_region_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_create_region_from_bitmap_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_create_region_from_window_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_create_region_from_gc_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_create_region_from_picture_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_destroy_region_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_set_region_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_copy_region_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_union_region_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_intersect_region_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_subtract_region_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_invert_region_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_translate_region_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_region_extents_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_fetch_region_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_fetch_region_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_fetch_region_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_set_gc_clip_region_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_set_window_shape_region_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_set_picture_clip_region_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_set_cursor_name_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_get_cursor_name_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_get_cursor_name_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_get_cursor_name_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_get_cursor_image_and_name_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_get_cursor_image_and_name_cookie_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_get_cursor_image_and_name_reply_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_change_cursor_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_change_cursor_by_name_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_expand_region_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_hide_cursor_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_show_cursor_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_barrier_iterator_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_create_pointer_barrier_request_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xcb_xfixes_delete_pointer_barrier_request_t","synthetic":true,"types":[]}];
implementors["xdg"] = [{"text":"impl RefUnwindSafe for BaseDirectories","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BaseDirectoriesError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileFindIterator","synthetic":true,"types":[]}];
implementors["xml"] = [{"text":"impl RefUnwindSafe for ParserConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmitterConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; RefUnwindSafe for ReprDisplay&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OwnedName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OwnedAttribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextPosition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XmlVersion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Namespace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NamespaceStack","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for NamespaceStackMappings&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CheckedTarget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !RefUnwindSafe for EventReader&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !RefUnwindSafe for Events&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XmlEvent","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for EventWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EmitterError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for EndElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StartElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for XmlEvent&lt;'a&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()