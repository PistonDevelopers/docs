(function() {var implementors = {};
implementors["andrew"] = [{"text":"impl&lt;'a&gt; !UnwindSafe for Canvas&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Endian","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Line","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sides","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontConfig","synthetic":true,"types":[]}];
implementors["approx"] = [{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; UnwindSafe for AbsDiff&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; UnwindSafe for Relative&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; UnwindSafe for Ulps&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; UnwindSafe for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for CapacityError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; UnwindSafe for Drain&lt;'a, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ash"] = [{"text":"impl UnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for EntryCustom&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LoadingError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Align&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for AlignIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCacheCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CullModeFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceQueueCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryPropertyFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryHeapFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccessFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferUsageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageUsageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageViewCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineShaderStageCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorComponentFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FenceCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatFeatureFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryControlFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryResultFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferUsageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPipelineStatisticFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageAspectFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageFormatFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseMemoryBindFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineStageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPoolResetFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferResetFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SampleCountFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentDescriptionFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilFaceFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DependencyFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreWaitFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlaneAlphaFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompositeAlphaFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceTransformFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainImageUsageFlagsANDROID","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugReportFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryHandleTypeFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryFeatureFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubgroupFeatureFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndirectCommandsLayoutUsageFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndirectStateFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayoutCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryFeatureFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalSemaphoreHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalSemaphoreFeatureFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreImportFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalFenceHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalFenceFeatureFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FenceImportFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceCounterFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PeerMemoryFeatureFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryAllocateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupPresentModeFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDescriptionFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessageSeverityFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessageTypeFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorBindingFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConditionalRenderingFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResolveModeFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryInstanceFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuildAccelerationStructureFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FramebufferCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceDiagnosticsConfigFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCreationFeedbackFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceCounterDescriptionFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AcquireProfilingLockFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderCorePropertiesFlagsAMD","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderModuleCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCompilerControlFlagsAMD","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolPurposeFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineLayoutCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineDepthStencilStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineDynamicStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineColorBlendStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineMultisampleStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineTessellationStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineInputAssemblyStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineVertexInputStateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferViewCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryMapFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolResetFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorUpdateTemplateCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModeCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplaySurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViSurfaceCreateFlagsNN","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaylandSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Win32SurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XlibSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XcbSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IOSSurfaceCreateFlagsMVK","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MacOSSurfaceCreateFlagsMVK","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetalSurfaceCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImagePipeSurfaceCreateFlagsFUCHSIA","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StreamDescriptorSurfaceCreateFlagsGGP","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeadlessSurfaceCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPoolTrimFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportSwizzleStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineDiscardRectangleStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCoverageToColorStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCoverageModulationStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCoverageReductionStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationCacheCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessengerCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessengerCallbackDataFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationConservativeStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationStateStreamCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationDepthClipStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Queue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceMemory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Buffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderModule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pipeline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sampler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fence","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Semaphore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Framebuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCache","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndirectCommandsLayoutNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorUpdateTemplate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerYcbcrConversion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationCacheEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceConfigurationINTEL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeferredOperationKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugReportCallbackEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessengerEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseOutStructure","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseInStructure","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Offset2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Offset2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Offset3D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Offset3DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extent2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Extent2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extent3D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Extent3DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Viewport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ViewportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rect2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Rect2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearRect","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ClearRectBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComponentMapping","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ComponentMappingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtensionProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExtensionPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayerProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for LayerPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplicationInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ApplicationInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AllocationCallbacks","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AllocationCallbacksBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceQueueCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceQueueCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for InstanceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFamilyProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueueFamilyPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageMemoryRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseImageMemoryRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryTypeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryHeap","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryHeapBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MappedMemoryRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MappedMemoryRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorBufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorBufferInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorImageInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriteDescriptorSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for WriteDescriptorSetBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyDescriptorSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CopyDescriptorSetBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferViewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferViewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageSubresource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageSubresourceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageSubresourceLayers","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageSubresourceLayersBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageSubresourceRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageSubresourceRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferMemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferMemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageMemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageMemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubresourceLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubresourceLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageViewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageViewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseMemoryBind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseMemoryBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageMemoryBind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseImageMemoryBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseBufferMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseBufferMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageOpaqueMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseImageOpaqueMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseImageMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindSparseInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindSparseInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageBlit","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageBlitBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferImageCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageResolve","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageResolveBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderModuleCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ShaderModuleCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorSetLayoutBindingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorSetLayoutCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolSize","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorPoolSizeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorSetAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecializationMapEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SpecializationMapEntryBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecializationInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SpecializationInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineShaderStageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineShaderStageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComputePipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ComputePipelineCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexInputBindingDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VertexInputBindingDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexInputAttributeDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VertexInputAttributeDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineVertexInputStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineVertexInputStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineInputAssemblyStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineInputAssemblyStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineTessellationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineTessellationStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineViewportStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineRasterizationStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineMultisampleStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineMultisampleStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineColorBlendAttachmentState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineColorBlendAttachmentStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineColorBlendStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineColorBlendStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineDynamicStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineDynamicStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilOpState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StencilOpStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineDepthStencilStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineDepthStencilStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GraphicsPipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GraphicsPipelineCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCacheCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineCacheCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PushConstantRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PushConstantRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineLayoutCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SamplerCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommandPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommandBufferAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferInheritanceInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommandBufferInheritanceInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommandBufferBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearDepthStencilValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ClearDepthStencilValueBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearAttachment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ClearAttachmentBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AttachmentDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentReference","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AttachmentReferenceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassDependencyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for EventCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FenceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FenceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSparseProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSparsePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceLimits","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceLimitsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SemaphoreCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueryPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FramebufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FramebufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DrawIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawIndexedIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DrawIndexedIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DispatchIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DispatchIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlanePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPlanePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModeParametersKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayModeParametersKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayModePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModeCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayModeCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlaneCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPlaneCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplaySurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplaySurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AndroidSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViSurfaceCreateInfoNN","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ViSurfaceCreateInfoNNBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaylandSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for WaylandSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Win32SurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Win32SurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XlibSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for XlibSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XcbSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for XcbSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImagePipeSurfaceCreateInfoFUCHSIA","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImagePipeSurfaceCreateInfoFUCHSIABuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StreamDescriptorSurfaceCreateInfoGGP","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StreamDescriptorSurfaceCreateInfoGGPBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceFormatKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceFormatKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugReportCallbackCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugReportCallbackCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationFlagsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ValidationFlagsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ValidationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationStateRasterizationOrderAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineRasterizationStateRasterizationOrderAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugMarkerObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugMarkerObjectNameInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugMarkerObjectTagInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugMarkerObjectTagInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugMarkerMarkerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugMarkerMarkerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DedicatedAllocationImageCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DedicatedAllocationImageCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DedicatedAllocationBufferCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DedicatedAllocationBufferCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DedicatedAllocationMemoryAllocateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DedicatedAllocationMemoryAllocateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalImageFormatPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalImageFormatPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryImageCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalMemoryImageCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportMemoryAllocateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportMemoryAllocateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportMemoryWin32HandleInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportMemoryWin32HandleInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportMemoryWin32HandleInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportMemoryWin32HandleInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Win32KeyedMutexAcquireReleaseInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Win32KeyedMutexAcquireReleaseInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDeviceGeneratedCommandsFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDeviceGeneratedCommandsPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDeviceGeneratedCommandsPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GraphicsShaderGroupCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GraphicsShaderGroupCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GraphicsPipelineShaderGroupsCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GraphicsPipelineShaderGroupsCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindShaderGroupIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindShaderGroupIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindIndexBufferIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindIndexBufferIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindVertexBufferIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindVertexBufferIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetStateFlagsIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SetStateFlagsIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndirectCommandsStreamNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for IndirectCommandsStreamNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndirectCommandsLayoutTokenNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for IndirectCommandsLayoutTokenNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndirectCommandsLayoutCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for IndirectCommandsLayoutCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeneratedCommandsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GeneratedCommandsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeneratedCommandsMemoryRequirementsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GeneratedCommandsMemoryRequirementsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFeatures2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceFeatures2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageFormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceImageFormatInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceImageFormatInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFamilyProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueueFamilyProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMemoryProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMemoryProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageFormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseImageFormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSparseImageFormatInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSparseImageFormatInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePushDescriptorPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePushDescriptorPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConformanceVersion","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ConformanceVersionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDriverProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDriverPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentRegionsKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PresentRegionsKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentRegionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PresentRegionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RectLayerKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RectLayerKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVariablePointersFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVariablePointersFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceExternalImageFormatInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceExternalImageFormatInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceExternalBufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceExternalBufferInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalBufferProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalBufferPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceIDProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceIDPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryImageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalMemoryImageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryBufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalMemoryBufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportMemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportMemoryAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportMemoryWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportMemoryWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportMemoryWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportMemoryWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryWin32HandlePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryWin32HandlePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportMemoryFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportMemoryFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryFdPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryFdPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Win32KeyedMutexAcquireReleaseInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Win32KeyedMutexAcquireReleaseInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceExternalSemaphoreInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceExternalSemaphoreInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalSemaphoreProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalSemaphorePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportSemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportSemaphoreCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportSemaphoreWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportSemaphoreWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportSemaphoreWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportSemaphoreWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D3D12FenceSubmitInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for D3D12FenceSubmitInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SemaphoreGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportSemaphoreFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportSemaphoreFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SemaphoreGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceExternalFenceInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceExternalFenceInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalFenceProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalFencePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportFenceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportFenceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportFenceWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportFenceWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportFenceWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExportFenceWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FenceGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FenceGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportFenceFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportFenceFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FenceGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FenceGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMultiviewFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMultiviewFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMultiviewProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMultiviewPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassMultiviewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassMultiviewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceCapabilities2EXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceCapabilities2EXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPowerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPowerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceEventInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceEventInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayEventInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayEventInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainCounterCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SwapchainCounterCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceGroupProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceGroupPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryAllocateFlagsInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryAllocateFlagsInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindBufferMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindBufferMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindBufferMemoryDeviceGroupInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindBufferMemoryDeviceGroupInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindImageMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindImageMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindImageMemoryDeviceGroupInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindImageMemoryDeviceGroupInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupRenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupRenderPassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupCommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupCommandBufferBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupBindSparseInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupBindSparseInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupPresentCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupPresentCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageSwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageSwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindImageMemorySwapchainInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindImageMemorySwapchainInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AcquireNextImageInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AcquireNextImageInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupPresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupDeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupDeviceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceGroupSwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceGroupSwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorUpdateTemplateEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorUpdateTemplateEntryBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorUpdateTemplateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorUpdateTemplateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XYColorEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for XYColorEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HdrMetadataEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for HdrMetadataEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayNativeHdrSurfaceCapabilitiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayNativeHdrSurfaceCapabilitiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainDisplayNativeHdrCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SwapchainDisplayNativeHdrCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RefreshCycleDurationGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RefreshCycleDurationGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PastPresentationTimingGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PastPresentationTimingGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentTimesInfoGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PresentTimesInfoGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentTimeGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PresentTimeGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for IOSSurfaceCreateInfoMVKBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MacOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MacOSSurfaceCreateInfoMVKBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetalSurfaceCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MetalSurfaceCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewportWScalingNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ViewportWScalingNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportWScalingStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineViewportWScalingStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewportSwizzleNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ViewportSwizzleNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportSwizzleStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineViewportSwizzleStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDiscardRectanglePropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDiscardRectanglePropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineDiscardRectangleStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineDiscardRectangleStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMultiviewPerViewAttributesPropertiesNVXBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputAttachmentAspectReference","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for InputAttachmentAspectReferenceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassInputAttachmentAspectCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassInputAttachmentAspectCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSurfaceInfo2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSurfaceInfo2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceCapabilities2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceCapabilities2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceFormat2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceFormat2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlaneProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPlaneProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModeProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayModeProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlaneInfo2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPlaneInfo2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlaneCapabilities2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayPlaneCapabilities2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SharedPresentSurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SharedPresentSurfaceCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevice16BitStorageFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevice16BitStorageFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSubgroupProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSubgroupPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderSubgroupExtendedTypesFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderSubgroupExtendedTypesFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageSparseMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageSparseMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryRequirements2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryRequirements2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageMemoryRequirements2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SparseImageMemoryRequirements2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePointClippingProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePointClippingPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryDedicatedRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryDedicatedRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryDedicatedAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryDedicatedAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageViewUsageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageViewUsageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineTessellationDomainOriginStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineTessellationDomainOriginStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerYcbcrConversionInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SamplerYcbcrConversionInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerYcbcrConversionCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SamplerYcbcrConversionCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindImagePlaneMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindImagePlaneMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImagePlaneMemoryRequirementsInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImagePlaneMemoryRequirementsInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSamplerYcbcrConversionFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSamplerYcbcrConversionFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerYcbcrConversionImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SamplerYcbcrConversionImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureLODGatherFormatPropertiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TextureLODGatherFormatPropertiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConditionalRenderingBeginInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ConditionalRenderingBeginInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProtectedSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ProtectedSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceProtectedMemoryFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceProtectedMemoryFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceProtectedMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceProtectedMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceQueueInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceQueueInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCoverageToColorStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineCoverageToColorStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSamplerFilterMinmaxProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSamplerFilterMinmaxPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SampleLocationEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SampleLocationEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SampleLocationsInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SampleLocationsInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentSampleLocationsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AttachmentSampleLocationsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassSampleLocationsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassSampleLocationsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassSampleLocationsBeginInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassSampleLocationsBeginInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineSampleLocationsStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineSampleLocationsStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSampleLocationsPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSampleLocationsPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MultisamplePropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MultisamplePropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerReductionModeCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SamplerReductionModeCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceBlendOperationAdvancedFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceBlendOperationAdvancedFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceBlendOperationAdvancedPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceBlendOperationAdvancedPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineColorBlendAdvancedStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineColorBlendAdvancedStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceInlineUniformBlockFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceInlineUniformBlockFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceInlineUniformBlockPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceInlineUniformBlockPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriteDescriptorSetInlineUniformBlockEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for WriteDescriptorSetInlineUniformBlockEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolInlineUniformBlockCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorPoolInlineUniformBlockCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCoverageModulationStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineCoverageModulationStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFormatListCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageFormatListCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationCacheCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ValidationCacheCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderModuleValidationCacheCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ShaderModuleValidationCacheCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMaintenance3Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMaintenance3PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayoutSupport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorSetLayoutSupportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderDrawParametersFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderDrawParametersFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderFloat16Int8Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderFloat16Int8FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFloatControlsProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceFloatControlsPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceHostQueryResetFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceHostQueryResetFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NativeBufferUsage2ANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for NativeBufferUsage2ANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NativeBufferANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for NativeBufferANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainImageCreateInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SwapchainImageCreateInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePresentationPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePresentationPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderResourceUsageAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ShaderResourceUsageAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderStatisticsInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ShaderStatisticsInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceQueueGlobalPriorityCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceQueueGlobalPriorityCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugUtilsObjectNameInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsObjectTagInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugUtilsObjectTagInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsLabelEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugUtilsLabelEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessengerCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugUtilsMessengerCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessengerCallbackDataEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DebugUtilsMessengerCallbackDataEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportMemoryHostPointerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportMemoryHostPointerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryHostPointerPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryHostPointerPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceExternalMemoryHostPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceExternalMemoryHostPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceConservativeRasterizationPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceConservativeRasterizationPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CalibratedTimestampInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CalibratedTimestampInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderCorePropertiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderCorePropertiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderCoreProperties2AMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderCoreProperties2AMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationConservativeStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineRasterizationConservativeStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDescriptorIndexingFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDescriptorIndexingFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDescriptorIndexingProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDescriptorIndexingPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayoutBindingFlagsCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorSetLayoutBindingFlagsCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetVariableDescriptorCountAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorSetVariableDescriptorCountAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetVariableDescriptorCountLayoutSupport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorSetVariableDescriptorCountLayoutSupportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentDescription2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AttachmentDescription2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentReference2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AttachmentReference2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDescription2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassDescription2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDependency2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassDependency2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassCreateInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassCreateInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassEndInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassEndInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceTimelineSemaphoreFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceTimelineSemaphoreFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceTimelineSemaphoreProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceTimelineSemaphorePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreTypeCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SemaphoreTypeCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimelineSemaphoreSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TimelineSemaphoreSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreWaitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SemaphoreWaitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreSignalInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SemaphoreSignalInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexInputBindingDivisorDescriptionEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VertexInputBindingDivisorDescriptionEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineVertexInputDivisorStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineVertexInputDivisorStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVertexAttributeDivisorPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVertexAttributeDivisorPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePCIBusInfoPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePCIBusInfoPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportAndroidHardwareBufferInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImportAndroidHardwareBufferInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidHardwareBufferUsageANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AndroidHardwareBufferUsageANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidHardwareBufferPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AndroidHardwareBufferPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryGetAndroidHardwareBufferInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryGetAndroidHardwareBufferInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidHardwareBufferFormatPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AndroidHardwareBufferFormatPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferInheritanceConditionalRenderingInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommandBufferInheritanceConditionalRenderingInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalFormatANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExternalFormatANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevice8BitStorageFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevice8BitStorageFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceConditionalRenderingFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceConditionalRenderingFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVulkanMemoryModelFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVulkanMemoryModelFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderAtomicInt64Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderAtomicInt64FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVertexAttributeDivisorFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVertexAttributeDivisorFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFamilyCheckpointPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueueFamilyCheckpointPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckpointDataNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CheckpointDataNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDepthStencilResolveProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDepthStencilResolvePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDescriptionDepthStencilResolve","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassDescriptionDepthStencilResolveBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageViewASTCDecodeModeEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageViewASTCDecodeModeEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceASTCDecodeFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceASTCDecodeFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceTransformFeedbackFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceTransformFeedbackFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceTransformFeedbackPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceTransformFeedbackPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationStateStreamCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineRasterizationStateStreamCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceRepresentativeFragmentTestFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceRepresentativeFragmentTestFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRepresentativeFragmentTestStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineRepresentativeFragmentTestStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceExclusiveScissorFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceExclusiveScissorFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportExclusiveScissorStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineViewportExclusiveScissorStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceCornerSampledImageFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceCornerSampledImageFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceComputeShaderDerivativesFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceComputeShaderDerivativesFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFragmentShaderBarycentricFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceFragmentShaderBarycentricFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderImageFootprintFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderImageFootprintFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShadingRatePaletteNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ShadingRatePaletteNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportShadingRateImageStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineViewportShadingRateImageStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShadingRateImageFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShadingRateImageFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShadingRateImagePropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShadingRateImagePropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CoarseSampleLocationNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CoarseSampleLocationNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CoarseSampleOrderCustomNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CoarseSampleOrderCustomNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportCoarseSampleOrderStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineViewportCoarseSampleOrderStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMeshShaderFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMeshShaderFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMeshShaderPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMeshShaderPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawMeshTasksIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DrawMeshTasksIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracingShaderGroupCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RayTracingShaderGroupCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracingShaderGroupCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RayTracingShaderGroupCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracingPipelineCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RayTracingPipelineCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracingPipelineCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RayTracingPipelineCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryTrianglesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GeometryTrianglesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryAABBNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GeometryAABBNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryDataNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GeometryDataNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GeometryNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindAccelerationStructureMemoryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindAccelerationStructureMemoryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriteDescriptorSetAccelerationStructureKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for WriteDescriptorSetAccelerationStructureKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureMemoryRequirementsInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureMemoryRequirementsInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureMemoryRequirementsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureMemoryRequirementsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceRayTracingFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceRayTracingFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceRayTracingPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceRayTracingPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceRayTracingPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceRayTracingPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StridedBufferRegionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StridedBufferRegionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraceRaysIndirectCommandKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TraceRaysIndirectCommandKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrmFormatModifierPropertiesListEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DrmFormatModifierPropertiesListEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrmFormatModifierPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DrmFormatModifierPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceImageDrmFormatModifierInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceImageDrmFormatModifierInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageDrmFormatModifierListCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageDrmFormatModifierListCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageDrmFormatModifierExplicitCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageDrmFormatModifierExplicitCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageDrmFormatModifierPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageDrmFormatModifierPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageStencilUsageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageStencilUsageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceMemoryOverallocationCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceMemoryOverallocationCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFragmentDensityMapFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceFragmentDensityMapFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFragmentDensityMapPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceFragmentDensityMapPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassFragmentDensityMapCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassFragmentDensityMapCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceScalarBlockLayoutFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceScalarBlockLayoutFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceProtectedCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceProtectedCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceUniformBufferStandardLayoutFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceUniformBufferStandardLayoutFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDepthClipEnableFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDepthClipEnableFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationDepthClipStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineRasterizationDepthClipStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMemoryBudgetPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMemoryBudgetPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMemoryPriorityFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceMemoryPriorityFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryPriorityAllocateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryPriorityAllocateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceBufferDeviceAddressFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceBufferDeviceAddressFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceBufferDeviceAddressFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceBufferDeviceAddressFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferDeviceAddressInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferDeviceAddressInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferOpaqueCaptureAddressCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferOpaqueCaptureAddressCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferDeviceAddressCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferDeviceAddressCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceImageViewImageFormatInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceImageViewImageFormatInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterCubicImageViewImageFormatPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FilterCubicImageViewImageFormatPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceImagelessFramebufferFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceImagelessFramebufferFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FramebufferAttachmentsCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FramebufferAttachmentsCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FramebufferAttachmentImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FramebufferAttachmentImageInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassAttachmentBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassAttachmentBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceTextureCompressionASTCHDRFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceCooperativeMatrixFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceCooperativeMatrixFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceCooperativeMatrixPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceCooperativeMatrixPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CooperativeMatrixPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CooperativeMatrixPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceYcbcrImageArraysFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceYcbcrImageArraysFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageViewHandleInfoNVX","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageViewHandleInfoNVXBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentFrameTokenGGP","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PresentFrameTokenGGPBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCreationFeedbackEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineCreationFeedbackEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCreationFeedbackCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineCreationFeedbackCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceFullScreenExclusiveInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceFullScreenExclusiveInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceFullScreenExclusiveWin32InfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceFullScreenExclusiveWin32InfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceCapabilitiesFullScreenExclusiveEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SurfaceCapabilitiesFullScreenExclusiveEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePerformanceQueryFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePerformanceQueryFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePerformanceQueryPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePerformanceQueryPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceCounterKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceCounterKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceCounterDescriptionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceCounterDescriptionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPoolPerformanceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueryPoolPerformanceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AcquireProfilingLockInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AcquireProfilingLockInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceQuerySubmitInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceQuerySubmitInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeadlessSurfaceCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for HeadlessSurfaceCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceCoverageReductionModeFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceCoverageReductionModeFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCoverageReductionStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineCoverageReductionStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FramebufferMixedSamplesCombinationNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FramebufferMixedSamplesCombinationNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderIntegerFunctions2FeaturesINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceValueINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceValueINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitializePerformanceApiInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for InitializePerformanceApiInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPoolPerformanceQueryCreateInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueryPoolPerformanceQueryCreateInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceMarkerInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceMarkerInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceStreamMarkerInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceStreamMarkerInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceOverrideInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceOverrideInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceConfigurationAcquireInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PerformanceConfigurationAcquireInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderClockFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderClockFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceIndexTypeUint8FeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceIndexTypeUint8FeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderSMBuiltinsPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderSMBuiltinsPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderSMBuiltinsFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderSMBuiltinsFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFragmentShaderInterlockFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceFragmentShaderInterlockFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSeparateDepthStencilLayoutsFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSeparateDepthStencilLayoutsFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentReferenceStencilLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AttachmentReferenceStencilLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentDescriptionStencilLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AttachmentDescriptionStencilLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePipelineExecutablePropertiesFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineExecutablePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineExecutablePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineExecutableInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineExecutableInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineExecutableStatisticKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineExecutableStatisticKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineExecutableInternalRepresentationKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineExecutableInternalRepresentationKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceTexelBufferAlignmentFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceTexelBufferAlignmentFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceTexelBufferAlignmentPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceTexelBufferAlignmentPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSubgroupSizeControlFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSubgroupSizeControlFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSubgroupSizeControlPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceSubgroupSizeControlPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineShaderStageRequiredSubgroupSizeCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryOpaqueCaptureAddressAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryOpaqueCaptureAddressAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceMemoryOpaqueCaptureAddressInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceMemoryOpaqueCaptureAddressInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceLineRasterizationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceLineRasterizationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceLineRasterizationPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceLineRasterizationPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationLineStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineRasterizationLineStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePipelineCreationCacheControlFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicePipelineCreationCacheControlFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVulkan11Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVulkan11FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVulkan11Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVulkan11PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVulkan12Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVulkan12FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceVulkan12Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceVulkan12PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCompilerControlCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineCompilerControlCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceCoherentMemoryFeaturesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceCoherentMemoryFeaturesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceToolPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceToolPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureGeometryTrianglesDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureGeometryTrianglesDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureGeometryAabbsDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureGeometryAabbsDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureGeometryInstancesDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureGeometryInstancesDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureGeometryKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureGeometryKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureBuildGeometryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureBuildGeometryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureBuildOffsetInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureBuildOffsetInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureCreateGeometryTypeInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureCreateGeometryTypeInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AabbPositionsKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AabbPositionsKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransformMatrixKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureInstanceKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureDeviceAddressInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureDeviceAddressInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureVersionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AccelerationStructureVersionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyAccelerationStructureInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CopyAccelerationStructureInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyAccelerationStructureToMemoryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CopyAccelerationStructureToMemoryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyMemoryToAccelerationStructureInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CopyMemoryToAccelerationStructureInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracingPipelineInterfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RayTracingPipelineInterfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeferredOperationInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeferredOperationInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineLibraryCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineLibraryCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassTransformBeginInfoQCOM","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassTransformBeginInfoQCOMBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferInheritanceRenderPassTransformInfoQCOM","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommandBufferInheritanceRenderPassTransformInfoQCOMBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceDiagnosticsConfigFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceDiagnosticsConfigFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceDiagnosticsConfigCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DeviceDiagnosticsConfigCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageTiling","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageViewType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferLevel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComponentSwizzle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BorderColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineBindPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCacheHeaderVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SharingMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerMipmapMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerAddressMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompareOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PolygonMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendFactor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogicOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InternalAllocationType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SystemAllocationScope","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexInputRate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructureType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassContents","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Result","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DynamicState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorUpdateTemplateType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ObjectType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentModeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorSpaceKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeDomainEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugReportObjectTypeEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RasterizationOrderAMD","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationCheckEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationFeatureEnableEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationFeatureDisableEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndirectCommandsTokenTypeNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPowerStateEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceEventTypeEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayEventTypeEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewportCoordinateSwizzleNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiscardRectangleModeEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PointClippingBehavior","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerReductionMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TessellationDomainOrigin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerYcbcrModelConversion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerYcbcrRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChromaLocation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendOverlapEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CoverageModulationModeNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CoverageReductionModeNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationCacheHeaderVersionEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderInfoTypeAMD","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueGlobalPriorityEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConservativeRasterizationModeEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VendorId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DriverId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShadingRatePaletteEntryNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CoarseSampleOrderTypeNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyAccelerationStructureModeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureTypeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryTypeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureMemoryRequirementsTypeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureBuildTypeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracingShaderGroupTypeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryOverallocationBehaviorAMD","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScopeNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComponentTypeNV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FullScreenExclusiveEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceCounterScopeKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceCounterUnitKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceCounterStorageKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceConfigurationTypeINTEL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPoolSamplingModeINTEL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceOverrideTypeINTEL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceParameterTypeINTEL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceValueTypeINTEL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderFloatControlsIndependence","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineExecutableStatisticFormatKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LineRasterizationModeEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSwapchainFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDisplayFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDisplaySwapchainFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrXlibSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrXcbSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrWaylandSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrMirSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrAndroidSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrWin32SurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidNativeBufferFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDebugReportFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvGlslShaderFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDepthRangeUnrestrictedFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSamplerMirrorClampToEdgeFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImgFilterCubicFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension17Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension18Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdRasterizationOrderFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension20Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderTrinaryMinmaxFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderExplicitVertexParameterFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDebugMarkerFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension24Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension25Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdGcnShaderFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvDedicatedAllocationFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension28Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtTransformFeedbackFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvxExtension30Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvxImageViewHandleFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension32Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension33Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdDrawIndirectCountFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension35Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdNegativeViewportHeightFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdGpuShaderHalfFloatFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderBallotFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension39Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension40Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension41Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdTextureGatherBiasLodFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderInfoFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension44Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension45Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension46Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderImageLoadStoreLodFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvxExtension48Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleExtension49Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GgpStreamDescriptorSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvCornerSampledImageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension52Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension53Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrMultiviewFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImgFormatPvrtcFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExternalMemoryCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExternalMemoryFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExternalMemoryWin32Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvWin32KeyedMutexFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrGetPhysicalDeviceProperties2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDeviceGroupFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtValidationFlagsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NnViSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrShaderDrawParametersFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtShaderSubgroupBallotFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtShaderSubgroupVoteFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtTextureCompressionAstcHdrFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtAstcDecodeModeFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImgExtension69Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrMaintenance1Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDeviceGroupCreationFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalMemoryCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalMemoryFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalMemoryWin32Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalMemoryFdFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrWin32KeyedMutexFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalSemaphoreCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalSemaphoreFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalSemaphoreWin32Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalSemaphoreFdFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrPushDescriptorFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtConditionalRenderingFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrShaderFloat16Int8Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Khr16bitStorageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrIncrementalPresentFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDescriptorUpdateTemplateFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvxDeviceGeneratedCommandsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvClipSpaceWScalingFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDirectModeDisplayFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtAcquireXlibDisplayFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDisplaySurfaceCounterFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDisplayControlFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleDisplayTimingFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvSampleMaskOverrideCoverageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvGeometryShaderPassthroughFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvViewportArray2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvxMultiviewPerViewAttributesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvViewportSwizzleFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDiscardRectanglesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension101Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtConservativeRasterizationFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDepthClipEnableFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension104Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtSwapchainColorspaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtHdrMetadataFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImgExtension107Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImgExtension108Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrImagelessFramebufferFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrCreateRenderpass2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImgExtension111Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSharedPresentableImageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalFenceCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalFenceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalFenceWin32Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExternalFenceFdFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrPerformanceQueryFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrMaintenance2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension119Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrGetSurfaceCapabilities2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrVariablePointersFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrGetDisplayProperties2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MvkIosSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MvkMacosSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MvkMoltenvkFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExternalMemoryDmaBufFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtQueueFamilyForeignFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDedicatedAllocationFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDebugUtilsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidExternalMemoryAndroidHardwareBufferFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtSamplerFilterMinmaxFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrStorageBufferStorageClassFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdGpuShaderInt16Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension134Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension135Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension136Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdMixedAttachmentSamplesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderFragmentMaskFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtInlineUniformBlockFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension140Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtShaderStencilExportFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension142Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension143Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtSampleLocationsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrRelaxedBlockLayoutFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrGetMemoryRequirements2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrImageFormatListFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtBlendOperationAdvancedFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvFragmentCoverageToColorFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrRayTracingFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension152Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvFramebufferMixedSamplesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvFillRectangleFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvShaderSmBuiltinsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtPostDepthCoverageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSamplerYcbcrConversionFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrBindMemory2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtImageDrmFormatModifierFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension160Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtValidationCacheFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtDescriptorIndexingFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtShaderViewportIndexLayerFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension164Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvShadingRateImageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvRayTracingFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvRepresentativeFragmentTestFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension168Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrMaintenance3Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDrawIndirectCountFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtFilterCubicFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension172Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension173Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension174Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtGlobalPriorityFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrShaderSubgroupExtendedTypesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension177Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Khr8bitStorageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExternalMemoryHostFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdBufferMarkerFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrShaderAtomicInt64Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrShaderClockFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension183Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdPipelineCompilerControlFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtCalibratedTimestampsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderCorePropertiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension187Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension188Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension189Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdMemoryOverallocationBehaviorFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtVertexAttributeDivisorFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GgpFrameTokenFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtPipelineCreationFeedbackFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleExtension194Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleExtension195Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleExtension196Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDriverPropertiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrShaderFloatControlsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvShaderSubgroupPartitionedFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDepthStencilResolveFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSwapchainMutableFormatFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvComputeShaderDerivativesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvMeshShaderFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvFragmentShaderBarycentricFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvShaderImageFootprintFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvScissorExclusiveFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvDeviceDiagnosticCheckpointsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrTimelineSemaphoreFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension209Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntelShaderIntegerFunctions2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntelPerformanceQueryFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrVulkanMemoryModelFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtPciBusInfoFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdDisplayNativeHdrFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FuchsiaImagepipeSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleExtension216Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleExtension217Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtMetalSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtFragmentDensityMapFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension220Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension221Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtScalarBlockLayoutFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension223Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleHlslFunctionality1Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleDecorateStringFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtSubgroupSizeControlFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension227Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdShaderCoreProperties2Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension229Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdDeviceCoherentMemoryFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension231Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension232Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension233Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension234Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension235Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension236Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSpirv14Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtMemoryBudgetFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtMemoryPriorityFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSurfaceProtectedCapabilitiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvDedicatedAllocationImageAliasingFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrSeparateDepthStencilLayoutsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntelExtension243Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MesaExtension244Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtBufferDeviceAddressFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtToolingInfoFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtSeparateStencilUsageFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtValidationFeaturesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension249Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvCooperativeMatrixFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvCoverageReductionModeFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtFragmentShaderInterlockFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtYcbcrImageArraysFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrUniformBufferStandardLayoutFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension255Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtFullScreenExclusiveFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtHeadlessSurfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrBufferDeviceAddressFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension259Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtLineRasterizationFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension261Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtHostQueryResetFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GgpExtension263Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BrcmExtension264Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BrcmExtension265Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtIndexTypeUint8Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension267Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension268Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrDeferredHostOperationsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrPipelineExecutablePropertiesFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntelExtension271Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntelExtension272Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntelExtension273Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntelExtension274Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension275Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension276Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtShaderDemoteToHelperInvocationFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvDeviceGeneratedCommandsFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension279Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension280Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArmExtension281Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtTexelBufferAlignmentFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomRenderPassTransformFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension284Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension285Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension286Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvxExtension287Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvxExtension288Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension289Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GoogleUserTypeFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrPipelineLibraryFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension292Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension293Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrShaderNonSemanticInfoFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension295Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension296Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension297Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtPipelineCreationCacheControlFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension299Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension300Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvDeviceDiagnosticsConfigFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension302Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension303Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension304Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension305Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension306Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension307Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension308Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KhrExtension309Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QcomExtension310Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NvExtension311Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension312Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtExtension313Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension314Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension315Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension316Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension317Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension318Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension319Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension320Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension321Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension322Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdExtension323Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StaticFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryFnV1_0","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceFnV1_0","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceFnV1_0","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryFnV1_1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceFnV1_1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceFnV1_1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryFnV1_2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceFnV1_2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceFnV1_2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearColorValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceCounterResultKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PerformanceValueDataINTEL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineExecutableStatisticValueKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceOrHostAddressKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceOrHostAddressConstKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelerationStructureGeometryDataKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaSqShaderStageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaDeviceClockModeAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaPerfBlockAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaSampleTypeAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaSessionAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaSessionCreateInfoAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaPerfBlockPropertiesAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceGpaFeaturesAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceGpaPropertiesAmd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceGpaPropertiesAmdBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaPerfCounterAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaSampleBeginInfoAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpaDeviceClockModeInfoAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AmdGpaInterfaceFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceWaveLimitPropertiesAmd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDeviceWaveLimitPropertiesAmdBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineShaderStageCreateInfoWaveLimitAmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugMarker","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugReport","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtils","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetalSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplaySwapchain","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawIndirectCount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalMemoryFd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PushDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracing","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Swapchain","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimelineSemaphore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaylandSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Win32Surface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XcbSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XlibSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IOSSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MacOSSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MeshShader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayTracing","synthetic":true,"types":[]}];
implementors["atom"] = [{"text":"impl&lt;P&gt; UnwindSafe for Atom&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; UnwindSafe for AtomSetOnce&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["backtrace"] = [{"text":"impl UnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SymbolName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !UnwindSafe for BacktraceFmt&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'fmt, 'a, 'b&gt; !UnwindSafe for BacktraceFrameFmt&lt;'fmt, 'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Backtrace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BacktraceFrame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BacktraceSymbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BytesOrWideString&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintFmt","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl UnwindSafe for BigEndian","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LittleEndian","synthetic":true,"types":[]}];
implementors["calloop"] = [{"text":"impl&lt;Data&gt; !UnwindSafe for EventLoop&lt;Data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !UnwindSafe for InsertError&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Data&gt; !UnwindSafe for LoopHandle&lt;Data&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LoopSignal","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !UnwindSafe for Source&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Idle","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Channel&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !UnwindSafe for Generic&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !UnwindSafe for Event&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for EventedFd&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventedRawFd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Signals","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Timer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TimerHandle&lt;T&gt;","synthetic":true,"types":[]}];
implementors["colorful"] = [{"text":"impl UnwindSafe for Colorado","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Symbol","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RGB","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HSL","synthetic":true,"types":[]}];
implementors["conrod_core"] = [{"text":"impl !UnwindSafe for Ui","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for UiCell&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UiBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bordering","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Hsla","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Text","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Motion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Press","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MousePress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyPress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Release","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MouseRelease","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyRelease","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Drag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Click","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DoubleClick","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scroll","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Input","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ui","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Widget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Button","synthetic":true,"types":[]},{"text":"impl&lt;State, Style&gt; UnwindSafe for UniqueWidgetState&lt;State, Style&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;State: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Style: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Container","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IsOverFn","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Graph","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Node","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Edge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PickWidgets","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PickScrollableWidgets","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthOrder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Id","synthetic":true,"types":[]},{"text":"impl&lt;Img&gt; UnwindSafe for Map&lt;Img&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Img: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NewIds","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Motion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Start","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Touch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mouse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonMap","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PressedButtons&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonPosition","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Widget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Mouse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Events&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Presses&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MousePresses&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MouseButtonPresses&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for KeyPresses&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Releases&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MouseButtonReleases&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MouseReleases&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for KeyReleases&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Clicks&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ButtonClicks&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Taps&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Drags&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ButtonDrags&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Texts&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Scrolls&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Global","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Events&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for UiEvents&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Id","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Touch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Phase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mesh","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scizzor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Commands&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fill","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Command","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Draw","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Padding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Axis","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Relative","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Direction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Align","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Place","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dimension","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Range","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Edge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Corner","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Primitives&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OwnedPrimitives","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Primitive&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for WalkOwnedPrimitives&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for PrimitiveKind&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; UnwindSafe for Lines&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Justify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Id","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Map","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NewIds","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Ids&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; UnwindSafe for Rects&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; UnwindSafe for RectsPerLine&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; UnwindSafe for SelectedRectsPerLine&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; UnwindSafe for SelectedRects&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; UnwindSafe for XysPerLine&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for XysPerLineFromText&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; UnwindSafe for Xs&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Index","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Info","synthetic":true,"types":[]},{"text":"impl&lt;'a, F&gt; UnwindSafe for Infos&lt;'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Rects&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; UnwindSafe for SelectedRects&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Break","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Theme","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WidgetDefault","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for UniqueDefault&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, I&gt; UnwindSafe for IterDiff&lt;E, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, 'c, 'd, W&gt; !UnwindSafe for UpdateArgs&lt;'a, 'b, 'c, 'd, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for KidAreaArgs&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KidArea","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Floating","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommonStyle","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for State&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreUpdateCache","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for PostUpdateCache&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as Widget&gt;::State: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as Widget&gt;::Style: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaybeParent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IsOver","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Generator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for List","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ListWalk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scroll","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for State&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for X","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Y","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Line","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pattern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for PointPath&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Triangles&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Circle","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for Oval&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Full","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Section","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for State&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Circumference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Triangles","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Polygon&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Triangles&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl&lt;S, I&gt; UnwindSafe for Triangles&lt;S, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SingleColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MultiColor","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; UnwindSafe for Triangle&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for State&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, I&gt; UnwindSafe for TrianglesUnpositioned&lt;S, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Wrap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BorderedRectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RoundedBorderTriangles","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; UnwindSafe for Button&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlatIds","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageIds","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimesClicked","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageColor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Canvas&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Length","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Direction","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CollapsibleArea&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ids","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Area","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for DropDownList&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxHeight","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; UnwindSafe for EnvelopeEditor&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as EnvelopePoint&gt;::X: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as EnvelopePoint&gt;::Y: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for Event&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as EnvelopePoint&gt;::X: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as EnvelopePoint&gt;::Y: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FileNavigator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Directory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Types&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DirectoryView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;X, Y, I&gt; UnwindSafe for Grid&lt;X, Y, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Lines&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;X, Y&gt; UnwindSafe for Axis&lt;X, Y&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; UnwindSafe for List&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dynamic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; UnwindSafe for Item&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for Scrollbar&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; UnwindSafe for Items&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Up","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Down","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Left","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Right","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemInstantiation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScrollbarPosition","synthetic":true,"types":[]},{"text":"impl&lt;M, D, S&gt; UnwindSafe for ListSelect&lt;M, D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;M, D, S&gt; UnwindSafe for Events&lt;M, D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as Mode&gt;::Selection: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Single","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Multiple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ListDirection","synthetic":true,"types":[]},{"text":"impl&lt;Selection, Direction, Size&gt; UnwindSafe for Event&lt;Selection, Direction, Size&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Direction: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Selection: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Size: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; UnwindSafe for Selection&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Matrix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Elements","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Element","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; UnwindSafe for Layout&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E&gt; UnwindSafe for Graph&lt;'a, N, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; UnwindSafe for State&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; UnwindSafe for NodeSocket&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Camera","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; UnwindSafe for Session&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; UnwindSafe for SessionEvents&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; UnwindSafe for SessionNodes&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; UnwindSafe for SessionEdges&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; UnwindSafe for Events&lt;'a, NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; UnwindSafe for Nodes&lt;'a, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; UnwindSafe for NodeContext&lt;'a, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI, W&gt; UnwindSafe for NodeWidget&lt;'a, NI, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; UnwindSafe for Edges&lt;'a, NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; UnwindSafe for Edge&lt;'a, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI, W&gt; UnwindSafe for EdgeWidget&lt;'a, NI, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; UnwindSafe for Event&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; UnwindSafe for NodeEvent&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; UnwindSafe for EdgeEvent&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for Node&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for Event&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketRects","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketSide","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketType","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for NumberDialer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlyphSlot","synthetic":true,"types":[]},{"text":"impl&lt;X, Y, F&gt; UnwindSafe for PlotPath&lt;X, Y, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for RangeSlider&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Drag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Edge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RoundedRectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Points","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for Scrollbar&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Slider&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Tabs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tab","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TabRects&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Layout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TextBox&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TextEdit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Drag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cursor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TitleBar&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Toggle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimesClicked","synthetic":true,"types":[]},{"text":"impl&lt;'a, X, Y&gt; UnwindSafe for XYPad&lt;'a, X, Y&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MouseCursor","synthetic":true,"types":[]}];
implementors["conrod_example_shared"] = [{"text":"impl UnwindSafe for DemoApp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ids","synthetic":true,"types":[]}];
implementors["conrod_gfx"] = [{"text":"impl&lt;'a&gt; UnwindSafe for Commands&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for Renderer&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Command&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Draw&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RendererCreationError","synthetic":true,"types":[]}];
implementors["conrod_glium"] = [{"text":"impl !UnwindSafe for GlyphCache","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Renderer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Commands&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Command&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Draw&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RendererCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawError","synthetic":true,"types":[]}];
implementors["conrod_rendy"] = [{"text":"impl&lt;B&gt; UnwindSafe for UiTexture&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UiPipelineDesc","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for UiPipeline&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for SimpleUiAux&lt;B&gt;","synthetic":true,"types":[]}];
implementors["conrod_vulkano"] = [{"text":"impl UnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Renderer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GlyphCacheCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DrawCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RendererCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawError","synthetic":true,"types":[]}];
implementors["conrod_wgpu"] = [{"text":"impl !UnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Renderer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for GlyphCacheCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Render&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderPassCommand&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["copyless"] = [{"text":"impl&lt;T&gt; UnwindSafe for BoxAllocation&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for VecAllocation&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for VecEntry&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["copypasta"] = [{"text":"impl UnwindSafe for Clipboard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Primary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Primary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Clipboard","synthetic":true,"types":[]},{"text":"impl&lt;S&nbsp;=&nbsp;Clipboard&gt; !UnwindSafe for X11ClipboardContext&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NopClipboardContext","synthetic":true,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for TryIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Select&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SelectedOperation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReadyTimeoutError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelectTimeoutError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TryReadyError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TrySelectError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecvTimeoutError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Receiver&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; UnwindSafe for Worker&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Stealer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Injector&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Steal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T&gt; UnwindSafe for Atomic&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g, T, P&gt; UnwindSafe for CompareAndSetError&lt;'g, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Owned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g, T&gt; UnwindSafe for Shared&lt;'g, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Collector","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LocalHandle","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Guard","synthetic":true,"types":[]}];
implementors["crossbeam_queue"] = [{"text":"impl&lt;T&gt; !UnwindSafe for ArrayQueue&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PopError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for PushError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for SegQueue&lt;T&gt;","synthetic":true,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; UnwindSafe for CachePadded&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Backoff","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Parker","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Unparker","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; UnwindSafe for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; UnwindSafe for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for Scope&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; !UnwindSafe for ScopedThreadBuilder&lt;'scope, 'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; !UnwindSafe for ScopedJoinHandle&lt;'scope, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for AtomicCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; UnwindSafe for ShardedLock&lt;T&gt;","synthetic":false,"types":[]}];
implementors["daggy"] = [{"text":"impl&lt;N, E, Ix&gt; UnwindSafe for Dag&lt;N, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ix&gt; UnwindSafe for Children&lt;N, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ix&gt; UnwindSafe for Parents&lt;N, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; UnwindSafe for EdgeIndices&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for WouldCycle&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, F&gt; UnwindSafe for Recursive&lt;G, Ix, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, A, B&gt; UnwindSafe for Chain&lt;G, Ix, A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, P&gt; UnwindSafe for Filter&lt;W, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, W&gt; UnwindSafe for Peekable&lt;G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, P&gt; UnwindSafe for SkipWhile&lt;W, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, P&gt; UnwindSafe for TakeWhile&lt;W, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, W&gt; UnwindSafe for Skip&lt;G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, W&gt; UnwindSafe for Take&lt;G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, W&gt; UnwindSafe for Cycle&lt;G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; UnwindSafe for Inspect&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; UnwindSafe for Iter&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; UnwindSafe for IterEdges&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; UnwindSafe for IterNodes&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; UnwindSafe for IterWeights&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; UnwindSafe for IterEdgeWeights&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; UnwindSafe for IterNodeWeights&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["dlib"] = [{"text":"impl UnwindSafe for DlError","synthetic":true,"types":[]}];
implementors["draw_state"] = [{"text":"impl UnwindSafe for Offset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MultiSample","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rasterizer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilSide","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stencil","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Depth","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendChannel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Blend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RefValues","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CullFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RasterMethod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Comparison","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Equation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Factor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mirror","synthetic":true,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; UnwindSafe for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["fixedbitset"] = [{"text":"impl UnwindSafe for FixedBitSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Difference&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Intersection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Union&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Ones&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl UnwindSafe for FnvHasher","synthetic":true,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Cancellation&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Canceled","synthetic":true,"types":[]}];
implementors["futures_executor"] = [{"text":"impl&lt;S&gt; UnwindSafe for BlockingStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LocalPool","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LocalSpawner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Enter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EnterError","synthetic":true,"types":[]}];
implementors["futures_task"] = [{"text":"impl UnwindSafe for SpawnError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for WakerRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for FutureObj&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for LocalFutureObj&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;F&gt; UnwindSafe for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for Fuse&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for Inspect&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for Map&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for NeverError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; UnwindSafe for Then&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for UnitError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, T&gt; UnwindSafe for MapInto&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for CatchUnwind&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !UnwindSafe for Remote&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for RemoteHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !UnwindSafe for Shared&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; UnwindSafe for AndThen&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; UnwindSafe for ErrInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; UnwindSafe for OkInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for InspectErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for InspectOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for IntoFuture&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for MapErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for MapOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; UnwindSafe for OrElse&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for UnwrapOrElse&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F, G&gt; UnwindSafe for MapOkOrElse&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; UnwindSafe for TryFlatten&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, Si&gt; UnwindSafe for FlattenSink&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for Lazy&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for OptionFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; UnwindSafe for Join&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; UnwindSafe for Join3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; UnwindSafe for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; UnwindSafe for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for JoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for Select&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for SelectAll&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; UnwindSafe for TryJoin&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; UnwindSafe for TryJoin3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; UnwindSafe for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; UnwindSafe for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for TryJoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for TrySelect&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for SelectOk&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !UnwindSafe for Abortable&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AbortHandle","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AbortRegistration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Aborted","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for MaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for TryMaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; UnwindSafe for Chain&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; UnwindSafe for Collect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Concat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Enumerate&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for FilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, U, F&gt; UnwindSafe for FlatMap&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; UnwindSafe for Fold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for ForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Fuse&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for Inspect&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for Map&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; !UnwindSafe for Next&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; !UnwindSafe for Peek&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Peekable&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, S, Fut, F&gt; UnwindSafe for Scan&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; !UnwindSafe for SelectNextSome&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Skip&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for StreamFuture&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Take&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut&gt; UnwindSafe for TakeUntil&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for Then&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; UnwindSafe for Zip&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as Stream&gt;::Item: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for CatchUnwind&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Chunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for ReadyChunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Si&gt; UnwindSafe for Forward&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !UnwindSafe for BufferUnordered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !UnwindSafe for Buffered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; !UnwindSafe for ForEachConcurrent&lt;St, Fut, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, Item&gt; !UnwindSafe for ReuniteError&lt;T, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, Item&gt; !UnwindSafe for SplitSink&lt;S, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !UnwindSafe for SplitStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for AndThen&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, E&gt; UnwindSafe for ErrInto&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for InspectErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for InspectOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for IntoStream&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for MapErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for MapOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for OrElse&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; UnwindSafe for TryCollect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for TryConcat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TryFilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; UnwindSafe for TryFold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TryForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; !UnwindSafe for TryNext&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; UnwindSafe for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for IntoAsyncRead&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !UnwindSafe for TryBufferUnordered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; !UnwindSafe for TryForEachConcurrent&lt;St, Fut, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for Once&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; UnwindSafe for Select&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; UnwindSafe for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for FuturesOrdered&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !UnwindSafe for FuturesUnordered&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !UnwindSafe for SelectAll&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !UnwindSafe for Iter&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !UnwindSafe for IterMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !UnwindSafe for IterPinMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !UnwindSafe for IterPinRef&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si, Item&gt; !UnwindSafe for Close&lt;'a, Si, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Drain&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si1, Si2&gt; UnwindSafe for Fanout&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si, Item&gt; !UnwindSafe for Flush&lt;'a, Si, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, E&gt; UnwindSafe for SinkErrInto&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, F&gt; UnwindSafe for SinkMapErr&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si, Item&gt; !UnwindSafe for Send&lt;'a, Si, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si, St&gt; !UnwindSafe for SendAll&lt;'a, Si, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; UnwindSafe for With&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, St, F&gt; UnwindSafe for WithFlatMap&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item&gt; UnwindSafe for Buffer&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for AllowStdIo&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; UnwindSafe for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for Close&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W&gt; !UnwindSafe for Copy&lt;'a, R, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W&gt; !UnwindSafe for CopyBuf&lt;'a, R, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for Flush&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W, Item&gt; UnwindSafe for IntoSink&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for Read&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadVectored&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadExact&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadLine&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadToEnd&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadToString&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadUntil&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Repeat","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; !UnwindSafe for Seek&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sink","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for ReuniteError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for Write&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for WriteVectored&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for WriteAll&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, U&gt; !UnwindSafe for MappedMutexGuard&lt;'a, T, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; UnwindSafe for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for MutexLockFuture&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["fxhash"] = [{"text":"impl UnwindSafe for FxHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FxHasher64","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FxHasher32","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]}];
implementors["gfx"] = [{"text":"impl&lt;R, C&gt; !UnwindSafe for Encoder&lt;R, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !UnwindSafe for Slice&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, D&gt; UnwindSafe for CopyError&lt;S, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for UpdateError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for PipelineStateError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !UnwindSafe for IndexBuffer&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for RawDataSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Sampler: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::ShaderResourceView: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::UnorderedAccessView: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, M&gt; UnwindSafe for PipelineState&lt;R, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::PipelineStateObject: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for ElementError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for InitError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; UnwindSafe for VertexBufferCommon&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawVertexBuffer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ConstantBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawConstantBuffer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Global&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawGlobal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NonInstanced","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instanced","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ShaderResource&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawShaderResource","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for UnorderedAccess&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sampler","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TextureSampler&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for RenderTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for BlendTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawRenderTarget","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for DepthTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for StencilTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for DepthStencilTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scissor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendRef","synthetic":true,"types":[]},{"text":"impl&lt;R, Data&gt; !UnwindSafe for Bundle&lt;R, Data&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProgramError","synthetic":true,"types":[]}];
implementors["gfx_backend_empty"] = [{"text":"impl UnwindSafe for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandQueue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFamily","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Backend","synthetic":true,"types":[]}];
implementors["gfx_backend_vulkan"] = [{"text":"impl UnwindSafe for VK_ENTRY","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawInstance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFamily","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceCreationFeatures","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandQueue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugMessenger","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Backend","synthetic":true,"types":[]}];
implementors["gfx_core"] = [{"text":"impl&lt;R&gt; UnwindSafe for VertexShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for HullShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for DomainShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for GeometryShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for PixelShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capabilities","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AdapterInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for ShaderSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Primitive","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubmissionError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Raw&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Info","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Role","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !UnwindSafe for AccessInfo&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for AccessGuard&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for AccessGuardBuffers&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for AccessGuardBuffersChain&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DummyDevice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DummyFence","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DummyMapping","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DummyCommandBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DummyResources","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResourceViewError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TargetViewError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CombinedError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Swizzle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl UnwindSafe for U8Norm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for I8Norm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for U16Norm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for I16Norm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for F16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChannelType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Int","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Inorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Float","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R4_G4","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R4_G4_B4_A4","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R5_G5_B5_A1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R5_G6_B5","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8_G8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8_G8_B8_A8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R10_G10_B10_A2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R11_G11_B10","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16_G16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16_G16_B16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16_G16_B16_A16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32_G32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32_G32_B32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32_G32_B32_A32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8_G8_R8_A8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D24","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D24_S8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC1_R8_G8_B8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC3_R8_G8_B8_A8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChannelSource","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !UnwindSafe for RawBuffer&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; !UnwindSafe for Buffer&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Shader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Program&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for RawPipelineState&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::PipelineStateObject: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for RawTexture&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, S&gt; UnwindSafe for Texture&lt;R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !UnwindSafe for RawShaderResourceView&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; !UnwindSafe for ShaderResourceView&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !UnwindSafe for RawUnorderedAccessView&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; !UnwindSafe for UnorderedAccessView&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for RawRenderTargetView&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for RawDepthStencilView&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; UnwindSafe for RenderTargetView&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; UnwindSafe for DepthStencilView&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Sampler&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Fence&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Fence: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !UnwindSafe for Manager&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T&gt; !UnwindSafe for Reader&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T&gt; !UnwindSafe for Writer&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Access","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Usage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthStencilInfo","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for Element&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexBufferDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Descriptor","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for VertexBufferSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for ConstantBufferParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for ResourceViewParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::ShaderResourceView: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for UnorderedViewParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::UnorderedAccessView: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for SamplerParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Sampler: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for PixelTargetSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Usage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttributeVar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstVar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstantBufferVar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureVar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnorderedVar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerVar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputVar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProgramInfo","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Program&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateProgramError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IsArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IsComparison","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IsMultiSample","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IsRect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MatrixFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContainerType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UniformValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompatibilityError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateShaderError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Raw&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for ImageInfoCommon&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TextureCopyRegion&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PackedColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Info","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResourceDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthStencilFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthStencilDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayerError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AaMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterMethod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CubeFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mipmap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WrapMode","synthetic":true,"types":[]}];
implementors["gfx_descriptor"] = [{"text":"impl&lt;B&gt; UnwindSafe for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for DescriptorAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorCounts","synthetic":true,"types":[]}];
implementors["gfx_hal"] = [{"text":"impl UnwindSafe for Features","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Hints","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Limits","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsupportedBackend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryTypeId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Gpu&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AdapterInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Usage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Access","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for IndexBufferView&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearDepthStencil","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferCopy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageCopy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageResolve","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageBlit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for CommandBufferInheritanceInfo&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentClear","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassContents","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceLost","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceLost","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowInUse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutOfMemory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OomOrDeviceLost","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AllocationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MapError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaitFor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Aspects","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatBits","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Swizzle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Properties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFeature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferFeature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg4Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba4Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra4Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R5g6b5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B5g6r5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R5g5b5a1Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B5g5r5a1Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A1r5g5b5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2r10g10b10Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2r10g10b10Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2r10g10b10Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2r10g10b10Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2r10g10b10Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2r10g10b10Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2b10g10r10Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2b10g10r10Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2b10g10r10Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2b10g10r10Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2b10g10r10Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2b10g10r10Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg16Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg16Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg16Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg16Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg16Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg16Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb16Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb16Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb16Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb16Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb16Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb16Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba16Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba16Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba16Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba16Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba16Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba16Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg32Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg32Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb32Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb32Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba32Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba32Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg64Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg64Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg64Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb64Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb64Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb64Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba64Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba64Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba64Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B10g11r11Ufloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for E5b9g9r9Ufloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for X8D24Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for S8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D16UnormS8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D24UnormS8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D32SfloatS8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc1RgbUnorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc1RgbSrgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc1RgbaUnorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc1RgbaSrgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc2Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc2Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc3Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc3Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc4Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc4Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc5Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc6hUfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc6hSfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc7Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bc7Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Etc2R8g8b8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Etc2R8g8b8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Etc2R8g8b8a1Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Etc2R8g8b8a1Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Etc2R8g8b8a8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Etc2R8g8b8a8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EacR11Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EacR11Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EacR11g11Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EacR11g11Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc4x4Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc4x4Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc5x4Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc5x4Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc5x5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc5x5Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc6x5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc6x5Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc6x6Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc6x6Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc8x5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc8x5Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc8x6Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc8x6Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc8x8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc8x8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x5Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x5Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x6Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x6Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x10Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc10x10Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc12x10Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc12x10Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc12x12Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Astc12x12Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Component","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChannelType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Offset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewCapabilities","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Usage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PackedColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Access","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Subresource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubresourceLayers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubresourceRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubresourceFootprint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tiling","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayerError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CubeFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WrapMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Layout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Properties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dependencies","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Requirements","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Segment","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for Barrier&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentOps","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Attachment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubpassDesc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for Subpass&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for ComputePipelineDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorRangeDesc","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, WI&gt; UnwindSafe for DescriptorSetWrite&lt;'a, B, WI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;WI: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for DescriptorSetCopy&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearRect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Viewport","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BakedStates","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for GraphicsPipelineDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthBias","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rasterizer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Multisampling","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for Element&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexBufferDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttributeDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputAssemblerDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorBlendDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthTest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilFace","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Sided&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilTest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthStencilDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Face","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecializationConstant","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Specialization&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineStage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for EntryPoint&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCreationFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferDescriptorType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferDescriptorFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageDescriptorType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AllocationError","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for Descriptor&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::BufferView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for PrimitiveAssemblerDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PolygonMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogicOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexInputRate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Primitive","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Comparison","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Factor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; UnwindSafe for BasePipeline&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for State&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for Query&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueryPool: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ControlFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResultFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineStatistic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl&lt;Ic, Iw, Is&gt; UnwindSafe for Submission&lt;Ic, Iw, Is&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ic: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Is: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Iw: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFamilyId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for QueueGroup&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extent2D","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceCapabilities","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompositeAlphaMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Suboptimal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AcquireError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitError","synthetic":true,"types":[]}];
implementors["gfx_memory"] = [{"text":"impl UnwindSafe for DedicatedAllocator","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for DedicatedBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for GeneralAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for GeneralBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeneralConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for LinearAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for LinearBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinearConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Heaps&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for MemoryBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for MappedRange&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, T, B&gt; !UnwindSafe for Writer&lt;'a, 'b, T, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Memory&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryUtilization","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryHeapUtilization","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryTypeUtilization","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TotalMemoryUtilization","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeapsError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryUsage","synthetic":true,"types":[]}];
implementors["glium"] = [{"text":"impl UnwindSafe for Blend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Depth","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for IndexBuffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for VertexBuffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Program","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinearSyncFence","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SyncFence","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlitTarget","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IncompatibleOpenGl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Profile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendingFunction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinearBlendingFactor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthTest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilTest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilOperation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Api","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Handle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawUniformValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapBuffersError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReleaseBehavior","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for GlutinBackend","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DisplayCreationError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Headless","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for GlutinBackend","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Buffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BufferAny","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for BufferMutSlice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for BufferSlice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BufferAnySlice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'b, D&gt; !UnwindSafe for Mapping&lt;'b, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'b, D&gt; !UnwindSafe for WriteMapping&lt;'b, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'b, D&gt; !UnwindSafe for ReadMapping&lt;'b, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Inserter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReadError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferType","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TimestampQuery","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DebugCallbackBehavior","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Severity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageType","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SamplesPassedQuery","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TimeElapsedQuery","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PrimitivesGeneratedQuery","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AnySamplesPassedQuery","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TransformFeedbackPrimitivesWrittenQuery","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stencil","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for DrawParameters&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ConditionalRendering&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthClamp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BackfaceCullingMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PolygonMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Smooth","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProvokingVertex","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for SamplesQueryParam&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DefaultFramebuffer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderBuffer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderBufferAny","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthRenderBuffer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StencilRenderBuffer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthStencilRenderBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for SimpleFrameBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for MultiOutputFrameBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EmptyFrameBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DefaultFramebufferAttachment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ColorAttachment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for DepthAttachment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for StencilAttachment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for DepthStencilAttachment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IndexBufferSlice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IndexBufferAny","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DrawCommandsNoIndicesBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawCommandNoIndices","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DrawCommandsIndicesBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawCommandIndices","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoIndices","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for IndicesSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimitiveType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexType","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ComputeShader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComputeCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Uniform","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UniformBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransformFeedbackVarying","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransformFeedbackBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubroutineData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubroutineUniform","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SourceCode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Binary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputPrimitives","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransformFeedbackMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderStage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProgramCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProgramChooserCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetBinaryError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ProgramCreationInput&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for UniformBuffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t, T&gt; UnwindSafe for Sampler&lt;'t, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerBehavior","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmptyUniforms","synthetic":true,"types":[]},{"text":"impl&lt;'n, T, R&gt; UnwindSafe for UniformsStorage&lt;'n, T, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerWrapFunction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MagnifySamplerFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinifySamplerFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthTextureComparison","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for UniformValue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UniformType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayoutMismatchError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VertexBufferAny","synthetic":true,"types":[]},{"text":"impl&lt;'b, T&gt; !UnwindSafe for VertexBufferSlice&lt;'b, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for TransformFeedbackSession&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmptyVertexAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmptyInstanceAttributes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for PerInstance&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttributeType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for VerticesSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TextureAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for TextureAnyMipmap&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for TextureAnyLayer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for TextureAnyLayerMipmap&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for TextureAnyImage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for RawImage1d&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for RawImage2d&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for RawImage3d&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClientFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UncompressedFloatFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UncompressedIntFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UncompressedUintFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompressedFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthStencilFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompressedSrgbFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SrgbFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dimensions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InternalFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InternalFormatType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetFormatError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CubeLayer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MipmapsOption","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompressedMipmapsOption","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureCreationError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ResidentTexture","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for TextureHandle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindlessTexturesNotSupportedError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for BufferTexture&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferTextureRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferTextureType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureBufferContentType","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for PixelBuffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Texture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for Texture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompressedTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SrgbTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompressedSrgbTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IntegralTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UnsignedTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StencilTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthStencilTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Texture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for Texture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompressedTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SrgbTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompressedSrgbTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IntegralTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UnsignedTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StencilTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthStencilTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Texture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for Texture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IntegralTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SrgbTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UnsignedTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StencilTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthStencilTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Texture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for Texture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompressedTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SrgbTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompressedSrgbTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IntegralTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UnsignedTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthStencilTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Texture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for Texture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for Texture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for Texture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompressedTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SrgbTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompressedSrgbTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IntegralTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UnsignedTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StencilTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthStencilTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Texture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for Texture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for Texture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for Texture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompressedTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SrgbTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompressedSrgbTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IntegralTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UnsignedTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StencilTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthStencilTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Texture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for Texture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for Texture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for Texture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SrgbTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IntegralTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UnsignedTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StencilTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthStencilTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Cubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompressedCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SrgbCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompressedSrgbCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IntegralCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UnsignedCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StencilCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthStencilCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompressedCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SrgbCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for SrgbCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompressedSrgbCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for CompressedSrgbCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IntegralCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for IntegralCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UnsignedCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for UnsignedCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StencilCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for StencilCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthStencilCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !UnwindSafe for DepthStencilCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]}];
implementors["glutin"] = [{"text":"impl !UnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RawContext","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WindowedContext","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ContextBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PixelFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PixelFormatRequirements","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for GlAttributes&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ContextError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Api","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlProfile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Robustness","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReleaseBehavior","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawHandle","synthetic":true,"types":[]}];
implementors["glutin_egl_sys"] = [{"text":"impl UnwindSafe for FnPtr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Egl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EGLClientPixmapHI","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __eglMustCastToProperFunctionPointerType_fn","synthetic":true,"types":[]}];
implementors["glutin_glx_sys"] = [{"text":"impl UnwindSafe for FnPtr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Glx","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XVisualInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLXPbufferClobberEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLXBufferSwapComplete","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLXBufferClobberEventSGIX","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLXHyperpipeNetworkSGIX","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLXHyperpipeConfigSGIX","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLXPipeRect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLXPipeRectLimits","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __GLsync","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _cl_context","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _cl_event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Visual","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __GLXextFuncPtr_fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FnPtr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Glx","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XVisualInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLXPbufferClobberEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLXBufferSwapComplete","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLXBufferClobberEventSGIX","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLXHyperpipeNetworkSGIX","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLXHyperpipeConfigSGIX","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLXPipeRect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLXPipeRectLimits","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __GLsync","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _cl_context","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _cl_event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Visual","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __GLXextFuncPtr_fn","synthetic":true,"types":[]}];
implementors["graphics"] = [{"text":"impl UnwindSafe for DrawState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Blend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stencil","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Character&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Polygon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Line","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Shape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CircleArc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Border","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ellipse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Border","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Shape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Text","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Grid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GridCells","synthetic":true,"types":[]},{"text":"impl&lt;'a, F, T&gt; UnwindSafe for GlyphCache&lt;'a, F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TexturePacker&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["hibitset"] = [{"text":"impl UnwindSafe for AtomicBitSet","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for BitIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for DrainBitIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BitSetAll","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for BitSetAnd&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for BitSetNot&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for BitSetOr&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for BitSetXor&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BitSet","synthetic":true,"types":[]}];
implementors["inplace_it"] = [{"text":"impl&lt;'a, T&gt; !UnwindSafe for UninitializedSliceMemoryGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for SliceMemoryGuard&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["input"] = [{"text":"impl UnwindSafe for AfterRenderArgs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CloseArgs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IdleArgs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonArgs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResizeArgs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderArgs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TouchArgs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UpdateArgs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Touch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Button","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Motion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HatState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileDrag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Input","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Loop","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ControllerButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ControllerHat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ControllerAxisArgs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModifierKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MouseButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventId","synthetic":true,"types":[]}];
implementors["interpolation"] = [{"text":"impl UnwindSafe for EaseFunction","synthetic":true,"types":[]}];
implementors["iovec"] = [{"text":"impl UnwindSafe for IoVec","synthetic":true,"types":[]}];
implementors["libloading"] = [{"text":"impl UnwindSafe for Library","synthetic":true,"types":[]},{"text":"impl&lt;'lib, T&gt; UnwindSafe for Symbol&lt;'lib, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Library","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Symbol&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["line_drawing"] = [{"text":"impl&lt;T&gt; UnwindSafe for Bresenham&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; UnwindSafe for Midpoint&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; UnwindSafe for XiaolinWu&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for WalkGrid&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Supercover&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Bresenham3d&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; UnwindSafe for WalkVoxels&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for BresenhamCircle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VoxelOrigin","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; UnwindSafe for Steps&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Octant","synthetic":true,"types":[]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K, V, S&gt; UnwindSafe for LinkedHashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&nbsp;=&nbsp;RandomState&gt; !UnwindSafe for Entries&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Keys&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Values&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; UnwindSafe for OccupiedEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&nbsp;=&nbsp;RandomState&gt; !UnwindSafe for VacantEntry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&nbsp;=&nbsp;RandomState&gt; !UnwindSafe for Entry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; UnwindSafe for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["memmap"] = [{"text":"impl UnwindSafe for MmapOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mmap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MmapMut","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl !UnwindSafe for Poll","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Registration","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SetReadiness","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PollOpt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ready","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Token","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Events","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for EventedFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixReady","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpListener","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UdpSocket","synthetic":true,"types":[]}];
implementors["mio_extras"] = [{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for SyncSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for SendError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for TrySendError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Timer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Timeout","synthetic":true,"types":[]}];
implementors["naga"] = [{"text":"impl&lt;T&gt; UnwindSafe for Arena&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Handle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Header","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructMember","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalUse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalVariable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LocalVariable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FallThrough","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderStage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuiltIn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VectorSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScalarKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArraySize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemberOrigin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageDimension","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeInner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstantInner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Binding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnaryOperator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BinaryOperator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntrinsicFunction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DerivativeAxis","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionOrigin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Expression","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Statement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindTarget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindSource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Options&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for Writer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Writer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriterFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplingFlags","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Parser&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ParseError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Parser","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Token&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Error&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scope","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Typifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnexpectedConstantTypeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Validator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResolveError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidationError","synthetic":true,"types":[]}];
implementors["net2"] = [{"text":"impl UnwindSafe for TcpBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UdpBuilder","synthetic":true,"types":[]}];
implementors["nix"] = [{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dir","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; !UnwindSafe for Iter&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Errno","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SealFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FdFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpliceFFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FallocateFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for FcntlArg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlockArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InterfaceAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InterfaceAddressIterator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleInitFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeleteModuleFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MsFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MntFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MQ_OFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FdFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MqAttr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InterfaceFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PollFd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PollFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpenptyResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForkptyResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PtyMaster","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CloneFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CpuSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for AioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for LioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AioFsyncMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LioOpcode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LioMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AioCancelStat","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpollFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpollCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpollEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpollOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EfdFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemFdCreateFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProtFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MapFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MsFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MlockAllFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MmapAdvise","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Options","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QuotaValidFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dqblk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QuotaType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QuotaFmt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RebootMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FdSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SigEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalIterator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SaFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SigSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SigAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Signal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SigmaskHow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SigHandler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SigevNotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SfdFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalFd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinkAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NetlinkAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AlgAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SockFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MsgFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixCredentials","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpMembershipRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv6MembershipRequest","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for CmsgSpace&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RecvMsg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CmsgIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddressFamily","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SockAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InetAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SockType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SockProtocol","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ControlMessageOwned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ControlMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SockLevel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Shutdown","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReuseAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReusePort","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpNoDelay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Linger","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpAddMembership","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpDropMembership","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv6AddMembership","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv6DropMembership","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpMulticastTtl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpMulticastLoop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReceiveTimeout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SendTimeout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Broadcast","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OobInline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeepAlive","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PeerCredentials","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpKeepIdle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RcvBuf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SndBuf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RcvBufForce","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SndBufForce","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SockType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AcceptConn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OriginalDst","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReceiveTimestamp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpTransparent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mark","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PassCred","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpCongestion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv4PacketInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv6RecvPacketInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AlgSetAeadAuthSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for AlgSetKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FchmodatFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UtimensatFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FsFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Statvfs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SysInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Termios","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ControlFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LocalFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaudRate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlushArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlowArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecialCharacterIndices","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeVal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RemoteIoVec","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IoVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UtsName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaitPidFlag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaitStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddWatchFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Inotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WatchDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Uid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccessFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForkResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FchownatFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Whence","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PathconfVar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SysconfVar","synthetic":true,"types":[]}];
implementors["num_bigint"] = [{"text":"impl UnwindSafe for ParseBigIntError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BigUint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BigInt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sign","synthetic":true,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T&gt; UnwindSafe for Complex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for ParseComplexError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; UnwindSafe for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_iter"] = [{"text":"impl&lt;A&gt; UnwindSafe for Range&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for RangeInclusive&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for RangeStep&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for RangeStepInclusive&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for RangeFrom&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for RangeStepFrom&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; UnwindSafe for Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseRatioError","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl UnwindSafe for ParseFloatError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FloatErrorKind","synthetic":true,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T, F&gt; UnwindSafe for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; UnwindSafe for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;UnwindSafe&gt; UnwindSafe for OnceCell&lt;T&gt;","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T&gt; UnwindSafe for OrderedFloat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for NotNan&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FloatIsNan","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for ParseNotNanError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ordermap"] = [{"text":"impl&lt;K, V, S&gt; UnwindSafe for OrderMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&nbsp;=&nbsp;RandomState&gt; !UnwindSafe for OccupiedEntry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&nbsp;=&nbsp;RandomState&gt; !UnwindSafe for VacantEntry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Keys&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Values&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for ValuesMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Drain&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&nbsp;=&nbsp;RandomState&gt; !UnwindSafe for Entry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; UnwindSafe for OrderSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; UnwindSafe for Difference&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; UnwindSafe for Intersection&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S1, S2&gt; UnwindSafe for SymmetricDifference&lt;'a, T, S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; UnwindSafe for Union&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["osmesa_sys"] = [{"text":"impl UnwindSafe for OsMesa","synthetic":true,"types":[]},{"text":"impl UnwindSafe for osmesa_context","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl UnwindSafe for Condvar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Once","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawMutex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawRwLock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawThreadId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl UnwindSafe for ParkToken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnparkResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnparkToken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpinWait","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParkResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequeueOp","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl UnwindSafe for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["petgraph"] = [{"text":"impl UnwindSafe for Direction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Directed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Undirected","synthetic":true,"types":[]},{"text":"impl&lt;G, F&gt; UnwindSafe for NodeFiltered&lt;G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; UnwindSafe for NodeFilteredNeighbors&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; UnwindSafe for NodeFilteredNodes&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, I, F&gt; UnwindSafe for NodeFilteredEdgeReferences&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, I, F&gt; UnwindSafe for NodeFilteredEdges&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, F&gt; UnwindSafe for EdgeFiltered&lt;G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, F&gt; UnwindSafe for EdgeFilteredNeighbors&lt;'a, G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IntoEdges&gt;::Edges: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, I, F&gt; UnwindSafe for EdgeFilteredEdges&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; UnwindSafe for Reversed&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for ReversedEdgeReference&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for ReversedEdgeReferences&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Time","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; UnwindSafe for Dfs&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; UnwindSafe for DfsPostOrder&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; UnwindSafe for Bfs&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; UnwindSafe for Topo&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, C&gt; UnwindSafe for WalkerIter&lt;W, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; UnwindSafe for DfsEvent&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Control&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; UnwindSafe for FilterElements&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E&gt; UnwindSafe for Element&lt;N, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; UnwindSafe for DfsSpace&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; UnwindSafe for MinSpanningTree&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as Data&gt;::EdgeWeight: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as GraphBase&gt;::NodeId: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IntoNodeReferences&gt;::NodeReferences: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; UnwindSafe for Cycle&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NegativeCycle","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; UnwindSafe for Dominators&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N&gt; UnwindSafe for DominatorsIter&lt;'a, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ty&gt; UnwindSafe for GraphMap&lt;N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N&gt; UnwindSafe for Nodes&lt;'a, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ty&gt; UnwindSafe for Neighbors&lt;'a, N, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ty&gt; UnwindSafe for NeighborsDirected&lt;'a, N, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; UnwindSafe for Edges&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; UnwindSafe for AllEdges&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; !UnwindSafe for AllEdgesMut&lt;'a, N, E, Ty&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'b, T&gt; UnwindSafe for Ptr&lt;'b, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; UnwindSafe for NodeIdentifiers&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; UnwindSafe for NodeReferences&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; UnwindSafe for NodeIndex&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; UnwindSafe for EdgeIndex&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, Ix&gt; UnwindSafe for Node&lt;N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, Ix&gt; UnwindSafe for Edge&lt;E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ty, Ix&gt; UnwindSafe for Graph&lt;N, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ty, Ix&gt; UnwindSafe for Externals&lt;'a, N, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; UnwindSafe for Neighbors&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; UnwindSafe for Edges&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ix&nbsp;=&nbsp;u32&gt; !UnwindSafe for NodeWeightsMut&lt;'a, N, Ix&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&nbsp;=&nbsp;u32&gt; !UnwindSafe for EdgeWeightsMut&lt;'a, E, Ix&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; UnwindSafe for WalkNeighbors&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; UnwindSafe for NodeIndices&lt;Ix&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; UnwindSafe for EdgeIndices&lt;Ix&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; UnwindSafe for EdgeReference&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ix&gt; UnwindSafe for NodeReferences&lt;'a, N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; UnwindSafe for EdgeReferences&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G&gt; !UnwindSafe for Frozen&lt;'a, G&gt;","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ty, Ix&gt; UnwindSafe for StableGraph&lt;N, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ix&gt; UnwindSafe for NodeReferences&lt;'a, N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; UnwindSafe for EdgeReference&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; UnwindSafe for Edges&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; UnwindSafe for EdgeReferences&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; UnwindSafe for Neighbors&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; UnwindSafe for WalkNeighbors&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ix&gt; UnwindSafe for NodeIndices&lt;'a, N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; UnwindSafe for EdgeIndices&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G&gt; UnwindSafe for Dot&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; UnwindSafe for UnionFind&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ty, Ix&gt; UnwindSafe for Csr&lt;N, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EdgesNotSorted","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; UnwindSafe for Edges&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; UnwindSafe for EdgeReference&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; UnwindSafe for EdgeReferences&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Ix&gt; UnwindSafe for Neighbors&lt;'a, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; UnwindSafe for NodeIdentifiers&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl UnwindSafe for TokenStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LexError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Punct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ident","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TokenTree","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Delimiter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Spacing","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntoIter","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl UnwindSafe for Bernoulli","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Open01","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpenClosed01","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Binomial","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cauchy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dirichlet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Exp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Exp1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Beta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChiSquared","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FisherF","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gamma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StudentT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogNormal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Normal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StandardNormal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pareto","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Poisson","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Triangular","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnitCircle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; UnwindSafe for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Standard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BernoulliError","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UniformDuration","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WeightedError","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntropyRng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StdRng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ThreadRng","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; UnwindSafe for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StepRng","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; UnwindSafe for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexVecIntoIter","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl UnwindSafe for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OsRng","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; UnwindSafe for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; UnwindSafe for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["relevant"] = [{"text":"impl UnwindSafe for Relevant","synthetic":true,"types":[]}];
implementors["rendy_chain"] = [{"text":"impl UnwindSafe for Id","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Chain&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Link&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for LinkNode&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Chains","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Unsynchronized","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Node","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for State&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Buffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for Family&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for Queue&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueId","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for Schedule&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for Submission&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubmissionId","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Barrier&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Guard","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for Signal&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, W&gt; UnwindSafe for SyncData&lt;S, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for Wait&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_command"] = [{"text":"impl UnwindSafe for DrawCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawIndexedCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DispatchCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, C&gt; !UnwindSafe for EncoderCommon&lt;'a, B, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; !UnwindSafe for RenderPassEncoder&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; !UnwindSafe for RenderPassInlineEncoder&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; !UnwindSafe for RenderPassSecondaryEncoder&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, C, L&gt; !UnwindSafe for Encoder&lt;'a, B, C, L&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimaryLevel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SecondaryLevel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndividualReset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoIndividualReset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitialState","synthetic":true,"types":[]},{"text":"impl&lt;U, P&gt; UnwindSafe for RecordingState&lt;U, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;U, P&gt; UnwindSafe for ExecutableState&lt;U, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; UnwindSafe for PendingState&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidState","synthetic":true,"types":[]},{"text":"impl&lt;B, S, L, P&gt; UnwindSafe for Submit&lt;B, S, L, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OneShot","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for MultiShot&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SimultaneousUse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoSimultaneousUse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassContinue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutsideRenderPass","synthetic":true,"types":[]},{"text":"impl&lt;B, C, S, L, R&gt; UnwindSafe for CommandBuffer&lt;B, C, S, L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Transfer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Execute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Compute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Graphics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for General","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Queue&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, W, C, S&gt; UnwindSafe for Submission&lt;B, W, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FamilyId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueId","synthetic":true,"types":[]},{"text":"impl&lt;B, C&gt; UnwindSafe for Family&lt;B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Families&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FenceEpoch","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Fence&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, C, R&gt; UnwindSafe for CommandPool&lt;B, C, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_core"] = [{"text":"impl UnwindSafe for ParseBackendError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NotEnabled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Instance&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Instance: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Device&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EnabledBackend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Backend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Layout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttrUuid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Normal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tangent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TexCoord","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexFormat","synthetic":true,"types":[]},{"text":"impl&lt;N, I&gt; UnwindSafe for AttrGenIter&lt;N, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PosColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PosNorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PosColorNorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PosTex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PosNormTex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PosNormTangTex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Model","synthetic":true,"types":[]}];
implementors["rendy_descriptor"] = [{"text":"impl&lt;B&gt; UnwindSafe for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for DescriptorAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorRanges","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DescriptorRangesIter&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["rendy_factory"] = [{"text":"impl&lt;B&gt; UnwindSafe for Barriers&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Blitter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlitRegion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlitImageState","synthetic":true,"types":[]},{"text":"impl&lt;D, H, Q&gt; UnwindSafe for Config&lt;D, H, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OneGraphicsQueue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SavedQueueConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BasicHeapsConfigure","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SavedHeapsConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BasicDevicesConfigure","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Factory&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Instance: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UploadError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageStateOrLayout","synthetic":true,"types":[]}];
implementors["rendy_frame"] = [{"text":"impl UnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompleteFrame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FramesRange","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Frames&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I&nbsp;=&nbsp;T, P&nbsp;=&nbsp;T&gt; !UnwindSafe for InitialRef&lt;'a, T, I, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I&nbsp;=&nbsp;T, P&nbsp;=&nbsp;T&gt; !UnwindSafe for ReadyRef&lt;'a, T, I, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, I, P&gt; UnwindSafe for Cirque&lt;T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, I, P&gt; UnwindSafe for DependentCirque&lt;T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I&nbsp;=&nbsp;T, P&nbsp;=&nbsp;T&gt; !UnwindSafe for CirqueRef&lt;'a, T, I, P&gt;","synthetic":true,"types":[]}];
implementors["rendy_graph"] = [{"text":"impl UnwindSafe for BufferId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeId","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; !UnwindSafe for Graph&lt;B, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for GraphContext&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; !UnwindSafe for GraphBuilder&lt;B, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferAccess","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferBarrier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageAccess","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageBarrier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeImage","synthetic":true,"types":[]},{"text":"impl&lt;B, T:&nbsp;?Sized, N&gt; UnwindSafe for DescBuilder&lt;B, T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GraphBuildError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeBuildError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for PresentNode&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Semaphore: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Swapchain: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for PresentBuilder&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrepareResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pipeline","synthetic":true,"types":[]},{"text":"impl&lt;B, P&gt; UnwindSafe for SimpleRenderGroup&lt;B, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; UnwindSafe for SimpleRenderGroupDesc&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; !UnwindSafe for SubpassBuilder&lt;B, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; !UnwindSafe for RenderPassNodeBuilder&lt;B, T&gt;","synthetic":true,"types":[]}];
implementors["rendy_init"] = [{"text":"impl&lt;B&gt; UnwindSafe for Rendy&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Instance: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RendyAutoInitError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RendyInitError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AnyRendy","synthetic":true,"types":[]}];
implementors["rendy_memory"] = [{"text":"impl UnwindSafe for DedicatedAllocator","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for DedicatedBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for DynamicAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for DynamicBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DynamicConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for LinearAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for LinearBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinearConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Heaps&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeapsConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for MemoryBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Coherent","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, C&gt; UnwindSafe for MappedRange&lt;'a, B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaybeCoherent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NonCoherent","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Memory&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Data","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dynamic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Upload","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Download","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryUtilization","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryHeapUtilization","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryTypeUtilization","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TotalMemoryUtilization","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeapsError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryUsageValue","synthetic":true,"types":[]}];
implementors["rendy_mesh"] = [{"text":"impl UnwindSafe for VertexBufferLayout","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for IndexBuffer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MeshBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Mesh&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Incompatible","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Indices&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["rendy_resource"] = [{"text":"impl UnwindSafe for BufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Buffer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Escape&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Terminal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Handle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Image&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageViewInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for ImageView&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ResourceTracker&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for SamplerCache&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Sampler&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for DescriptorSetLayout&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for CreationError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_shader"] = [{"text":"impl UnwindSafe for SpirvShader","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for ShaderSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecConstantSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for ShaderStorage&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderError","synthetic":true,"types":[]}];
implementors["rendy_texture"] = [{"text":"impl&lt;B&gt; UnwindSafe for Texture&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TextureBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MipLevels","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuildError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Inorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Int","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Iscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Float","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _64","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgba","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bgra","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abgr","synthetic":true,"types":[]},{"text":"impl&lt;C, S, T&gt; UnwindSafe for Pixel&lt;C, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as PixelRepr&lt;S, T&gt;&gt;::Repr: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_wsi"] = [{"text":"impl&lt;B&gt; UnwindSafe for Surface&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Target&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Swapchain: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; UnwindSafe for NextImages&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Swapchain: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainError","synthetic":true,"types":[]}];
implementors["rustc_hash"] = [{"text":"impl UnwindSafe for FxHasher","synthetic":true,"types":[]}];
implementors["rusttype"] = [{"text":"impl UnwindSafe for Curve","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Line","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; UnwindSafe for Point&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; UnwindSafe for Rect&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; UnwindSafe for Vector&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FontCollection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Font&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Codepoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlyphId","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Glyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SharedGlyphData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HMetrics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ScaledGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PositionedGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scale","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for IntoFontsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, I&gt; UnwindSafe for GlyphIter&lt;'a, 'b, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; UnwindSafe for LayoutIter&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Contour","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SharedBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Segment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'font&gt; UnwindSafe for Cache&lt;'font&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CacheBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CacheReadErr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CacheWriteErr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CachedBy","synthetic":true,"types":[]}];
implementors["same_file"] = [{"text":"impl UnwindSafe for Handle","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl UnwindSafe for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; UnwindSafe for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; UnwindSafe for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; UnwindSafe for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; UnwindSafe for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; UnwindSafe for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; UnwindSafe for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; UnwindSafe for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;R&gt; UnwindSafe for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; UnwindSafe for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; UnwindSafe for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Number","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Category","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CharEscape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Serializer","synthetic":true,"types":[]}];
implementors["shaderc"] = [{"text":"impl UnwindSafe for Compiler","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for CompileOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResolvedInclude","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompilationArtifact","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TargetEnv","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SourceLanguage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResourceKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlslProfile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OptimizationLevel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Limit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IncludeType","synthetic":true,"types":[]}];
implementors["shaderc_sys"] = [{"text":"impl UnwindSafe for shaderc_include_result","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShadercCompiler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShadercCompileOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShadercCompilationResult","synthetic":true,"types":[]}];
implementors["shared_library"] = [{"text":"impl UnwindSafe for LoadingError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DynamicLibrary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecialHandles","synthetic":true,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; UnwindSafe for Slab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T&gt; !UnwindSafe for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["smithay_client_toolkit"] = [{"text":"impl !UnwindSafe for Environment","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Shell","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DataDevice","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DataOffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReadPipe","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DataSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WritePipe","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for DndEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataSourceEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModifiersState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RMLVO","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyRepeatEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyRepeatKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputMgr","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ThemeManager","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ThemedPointer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AutoThemer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AutoPointer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DoubleMemPool","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for MemPool","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BasicFrame","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ConceptFrame","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !UnwindSafe for Window&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FrameRequest","synthetic":true,"types":[]}];
implementors["smithay_clipboard"] = [{"text":"impl !UnwindSafe for ThreadedClipboard","synthetic":true,"types":[]}];
implementors["spirv_headers"] = [{"text":"impl UnwindSafe for ImageOperands","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FPFastMathMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelectionControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LoopControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemorySemantics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryAccess","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KernelProfilingInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SourceLanguage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecutionModel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddressingModel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryModel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecutionMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dim","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerAddressingMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerFilterMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageChannelOrder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageChannelDataType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FPRoundingMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinkageType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccessQualifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionParameterAttribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Decoration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuiltIn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scope","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GroupOperation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KernelEnqueueFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayQueryIntersection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayQueryCommittedIntersectionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RayQueryCandidateIntersectionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Op","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CLOp","synthetic":true,"types":[]}];
implementors["stb_truetype"] = [{"text":"impl&lt;Data&gt; UnwindSafe for FontInfo&lt;Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Vertex","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HMetrics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a, Data&gt; UnwindSafe for FontNameIter&lt;'a, Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PlatformId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnicodeEid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MicrosoftEid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MacEid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MicrosoftLang","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MacLang","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PlatformEncodingLanguageId","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl UnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetaList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetaNameValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldsNamed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Variant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VisCrate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VisPublic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VisRestricted","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Arm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Label","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MethodTurbofish","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprAssign","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprAsync","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprAwait","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprBinary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprBreak","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprCall","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprCast","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprClosure","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprContinue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprField","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprForLoop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprIf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprLet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprLit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprLoop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprMatch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprParen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprPath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprReference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprRepeat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprReturn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprTry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprTuple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprUnary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprWhile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprYield","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Index","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstParam","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Generics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LifetimeDef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PredicateEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PredicateType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitBound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeParam","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForeignItemFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForeignItemMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForeignItemStatic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForeignItemType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImplItemConst","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImplItemMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImplItemMethod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImplItemType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemConst","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemEnum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemExternCrate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemForeignMod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemImpl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemMacro2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemMod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemStatic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemTrait","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemTraitAlias","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemUnion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemUse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Receiver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Signature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitItemConst","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitItemMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitItemMethod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitItemType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UseGlob","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UseGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UseName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UsePath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UseRename","synthetic":true,"types":[]},{"text":"impl UnwindSafe for File","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lifetime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitBool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitByte","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitByteStr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitChar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitFloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitInt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitStr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataEnum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataUnion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeriveInput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Local","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abi","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BareFnArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeBareFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeInfer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeNever","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeParen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypePath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypePtr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeReference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeSlice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeTuple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Variadic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldPat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatIdent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatLit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatOr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatPath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatReference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatRest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatSlice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatTuple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatWild","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Binding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constraint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Path","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PathSegment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QSelf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttrStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Meta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NestedMeta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fields","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Visibility","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenericMethodArgument","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RangeLimits","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Expr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Member","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenericParam","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeParamBound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WherePredicate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FnArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForeignItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImplItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Item","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UseTree","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StrStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Data","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BinOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stmt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReturnType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenericArgument","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PathArguments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Underscore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abstract","synthetic":true,"types":[]},{"text":"impl UnwindSafe for As","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Async","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Auto","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Await","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Become","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Box","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Break","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Const","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Continue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Crate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Default","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Do","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dyn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Else","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Enum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Final","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for For","synthetic":true,"types":[]},{"text":"impl UnwindSafe for If","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Impl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for In","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Let","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Loop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Match","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Move","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mut","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Override","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Priv","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pub","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ref","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Return","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelfType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelfValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Static","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Struct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Super","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Trait","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Try","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Typeof","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Union","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Unsafe","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Unsized","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Use","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Virtual","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Where","synthetic":true,"types":[]},{"text":"impl UnwindSafe for While","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Yield","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Add","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for And","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndAnd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for At","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bang","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Caret","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CaretEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Colon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Colon2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Comma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Div","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DivEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dollar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dot","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dot2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dot3","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DotDotEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Eq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EqEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Le","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MulEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ne","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Or","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OrEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OrOr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Question","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RArrow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LArrow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RemEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FatArrow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Semi","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Shl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShlEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Shr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShrEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Star","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sub","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tilde","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Brace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bracket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Paren","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; UnwindSafe for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; UnwindSafe for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; !UnwindSafe for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; UnwindSafe for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; UnwindSafe for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; UnwindSafe for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Nothing","synthetic":true,"types":[]}];
implementors["texture"] = [{"text":"impl UnwindSafe for TextureSettings","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Wrap","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl UnwindSafe for Duration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Timespec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreciseTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SteadyTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TmFmt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseError","synthetic":true,"types":[]}];
implementors["tracing"] = [{"text":"impl !UnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Entered&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["tracing_core"] = [{"text":"impl !UnwindSafe for Dispatch","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LevelFilter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Identifier","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DefaultGuard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetGlobalDefaultError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FieldSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ValueSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Iter","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for DisplayValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for DebugValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseLevelFilterError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseLevelError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Id","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Current","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Interest","synthetic":true,"types":[]}];
implementors["typed_arena"] = [{"text":"impl&lt;T&gt; UnwindSafe for Arena&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["viewport"] = [{"text":"impl UnwindSafe for Viewport","synthetic":true,"types":[]}];
implementors["vk_sys"] = [{"text":"impl UnwindSafe for ApplicationInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AllocationCallbacks","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFeatures","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extent3D","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFormatProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceLimits","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSparseProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFamilyProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryHeap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMemoryProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceQueueCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtensionProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayerProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubmitInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MappedMemoryRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryRequirements","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageFormatProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageMemoryRequirements","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseMemoryBind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseBufferMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageOpaqueMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageSubresource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Offset3D","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageMemoryBind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindSparseInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FenceCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferViewCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferDeviceAddressInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubresourceLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComponentMapping","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageSubresourceRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageViewCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderModuleCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCacheCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecializationMapEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecializationInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineShaderStageCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexInputBindingDescription","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexInputAttributeDescription","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineVertexInputStateCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineInputAssemblyStateCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineTessellationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Viewport","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Offset2D","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extent2D","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rect2D","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineViewportStateCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineRasterizationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineMultisampleStateCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilOpState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineDepthStencilStateCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineColorBlendAttachmentState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineColorBlendStateCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineDynamicStateCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GraphicsPipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComputePipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PushConstantRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorSetAllocateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorImageInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorBufferInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriteDescriptorSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyDescriptorSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FramebufferCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentDescription","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentReference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDescription","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassDependency","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferAllocateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferInheritanceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferCopy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageSubresourceLayers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageCopy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageBlit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearDepthStencilValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearAttachment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearRect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageResolve","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryBarrier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferMemoryBarrier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageMemoryBarrier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DispatchIndirectCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawIndexedIndirectCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawIndirectCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceFormatKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentInfoKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPropertiesKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModeParametersKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModePropertiesKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayModeCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlaneCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlanePropertiesKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplaySurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XlibSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XcbSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaylandSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndroidSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Win32SurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MacOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MVKDeviceConfiguration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MVKPhysicalDeviceMetalFeatures","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MVKSwapchainPerformance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceFeatures2KHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceProperties2KHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSubgroupProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatProperties2KHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFormatProperties2KHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceImageFormatInfo2KHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueueFamilyProperties2KHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceMemoryProperties2KHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseImageFormatProperties2KHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceSparseImageFormatInfo2KHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceBufferAddressFeaturesEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViSurfaceCreateInfoNN","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevicePushDescriptorPropertiesKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorUpdateTemplateEntryKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorUpdateTemplateCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryDedicatedRequirementsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryDedicatedAllocateInfoKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferMemoryRequirementsInfo2KHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageMemoryRequirementsInfo2KHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryRequirements2KHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RectLayerKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentRegionKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentRegionsKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessengerCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsMessengerCallbackDataEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsLabelEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDevice16BitStorageFeaturesKHR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugUtilsObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceFullScreenExclusiveInfoEXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Static","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryPoints","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstancePointers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DevicePointers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearColorValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearValue","synthetic":true,"types":[]}];
implementors["void"] = [{"text":"impl UnwindSafe for Void","synthetic":true,"types":[]}];
implementors["vulkano"] = [{"text":"impl UnwindSafe for OomError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Features","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, B&gt; UnwindSafe for BufferSlice&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferInner&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferUsage","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, A&gt; UnwindSafe for CpuAccessibleBuffer&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; UnwindSafe for ReadLock&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; UnwindSafe for WriteLock&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReadLockError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriteLockError","synthetic":true,"types":[]},{"text":"impl&lt;T, A&gt; UnwindSafe for CpuBufferPool&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, A&gt; UnwindSafe for CpuBufferPoolChunk&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as MemoryPool&gt;::Alloc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, A&gt; UnwindSafe for CpuBufferPoolSubbuffer&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as MemoryPool&gt;::Alloc: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, A&gt; UnwindSafe for DeviceLocalBuffer&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, A&gt; UnwindSafe for ImmutableBuffer&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, A&gt; UnwindSafe for ImmutableBufferInitialization&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SparseLevel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferCreationError","synthetic":true,"types":[]},{"text":"impl&lt;F, B&gt; UnwindSafe for BufferView&lt;F, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferViewCreationError","synthetic":true,"types":[]},{"text":"impl&lt;P&nbsp;=&nbsp;StandardCommandPoolAlloc&gt; !UnwindSafe for AutoCommandBuffer&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;P&nbsp;=&nbsp;StandardCommandPoolBuilder&gt; !UnwindSafe for AutoCommandBufferBuilder&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateCacher","synthetic":true,"types":[]},{"text":"impl&lt;F, Cb&gt; UnwindSafe for CommandBufferExecFuture&lt;F, Cb&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Cb: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawIndirectCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawIndexedIndirectCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DispatchIndirectCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DynamicState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AutoCommandBufferBuilderContextError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BeginRenderPassError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlitImageError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuildError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearColorImageError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyBufferError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyBufferImageError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CopyImageError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DispatchError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawIndexedError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawIndexedIndirectError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawIndirectError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExecuteCommandsError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FillBufferError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UpdateBufferError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateCacherOutcome","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandBufferExecError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeCommandPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeCommandPoolAlloc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeCommandPoolAllocIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandPoolTrimError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StandardCommandPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StandardCommandPoolBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StandardCommandPoolAlloc","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubmitBindSparseBatchBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubmitBindSparseBufferBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubmitBindSparseBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubmitBindSparseImageBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubmitBindSparseImageOpaqueBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubmitPresentBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubmitCommandBufferBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubmitSemaphoresWaitBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubmitBindSparseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubmitPresentError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubmitCommandBufferError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SubmitAnyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; !UnwindSafe for SyncCommandBuffer&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; UnwindSafe for SyncCommandBufferBuilder&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'b, P&gt; !UnwindSafe for SyncCommandBufferBuilderBindDescriptorSets&lt;'b, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; !UnwindSafe for SyncCommandBufferBuilderBindVertexBuffer&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; !UnwindSafe for SyncCommandBufferBuilderExecuteCommands&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SyncCommandBufferBuilderError","synthetic":true,"types":[]},{"text":"impl&lt;R, F&gt; UnwindSafe for KindSecondaryRenderPass&lt;R, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; UnwindSafe for UnsafeCommandBufferBuilder&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeCommandBufferBuilderBindVertexBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeCommandBufferBuilderExecuteCommands","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeCommandBufferBuilderImageAspect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeCommandBufferBuilderColorImageClear","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeCommandBufferBuilderBufferImageCopy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeCommandBufferBuilderImageCopy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeCommandBufferBuilderImageBlit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeCommandBufferBuilderPipelineBarrier","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; UnwindSafe for UnsafeCommandBuffer&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, F&gt; UnwindSafe for Kind&lt;R, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KindOcclusionQuery","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckCopyBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckIndexBuffer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CheckVertexBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckBlitImageError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckClearColorImageError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckCopyBufferError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckCopyImageError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckCopyBufferImageError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckCopyBufferImageTy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckDescriptorSetsValidityError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckDispatchError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckDynamicStateValidityError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckFillBufferError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckIndexBufferError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckPushConstantsValidityError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckUpdateBufferError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckVertexBufferError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorImageDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorBufferDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderStages","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorDescTy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorImageDescArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorImageDescDimensions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorDescSupersetError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderStagesSupersetError","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; UnwindSafe for FixedSizeDescriptorSet&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !UnwindSafe for FixedSizeDescriptorSetBuilder&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; !UnwindSafe for FixedSizeDescriptorSetBuilderArray&lt;'a, L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for FixedSizeDescriptorSetsPool&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R, P&gt; UnwindSafe for PersistentDescriptorSet&lt;L, R, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for PersistentDescriptorSetBuf&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; UnwindSafe for PersistentDescriptorSetBufView&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; UnwindSafe for PersistentDescriptorSetBuilder&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; UnwindSafe for PersistentDescriptorSetBuilderArray&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for PersistentDescriptorSetImg&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PersistentDescriptorSetSampler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StdDescriptorPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StdDescriptorPoolAlloc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorWrite","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorsCount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeDescriptorPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeDescriptorPoolAllocIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeDescriptorSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeDescriptorSetLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PersistentDescriptorSetBuildError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PersistentDescriptorSetError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DescriptorPoolAllocError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmptyPipelineDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RuntimePipelineDesc","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for PipelineLayout&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PipelineLayoutSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineLayoutDescPcRange","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for PipelineLayoutDescUnion&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineLayoutLimitsError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RuntimePipelineDescError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineLayoutCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineLayoutNotSupersetError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceExtensions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawDeviceExtensions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueuesIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Queue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IncompatiblePixelsType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R4G4UnormPack8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R4G4B4A4UnormPack16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B4G4R4A4UnormPack16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R5G6B5UnormPack16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B5G6R5UnormPack16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R5G5B5A1UnormPack16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B5G5R5A1UnormPack16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A1R5G5B5UnormPack16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8B8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8B8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8B8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8B8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8B8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8B8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8B8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8G8R8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8G8R8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8G8R8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8G8R8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8G8R8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8G8R8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8G8R8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8B8A8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8B8A8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8B8A8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8B8A8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8B8A8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8B8A8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R8G8B8A8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8G8R8A8Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8G8R8A8Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8G8R8A8Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8G8R8A8Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8G8R8A8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8G8R8A8Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B8G8R8A8Srgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A8B8G8R8UnormPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A8B8G8R8SnormPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A8B8G8R8UscaledPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A8B8G8R8SscaledPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A8B8G8R8UintPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A8B8G8R8SintPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A8B8G8R8SrgbPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2R10G10B10UnormPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2R10G10B10SnormPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2R10G10B10UscaledPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2R10G10B10SscaledPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2R10G10B10UintPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2R10G10B10SintPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2B10G10R10UnormPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2B10G10R10SnormPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2B10G10R10UscaledPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2B10G10R10SscaledPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2B10G10R10UintPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for A2B10G10R10SintPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16B16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16B16Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16B16Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16B16Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16B16Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16B16Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16B16Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16B16A16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16B16A16Snorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16B16A16Uscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16B16A16Sscaled","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16B16A16Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16B16A16Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R16G16B16A16Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32G32Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32G32Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32G32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32G32B32Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32G32B32Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32G32B32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32G32B32A32Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32G32B32A32Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R32G32B32A32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64G64Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64G64Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64G64Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64G64B64Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64G64B64Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64G64B64Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64G64B64A64Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64G64B64A64Sint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for R64G64B64A64Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for B10G11R11UfloatPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for E5B9G9R9UfloatPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D16Unorm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for X8_D24UnormPack32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D32Sfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for S8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D16Unorm_S8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D24Unorm_S8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for D32Sfloat_S8Uint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC1_RGBUnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC1_RGBSrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC1_RGBAUnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC1_RGBASrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC2UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC2SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC3UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC3SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC4UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC4SnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC5UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC5SnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC6HUfloatBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC6HSfloatBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC7UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BC7SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ETC2_R8G8B8UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ETC2_R8G8B8SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ETC2_R8G8B8A1UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ETC2_R8G8B8A1SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ETC2_R8G8B8A8UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ETC2_R8G8B8A8SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EAC_R11UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EAC_R11SnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EAC_R11G11UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EAC_R11G11SnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_4x4UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_4x4SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_5x4UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_5x4SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_5x5UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_5x5SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_6x5UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_6x5SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_6x6UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_6x6SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_8x5UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_8x5SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_8x6UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_8x6SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_8x8UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_8x8SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_10x5UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_10x5SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_10x6UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_10x6SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_10x8UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_10x8SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_10x10UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_10x10SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_12x10UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_12x10SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_12x12UnormBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ASTC_12x12SrgbBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatTy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClearValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentDescription","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PassDependencyDescription","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PassDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; UnwindSafe for RenderPassDescAttachments&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; UnwindSafe for RenderPassDescDependencies&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; UnwindSafe for RenderPassDescSubpasses&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmptySinglePassRenderPassDesc","synthetic":true,"types":[]},{"text":"impl&lt;Rp, A&gt; UnwindSafe for Framebuffer&lt;Rp, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rp: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Rp, A&gt; UnwindSafe for FramebufferBuilder&lt;Rp, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rp: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FramebufferSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; UnwindSafe for RenderPass&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderPassSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for Subpass&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IncompatibleRenderPassAttachmentError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LoadOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StoreOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FramebufferCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPassCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpassContents","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; UnwindSafe for StorageImage&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as MemoryPool&gt;::Alloc: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageUsage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Swizzle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MipmapsCount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComponentSwizzle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dimensions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageDimensions","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; UnwindSafe for AttachmentImage&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; UnwindSafe for ImmutableImage&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; UnwindSafe for ImmutableImageInitialization&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for SwapchainImage&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinearLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeImageView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageCreationError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImageInner&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for ImageAccessFromUndefinedLayout&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceExtensions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawInstanceExtensions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ApplicationInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryHeap&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryHeapsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryType&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MemoryTypesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PhysicalDevicesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueueFamiliesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueueFamily&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayerProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayersIterator","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Limits&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstanceCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalDeviceType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayersListError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DebugCallback","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Message&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageSeverity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugCallbackCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DynamicLibraryLoader","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for FunctionPointers&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LoadingError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; UnwindSafe for CpuAccess&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceMemory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MappedDeviceMemory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryRequirements","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceMemoryAllocError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DedicatedAlloc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StdHostVisibleMemoryTypePool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StdHostVisibleMemoryTypePoolAlloc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StdNonHostVisibleMemoryTypePool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StdNonHostVisibleMemoryTypePoolAlloc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StdMemoryPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StdMemoryPoolAlloc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AllocFromRequirementsFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MappingRequirement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AllocLayout","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for PotentialDedicatedAllocation&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Pl&gt; UnwindSafe for ComputePipeline&lt;Pl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pl: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ComputePipelineSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;VertexDefinition, Layout, RenderP&gt; UnwindSafe for GraphicsPipeline&lt;VertexDefinition, Layout, RenderP&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Layout: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;RenderP: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;VertexDefinition: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Vdef, Vs, Vss, Tcs, Tcss, Tes, Tess, Gs, Gss, Fs, Fss, Rp&gt; UnwindSafe for GraphicsPipelineBuilder&lt;Vdef, Vs, Vss, Tcs, Tcss, Tes, Tess, Gs, Gss, Fs, Fss, Rp&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fs: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fss: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Gs: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Gss: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rp: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Tcs: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Tcss: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Tes: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Tess: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vdef: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vs: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vss: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for GraphicsPipelineSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComputePipelineCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GraphicsPipelineCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Blend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentBlend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttachmentsBlend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogicOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendFactor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineCache","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthStencil","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stencil","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DynamicStencilValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilFaceFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthBounds","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Compare","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputAssembly","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Multisample","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rasterization","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthBias","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthBiasControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CullMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PolygonMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderModule","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, I, O, L&gt; UnwindSafe for GraphicsEntryPoint&lt;'a, S, I, O, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, L&gt; UnwindSafe for ComputeEntryPoint&lt;'a, S, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderInterfaceDefEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmptyShaderInterfaceDef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecializationMapEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GraphicsShaderType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryShaderExecutionMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmptyEntryPointDummy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderInterfaceMismatchError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferlessDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferlessVertices","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttributeInfo","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SingleInstanceBufferDefinition&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; UnwindSafe for OneVertexOneInstanceDefinition&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SingleBufferDefinition&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; UnwindSafe for TwoBuffersDefinition&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexMemberInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IncompatibleVertexDefinitionError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputRate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexMemberTy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Viewport","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scissor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewportsState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsafeQueryPool","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for UnsafeQuery&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for UnsafeQueriesRange&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPipelineStatisticFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OcclusionQueriesPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QueryPoolCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sampler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MipmapMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerAddressMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnnormalizedSamplerAddressMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BorderColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SamplerCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capabilities","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SupportedCompositeAlpha","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SupportedCompositeAlphaIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SupportedPresentModes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SupportedPresentModesIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SupportedSurfaceTransforms","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SupportedSurfaceTransformsIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentRegion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RectangleLayer","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for Surface&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AcquiredImage","synthetic":true,"types":[]},{"text":"impl&lt;P, W&gt; UnwindSafe for PresentFuture&lt;P, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for Swapchain&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for SwapchainAcquireFuture&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorSpace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompositeAlpha","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceTransform","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CapabilitiesError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AcquireError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapchainCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayPlane","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; UnwindSafe for Fence&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for FenceSignalFuture&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for JoinFuture&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NowFuture","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for SemaphoreSignalFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccessFlagBits","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineStages","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; UnwindSafe for Semaphore&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FenceWaitError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccessCheckError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccessError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlushError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SharingMode","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Sharing&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instance","synthetic":false,"types":[]}];
implementors["walkdir"] = [{"text":"impl UnwindSafe for DirEntry","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WalkDir","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; UnwindSafe for FilterEntry&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["wayland_client"] = [{"text":"impl !UnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EventQueue","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for QueueToken","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ReadEventsGuard","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for GlobalManager","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for NewProxy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !UnwindSafe for Proxy&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConnectError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CursorTheme","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for CursorImageBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlEglSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlDisplay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlRegistry","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlCallback","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlCompositor","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlShmPool","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlShm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlDataOffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlDataSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlDataDevice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DndAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlDataDeviceManager","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlShell","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Resize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Transient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlShellSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FullscreenMethod","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlSeat","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlPointer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Axis","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AxisSource","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlKeyboard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeymapFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlTouch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlOutput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Subpixel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Transform","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlRegion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlSubcompositor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WlSubsurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]}];
implementors["wayland_commons"] = [{"text":"impl UnwindSafe for AnonymousObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoMessage","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; UnwindSafe for Object&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; UnwindSafe for ObjectMap&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Socket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferedSocket","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UserData","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UserDataMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArgumentType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Argument","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageWriteError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageParseError","synthetic":true,"types":[]}];
implementors["wayland_protocols"] = [{"text":"impl UnwindSafe for ZwpFullscreenShellV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentMethod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpFullscreenShellModeFeedbackV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpIdleInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpIdleInhibitorV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpInputMethodContextV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpInputMethodV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpInputPanelV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpInputPanelSurfaceV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpInputTimestampsManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpInputTimestampsV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpKeyboardShortcutsInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpKeyboardShortcutsInhibitorV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpLinuxDmabufV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpLinuxBufferParamsV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpLinuxExplicitSynchronizationV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpLinuxSurfaceSynchronizationV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpLinuxBufferReleaseV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpPointerConstraintsV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lifetime","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpLockedPointerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpConfinedPointerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpPointerGesturesV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpPointerGestureSwipeV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpPointerGesturePinchV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpPrimarySelectionDeviceManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpPrimarySelectionDeviceV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpPrimarySelectionOfferV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpPrimarySelectionSourceV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpRelativePointerManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpRelativePointerV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTabletManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTabletSeatV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTabletToolV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTabletV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTabletManagerV2","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTabletSeatV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTabletToolV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTabletV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTabletPadRingV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTabletPadStripV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTabletPadGroupV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTabletPadV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTextInputV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentHint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentPurpose","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreeditStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextDirection","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTextInputManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentHint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTextInputV3","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChangeCause","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentPurpose","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpTextInputManagerV3","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgDecorationManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgToplevelDecorationV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgExporterV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgImporterV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgExportedV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgImportedV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgExporterV2","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgImporterV2","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgExportedV2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgImportedV2","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgOutputManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgOutputV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XdgShell","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XdgSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResizeEdge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XdgPopup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgShellV6","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gravity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgPositionerV6","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgSurfaceV6","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgToplevelV6","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResizeEdge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZxdgPopupV6","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpXwaylandKeyboardGrabManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwpXwaylandKeyboardGrabV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrDataControlManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrDataControlDeviceV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrDataControlSourceV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrDataControlOfferV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrExportDmabufManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrExportDmabufFrameV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CancelReason","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrForeignToplevelManagerV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrForeignToplevelHandleV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrGammaControlManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrGammaControlV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrInputInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrInputInhibitorV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrLayerShellV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Layer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrLayerSurfaceV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrScreencopyManagerV1","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZwlrScreencopyFrameV1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WpPresentation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WpPresentationFeedback","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XdgWmBase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XdgPositioner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gravity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XdgSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XdgToplevel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResizeEdge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for State","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XdgPopup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WpViewporter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WpViewport","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]}];
implementors["wayland_sys"] = [{"text":"impl UnwindSafe for wl_message","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_interface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_list","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_array","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_argument","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaylandClient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WAYLAND_CLIENT_OPTION","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WAYLAND_CLIENT_HANDLE","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_proxy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_display","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_event_queue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaylandEgl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WAYLAND_EGL_OPTION","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WAYLAND_EGL_HANDLE","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_egl_window","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_cursor_image","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_cursor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaylandCursor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WAYLAND_CURSOR_OPTION","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WAYLAND_CURSOR_HANDLE","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wl_cursor_theme","synthetic":true,"types":[]}];
implementors["wgpu"] = [{"text":"impl !UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Adapter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Buffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BufferSlice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Texture","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TextureView","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Sampler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SwapChain","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BindGroupLayout","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BindGroup","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ShaderModule","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PipelineLayout","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderPipeline","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ComputePipeline","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CommandBuffer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CommandEncoder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderPass&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ComputePass&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderBundleEncoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderBundle","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Queue","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; UnwindSafe for Operations&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderPassColorAttachmentDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderPassDepthStencilAttachmentDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CommandEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderBundleDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TextureDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TextureViewDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for PipelineLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SamplerDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BindGroupEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BindGroupDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ProgrammableStageDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !UnwindSafe for RenderPassDescriptor&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderPipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ComputePipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindGroupLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VertexBufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VertexStateDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderBundleEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SwapChainTexture","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SwapChainFrame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequestDeviceError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferAsyncError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BufferView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BufferViewMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Maintain","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ShaderModuleSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BindingResource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; UnwindSafe for LoadOp&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapChainError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MapMode","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StagingBelt","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BufferInitDescriptor&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["wgpu_core"] = [{"text":"impl UnwindSafe for BindingTypeMaxCountError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BindGroupEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BindGroupDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindGroupLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for BindGroupLayout&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for PipelineLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for PipelineLayout&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BufferBinding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindGroupDynamicBindingData","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for BindGroup&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateBindGroupLayoutError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CreateBindGroupError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindingZone","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindingTypeMaxCountErrorKind","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CreatePipelineLayoutError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PushConstantUploadError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BindingResource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetBindGroupLayoutError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RenderBundleEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderBundleEncoder","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderBundle","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ComputePass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComputePassDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; UnwindSafe for PassChannel&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ColorAttachmentDescriptor","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DepthStencilAttachmentDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderPassDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderPass","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for CommandBuffer&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; UnwindSafe for BasePassRef&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandAllocatorError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateRenderBundleError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderBundleError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DispatchError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ComputePassError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderCommandError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LoadOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StoreOp","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RenderPassError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TransferError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CopyError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandEncoderError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UsageConflict","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for Device&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidDevice","synthetic":true,"types":[]},{"text":"impl&lt;'a, G&gt; UnwindSafe for ImplicitPipelineIds&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: IdentityHandler&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;G as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter as IdentityHandler&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Input: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;G as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter as IdentityHandler&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Input: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HostMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateDeviceError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IdentityManager","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; UnwindSafe for Storage&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Token&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IdentityManagerFactory","synthetic":true,"types":[]},{"text":"impl&lt;T, I, F&gt; UnwindSafe for Registry&lt;T, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;I&gt;&gt;::Filter: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, F&gt; !UnwindSafe for Hub&lt;B, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !UnwindSafe for Hubs&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; !UnwindSafe for Global&lt;G&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Root","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Id&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AdapterInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidAdapter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequestDeviceError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceType","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; UnwindSafe for AdapterInputs&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequestAdapterError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for ShaderModule&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ProgrammableStageDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ComputePipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for ComputePipeline&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VertexBufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VertexStateDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RenderPipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipelineFlags","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for RenderPipeline&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ShaderModuleSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateShaderModuleError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ImplicitLayoutError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CreateComputePipelineError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CreateRenderPipelineError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferUse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureUse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferMapOperation","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for Buffer&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for Texture&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TextureViewDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for TextureView&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SamplerDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for Sampler&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferMapAsyncStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferAccessError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateBufferError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureDimensionError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateTextureError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateTextureViewError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureViewDestroyError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateSamplerError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for SwapChain&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SwapChainOutput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidSwapChain","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapChainError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateSwapChainError","synthetic":true,"types":[]}];
implementors["wgpu_types"] = [{"text":"impl UnwindSafe for BackendBit","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for RequestAdapterOptions&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Features","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Limits","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderStage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorStateDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RasterizationStateDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorWrite","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilStateDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepthStencilStateDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilStateFaceDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexAttributeDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferUsage","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for BufferDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for CommandEncoderDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureUsage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapChainDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Origin3d","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extent3d","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for TextureDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PushConstantRange","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for CommandBufferDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; UnwindSafe for RenderBundleDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureDataLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindGroupLayoutEntry","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for BufferCopyView&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TextureCopyView&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Backend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PowerPreference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureViewDimension","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendFactor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlendOperation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrontFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CullMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StencilOperation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompareFunction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputStepMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VertexFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PresentMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwapChainStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureDimension","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureAspect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddressMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureComponentType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindingType","synthetic":true,"types":[]}];
implementors["winit"] = [{"text":"impl UnwindSafe for KeyboardInput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Touch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModifiersState","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AvailableMonitorsIter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for MonitorId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Icon","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceId","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EventsLoop","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EventsLoopProxy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventsLoopClosed","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WindowBuilder","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WindowAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TouchPhase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ElementState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MouseButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MouseScrollDelta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VirtualKeyCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BadIcon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ControlFlow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MouseCursor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogicalPosition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalPosition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogicalSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysicalSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XNotSupported","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaylandTheme","synthetic":true,"types":[]}];
implementors["x11"] = [{"text":"impl UnwindSafe for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XcmsColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbBounds","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControls","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbMods","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOutline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbProperty","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbRow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbSection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbShape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XAnyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XButtonEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XColormapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XErrorEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExposeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGravityEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMappingEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMotionEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XReparentEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Depth","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Screen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScreenFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Visual","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XArc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XChar2b","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCharStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XClassHint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XComposeStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExtCodes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExtData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFontProp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFontStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGCValues","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XHostAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIconSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeyboardState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XmbTextItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XrmValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSegment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSizeHints","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XStandardColormap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTextItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTextItem16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTextProperty","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTimeCoord","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XVisualInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XwcTextItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XWindowChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XWMHints","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMCallback","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMText","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XICCallback","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AspectRatio","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClientMessageData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFns","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMTextString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XDisplay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XIC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XIM","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XRegion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XOC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XOM","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorComment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorComments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorFile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorImages","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftFont","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftCharSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftFontSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcCharSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcPattern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcEndian","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftFontInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftDraw","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftPattern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDevice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFeedbackState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XInputClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIModifierState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIValuatorState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIEventMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIRawEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _AtomRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuArea","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuScanline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuSegment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRPanning","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordRange8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordRange16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XCircle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XFilters","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XIndexValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XLineFixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XPointDouble","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XPointFixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRenderColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XSpanFix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTrap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTriangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTransform","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Arg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _TranslationData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _WidgetRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XtWidgetGeometry","synthetic":true,"types":[]}];
implementors["x11_clipboard"] = [{"text":"impl UnwindSafe for Atoms","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Clipboard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]}];
implementors["x11_dl"] = [{"text":"impl UnwindSafe for OpenError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpenErrorKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xlib","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XcmsColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbBounds","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControls","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbMods","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOutline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbProperty","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbRow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbSection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbShape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XAnyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XButtonEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XColormapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XErrorEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExposeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGravityEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMappingEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMotionEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XReparentEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Depth","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Screen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScreenFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Visual","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XArc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XChar2b","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XCharStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XClassHint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XComposeStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExtCodes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExtData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFontProp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFontStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGCValues","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XHostAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIconSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XKeyboardState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XmbTextItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XrmValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSegment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XSizeHints","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XStandardColormap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTextItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTextItem16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTextProperty","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XTimeCoord","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XVisualInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XwcTextItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XWindowChanges","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XWMHints","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMCallback","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMText","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XICCallback","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AspectRatio","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClientMessageData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageFns","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMTextString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XDisplay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XIC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XIM","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XRegion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XOC","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XOM","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Glx","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xcursor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorComment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorComments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorFile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XcursorImages","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xf86vmode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xft","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftFont","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftCharSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftFontSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcCharSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcPattern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcEndian","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftFontInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftDraw","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XftPattern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xlib","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XInput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDevice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XFeedbackState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XInputClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XInput2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIModifierState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIValuatorState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIEventMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIRawEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xmu","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _AtomRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuArea","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuScanline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuSegment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xf86vmode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordRange8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordRange16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRecordState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xrender","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XCircle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XFilters","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XIndexValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XLineFixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XPointDouble","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XPointFixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRenderColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XSpanFix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTrap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTriangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XTransform","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xss","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Arg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _TranslationData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _WidgetRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _XtResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XtWidgetGeometry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xf86vmode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xlib_xcb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xrandr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRPanning","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Xrandr_2_2_0","synthetic":true,"types":[]}];
implementors["xcb"] = [{"text":"impl&lt;'a, T&gt; UnwindSafe for StructPtr&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Error&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Cookie&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Reply&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Connection","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for QueryExtensionData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConnError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequestError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValueError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PixmapError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtomError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CursorError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MatchError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawableError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccessError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AllocError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColormapError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GContextError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IdChoiceError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NameError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LengthError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImplementationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Char2b","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Point","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Arc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Visualtype","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Timecoord","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fontprop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Charinfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Segment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Coloritem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rgb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PictFormatError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PictureError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PictOpError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlyphSetError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlyphError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Directformat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pictforminfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pictvisual","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Indexvalue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pointfix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Linefix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Triangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Trapezoid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Glyphinfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Transform","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Animcursorelt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Spanfix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Trap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BadRegionError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_generic_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_generic_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_generic_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_ge_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_generic_error_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_void_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_auth_info_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_connection_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_extension_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_special_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_char2b_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_char2b_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_window_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_pixmap_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_cursor_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_font_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_gcontext_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_colormap_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_atom_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_drawable_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_fontable_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_visualid_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_timestamp_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_keysym_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_keycode_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_button_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_point_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_point_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_rectangle_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_rectangle_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_arc_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_arc_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_format_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_format_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_visualtype_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_visualtype_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_depth_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for xcb_depth_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_screen_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for xcb_screen_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_setup_request_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for xcb_setup_request_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_setup_failed_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for xcb_setup_failed_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_setup_authenticate_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for xcb_setup_authenticate_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_setup_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for xcb_setup_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_key_press_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_button_press_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_motion_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_enter_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_focus_in_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_keymap_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_expose_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_graphics_exposure_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_no_exposure_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_visibility_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_create_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_destroy_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_unmap_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_map_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_map_request_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_reparent_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_configure_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_configure_request_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_gravity_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_resize_request_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_circulate_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_property_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_selection_clear_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_selection_request_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_selection_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_colormap_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_client_message_data_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_client_message_data_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_client_message_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_mapping_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_ge_generic_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_request_error_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_value_error_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_create_window_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_change_window_attributes_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_window_attributes_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_window_attributes_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_window_attributes_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_destroy_window_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_destroy_subwindows_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_change_save_set_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_reparent_window_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_map_window_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_map_subwindows_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_unmap_window_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_unmap_subwindows_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_configure_window_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_circulate_window_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_geometry_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_geometry_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_geometry_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_tree_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_tree_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_tree_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_intern_atom_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_intern_atom_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_intern_atom_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_atom_name_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_atom_name_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_atom_name_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_change_property_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_delete_property_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_property_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_property_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_property_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_properties_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_properties_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_properties_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_set_selection_owner_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_selection_owner_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_selection_owner_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_selection_owner_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_convert_selection_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_send_event_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_grab_pointer_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_grab_pointer_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_grab_pointer_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_ungrab_pointer_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_grab_button_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_ungrab_button_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_change_active_pointer_grab_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_grab_keyboard_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_grab_keyboard_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_grab_keyboard_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_ungrab_keyboard_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_grab_key_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_ungrab_key_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_allow_events_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_grab_server_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_ungrab_server_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_pointer_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_pointer_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_pointer_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_timecoord_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_timecoord_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_motion_events_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_motion_events_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_motion_events_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_translate_coordinates_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_translate_coordinates_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_translate_coordinates_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_warp_pointer_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_set_input_focus_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_input_focus_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_input_focus_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_input_focus_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_keymap_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_keymap_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_keymap_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_open_font_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_close_font_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_fontprop_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_fontprop_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_charinfo_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_charinfo_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_font_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_font_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_font_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_text_extents_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_text_extents_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_text_extents_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_str_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for xcb_str_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_fonts_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_fonts_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_fonts_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_fonts_with_info_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_fonts_with_info_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_fonts_with_info_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_set_font_path_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_font_path_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_font_path_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_font_path_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_create_pixmap_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_free_pixmap_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_create_gc_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_change_gc_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_copy_gc_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_set_dashes_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_set_clip_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_free_gc_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_clear_area_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_copy_area_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_copy_plane_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_poly_point_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_poly_line_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_segment_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_segment_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_poly_segment_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_poly_rectangle_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_poly_arc_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_fill_poly_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_poly_fill_rectangle_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_poly_fill_arc_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_put_image_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_image_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_image_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_image_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_poly_text_8_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_poly_text_16_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_image_text_8_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_image_text_16_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_create_colormap_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_free_colormap_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_copy_colormap_and_free_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_install_colormap_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_uninstall_colormap_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_installed_colormaps_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_installed_colormaps_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_installed_colormaps_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_alloc_color_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_alloc_color_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_alloc_color_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_alloc_named_color_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_alloc_named_color_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_alloc_named_color_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_alloc_color_cells_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_alloc_color_cells_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_alloc_color_cells_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_alloc_color_planes_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_alloc_color_planes_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_alloc_color_planes_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_free_colors_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_coloritem_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_coloritem_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_store_colors_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_store_named_color_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_rgb_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_rgb_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_colors_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_colors_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_colors_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_lookup_color_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_lookup_color_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_lookup_color_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_create_cursor_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_create_glyph_cursor_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_free_cursor_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_recolor_cursor_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_best_size_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_best_size_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_best_size_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_extension_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_extension_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_query_extension_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_extensions_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_extensions_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_extensions_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_change_keyboard_mapping_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_keyboard_mapping_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_keyboard_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_keyboard_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_change_keyboard_control_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_keyboard_control_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_keyboard_control_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_keyboard_control_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_bell_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_change_pointer_control_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_pointer_control_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_pointer_control_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_pointer_control_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_set_screen_saver_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_screen_saver_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_screen_saver_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_screen_saver_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_change_hosts_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_host_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for xcb_host_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_hosts_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_hosts_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_list_hosts_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_set_access_control_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_set_close_down_mode_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_kill_client_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_rotate_properties_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_force_screen_saver_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_set_pointer_mapping_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_set_pointer_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_set_pointer_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_pointer_mapping_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_pointer_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_pointer_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_set_modifier_mapping_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_set_modifier_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_set_modifier_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_modifier_mapping_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_modifier_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_get_modifier_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_no_operation_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_big_requests_enable_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_big_requests_enable_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_big_requests_enable_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xc_misc_get_version_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xc_misc_get_version_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xc_misc_get_version_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xc_misc_get_xid_range_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xc_misc_get_xid_range_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xc_misc_get_xid_range_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xc_misc_get_xid_list_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xc_misc_get_xid_list_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xc_misc_get_xid_list_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_glyph_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_glyphset_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_picture_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_pictformat_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_fixed_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_pict_format_error_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_picture_error_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_pict_op_error_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_glyph_set_error_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_glyph_error_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_directformat_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_directformat_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_pictforminfo_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_pictforminfo_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_pictvisual_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_pictvisual_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_pictdepth_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for xcb_render_pictdepth_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_pictscreen_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for xcb_render_pictscreen_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_indexvalue_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_indexvalue_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_color_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_color_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_pointfix_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_pointfix_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_linefix_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_linefix_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_triangle_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_triangle_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_trapezoid_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_trapezoid_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_glyphinfo_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_glyphinfo_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_query_version_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_query_version_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_query_version_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_query_pict_formats_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_query_pict_formats_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_query_pict_formats_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_query_pict_index_values_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_query_pict_index_values_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_query_pict_index_values_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_create_picture_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_change_picture_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_set_picture_clip_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_free_picture_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_composite_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_trapezoids_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_triangles_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_tri_strip_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_tri_fan_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_create_glyph_set_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_reference_glyph_set_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_free_glyph_set_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_add_glyphs_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_free_glyphs_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_composite_glyphs_8_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_composite_glyphs_16_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_composite_glyphs_32_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_fill_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_create_cursor_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_transform_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_transform_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_set_picture_transform_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_query_filters_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_query_filters_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_query_filters_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_set_picture_filter_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_animcursorelt_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_animcursorelt_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_create_anim_cursor_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_spanfix_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_spanfix_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_trap_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_trap_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_add_traps_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_create_solid_fill_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_create_linear_gradient_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_create_radial_gradient_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_render_create_conical_gradient_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_op_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_kind_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_query_version_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_query_version_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_query_version_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_mask_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_combine_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_offset_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_query_extents_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_query_extents_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_query_extents_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_select_input_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_input_selected_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_input_selected_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_input_selected_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_get_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_get_rectangles_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_shape_get_rectangles_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_query_version_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_query_version_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_query_version_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_change_save_set_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_selection_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_select_selection_input_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_cursor_notify_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_select_cursor_input_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_get_cursor_image_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_get_cursor_image_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_get_cursor_image_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_region_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_bad_region_error_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_create_region_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_create_region_from_bitmap_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_create_region_from_window_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_create_region_from_gc_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_create_region_from_picture_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_destroy_region_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_set_region_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_copy_region_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_union_region_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_intersect_region_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_subtract_region_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_invert_region_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_translate_region_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_region_extents_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_fetch_region_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_fetch_region_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_fetch_region_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_set_gc_clip_region_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_set_window_shape_region_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_set_picture_clip_region_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_set_cursor_name_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_get_cursor_name_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_get_cursor_name_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_get_cursor_name_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_get_cursor_image_and_name_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_get_cursor_image_and_name_cookie_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_get_cursor_image_and_name_reply_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_change_cursor_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_change_cursor_by_name_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_expand_region_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_hide_cursor_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_show_cursor_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_barrier_iterator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_create_pointer_barrier_request_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for xcb_xfixes_delete_pointer_barrier_request_t","synthetic":true,"types":[]}];
implementors["xdg"] = [{"text":"impl UnwindSafe for BaseDirectories","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BaseDirectoriesError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileFindIterator","synthetic":true,"types":[]}];
implementors["xml"] = [{"text":"impl UnwindSafe for ParserConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmitterConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; UnwindSafe for ReprDisplay&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OwnedName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OwnedAttribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextPosition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XmlVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Namespace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NamespaceStack","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for NamespaceStackMappings&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for CheckedTarget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !UnwindSafe for EventReader&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !UnwindSafe for Events&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XmlEvent","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for EventWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EmitterError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for EndElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StartElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for XmlEvent&lt;'a&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()