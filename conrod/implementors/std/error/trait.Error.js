(function() {var implementors = {};
implementors["arrayvec"] = [{"text":"impl&lt;T:&nbsp;Any&gt; Error for CapacityError&lt;T&gt;","synthetic":false,"types":[]}];
implementors["ash"] = [{"text":"impl Error for InstanceError","synthetic":false,"types":[]},{"text":"impl Error for LoadingError","synthetic":false,"types":[]},{"text":"impl Error for Result","synthetic":false,"types":[]}];
implementors["conrod_core"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["conrod_gfx"] = [{"text":"impl Error for RendererCreationError","synthetic":false,"types":[]}];
implementors["conrod_glium"] = [{"text":"impl Error for RendererCreationError","synthetic":false,"types":[]},{"text":"impl Error for DrawError","synthetic":false,"types":[]}];
implementors["conrod_vulkano"] = [{"text":"impl Error for RendererCreationError","synthetic":false,"types":[]},{"text":"impl Error for DrawError","synthetic":false,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T:&nbsp;Send&gt; Error for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Error for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Error for SendTimeoutError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for RecvError","synthetic":false,"types":[]},{"text":"impl Error for TryRecvError","synthetic":false,"types":[]},{"text":"impl Error for RecvTimeoutError","synthetic":false,"types":[]},{"text":"impl Error for TrySelectError","synthetic":false,"types":[]},{"text":"impl Error for SelectTimeoutError","synthetic":false,"types":[]}];
implementors["daggy"] = [{"text":"impl&lt;E&gt; Error for WouldCycle&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Debug + Any,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Error for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Error,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Error,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["getrandom"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["gfx"] = [{"text":"impl&lt;S, D&gt; Error for CopyError&lt;S, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Debug + Display,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Debug + Display,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Any + Debug + Display&gt; Error for UpdateError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Debug + Display&gt; Error for PipelineStateError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Debug + Display&gt; Error for ElementError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Debug + Display&gt; Error for InitError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Error for ProgramError","synthetic":false,"types":[]}];
implementors["gfx_core"] = [{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for ResourceViewError","synthetic":false,"types":[]},{"text":"impl Error for TargetViewError","synthetic":false,"types":[]},{"text":"impl Error for CombinedError","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for CompatibilityError","synthetic":false,"types":[]},{"text":"impl Error for CreateShaderError","synthetic":false,"types":[]},{"text":"impl Error for CreateProgramError","synthetic":false,"types":[]},{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for LayerError","synthetic":false,"types":[]},{"text":"impl Error for SubmissionError","synthetic":false,"types":[]}];
implementors["gfx_hal"] = [{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for ViewCreationError","synthetic":false,"types":[]},{"text":"impl Error for DeviceLost","synthetic":false,"types":[]},{"text":"impl Error for SurfaceLost","synthetic":false,"types":[]},{"text":"impl Error for WindowInUse","synthetic":false,"types":[]},{"text":"impl Error for OutOfMemory","synthetic":false,"types":[]},{"text":"impl Error for OomOrDeviceLost","synthetic":false,"types":[]},{"text":"impl Error for AllocationError","synthetic":false,"types":[]},{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for MapError","synthetic":false,"types":[]},{"text":"impl Error for BindError","synthetic":false,"types":[]},{"text":"impl Error for ShaderError","synthetic":false,"types":[]},{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for ViewCreationError","synthetic":false,"types":[]},{"text":"impl Error for AllocationError","synthetic":false,"types":[]},{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for AcquireError","synthetic":false,"types":[]},{"text":"impl Error for PresentError","synthetic":false,"types":[]},{"text":"impl Error for InitError","synthetic":false,"types":[]}];
implementors["gfx_memory"] = [{"text":"impl Error for HeapsError","synthetic":false,"types":[]}];
implementors["glium"] = [{"text":"impl Error for DisplayCreationError","synthetic":false,"types":[]},{"text":"impl Error for ReadError","synthetic":false,"types":[]},{"text":"impl Error for CopyError","synthetic":false,"types":[]},{"text":"impl Error for BufferCreationError","synthetic":false,"types":[]},{"text":"impl Error for QueryCreationError","synthetic":false,"types":[]},{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for ProgramCreationError","synthetic":false,"types":[]},{"text":"impl Error for ProgramChooserCreationError","synthetic":false,"types":[]},{"text":"impl Error for GetBinaryError","synthetic":false,"types":[]},{"text":"impl Error for LayoutMismatchError","synthetic":false,"types":[]},{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for TextureCreationError","synthetic":false,"types":[]},{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for GetFormatError","synthetic":false,"types":[]},{"text":"impl Error for TextureCreationError","synthetic":false,"types":[]},{"text":"impl Error for ValidationError","synthetic":false,"types":[]},{"text":"impl Error for DrawError","synthetic":false,"types":[]},{"text":"impl Error for SwapBuffersError","synthetic":false,"types":[]},{"text":"impl Error for IncompatibleOpenGl","synthetic":false,"types":[]}];
implementors["glutin"] = [{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for ContextError","synthetic":false,"types":[]}];
implementors["libloading"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["mio_extras"] = [{"text":"impl&lt;T:&nbsp;Any&gt; Error for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Any&gt; Error for TrySendError&lt;T&gt;","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl Error for Errno","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Error for ParseBigIntError","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;E:&nbsp;Error&gt; Error for ParseComplexError&lt;E&gt;","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl Error for ParseRatioError","synthetic":false,"types":[]}];
implementors["rand"] = [{"text":"impl Error for BernoulliError","synthetic":false,"types":[]},{"text":"impl Error for WeightedError","synthetic":false,"types":[]},{"text":"impl Error for ReadError","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["rendy_core"] = [{"text":"impl Error for ParseBackendError","synthetic":false,"types":[]},{"text":"impl Error for NotEnabled","synthetic":false,"types":[]}];
implementors["rendy_factory"] = [{"text":"impl Error for UploadError","synthetic":false,"types":[]}];
implementors["rendy_init"] = [{"text":"impl Error for RendyInitError","synthetic":false,"types":[]}];
implementors["rendy_memory"] = [{"text":"impl Error for HeapsError","synthetic":false,"types":[]}];
implementors["rendy_mesh"] = [{"text":"impl Error for Incompatible","synthetic":false,"types":[]}];
implementors["rendy_resource"] = [{"text":"impl&lt;E&gt; Error for CreationError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Error + 'static,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["rendy_shader"] = [{"text":"impl Error for ShaderError","synthetic":false,"types":[]}];
implementors["rusttype"] = [{"text":"impl Error for CacheReadErr","synthetic":false,"types":[]},{"text":"impl Error for CacheWriteErr","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["shaderc"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["time"] = [{"text":"impl Error for OutOfRangeError","synthetic":false,"types":[]},{"text":"impl Error for ParseError","synthetic":false,"types":[]}];
implementors["void"] = [{"text":"impl Error for Void","synthetic":false,"types":[]}];
implementors["vulkano"] = [{"text":"impl Error for ReadLockError","synthetic":false,"types":[]},{"text":"impl Error for WriteLockError","synthetic":false,"types":[]},{"text":"impl Error for BufferCreationError","synthetic":false,"types":[]},{"text":"impl Error for BufferViewCreationError","synthetic":false,"types":[]},{"text":"impl Error for CommandPoolTrimError","synthetic":false,"types":[]},{"text":"impl Error for SubmitBindSparseError","synthetic":false,"types":[]},{"text":"impl Error for SubmitPresentError","synthetic":false,"types":[]},{"text":"impl Error for SubmitCommandBufferError","synthetic":false,"types":[]},{"text":"impl Error for SyncCommandBufferBuilderError","synthetic":false,"types":[]},{"text":"impl Error for CheckBlitImageError","synthetic":false,"types":[]},{"text":"impl Error for CheckClearColorImageError","synthetic":false,"types":[]},{"text":"impl Error for CheckCopyBufferError","synthetic":false,"types":[]},{"text":"impl Error for CheckCopyImageError","synthetic":false,"types":[]},{"text":"impl Error for CheckCopyBufferImageError","synthetic":false,"types":[]},{"text":"impl Error for CheckDescriptorSetsValidityError","synthetic":false,"types":[]},{"text":"impl Error for CheckDispatchError","synthetic":false,"types":[]},{"text":"impl Error for CheckDynamicStateValidityError","synthetic":false,"types":[]},{"text":"impl Error for CheckFillBufferError","synthetic":false,"types":[]},{"text":"impl Error for CheckIndexBufferError","synthetic":false,"types":[]},{"text":"impl Error for CheckPushConstantsValidityError","synthetic":false,"types":[]},{"text":"impl Error for CheckUpdateBufferError","synthetic":false,"types":[]},{"text":"impl Error for CheckVertexBufferError","synthetic":false,"types":[]},{"text":"impl Error for BuildError","synthetic":false,"types":[]},{"text":"impl Error for BeginRenderPassError","synthetic":false,"types":[]},{"text":"impl Error for CopyImageError","synthetic":false,"types":[]},{"text":"impl Error for BlitImageError","synthetic":false,"types":[]},{"text":"impl Error for ClearColorImageError","synthetic":false,"types":[]},{"text":"impl Error for CopyBufferError","synthetic":false,"types":[]},{"text":"impl Error for CopyBufferImageError","synthetic":false,"types":[]},{"text":"impl Error for FillBufferError","synthetic":false,"types":[]},{"text":"impl Error for DispatchError","synthetic":false,"types":[]},{"text":"impl Error for DrawError","synthetic":false,"types":[]},{"text":"impl Error for DrawIndexedError","synthetic":false,"types":[]},{"text":"impl Error for DrawIndirectError","synthetic":false,"types":[]},{"text":"impl Error for DrawIndexedIndirectError","synthetic":false,"types":[]},{"text":"impl Error for ExecuteCommandsError","synthetic":false,"types":[]},{"text":"impl Error for UpdateBufferError","synthetic":false,"types":[]},{"text":"impl Error for AutoCommandBufferBuilderContextError","synthetic":false,"types":[]},{"text":"impl Error for CommandBufferExecError","synthetic":false,"types":[]},{"text":"impl Error for DescriptorDescSupersetError","synthetic":false,"types":[]},{"text":"impl Error for ShaderStagesSupersetError","synthetic":false,"types":[]},{"text":"impl Error for PersistentDescriptorSetError","synthetic":false,"types":[]},{"text":"impl Error for PersistentDescriptorSetBuildError","synthetic":false,"types":[]},{"text":"impl Error for DescriptorPoolAllocError","synthetic":false,"types":[]},{"text":"impl Error for PipelineLayoutLimitsError","synthetic":false,"types":[]},{"text":"impl Error for RuntimePipelineDescError","synthetic":false,"types":[]},{"text":"impl Error for PipelineLayoutCreationError","synthetic":false,"types":[]},{"text":"impl Error for PipelineLayoutNotSupersetError","synthetic":false,"types":[]},{"text":"impl Error for DeviceCreationError","synthetic":false,"types":[]},{"text":"impl Error for IncompatiblePixelsType","synthetic":false,"types":[]},{"text":"impl Error for IncompatibleRenderPassAttachmentError","synthetic":false,"types":[]},{"text":"impl Error for FramebufferCreationError","synthetic":false,"types":[]},{"text":"impl Error for RenderPassCreationError","synthetic":false,"types":[]},{"text":"impl Error for ImageCreationError","synthetic":false,"types":[]},{"text":"impl Error for DebugCallbackCreationError","synthetic":false,"types":[]},{"text":"impl Error for LoadingError","synthetic":false,"types":[]},{"text":"impl Error for InstanceCreationError","synthetic":false,"types":[]},{"text":"impl Error for LayersListError","synthetic":false,"types":[]},{"text":"impl Error for DeviceMemoryAllocError","synthetic":false,"types":[]},{"text":"impl Error for ComputePipelineCreationError","synthetic":false,"types":[]},{"text":"impl Error for GraphicsPipelineCreationError","synthetic":false,"types":[]},{"text":"impl Error for ShaderInterfaceMismatchError","synthetic":false,"types":[]},{"text":"impl Error for IncompatibleVertexDefinitionError","synthetic":false,"types":[]},{"text":"impl Error for QueryPoolCreationError","synthetic":false,"types":[]},{"text":"impl Error for SamplerCreationError","synthetic":false,"types":[]},{"text":"impl Error for SurfaceCreationError","synthetic":false,"types":[]},{"text":"impl Error for CapabilitiesError","synthetic":false,"types":[]},{"text":"impl Error for SwapchainCreationError","synthetic":false,"types":[]},{"text":"impl Error for AcquireError","synthetic":false,"types":[]},{"text":"impl Error for FenceWaitError","synthetic":false,"types":[]},{"text":"impl Error for AccessError","synthetic":false,"types":[]},{"text":"impl Error for AccessCheckError","synthetic":false,"types":[]},{"text":"impl Error for FlushError","synthetic":false,"types":[]},{"text":"impl Error for OomError","synthetic":false,"types":[]}];
implementors["walkdir"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["wayland_client"] = [{"text":"impl Error for ConnectError","synthetic":false,"types":[]},{"text":"impl Error for ProtocolError","synthetic":false,"types":[]},{"text":"impl Error for GlobalError","synthetic":false,"types":[]}];
implementors["wayland_commons"] = [{"text":"impl Error for MessageWriteError","synthetic":false,"types":[]},{"text":"impl Error for MessageParseError","synthetic":false,"types":[]}];
implementors["winit"] = [{"text":"impl Error for BadIcon","synthetic":false,"types":[]},{"text":"impl Error for XNotSupported","synthetic":false,"types":[]},{"text":"impl Error for EventsLoopClosed","synthetic":false,"types":[]},{"text":"impl Error for CreationError","synthetic":false,"types":[]}];
implementors["x11_clipboard"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["x11_dl"] = [{"text":"impl Error for OpenError","synthetic":false,"types":[]}];
implementors["xcb"] = [{"text":"impl&lt;T:&nbsp;Debug&gt; Error for Error&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for ConnError","synthetic":false,"types":[]}];
implementors["xdg"] = [{"text":"impl Error for BaseDirectoriesError","synthetic":false,"types":[]}];
implementors["xml"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for EmitterError","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()