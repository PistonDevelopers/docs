(function() {var implementors = {};
implementors["ab_glyph_rasterizer"] = [{"text":"impl Send for Point","synthetic":true,"types":[]},{"text":"impl Send for Rasterizer","synthetic":true,"types":[]}];
implementors["addr2line"] = [{"text":"impl&lt;R&gt; Send for Context&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, R&gt; !Send for FrameIter&lt;'ctx, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, R&gt; Send for Frame&lt;'ctx, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for FunctionName&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Location&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["adler"] = [{"text":"impl Send for Adler32","synthetic":true,"types":[]}];
implementors["andrew"] = [{"text":"impl&lt;'a&gt; Send for Canvas&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Endian","synthetic":true,"types":[]},{"text":"impl Send for Line","synthetic":true,"types":[]},{"text":"impl Send for Sides","synthetic":true,"types":[]},{"text":"impl Send for Rectangle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for FontConfig","synthetic":true,"types":[]}];
implementors["approx"] = [{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Send for AbsDiff&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Send for Relative&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Send for Ulps&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; Send for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for CapacityError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, A:&nbsp;Array + Send&gt; Send for Drain&lt;'a, A&gt;","synthetic":false,"types":[]}];
implementors["ash"] = [{"text":"impl Send for Device","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for EntryCustom&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for LoadingError","synthetic":true,"types":[]},{"text":"impl Send for Instance","synthetic":true,"types":[]},{"text":"impl Send for InstanceError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for Align&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for AlignIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Send for PipelineCacheCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for CullModeFlags","synthetic":true,"types":[]},{"text":"impl Send for QueueFlags","synthetic":true,"types":[]},{"text":"impl Send for RenderPassCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for DeviceQueueCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for MemoryPropertyFlags","synthetic":true,"types":[]},{"text":"impl Send for MemoryHeapFlags","synthetic":true,"types":[]},{"text":"impl Send for AccessFlags","synthetic":true,"types":[]},{"text":"impl Send for BufferUsageFlags","synthetic":true,"types":[]},{"text":"impl Send for BufferCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl Send for ImageUsageFlags","synthetic":true,"types":[]},{"text":"impl Send for ImageCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for ImageViewCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for SamplerCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineShaderStageCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for ColorComponentFlags","synthetic":true,"types":[]},{"text":"impl Send for FenceCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for SemaphoreCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for FormatFeatureFlags","synthetic":true,"types":[]},{"text":"impl Send for QueryControlFlags","synthetic":true,"types":[]},{"text":"impl Send for QueryResultFlags","synthetic":true,"types":[]},{"text":"impl Send for CommandBufferUsageFlags","synthetic":true,"types":[]},{"text":"impl Send for QueryPipelineStatisticFlags","synthetic":true,"types":[]},{"text":"impl Send for ImageAspectFlags","synthetic":true,"types":[]},{"text":"impl Send for SparseImageFormatFlags","synthetic":true,"types":[]},{"text":"impl Send for SparseMemoryBindFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineStageFlags","synthetic":true,"types":[]},{"text":"impl Send for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for CommandPoolResetFlags","synthetic":true,"types":[]},{"text":"impl Send for CommandBufferResetFlags","synthetic":true,"types":[]},{"text":"impl Send for SampleCountFlags","synthetic":true,"types":[]},{"text":"impl Send for AttachmentDescriptionFlags","synthetic":true,"types":[]},{"text":"impl Send for StencilFaceFlags","synthetic":true,"types":[]},{"text":"impl Send for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for DependencyFlags","synthetic":true,"types":[]},{"text":"impl Send for SemaphoreWaitFlags","synthetic":true,"types":[]},{"text":"impl Send for DisplayPlaneAlphaFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for CompositeAlphaFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for SurfaceTransformFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for SwapchainImageUsageFlagsANDROID","synthetic":true,"types":[]},{"text":"impl Send for DebugReportFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for ExternalMemoryHandleTypeFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for ExternalMemoryFeatureFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for SubgroupFeatureFlags","synthetic":true,"types":[]},{"text":"impl Send for IndirectCommandsLayoutUsageFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for IndirectStateFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for DescriptorSetLayoutCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for ExternalMemoryHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl Send for ExternalMemoryFeatureFlags","synthetic":true,"types":[]},{"text":"impl Send for ExternalSemaphoreHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl Send for ExternalSemaphoreFeatureFlags","synthetic":true,"types":[]},{"text":"impl Send for SemaphoreImportFlags","synthetic":true,"types":[]},{"text":"impl Send for ExternalFenceHandleTypeFlags","synthetic":true,"types":[]},{"text":"impl Send for ExternalFenceFeatureFlags","synthetic":true,"types":[]},{"text":"impl Send for FenceImportFlags","synthetic":true,"types":[]},{"text":"impl Send for SurfaceCounterFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for PeerMemoryFeatureFlags","synthetic":true,"types":[]},{"text":"impl Send for MemoryAllocateFlags","synthetic":true,"types":[]},{"text":"impl Send for DeviceGroupPresentModeFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for SwapchainCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for SubpassDescriptionFlags","synthetic":true,"types":[]},{"text":"impl Send for DebugUtilsMessageSeverityFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for DebugUtilsMessageTypeFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for DescriptorBindingFlags","synthetic":true,"types":[]},{"text":"impl Send for ConditionalRenderingFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for ResolveModeFlags","synthetic":true,"types":[]},{"text":"impl Send for GeometryInstanceFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for GeometryFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for BuildAccelerationStructureFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for FramebufferCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for DeviceDiagnosticsConfigFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for PipelineCreationFeedbackFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for PerformanceCounterDescriptionFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for AcquireProfilingLockFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for ShaderCorePropertiesFlagsAMD","synthetic":true,"types":[]},{"text":"impl Send for ShaderModuleCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineCompilerControlFlagsAMD","synthetic":true,"types":[]},{"text":"impl Send for ToolPurposeFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for QueryPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineLayoutCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineDepthStencilStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineDynamicStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineColorBlendStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineMultisampleStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineRasterizationStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineViewportStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineTessellationStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineInputAssemblyStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineVertexInputStateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for BufferViewCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for InstanceCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for DeviceCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for EventCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for MemoryMapFlags","synthetic":true,"types":[]},{"text":"impl Send for DescriptorPoolResetFlags","synthetic":true,"types":[]},{"text":"impl Send for DescriptorUpdateTemplateCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for DisplayModeCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for DisplaySurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for AndroidSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for ViSurfaceCreateFlagsNN","synthetic":true,"types":[]},{"text":"impl Send for WaylandSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for Win32SurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for XlibSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for XcbSurfaceCreateFlagsKHR","synthetic":true,"types":[]},{"text":"impl Send for IOSSurfaceCreateFlagsMVK","synthetic":true,"types":[]},{"text":"impl Send for MacOSSurfaceCreateFlagsMVK","synthetic":true,"types":[]},{"text":"impl Send for MetalSurfaceCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for ImagePipeSurfaceCreateFlagsFUCHSIA","synthetic":true,"types":[]},{"text":"impl Send for StreamDescriptorSurfaceCreateFlagsGGP","synthetic":true,"types":[]},{"text":"impl Send for HeadlessSurfaceCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for CommandPoolTrimFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineViewportSwizzleStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for PipelineDiscardRectangleStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for PipelineCoverageToColorStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for PipelineCoverageModulationStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for PipelineCoverageReductionStateCreateFlagsNV","synthetic":true,"types":[]},{"text":"impl Send for ValidationCacheCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for DebugUtilsMessengerCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for DebugUtilsMessengerCallbackDataFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for PipelineRasterizationConservativeStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for PipelineRasterizationStateStreamCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for PipelineRasterizationDepthClipStateCreateFlagsEXT","synthetic":true,"types":[]},{"text":"impl Send for DeviceMemory","synthetic":true,"types":[]},{"text":"impl Send for CommandPool","synthetic":true,"types":[]},{"text":"impl Send for Buffer","synthetic":true,"types":[]},{"text":"impl Send for BufferView","synthetic":true,"types":[]},{"text":"impl Send for Image","synthetic":true,"types":[]},{"text":"impl Send for ImageView","synthetic":true,"types":[]},{"text":"impl Send for ShaderModule","synthetic":true,"types":[]},{"text":"impl Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for PipelineLayout","synthetic":true,"types":[]},{"text":"impl Send for Sampler","synthetic":true,"types":[]},{"text":"impl Send for DescriptorSet","synthetic":true,"types":[]},{"text":"impl Send for DescriptorSetLayout","synthetic":true,"types":[]},{"text":"impl Send for DescriptorPool","synthetic":true,"types":[]},{"text":"impl Send for Fence","synthetic":true,"types":[]},{"text":"impl Send for Semaphore","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for QueryPool","synthetic":true,"types":[]},{"text":"impl Send for Framebuffer","synthetic":true,"types":[]},{"text":"impl Send for RenderPass","synthetic":true,"types":[]},{"text":"impl Send for PipelineCache","synthetic":true,"types":[]},{"text":"impl Send for IndirectCommandsLayoutNV","synthetic":true,"types":[]},{"text":"impl Send for DescriptorUpdateTemplate","synthetic":true,"types":[]},{"text":"impl Send for SamplerYcbcrConversion","synthetic":true,"types":[]},{"text":"impl Send for ValidationCacheEXT","synthetic":true,"types":[]},{"text":"impl Send for AccelerationStructureKHR","synthetic":true,"types":[]},{"text":"impl Send for PerformanceConfigurationINTEL","synthetic":true,"types":[]},{"text":"impl Send for DeferredOperationKHR","synthetic":true,"types":[]},{"text":"impl Send for DisplayKHR","synthetic":true,"types":[]},{"text":"impl Send for DisplayModeKHR","synthetic":true,"types":[]},{"text":"impl Send for SurfaceKHR","synthetic":true,"types":[]},{"text":"impl Send for SwapchainKHR","synthetic":true,"types":[]},{"text":"impl Send for DebugReportCallbackEXT","synthetic":true,"types":[]},{"text":"impl Send for DebugUtilsMessengerEXT","synthetic":true,"types":[]},{"text":"impl !Send for BaseOutStructure","synthetic":true,"types":[]},{"text":"impl !Send for BaseInStructure","synthetic":true,"types":[]},{"text":"impl Send for Offset2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Offset2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Offset3D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Offset3DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Extent2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Extent2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Extent3D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Extent3DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Viewport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ViewportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Rect2D","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Rect2DBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ClearRect","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ClearRectBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ComponentMapping","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ComponentMappingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PhysicalDevicePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ExtensionProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ExtensionPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for LayerProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for LayerPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ApplicationInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ApplicationInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AllocationCallbacks","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AllocationCallbacksBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceQueueCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceQueueCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for InstanceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for InstanceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for QueueFamilyProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for QueueFamilyPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PhysicalDeviceMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for MemoryRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MemoryRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SparseImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SparseImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SparseImageMemoryRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SparseImageMemoryRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for MemoryType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MemoryTypeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for MemoryHeap","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MemoryHeapBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MappedMemoryRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MappedMemoryRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for FormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for FormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DescriptorBufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DescriptorBufferInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DescriptorImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DescriptorImageInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for WriteDescriptorSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for WriteDescriptorSetBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CopyDescriptorSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CopyDescriptorSetBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferViewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferViewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageSubresource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageSubresourceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageSubresourceLayers","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageSubresourceLayersBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageSubresourceRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageSubresourceRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferMemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferMemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageMemoryBarrier","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageMemoryBarrierBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SubresourceLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SubresourceLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageViewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageViewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BufferCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SparseMemoryBind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SparseMemoryBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SparseImageMemoryBind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SparseImageMemoryBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SparseBufferMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SparseBufferMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SparseImageOpaqueMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SparseImageOpaqueMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SparseImageMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SparseImageMemoryBindInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindSparseInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindSparseInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageBlit","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageBlitBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferImageCopyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageResolve","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageResolveBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ShaderModuleCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ShaderModuleCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorSetLayoutBindingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorSetLayoutCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DescriptorPoolSize","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DescriptorPoolSizeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorSetAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SpecializationMapEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SpecializationMapEntryBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SpecializationInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SpecializationInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineShaderStageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineShaderStageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ComputePipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ComputePipelineCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for VertexInputBindingDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VertexInputBindingDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for VertexInputAttributeDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VertexInputAttributeDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineVertexInputStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineVertexInputStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineInputAssemblyStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineInputAssemblyStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineTessellationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineTessellationStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineViewportStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineViewportStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRasterizationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineRasterizationStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineMultisampleStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineMultisampleStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PipelineColorBlendAttachmentState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PipelineColorBlendAttachmentStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineColorBlendStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineColorBlendStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineDynamicStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineDynamicStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for StencilOpState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for StencilOpStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineDepthStencilStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineDepthStencilStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GraphicsPipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GraphicsPipelineCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineCacheCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineCacheCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PushConstantRange","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PushConstantRangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineLayoutCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SamplerCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SamplerCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CommandPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CommandPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CommandBufferAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CommandBufferAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CommandBufferInheritanceInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CommandBufferInheritanceInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CommandBufferBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ClearDepthStencilValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ClearDepthStencilValueBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ClearAttachment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ClearAttachmentBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for AttachmentDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for AttachmentDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for AttachmentReference","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for AttachmentReferenceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubpassDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubpassDescriptionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SubpassDependencyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for EventCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for EventCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FenceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FenceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PhysicalDeviceFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceSparseProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PhysicalDeviceSparsePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceLimits","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PhysicalDeviceLimitsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SemaphoreCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for QueryPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for QueryPoolCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FramebufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FramebufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DrawIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DrawIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DrawIndexedIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DrawIndexedIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DispatchIndirectCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DispatchIndirectCommandBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DisplayPlanePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DisplayPlanePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DisplayModeParametersKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DisplayModeParametersKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DisplayModePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DisplayModePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayModeCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayModeCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DisplayPlaneCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DisplayPlaneCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplaySurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplaySurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayPresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SurfaceCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AndroidSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AndroidSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ViSurfaceCreateInfoNN","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ViSurfaceCreateInfoNNBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for WaylandSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for WaylandSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Win32SurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Win32SurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for XlibSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for XlibSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for XcbSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for XcbSurfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImagePipeSurfaceCreateInfoFUCHSIA","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImagePipeSurfaceCreateInfoFUCHSIABuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for StreamDescriptorSurfaceCreateInfoGGP","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for StreamDescriptorSurfaceCreateInfoGGPBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SurfaceFormatKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SurfaceFormatKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugReportCallbackCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugReportCallbackCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ValidationFlagsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ValidationFlagsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ValidationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ValidationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRasterizationStateRasterizationOrderAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineRasterizationStateRasterizationOrderAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugMarkerObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugMarkerObjectNameInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugMarkerObjectTagInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugMarkerObjectTagInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugMarkerMarkerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugMarkerMarkerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DedicatedAllocationImageCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DedicatedAllocationImageCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DedicatedAllocationBufferCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DedicatedAllocationBufferCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DedicatedAllocationMemoryAllocateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DedicatedAllocationMemoryAllocateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ExternalImageFormatPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ExternalImageFormatPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalMemoryImageCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalMemoryImageCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportMemoryAllocateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportMemoryAllocateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportMemoryWin32HandleInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportMemoryWin32HandleInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportMemoryWin32HandleInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportMemoryWin32HandleInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Win32KeyedMutexAcquireReleaseInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Win32KeyedMutexAcquireReleaseInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDeviceGeneratedCommandsFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDeviceGeneratedCommandsPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDeviceGeneratedCommandsPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GraphicsShaderGroupCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GraphicsShaderGroupCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GraphicsPipelineShaderGroupsCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GraphicsPipelineShaderGroupsCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BindShaderGroupIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindShaderGroupIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BindIndexBufferIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindIndexBufferIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BindVertexBufferIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindVertexBufferIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SetStateFlagsIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SetStateFlagsIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for IndirectCommandsStreamNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for IndirectCommandsStreamNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IndirectCommandsLayoutTokenNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for IndirectCommandsLayoutTokenNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IndirectCommandsLayoutCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for IndirectCommandsLayoutCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GeneratedCommandsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GeneratedCommandsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GeneratedCommandsMemoryRequirementsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GeneratedCommandsMemoryRequirementsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceFeatures2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceFeatures2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageFormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageFormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceImageFormatInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceImageFormatInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for QueueFamilyProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for QueueFamilyProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMemoryProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMemoryProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SparseImageFormatProperties2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SparseImageFormatProperties2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSparseImageFormatInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSparseImageFormatInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePushDescriptorPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePushDescriptorPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ConformanceVersion","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ConformanceVersionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDriverProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDriverPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PresentRegionsKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PresentRegionsKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PresentRegionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PresentRegionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for RectLayerKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RectLayerKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVariablePointersFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVariablePointersFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ExternalMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ExternalMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceExternalImageFormatInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceExternalImageFormatInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceExternalBufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceExternalBufferInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalBufferProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalBufferPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceIDProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceIDPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalMemoryImageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalMemoryImageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalMemoryBufferCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalMemoryBufferCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportMemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportMemoryAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportMemoryWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportMemoryWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportMemoryWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportMemoryWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryWin32HandlePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryWin32HandlePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportMemoryFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportMemoryFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryFdPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryFdPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Win32KeyedMutexAcquireReleaseInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Win32KeyedMutexAcquireReleaseInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceExternalSemaphoreInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceExternalSemaphoreInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalSemaphoreProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalSemaphorePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportSemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportSemaphoreCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportSemaphoreWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportSemaphoreWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportSemaphoreWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportSemaphoreWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for D3D12FenceSubmitInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for D3D12FenceSubmitInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SemaphoreGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SemaphoreGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportSemaphoreFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportSemaphoreFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SemaphoreGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SemaphoreGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceExternalFenceInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceExternalFenceInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalFenceProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalFencePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportFenceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportFenceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportFenceWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportFenceWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExportFenceWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExportFenceWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FenceGetWin32HandleInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FenceGetWin32HandleInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportFenceFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportFenceFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FenceGetFdInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FenceGetFdInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMultiviewFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMultiviewFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMultiviewProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMultiviewPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassMultiviewCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassMultiviewCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceCapabilities2EXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SurfaceCapabilities2EXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayPowerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayPowerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceEventInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceEventInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayEventInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayEventInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SwapchainCounterCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SwapchainCounterCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceGroupProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceGroupPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryAllocateFlagsInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryAllocateFlagsInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindBufferMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindBufferMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindBufferMemoryDeviceGroupInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindBufferMemoryDeviceGroupInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindImageMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindImageMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindImageMemoryDeviceGroupInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindImageMemoryDeviceGroupInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupRenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupRenderPassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupCommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupCommandBufferBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupBindSparseInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupBindSparseInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupPresentCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupPresentCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageSwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageSwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindImageMemorySwapchainInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindImageMemorySwapchainInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AcquireNextImageInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AcquireNextImageInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupPresentInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupDeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupDeviceCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceGroupSwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceGroupSwapchainCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DescriptorUpdateTemplateEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DescriptorUpdateTemplateEntryBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorUpdateTemplateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorUpdateTemplateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for XYColorEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for XYColorEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for HdrMetadataEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for HdrMetadataEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayNativeHdrSurfaceCapabilitiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayNativeHdrSurfaceCapabilitiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SwapchainDisplayNativeHdrCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SwapchainDisplayNativeHdrCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for RefreshCycleDurationGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RefreshCycleDurationGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PastPresentationTimingGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PastPresentationTimingGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PresentTimesInfoGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PresentTimesInfoGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PresentTimeGOOGLE","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PresentTimeGOOGLEBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for IOSSurfaceCreateInfoMVKBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MacOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MacOSSurfaceCreateInfoMVKBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MetalSurfaceCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MetalSurfaceCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ViewportWScalingNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ViewportWScalingNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineViewportWScalingStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineViewportWScalingStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ViewportSwizzleNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ViewportSwizzleNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineViewportSwizzleStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineViewportSwizzleStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDiscardRectanglePropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDiscardRectanglePropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineDiscardRectangleStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineDiscardRectangleStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMultiviewPerViewAttributesPropertiesNVXBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for InputAttachmentAspectReference","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for InputAttachmentAspectReferenceBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassInputAttachmentAspectCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassInputAttachmentAspectCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSurfaceInfo2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSurfaceInfo2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceCapabilities2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SurfaceCapabilities2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceFormat2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SurfaceFormat2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayPlaneProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayPlaneProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayModeProperties2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayModeProperties2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayPlaneInfo2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayPlaneInfo2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DisplayPlaneCapabilities2KHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DisplayPlaneCapabilities2KHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SharedPresentSurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SharedPresentSurfaceCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevice16BitStorageFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevice16BitStorageFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSubgroupProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSubgroupPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderSubgroupExtendedTypesFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderSubgroupExtendedTypesFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageSparseMemoryRequirementsInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageSparseMemoryRequirementsInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryRequirements2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryRequirements2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SparseImageMemoryRequirements2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SparseImageMemoryRequirements2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePointClippingProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePointClippingPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryDedicatedRequirements","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryDedicatedRequirementsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryDedicatedAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryDedicatedAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageViewUsageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageViewUsageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineTessellationDomainOriginStateCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineTessellationDomainOriginStateCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SamplerYcbcrConversionInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SamplerYcbcrConversionInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SamplerYcbcrConversionCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SamplerYcbcrConversionCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindImagePlaneMemoryInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindImagePlaneMemoryInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImagePlaneMemoryRequirementsInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImagePlaneMemoryRequirementsInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSamplerYcbcrConversionFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSamplerYcbcrConversionFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SamplerYcbcrConversionImageFormatProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SamplerYcbcrConversionImageFormatPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for TextureLODGatherFormatPropertiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for TextureLODGatherFormatPropertiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ConditionalRenderingBeginInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ConditionalRenderingBeginInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ProtectedSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ProtectedSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceProtectedMemoryFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceProtectedMemoryFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceProtectedMemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceProtectedMemoryPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceQueueInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceQueueInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineCoverageToColorStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineCoverageToColorStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSamplerFilterMinmaxProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSamplerFilterMinmaxPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SampleLocationEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SampleLocationEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SampleLocationsInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SampleLocationsInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AttachmentSampleLocationsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AttachmentSampleLocationsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubpassSampleLocationsEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubpassSampleLocationsEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassSampleLocationsBeginInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassSampleLocationsBeginInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineSampleLocationsStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineSampleLocationsStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSampleLocationsPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSampleLocationsPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MultisamplePropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MultisamplePropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SamplerReductionModeCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SamplerReductionModeCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceBlendOperationAdvancedFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceBlendOperationAdvancedFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceBlendOperationAdvancedPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceBlendOperationAdvancedPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineColorBlendAdvancedStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineColorBlendAdvancedStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceInlineUniformBlockFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceInlineUniformBlockFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceInlineUniformBlockPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceInlineUniformBlockPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for WriteDescriptorSetInlineUniformBlockEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for WriteDescriptorSetInlineUniformBlockEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorPoolInlineUniformBlockCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorPoolInlineUniformBlockCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineCoverageModulationStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineCoverageModulationStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageFormatListCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageFormatListCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ValidationCacheCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ValidationCacheCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ShaderModuleValidationCacheCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ShaderModuleValidationCacheCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMaintenance3Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMaintenance3PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetLayoutSupport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorSetLayoutSupportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderDrawParametersFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderDrawParametersFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderFloat16Int8Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderFloat16Int8FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceFloatControlsProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceFloatControlsPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceHostQueryResetFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceHostQueryResetFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for NativeBufferUsage2ANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for NativeBufferUsage2ANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for NativeBufferANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for NativeBufferANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SwapchainImageCreateInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SwapchainImageCreateInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePresentationPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePresentationPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ShaderResourceUsageAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ShaderResourceUsageAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ShaderStatisticsInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ShaderStatisticsInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceQueueGlobalPriorityCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceQueueGlobalPriorityCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugUtilsObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugUtilsObjectNameInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugUtilsObjectTagInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugUtilsObjectTagInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugUtilsLabelEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugUtilsLabelEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugUtilsMessengerCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugUtilsMessengerCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DebugUtilsMessengerCallbackDataEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DebugUtilsMessengerCallbackDataEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportMemoryHostPointerInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportMemoryHostPointerInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryHostPointerPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryHostPointerPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceExternalMemoryHostPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceExternalMemoryHostPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceConservativeRasterizationPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceConservativeRasterizationPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CalibratedTimestampInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CalibratedTimestampInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderCorePropertiesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderCorePropertiesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderCoreProperties2AMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderCoreProperties2AMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRasterizationConservativeStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineRasterizationConservativeStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDescriptorIndexingFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDescriptorIndexingFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDescriptorIndexingProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDescriptorIndexingPropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetLayoutBindingFlagsCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorSetLayoutBindingFlagsCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetVariableDescriptorCountAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorSetVariableDescriptorCountAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetVariableDescriptorCountLayoutSupport","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DescriptorSetVariableDescriptorCountLayoutSupportBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AttachmentDescription2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AttachmentDescription2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AttachmentReference2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AttachmentReference2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubpassDescription2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubpassDescription2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubpassDependency2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubpassDependency2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassCreateInfo2","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassCreateInfo2Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubpassBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubpassBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubpassEndInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubpassEndInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceTimelineSemaphoreFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceTimelineSemaphoreFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceTimelineSemaphoreProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceTimelineSemaphorePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SemaphoreTypeCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SemaphoreTypeCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for TimelineSemaphoreSubmitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for TimelineSemaphoreSubmitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SemaphoreWaitInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SemaphoreWaitInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SemaphoreSignalInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SemaphoreSignalInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for VertexInputBindingDivisorDescriptionEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VertexInputBindingDivisorDescriptionEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineVertexInputDivisorStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineVertexInputDivisorStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVertexAttributeDivisorPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVertexAttributeDivisorPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePCIBusInfoPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePCIBusInfoPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImportAndroidHardwareBufferInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImportAndroidHardwareBufferInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AndroidHardwareBufferUsageANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AndroidHardwareBufferUsageANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AndroidHardwareBufferPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AndroidHardwareBufferPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryGetAndroidHardwareBufferInfoANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryGetAndroidHardwareBufferInfoANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AndroidHardwareBufferFormatPropertiesANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AndroidHardwareBufferFormatPropertiesANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CommandBufferInheritanceConditionalRenderingInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CommandBufferInheritanceConditionalRenderingInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ExternalFormatANDROID","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExternalFormatANDROIDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevice8BitStorageFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevice8BitStorageFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceConditionalRenderingFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceConditionalRenderingFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVulkanMemoryModelFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVulkanMemoryModelFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderAtomicInt64Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderAtomicInt64FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVertexAttributeDivisorFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVertexAttributeDivisorFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for QueueFamilyCheckpointPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for QueueFamilyCheckpointPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CheckpointDataNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CheckpointDataNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDepthStencilResolveProperties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDepthStencilResolvePropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SubpassDescriptionDepthStencilResolve","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubpassDescriptionDepthStencilResolveBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageViewASTCDecodeModeEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageViewASTCDecodeModeEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceASTCDecodeFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceASTCDecodeFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceTransformFeedbackFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceTransformFeedbackFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceTransformFeedbackPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceTransformFeedbackPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRasterizationStateStreamCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineRasterizationStateStreamCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceRepresentativeFragmentTestFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceRepresentativeFragmentTestFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRepresentativeFragmentTestStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineRepresentativeFragmentTestStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceExclusiveScissorFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceExclusiveScissorFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineViewportExclusiveScissorStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineViewportExclusiveScissorStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceCornerSampledImageFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceCornerSampledImageFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceComputeShaderDerivativesFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceComputeShaderDerivativesFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceFragmentShaderBarycentricFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceFragmentShaderBarycentricFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderImageFootprintFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderImageFootprintFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ShadingRatePaletteNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ShadingRatePaletteNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineViewportShadingRateImageStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineViewportShadingRateImageStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShadingRateImageFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShadingRateImageFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShadingRateImagePropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShadingRateImagePropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CoarseSampleLocationNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for CoarseSampleLocationNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CoarseSampleOrderCustomNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CoarseSampleOrderCustomNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineViewportCoarseSampleOrderStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineViewportCoarseSampleOrderStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMeshShaderFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMeshShaderFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMeshShaderPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMeshShaderPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DrawMeshTasksIndirectCommandNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DrawMeshTasksIndirectCommandNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RayTracingShaderGroupCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RayTracingShaderGroupCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RayTracingShaderGroupCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RayTracingShaderGroupCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RayTracingPipelineCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RayTracingPipelineCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RayTracingPipelineCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RayTracingPipelineCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GeometryTrianglesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GeometryTrianglesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GeometryAABBNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GeometryAABBNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GeometryDataNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GeometryDataNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for GeometryNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GeometryNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BindAccelerationStructureMemoryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BindAccelerationStructureMemoryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for WriteDescriptorSetAccelerationStructureKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for WriteDescriptorSetAccelerationStructureKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureMemoryRequirementsInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureMemoryRequirementsInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureMemoryRequirementsInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureMemoryRequirementsInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceRayTracingFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceRayTracingFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceRayTracingPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceRayTracingPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceRayTracingPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceRayTracingPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for StridedBufferRegionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for StridedBufferRegionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for TraceRaysIndirectCommandKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TraceRaysIndirectCommandKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DrmFormatModifierPropertiesListEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DrmFormatModifierPropertiesListEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DrmFormatModifierPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DrmFormatModifierPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceImageDrmFormatModifierInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceImageDrmFormatModifierInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageDrmFormatModifierListCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageDrmFormatModifierListCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageDrmFormatModifierExplicitCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageDrmFormatModifierExplicitCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageDrmFormatModifierPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageDrmFormatModifierPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageStencilUsageCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageStencilUsageCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceMemoryOverallocationCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceMemoryOverallocationCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceFragmentDensityMapFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceFragmentDensityMapFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceFragmentDensityMapPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceFragmentDensityMapPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassFragmentDensityMapCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassFragmentDensityMapCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceScalarBlockLayoutFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceScalarBlockLayoutFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceProtectedCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SurfaceProtectedCapabilitiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceUniformBufferStandardLayoutFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceUniformBufferStandardLayoutFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDepthClipEnableFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDepthClipEnableFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRasterizationDepthClipStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineRasterizationDepthClipStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMemoryBudgetPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMemoryBudgetPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMemoryPriorityFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceMemoryPriorityFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryPriorityAllocateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryPriorityAllocateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceBufferDeviceAddressFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceBufferDeviceAddressFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceBufferDeviceAddressFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceBufferDeviceAddressFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferDeviceAddressInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferDeviceAddressInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferOpaqueCaptureAddressCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferOpaqueCaptureAddressCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferDeviceAddressCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferDeviceAddressCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceImageViewImageFormatInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceImageViewImageFormatInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FilterCubicImageViewImageFormatPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FilterCubicImageViewImageFormatPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceImagelessFramebufferFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceImagelessFramebufferFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FramebufferAttachmentsCreateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FramebufferAttachmentsCreateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FramebufferAttachmentImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FramebufferAttachmentImageInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassAttachmentBeginInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassAttachmentBeginInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceTextureCompressionASTCHDRFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceCooperativeMatrixFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceCooperativeMatrixFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceCooperativeMatrixPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceCooperativeMatrixPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CooperativeMatrixPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CooperativeMatrixPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceYcbcrImageArraysFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceYcbcrImageArraysFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ImageViewHandleInfoNVX","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImageViewHandleInfoNVXBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PresentFrameTokenGGP","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PresentFrameTokenGGPBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PipelineCreationFeedbackEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PipelineCreationFeedbackEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineCreationFeedbackCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineCreationFeedbackCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceFullScreenExclusiveInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SurfaceFullScreenExclusiveInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceFullScreenExclusiveWin32InfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SurfaceFullScreenExclusiveWin32InfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceCapabilitiesFullScreenExclusiveEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SurfaceCapabilitiesFullScreenExclusiveEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePerformanceQueryFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePerformanceQueryFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePerformanceQueryPropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePerformanceQueryPropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceCounterKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceCounterKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceCounterDescriptionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceCounterDescriptionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for QueryPoolPerformanceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for QueryPoolPerformanceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AcquireProfilingLockInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AcquireProfilingLockInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceQuerySubmitInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceQuerySubmitInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for HeadlessSurfaceCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for HeadlessSurfaceCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceCoverageReductionModeFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceCoverageReductionModeFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineCoverageReductionStateCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineCoverageReductionStateCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for FramebufferMixedSamplesCombinationNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FramebufferMixedSamplesCombinationNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderIntegerFunctions2FeaturesINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceValueINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceValueINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for InitializePerformanceApiInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for InitializePerformanceApiInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for QueryPoolPerformanceQueryCreateInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for QueryPoolPerformanceQueryCreateInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceMarkerInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceMarkerInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceStreamMarkerInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceStreamMarkerInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceOverrideInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceOverrideInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceConfigurationAcquireInfoINTEL","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerformanceConfigurationAcquireInfoINTELBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderClockFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderClockFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceIndexTypeUint8FeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceIndexTypeUint8FeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderSMBuiltinsPropertiesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderSMBuiltinsPropertiesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderSMBuiltinsFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderSMBuiltinsFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceFragmentShaderInterlockFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceFragmentShaderInterlockFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSeparateDepthStencilLayoutsFeatures","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSeparateDepthStencilLayoutsFeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AttachmentReferenceStencilLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AttachmentReferenceStencilLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AttachmentDescriptionStencilLayout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AttachmentDescriptionStencilLayoutBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePipelineExecutablePropertiesFeaturesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineExecutablePropertiesKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineExecutablePropertiesKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineExecutableInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineExecutableInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineExecutableStatisticKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineExecutableStatisticKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineExecutableInternalRepresentationKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineExecutableInternalRepresentationKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceTexelBufferAlignmentFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceTexelBufferAlignmentFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceTexelBufferAlignmentPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceTexelBufferAlignmentPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSubgroupSizeControlFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSubgroupSizeControlFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSubgroupSizeControlPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceSubgroupSizeControlPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineShaderStageRequiredSubgroupSizeCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for MemoryOpaqueCaptureAddressAllocateInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MemoryOpaqueCaptureAddressAllocateInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceMemoryOpaqueCaptureAddressInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceMemoryOpaqueCaptureAddressInfoBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceLineRasterizationFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceLineRasterizationFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceLineRasterizationPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceLineRasterizationPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRasterizationLineStateCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineRasterizationLineStateCreateInfoEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePipelineCreationCacheControlFeaturesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDevicePipelineCreationCacheControlFeaturesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVulkan11Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVulkan11FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVulkan11Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVulkan11PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVulkan12Features","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVulkan12FeaturesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceVulkan12Properties","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceVulkan12PropertiesBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineCompilerControlCreateInfoAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineCompilerControlCreateInfoAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceCoherentMemoryFeaturesAMD","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceCoherentMemoryFeaturesAMDBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceToolPropertiesEXT","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceToolPropertiesEXTBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureGeometryTrianglesDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureGeometryTrianglesDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureGeometryAabbsDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureGeometryAabbsDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureGeometryInstancesDataKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureGeometryInstancesDataKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureGeometryKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureGeometryKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureBuildGeometryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureBuildGeometryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for AccelerationStructureBuildOffsetInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for AccelerationStructureBuildOffsetInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureCreateGeometryTypeInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureCreateGeometryTypeInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for AabbPositionsKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for AabbPositionsKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for TransformMatrixKHR","synthetic":true,"types":[]},{"text":"impl Send for AccelerationStructureInstanceKHR","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureDeviceAddressInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureDeviceAddressInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureVersionKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AccelerationStructureVersionKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CopyAccelerationStructureInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CopyAccelerationStructureInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CopyAccelerationStructureToMemoryInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CopyAccelerationStructureToMemoryInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CopyMemoryToAccelerationStructureInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CopyMemoryToAccelerationStructureInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RayTracingPipelineInterfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RayTracingPipelineInterfaceCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeferredOperationInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeferredOperationInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineLibraryCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PipelineLibraryCreateInfoKHRBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassTransformBeginInfoQCOM","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPassTransformBeginInfoQCOMBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CommandBufferInheritanceRenderPassTransformInfoQCOM","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CommandBufferInheritanceRenderPassTransformInfoQCOMBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceDiagnosticsConfigFeaturesNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceDiagnosticsConfigFeaturesNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DeviceDiagnosticsConfigCreateInfoNV","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DeviceDiagnosticsConfigCreateInfoNVBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ImageLayout","synthetic":true,"types":[]},{"text":"impl Send for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl Send for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl Send for ImageType","synthetic":true,"types":[]},{"text":"impl Send for ImageTiling","synthetic":true,"types":[]},{"text":"impl Send for ImageViewType","synthetic":true,"types":[]},{"text":"impl Send for CommandBufferLevel","synthetic":true,"types":[]},{"text":"impl Send for ComponentSwizzle","synthetic":true,"types":[]},{"text":"impl Send for DescriptorType","synthetic":true,"types":[]},{"text":"impl Send for QueryType","synthetic":true,"types":[]},{"text":"impl Send for BorderColor","synthetic":true,"types":[]},{"text":"impl Send for PipelineBindPoint","synthetic":true,"types":[]},{"text":"impl Send for PipelineCacheHeaderVersion","synthetic":true,"types":[]},{"text":"impl Send for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl Send for SharingMode","synthetic":true,"types":[]},{"text":"impl Send for IndexType","synthetic":true,"types":[]},{"text":"impl Send for Filter","synthetic":true,"types":[]},{"text":"impl Send for SamplerMipmapMode","synthetic":true,"types":[]},{"text":"impl Send for SamplerAddressMode","synthetic":true,"types":[]},{"text":"impl Send for CompareOp","synthetic":true,"types":[]},{"text":"impl Send for PolygonMode","synthetic":true,"types":[]},{"text":"impl Send for FrontFace","synthetic":true,"types":[]},{"text":"impl Send for BlendFactor","synthetic":true,"types":[]},{"text":"impl Send for BlendOp","synthetic":true,"types":[]},{"text":"impl Send for StencilOp","synthetic":true,"types":[]},{"text":"impl Send for LogicOp","synthetic":true,"types":[]},{"text":"impl Send for InternalAllocationType","synthetic":true,"types":[]},{"text":"impl Send for SystemAllocationScope","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceType","synthetic":true,"types":[]},{"text":"impl Send for VertexInputRate","synthetic":true,"types":[]},{"text":"impl Send for Format","synthetic":true,"types":[]},{"text":"impl Send for StructureType","synthetic":true,"types":[]},{"text":"impl Send for SubpassContents","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for DynamicState","synthetic":true,"types":[]},{"text":"impl Send for DescriptorUpdateTemplateType","synthetic":true,"types":[]},{"text":"impl Send for ObjectType","synthetic":true,"types":[]},{"text":"impl Send for SemaphoreType","synthetic":true,"types":[]},{"text":"impl Send for PresentModeKHR","synthetic":true,"types":[]},{"text":"impl Send for ColorSpaceKHR","synthetic":true,"types":[]},{"text":"impl Send for TimeDomainEXT","synthetic":true,"types":[]},{"text":"impl Send for DebugReportObjectTypeEXT","synthetic":true,"types":[]},{"text":"impl Send for RasterizationOrderAMD","synthetic":true,"types":[]},{"text":"impl Send for ValidationCheckEXT","synthetic":true,"types":[]},{"text":"impl Send for ValidationFeatureEnableEXT","synthetic":true,"types":[]},{"text":"impl Send for ValidationFeatureDisableEXT","synthetic":true,"types":[]},{"text":"impl Send for IndirectCommandsTokenTypeNV","synthetic":true,"types":[]},{"text":"impl Send for DisplayPowerStateEXT","synthetic":true,"types":[]},{"text":"impl Send for DeviceEventTypeEXT","synthetic":true,"types":[]},{"text":"impl Send for DisplayEventTypeEXT","synthetic":true,"types":[]},{"text":"impl Send for ViewportCoordinateSwizzleNV","synthetic":true,"types":[]},{"text":"impl Send for DiscardRectangleModeEXT","synthetic":true,"types":[]},{"text":"impl Send for PointClippingBehavior","synthetic":true,"types":[]},{"text":"impl Send for SamplerReductionMode","synthetic":true,"types":[]},{"text":"impl Send for TessellationDomainOrigin","synthetic":true,"types":[]},{"text":"impl Send for SamplerYcbcrModelConversion","synthetic":true,"types":[]},{"text":"impl Send for SamplerYcbcrRange","synthetic":true,"types":[]},{"text":"impl Send for ChromaLocation","synthetic":true,"types":[]},{"text":"impl Send for BlendOverlapEXT","synthetic":true,"types":[]},{"text":"impl Send for CoverageModulationModeNV","synthetic":true,"types":[]},{"text":"impl Send for CoverageReductionModeNV","synthetic":true,"types":[]},{"text":"impl Send for ValidationCacheHeaderVersionEXT","synthetic":true,"types":[]},{"text":"impl Send for ShaderInfoTypeAMD","synthetic":true,"types":[]},{"text":"impl Send for QueueGlobalPriorityEXT","synthetic":true,"types":[]},{"text":"impl Send for ConservativeRasterizationModeEXT","synthetic":true,"types":[]},{"text":"impl Send for VendorId","synthetic":true,"types":[]},{"text":"impl Send for DriverId","synthetic":true,"types":[]},{"text":"impl Send for ShadingRatePaletteEntryNV","synthetic":true,"types":[]},{"text":"impl Send for CoarseSampleOrderTypeNV","synthetic":true,"types":[]},{"text":"impl Send for CopyAccelerationStructureModeKHR","synthetic":true,"types":[]},{"text":"impl Send for AccelerationStructureTypeKHR","synthetic":true,"types":[]},{"text":"impl Send for GeometryTypeKHR","synthetic":true,"types":[]},{"text":"impl Send for AccelerationStructureMemoryRequirementsTypeKHR","synthetic":true,"types":[]},{"text":"impl Send for AccelerationStructureBuildTypeKHR","synthetic":true,"types":[]},{"text":"impl Send for RayTracingShaderGroupTypeKHR","synthetic":true,"types":[]},{"text":"impl Send for MemoryOverallocationBehaviorAMD","synthetic":true,"types":[]},{"text":"impl Send for ScopeNV","synthetic":true,"types":[]},{"text":"impl Send for ComponentTypeNV","synthetic":true,"types":[]},{"text":"impl Send for FullScreenExclusiveEXT","synthetic":true,"types":[]},{"text":"impl Send for PerformanceCounterScopeKHR","synthetic":true,"types":[]},{"text":"impl Send for PerformanceCounterUnitKHR","synthetic":true,"types":[]},{"text":"impl Send for PerformanceCounterStorageKHR","synthetic":true,"types":[]},{"text":"impl Send for PerformanceConfigurationTypeINTEL","synthetic":true,"types":[]},{"text":"impl Send for QueryPoolSamplingModeINTEL","synthetic":true,"types":[]},{"text":"impl Send for PerformanceOverrideTypeINTEL","synthetic":true,"types":[]},{"text":"impl Send for PerformanceParameterTypeINTEL","synthetic":true,"types":[]},{"text":"impl Send for PerformanceValueTypeINTEL","synthetic":true,"types":[]},{"text":"impl Send for ShaderFloatControlsIndependence","synthetic":true,"types":[]},{"text":"impl Send for PipelineExecutableStatisticFormatKHR","synthetic":true,"types":[]},{"text":"impl Send for LineRasterizationModeEXT","synthetic":true,"types":[]},{"text":"impl Send for ClearColorValue","synthetic":true,"types":[]},{"text":"impl Send for ClearValue","synthetic":true,"types":[]},{"text":"impl Send for PerformanceCounterResultKHR","synthetic":true,"types":[]},{"text":"impl !Send for PerformanceValueDataINTEL","synthetic":true,"types":[]},{"text":"impl Send for PipelineExecutableStatisticValueKHR","synthetic":true,"types":[]},{"text":"impl !Send for DeviceOrHostAddressKHR","synthetic":true,"types":[]},{"text":"impl !Send for DeviceOrHostAddressConstKHR","synthetic":true,"types":[]},{"text":"impl !Send for AccelerationStructureGeometryDataKHR","synthetic":true,"types":[]},{"text":"impl Send for GpaSqShaderStageFlags","synthetic":true,"types":[]},{"text":"impl Send for GpaDeviceClockModeAmd","synthetic":true,"types":[]},{"text":"impl Send for GpaPerfBlockAmd","synthetic":true,"types":[]},{"text":"impl Send for GpaSampleTypeAmd","synthetic":true,"types":[]},{"text":"impl Send for GpaSessionAmd","synthetic":true,"types":[]},{"text":"impl !Send for GpaSessionCreateInfoAmd","synthetic":true,"types":[]},{"text":"impl Send for GpaPerfBlockPropertiesAmd","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceGpaFeaturesAmd","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceGpaPropertiesAmd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceGpaPropertiesAmdBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for GpaPerfCounterAmd","synthetic":true,"types":[]},{"text":"impl !Send for GpaSampleBeginInfoAmd","synthetic":true,"types":[]},{"text":"impl !Send for GpaDeviceClockModeInfoAmd","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceWaveLimitPropertiesAmd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PhysicalDeviceWaveLimitPropertiesAmdBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PipelineShaderStageCreateInfoWaveLimitAmd","synthetic":true,"types":[]},{"text":"impl Send for DebugMarker","synthetic":true,"types":[]},{"text":"impl Send for DebugReport","synthetic":true,"types":[]},{"text":"impl Send for DebugUtils","synthetic":true,"types":[]},{"text":"impl Send for MetalSurface","synthetic":true,"types":[]},{"text":"impl Send for AndroidSurface","synthetic":true,"types":[]},{"text":"impl Send for Display","synthetic":true,"types":[]},{"text":"impl Send for DisplaySwapchain","synthetic":true,"types":[]},{"text":"impl Send for DrawIndirectCount","synthetic":true,"types":[]},{"text":"impl Send for ExternalMemoryFd","synthetic":true,"types":[]},{"text":"impl Send for PushDescriptor","synthetic":true,"types":[]},{"text":"impl Send for RayTracing","synthetic":true,"types":[]},{"text":"impl Send for Surface","synthetic":true,"types":[]},{"text":"impl Send for Swapchain","synthetic":true,"types":[]},{"text":"impl Send for TimelineSemaphore","synthetic":true,"types":[]},{"text":"impl Send for WaylandSurface","synthetic":true,"types":[]},{"text":"impl Send for Win32Surface","synthetic":true,"types":[]},{"text":"impl Send for XcbSurface","synthetic":true,"types":[]},{"text":"impl Send for XlibSurface","synthetic":true,"types":[]},{"text":"impl Send for IOSSurface","synthetic":true,"types":[]},{"text":"impl Send for MacOSSurface","synthetic":true,"types":[]},{"text":"impl Send for MeshShader","synthetic":true,"types":[]},{"text":"impl Send for RayTracing","synthetic":true,"types":[]},{"text":"impl Send for Instance","synthetic":false,"types":[]},{"text":"impl Send for PhysicalDevice","synthetic":false,"types":[]},{"text":"impl Send for Device","synthetic":false,"types":[]},{"text":"impl Send for Queue","synthetic":false,"types":[]},{"text":"impl Send for CommandBuffer","synthetic":false,"types":[]},{"text":"impl Send for KhrSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrSwapchainFn","synthetic":false,"types":[]},{"text":"impl Send for KhrDisplayFn","synthetic":false,"types":[]},{"text":"impl Send for KhrDisplaySwapchainFn","synthetic":false,"types":[]},{"text":"impl Send for KhrXlibSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrXcbSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrWaylandSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrMirSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrAndroidSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrWin32SurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for AndroidNativeBufferFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDebugReportFn","synthetic":false,"types":[]},{"text":"impl Send for NvGlslShaderFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDepthRangeUnrestrictedFn","synthetic":false,"types":[]},{"text":"impl Send for KhrSamplerMirrorClampToEdgeFn","synthetic":false,"types":[]},{"text":"impl Send for ImgFilterCubicFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension17Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension18Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdRasterizationOrderFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension20Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderTrinaryMinmaxFn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderExplicitVertexParameterFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDebugMarkerFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension24Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension25Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdGcnShaderFn","synthetic":false,"types":[]},{"text":"impl Send for NvDedicatedAllocationFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension28Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtTransformFeedbackFn","synthetic":false,"types":[]},{"text":"impl Send for NvxExtension30Fn","synthetic":false,"types":[]},{"text":"impl Send for NvxImageViewHandleFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension32Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension33Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdDrawIndirectCountFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension35Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdNegativeViewportHeightFn","synthetic":false,"types":[]},{"text":"impl Send for AmdGpuShaderHalfFloatFn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderBallotFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension39Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension40Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension41Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdTextureGatherBiasLodFn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderInfoFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension44Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension45Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension46Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderImageLoadStoreLodFn","synthetic":false,"types":[]},{"text":"impl Send for NvxExtension48Fn","synthetic":false,"types":[]},{"text":"impl Send for GoogleExtension49Fn","synthetic":false,"types":[]},{"text":"impl Send for GgpStreamDescriptorSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for NvCornerSampledImageFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension52Fn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension53Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrMultiviewFn","synthetic":false,"types":[]},{"text":"impl Send for ImgFormatPvrtcFn","synthetic":false,"types":[]},{"text":"impl Send for NvExternalMemoryCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Send for NvExternalMemoryFn","synthetic":false,"types":[]},{"text":"impl Send for NvExternalMemoryWin32Fn","synthetic":false,"types":[]},{"text":"impl Send for NvWin32KeyedMutexFn","synthetic":false,"types":[]},{"text":"impl Send for KhrGetPhysicalDeviceProperties2Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrDeviceGroupFn","synthetic":false,"types":[]},{"text":"impl Send for ExtValidationFlagsFn","synthetic":false,"types":[]},{"text":"impl Send for NnViSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrShaderDrawParametersFn","synthetic":false,"types":[]},{"text":"impl Send for ExtShaderSubgroupBallotFn","synthetic":false,"types":[]},{"text":"impl Send for ExtShaderSubgroupVoteFn","synthetic":false,"types":[]},{"text":"impl Send for ExtTextureCompressionAstcHdrFn","synthetic":false,"types":[]},{"text":"impl Send for ExtAstcDecodeModeFn","synthetic":false,"types":[]},{"text":"impl Send for ImgExtension69Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrMaintenance1Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrDeviceGroupCreationFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalMemoryCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalMemoryFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalMemoryWin32Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalMemoryFdFn","synthetic":false,"types":[]},{"text":"impl Send for KhrWin32KeyedMutexFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalSemaphoreCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalSemaphoreFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalSemaphoreWin32Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalSemaphoreFdFn","synthetic":false,"types":[]},{"text":"impl Send for KhrPushDescriptorFn","synthetic":false,"types":[]},{"text":"impl Send for ExtConditionalRenderingFn","synthetic":false,"types":[]},{"text":"impl Send for KhrShaderFloat16Int8Fn","synthetic":false,"types":[]},{"text":"impl Send for Khr16bitStorageFn","synthetic":false,"types":[]},{"text":"impl Send for KhrIncrementalPresentFn","synthetic":false,"types":[]},{"text":"impl Send for KhrDescriptorUpdateTemplateFn","synthetic":false,"types":[]},{"text":"impl Send for NvxDeviceGeneratedCommandsFn","synthetic":false,"types":[]},{"text":"impl Send for NvClipSpaceWScalingFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDirectModeDisplayFn","synthetic":false,"types":[]},{"text":"impl Send for ExtAcquireXlibDisplayFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDisplaySurfaceCounterFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDisplayControlFn","synthetic":false,"types":[]},{"text":"impl Send for GoogleDisplayTimingFn","synthetic":false,"types":[]},{"text":"impl Send for NvSampleMaskOverrideCoverageFn","synthetic":false,"types":[]},{"text":"impl Send for NvGeometryShaderPassthroughFn","synthetic":false,"types":[]},{"text":"impl Send for NvViewportArray2Fn","synthetic":false,"types":[]},{"text":"impl Send for NvxMultiviewPerViewAttributesFn","synthetic":false,"types":[]},{"text":"impl Send for NvViewportSwizzleFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDiscardRectanglesFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension101Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtConservativeRasterizationFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDepthClipEnableFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension104Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtSwapchainColorspaceFn","synthetic":false,"types":[]},{"text":"impl Send for ExtHdrMetadataFn","synthetic":false,"types":[]},{"text":"impl Send for ImgExtension107Fn","synthetic":false,"types":[]},{"text":"impl Send for ImgExtension108Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrImagelessFramebufferFn","synthetic":false,"types":[]},{"text":"impl Send for KhrCreateRenderpass2Fn","synthetic":false,"types":[]},{"text":"impl Send for ImgExtension111Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrSharedPresentableImageFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalFenceCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalFenceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalFenceWin32Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExternalFenceFdFn","synthetic":false,"types":[]},{"text":"impl Send for KhrPerformanceQueryFn","synthetic":false,"types":[]},{"text":"impl Send for KhrMaintenance2Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension119Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrGetSurfaceCapabilities2Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrVariablePointersFn","synthetic":false,"types":[]},{"text":"impl Send for KhrGetDisplayProperties2Fn","synthetic":false,"types":[]},{"text":"impl Send for MvkIosSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for MvkMacosSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for MvkMoltenvkFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExternalMemoryDmaBufFn","synthetic":false,"types":[]},{"text":"impl Send for ExtQueueFamilyForeignFn","synthetic":false,"types":[]},{"text":"impl Send for KhrDedicatedAllocationFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDebugUtilsFn","synthetic":false,"types":[]},{"text":"impl Send for AndroidExternalMemoryAndroidHardwareBufferFn","synthetic":false,"types":[]},{"text":"impl Send for ExtSamplerFilterMinmaxFn","synthetic":false,"types":[]},{"text":"impl Send for KhrStorageBufferStorageClassFn","synthetic":false,"types":[]},{"text":"impl Send for AmdGpuShaderInt16Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension134Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension135Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension136Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdMixedAttachmentSamplesFn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderFragmentMaskFn","synthetic":false,"types":[]},{"text":"impl Send for ExtInlineUniformBlockFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension140Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtShaderStencilExportFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension142Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension143Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtSampleLocationsFn","synthetic":false,"types":[]},{"text":"impl Send for KhrRelaxedBlockLayoutFn","synthetic":false,"types":[]},{"text":"impl Send for KhrGetMemoryRequirements2Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrImageFormatListFn","synthetic":false,"types":[]},{"text":"impl Send for ExtBlendOperationAdvancedFn","synthetic":false,"types":[]},{"text":"impl Send for NvFragmentCoverageToColorFn","synthetic":false,"types":[]},{"text":"impl Send for KhrRayTracingFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension152Fn","synthetic":false,"types":[]},{"text":"impl Send for NvFramebufferMixedSamplesFn","synthetic":false,"types":[]},{"text":"impl Send for NvFillRectangleFn","synthetic":false,"types":[]},{"text":"impl Send for NvShaderSmBuiltinsFn","synthetic":false,"types":[]},{"text":"impl Send for ExtPostDepthCoverageFn","synthetic":false,"types":[]},{"text":"impl Send for KhrSamplerYcbcrConversionFn","synthetic":false,"types":[]},{"text":"impl Send for KhrBindMemory2Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtImageDrmFormatModifierFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension160Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtValidationCacheFn","synthetic":false,"types":[]},{"text":"impl Send for ExtDescriptorIndexingFn","synthetic":false,"types":[]},{"text":"impl Send for ExtShaderViewportIndexLayerFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension164Fn","synthetic":false,"types":[]},{"text":"impl Send for NvShadingRateImageFn","synthetic":false,"types":[]},{"text":"impl Send for NvRayTracingFn","synthetic":false,"types":[]},{"text":"impl Send for NvRepresentativeFragmentTestFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension168Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrMaintenance3Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrDrawIndirectCountFn","synthetic":false,"types":[]},{"text":"impl Send for ExtFilterCubicFn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension172Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension173Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension174Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtGlobalPriorityFn","synthetic":false,"types":[]},{"text":"impl Send for KhrShaderSubgroupExtendedTypesFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension177Fn","synthetic":false,"types":[]},{"text":"impl Send for Khr8bitStorageFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExternalMemoryHostFn","synthetic":false,"types":[]},{"text":"impl Send for AmdBufferMarkerFn","synthetic":false,"types":[]},{"text":"impl Send for KhrShaderAtomicInt64Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrShaderClockFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension183Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdPipelineCompilerControlFn","synthetic":false,"types":[]},{"text":"impl Send for ExtCalibratedTimestampsFn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderCorePropertiesFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension187Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension188Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension189Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdMemoryOverallocationBehaviorFn","synthetic":false,"types":[]},{"text":"impl Send for ExtVertexAttributeDivisorFn","synthetic":false,"types":[]},{"text":"impl Send for GgpFrameTokenFn","synthetic":false,"types":[]},{"text":"impl Send for ExtPipelineCreationFeedbackFn","synthetic":false,"types":[]},{"text":"impl Send for GoogleExtension194Fn","synthetic":false,"types":[]},{"text":"impl Send for GoogleExtension195Fn","synthetic":false,"types":[]},{"text":"impl Send for GoogleExtension196Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrDriverPropertiesFn","synthetic":false,"types":[]},{"text":"impl Send for KhrShaderFloatControlsFn","synthetic":false,"types":[]},{"text":"impl Send for NvShaderSubgroupPartitionedFn","synthetic":false,"types":[]},{"text":"impl Send for KhrDepthStencilResolveFn","synthetic":false,"types":[]},{"text":"impl Send for KhrSwapchainMutableFormatFn","synthetic":false,"types":[]},{"text":"impl Send for NvComputeShaderDerivativesFn","synthetic":false,"types":[]},{"text":"impl Send for NvMeshShaderFn","synthetic":false,"types":[]},{"text":"impl Send for NvFragmentShaderBarycentricFn","synthetic":false,"types":[]},{"text":"impl Send for NvShaderImageFootprintFn","synthetic":false,"types":[]},{"text":"impl Send for NvScissorExclusiveFn","synthetic":false,"types":[]},{"text":"impl Send for NvDeviceDiagnosticCheckpointsFn","synthetic":false,"types":[]},{"text":"impl Send for KhrTimelineSemaphoreFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension209Fn","synthetic":false,"types":[]},{"text":"impl Send for IntelShaderIntegerFunctions2Fn","synthetic":false,"types":[]},{"text":"impl Send for IntelPerformanceQueryFn","synthetic":false,"types":[]},{"text":"impl Send for KhrVulkanMemoryModelFn","synthetic":false,"types":[]},{"text":"impl Send for ExtPciBusInfoFn","synthetic":false,"types":[]},{"text":"impl Send for AmdDisplayNativeHdrFn","synthetic":false,"types":[]},{"text":"impl Send for FuchsiaImagepipeSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for GoogleExtension216Fn","synthetic":false,"types":[]},{"text":"impl Send for GoogleExtension217Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtMetalSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for ExtFragmentDensityMapFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension220Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension221Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtScalarBlockLayoutFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension223Fn","synthetic":false,"types":[]},{"text":"impl Send for GoogleHlslFunctionality1Fn","synthetic":false,"types":[]},{"text":"impl Send for GoogleDecorateStringFn","synthetic":false,"types":[]},{"text":"impl Send for ExtSubgroupSizeControlFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension227Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdShaderCoreProperties2Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension229Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdDeviceCoherentMemoryFn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension231Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension232Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension233Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension234Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension235Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension236Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrSpirv14Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtMemoryBudgetFn","synthetic":false,"types":[]},{"text":"impl Send for ExtMemoryPriorityFn","synthetic":false,"types":[]},{"text":"impl Send for KhrSurfaceProtectedCapabilitiesFn","synthetic":false,"types":[]},{"text":"impl Send for NvDedicatedAllocationImageAliasingFn","synthetic":false,"types":[]},{"text":"impl Send for KhrSeparateDepthStencilLayoutsFn","synthetic":false,"types":[]},{"text":"impl Send for IntelExtension243Fn","synthetic":false,"types":[]},{"text":"impl Send for MesaExtension244Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtBufferDeviceAddressFn","synthetic":false,"types":[]},{"text":"impl Send for ExtToolingInfoFn","synthetic":false,"types":[]},{"text":"impl Send for ExtSeparateStencilUsageFn","synthetic":false,"types":[]},{"text":"impl Send for ExtValidationFeaturesFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension249Fn","synthetic":false,"types":[]},{"text":"impl Send for NvCooperativeMatrixFn","synthetic":false,"types":[]},{"text":"impl Send for NvCoverageReductionModeFn","synthetic":false,"types":[]},{"text":"impl Send for ExtFragmentShaderInterlockFn","synthetic":false,"types":[]},{"text":"impl Send for ExtYcbcrImageArraysFn","synthetic":false,"types":[]},{"text":"impl Send for KhrUniformBufferStandardLayoutFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension255Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtFullScreenExclusiveFn","synthetic":false,"types":[]},{"text":"impl Send for ExtHeadlessSurfaceFn","synthetic":false,"types":[]},{"text":"impl Send for KhrBufferDeviceAddressFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension259Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtLineRasterizationFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension261Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtHostQueryResetFn","synthetic":false,"types":[]},{"text":"impl Send for GgpExtension263Fn","synthetic":false,"types":[]},{"text":"impl Send for BrcmExtension264Fn","synthetic":false,"types":[]},{"text":"impl Send for BrcmExtension265Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtIndexTypeUint8Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension267Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension268Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrDeferredHostOperationsFn","synthetic":false,"types":[]},{"text":"impl Send for KhrPipelineExecutablePropertiesFn","synthetic":false,"types":[]},{"text":"impl Send for IntelExtension271Fn","synthetic":false,"types":[]},{"text":"impl Send for IntelExtension272Fn","synthetic":false,"types":[]},{"text":"impl Send for IntelExtension273Fn","synthetic":false,"types":[]},{"text":"impl Send for IntelExtension274Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension275Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension276Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtShaderDemoteToHelperInvocationFn","synthetic":false,"types":[]},{"text":"impl Send for NvDeviceGeneratedCommandsFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension279Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension280Fn","synthetic":false,"types":[]},{"text":"impl Send for ArmExtension281Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtTexelBufferAlignmentFn","synthetic":false,"types":[]},{"text":"impl Send for QcomRenderPassTransformFn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension284Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension285Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension286Fn","synthetic":false,"types":[]},{"text":"impl Send for NvxExtension287Fn","synthetic":false,"types":[]},{"text":"impl Send for NvxExtension288Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension289Fn","synthetic":false,"types":[]},{"text":"impl Send for GoogleUserTypeFn","synthetic":false,"types":[]},{"text":"impl Send for KhrPipelineLibraryFn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension292Fn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension293Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrShaderNonSemanticInfoFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension295Fn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension296Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension297Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtPipelineCreationCacheControlFn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension299Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension300Fn","synthetic":false,"types":[]},{"text":"impl Send for NvDeviceDiagnosticsConfigFn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension302Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension303Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension304Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension305Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension306Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension307Fn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension308Fn","synthetic":false,"types":[]},{"text":"impl Send for KhrExtension309Fn","synthetic":false,"types":[]},{"text":"impl Send for QcomExtension310Fn","synthetic":false,"types":[]},{"text":"impl Send for NvExtension311Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension312Fn","synthetic":false,"types":[]},{"text":"impl Send for ExtExtension313Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension314Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension315Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension316Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension317Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension318Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension319Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension320Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension321Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension322Fn","synthetic":false,"types":[]},{"text":"impl Send for AmdExtension323Fn","synthetic":false,"types":[]},{"text":"impl Send for StaticFn","synthetic":false,"types":[]},{"text":"impl Send for EntryFnV1_0","synthetic":false,"types":[]},{"text":"impl Send for InstanceFnV1_0","synthetic":false,"types":[]},{"text":"impl Send for DeviceFnV1_0","synthetic":false,"types":[]},{"text":"impl Send for EntryFnV1_1","synthetic":false,"types":[]},{"text":"impl Send for InstanceFnV1_1","synthetic":false,"types":[]},{"text":"impl Send for DeviceFnV1_1","synthetic":false,"types":[]},{"text":"impl Send for EntryFnV1_2","synthetic":false,"types":[]},{"text":"impl Send for InstanceFnV1_2","synthetic":false,"types":[]},{"text":"impl Send for DeviceFnV1_2","synthetic":false,"types":[]},{"text":"impl Send for AmdGpaInterfaceFn","synthetic":false,"types":[]}];
implementors["atom"] = [{"text":"impl&lt;P&gt; Send for AtomSetOnce&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Send for Atom&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: IntoRawPtr + FromRawPtr + Send,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["backtrace"] = [{"text":"impl Send for Frame","synthetic":true,"types":[]},{"text":"impl !Send for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SymbolName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !Send for BacktraceFmt&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'fmt, 'a, 'b&gt; !Send for BacktraceFrameFmt&lt;'fmt, 'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Send for Backtrace","synthetic":true,"types":[]},{"text":"impl Send for BacktraceFrame","synthetic":true,"types":[]},{"text":"impl Send for BacktraceSymbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BytesOrWideString&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PrintFmt","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl Send for BigEndian","synthetic":true,"types":[]},{"text":"impl Send for LittleEndian","synthetic":true,"types":[]}];
implementors["calloop"] = [{"text":"impl Send for Poll","synthetic":true,"types":[]},{"text":"impl Send for Readiness","synthetic":true,"types":[]},{"text":"impl Send for Token","synthetic":true,"types":[]},{"text":"impl&lt;Data&gt; !Send for EventLoop&lt;Data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for InsertError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Data&gt; !Send for LoopHandle&lt;Data&gt;","synthetic":true,"types":[]},{"text":"impl Send for LoopSignal","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !Send for Source&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Idle","synthetic":true,"types":[]},{"text":"impl Send for Interest","synthetic":true,"types":[]},{"text":"impl Send for Mode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SyncSender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for Generic&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Fd","synthetic":true,"types":[]},{"text":"impl Send for PingSource","synthetic":true,"types":[]},{"text":"impl Send for Ping","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for Signals","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Timer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for TimerHandle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Timeout","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for Channel&lt;T&gt;","synthetic":false,"types":[]}];
implementors["colorful"] = [{"text":"impl Send for Colorado","synthetic":true,"types":[]},{"text":"impl Send for Color","synthetic":true,"types":[]},{"text":"impl Send for ColorMode","synthetic":true,"types":[]},{"text":"impl Send for Symbol","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for CString","synthetic":true,"types":[]},{"text":"impl Send for RGB","synthetic":true,"types":[]},{"text":"impl Send for HSL","synthetic":true,"types":[]}];
implementors["conrod_core"] = [{"text":"impl Send for Ui","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for UiCell&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for UiBuilder","synthetic":true,"types":[]},{"text":"impl Send for Bordering","synthetic":true,"types":[]},{"text":"impl Send for Hsla","synthetic":true,"types":[]},{"text":"impl Send for Rgba","synthetic":true,"types":[]},{"text":"impl Send for Color","synthetic":true,"types":[]},{"text":"impl Send for Gradient","synthetic":true,"types":[]},{"text":"impl Send for Text","synthetic":true,"types":[]},{"text":"impl Send for Motion","synthetic":true,"types":[]},{"text":"impl Send for Press","synthetic":true,"types":[]},{"text":"impl Send for MousePress","synthetic":true,"types":[]},{"text":"impl Send for KeyPress","synthetic":true,"types":[]},{"text":"impl Send for Release","synthetic":true,"types":[]},{"text":"impl Send for MouseRelease","synthetic":true,"types":[]},{"text":"impl Send for KeyRelease","synthetic":true,"types":[]},{"text":"impl Send for Drag","synthetic":true,"types":[]},{"text":"impl Send for Click","synthetic":true,"types":[]},{"text":"impl Send for DoubleClick","synthetic":true,"types":[]},{"text":"impl Send for Tap","synthetic":true,"types":[]},{"text":"impl Send for Scroll","synthetic":true,"types":[]},{"text":"impl Send for Input","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for Ui","synthetic":true,"types":[]},{"text":"impl Send for Widget","synthetic":true,"types":[]},{"text":"impl Send for Button","synthetic":true,"types":[]},{"text":"impl&lt;State, Style&gt; Send for UniqueWidgetState&lt;State, Style&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;State: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Style: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Container","synthetic":true,"types":[]},{"text":"impl Send for IsOverFn","synthetic":true,"types":[]},{"text":"impl Send for Graph","synthetic":true,"types":[]},{"text":"impl Send for Node","synthetic":true,"types":[]},{"text":"impl Send for Edge","synthetic":true,"types":[]},{"text":"impl Send for PickWidgets","synthetic":true,"types":[]},{"text":"impl Send for PickScrollableWidgets","synthetic":true,"types":[]},{"text":"impl Send for DepthOrder","synthetic":true,"types":[]},{"text":"impl Send for Id","synthetic":true,"types":[]},{"text":"impl&lt;Img&gt; Send for Map&lt;Img&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Img: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for NewIds","synthetic":true,"types":[]},{"text":"impl Send for Source","synthetic":true,"types":[]},{"text":"impl Send for Motion","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Start","synthetic":true,"types":[]},{"text":"impl Send for Touch","synthetic":true,"types":[]},{"text":"impl Send for Mouse","synthetic":true,"types":[]},{"text":"impl Send for ButtonMap","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PressedButtons&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ButtonPosition","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Widget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Mouse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Events&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Presses&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MousePresses&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MouseButtonPresses&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for KeyPresses&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Releases&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MouseButtonReleases&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MouseReleases&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for KeyReleases&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Clicks&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ButtonClicks&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Taps&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Drags&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ButtonDrags&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Texts&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Scrolls&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Global","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Events&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for UiEvents&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Id","synthetic":true,"types":[]},{"text":"impl Send for Touch","synthetic":true,"types":[]},{"text":"impl Send for Phase","synthetic":true,"types":[]},{"text":"impl Send for Mesh","synthetic":true,"types":[]},{"text":"impl Send for Scizzor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Commands&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Vertex","synthetic":true,"types":[]},{"text":"impl Send for Fill","synthetic":true,"types":[]},{"text":"impl Send for Command","synthetic":true,"types":[]},{"text":"impl Send for Draw","synthetic":true,"types":[]},{"text":"impl Send for Padding","synthetic":true,"types":[]},{"text":"impl Send for Axis","synthetic":true,"types":[]},{"text":"impl Send for Position","synthetic":true,"types":[]},{"text":"impl Send for Relative","synthetic":true,"types":[]},{"text":"impl Send for Direction","synthetic":true,"types":[]},{"text":"impl Send for Align","synthetic":true,"types":[]},{"text":"impl Send for Place","synthetic":true,"types":[]},{"text":"impl Send for Dimension","synthetic":true,"types":[]},{"text":"impl Send for Range","synthetic":true,"types":[]},{"text":"impl Send for Edge","synthetic":true,"types":[]},{"text":"impl Send for Rect","synthetic":true,"types":[]},{"text":"impl Send for Corner","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Primitives&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for OwnedPrimitives","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Primitive&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for WalkOwnedPrimitives&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PrimitiveKind&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Send for Lines&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Justify","synthetic":true,"types":[]},{"text":"impl Send for Id","synthetic":true,"types":[]},{"text":"impl Send for Map","synthetic":true,"types":[]},{"text":"impl Send for NewIds","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Ids&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Send for Rects&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Send for RectsPerLine&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Send for SelectedRectsPerLine&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Send for SelectedRects&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Send for XysPerLine&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for XysPerLineFromText&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Send for Xs&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Send for Index","synthetic":true,"types":[]},{"text":"impl Send for Info","synthetic":true,"types":[]},{"text":"impl&lt;'a, F&gt; Send for Infos&lt;'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Rects&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Send for SelectedRects&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Break","synthetic":true,"types":[]},{"text":"impl Send for Theme","synthetic":true,"types":[]},{"text":"impl Send for WidgetDefault","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for UniqueDefault&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, I&gt; Send for IterDiff&lt;E, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, 'c, 'd, W&gt; Send for UpdateArgs&lt;'a, 'b, 'c, 'd, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as Widget&gt;::State: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as Widget&gt;::Style: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !Send for KidAreaArgs&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl Send for KidArea","synthetic":true,"types":[]},{"text":"impl Send for Floating","synthetic":true,"types":[]},{"text":"impl Send for CommonBuilder","synthetic":true,"types":[]},{"text":"impl Send for CommonStyle","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for State&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for CommonState","synthetic":true,"types":[]},{"text":"impl Send for PreUpdateCache","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for PostUpdateCache&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as Widget&gt;::State: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as Widget&gt;::Style: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for MaybeParent","synthetic":true,"types":[]},{"text":"impl Send for IsOver","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Generator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for List","synthetic":true,"types":[]},{"text":"impl Send for ListWalk","synthetic":true,"types":[]},{"text":"impl Send for Scroll","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for State&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for X","synthetic":true,"types":[]},{"text":"impl Send for Y","synthetic":true,"types":[]},{"text":"impl Send for Line","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for Pattern","synthetic":true,"types":[]},{"text":"impl Send for Cap","synthetic":true,"types":[]},{"text":"impl Send for Image","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for PointPath&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Triangles&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for Circle","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Oval&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Full","synthetic":true,"types":[]},{"text":"impl Send for Section","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for State&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Circumference","synthetic":true,"types":[]},{"text":"impl Send for Triangles","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Polygon&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Triangles&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl Send for Rectangle","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl&lt;S, I&gt; Send for Triangles&lt;S, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SingleColor","synthetic":true,"types":[]},{"text":"impl Send for MultiColor","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Send for Triangle&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for State&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, I&gt; Send for TrianglesUnpositioned&lt;S, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Wrap","synthetic":true,"types":[]},{"text":"impl Send for BorderedRectangle","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for RoundedBorderTriangles","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Send for Button&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for FlatIds","synthetic":true,"types":[]},{"text":"impl Send for ImageIds","synthetic":true,"types":[]},{"text":"impl Send for Flat","synthetic":true,"types":[]},{"text":"impl Send for Image","synthetic":true,"types":[]},{"text":"impl Send for TimesClicked","synthetic":true,"types":[]},{"text":"impl Send for ImageColor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Canvas&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for Length","synthetic":true,"types":[]},{"text":"impl Send for Direction","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for CollapsibleArea&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Ids","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for Area","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for DropDownList&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for MaxHeight","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Send for EnvelopeEditor&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as EnvelopePoint&gt;::X: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as EnvelopePoint&gt;::Y: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Event&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as EnvelopePoint&gt;::X: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as EnvelopePoint&gt;::Y: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for FileNavigator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Directory","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Types&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DirectoryView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Entry","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl&lt;X, Y, I&gt; Send for Grid&lt;X, Y, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Lines&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl&lt;X, Y&gt; Send for Axis&lt;X, Y&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; Send for List&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Fixed","synthetic":true,"types":[]},{"text":"impl Send for Dynamic","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; Send for Item&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for Scrollbar&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; Send for Items&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Up","synthetic":true,"types":[]},{"text":"impl Send for Down","synthetic":true,"types":[]},{"text":"impl Send for Left","synthetic":true,"types":[]},{"text":"impl Send for Right","synthetic":true,"types":[]},{"text":"impl Send for ItemInstantiation","synthetic":true,"types":[]},{"text":"impl Send for ScrollbarPosition","synthetic":true,"types":[]},{"text":"impl&lt;M, D, S&gt; Send for ListSelect&lt;M, D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl&lt;M, D, S&gt; Send for Events&lt;M, D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as Mode&gt;::Selection: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Single","synthetic":true,"types":[]},{"text":"impl Send for Multiple","synthetic":true,"types":[]},{"text":"impl Send for ListDirection","synthetic":true,"types":[]},{"text":"impl&lt;Selection, Direction, Size&gt; Send for Event&lt;Selection, Direction, Size&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Direction: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Selection: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Size: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Send for Selection&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Matrix","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for Elements","synthetic":true,"types":[]},{"text":"impl Send for Element","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Send for Layout&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E&gt; Send for Graph&lt;'a, N, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Send for State&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Send for NodeSocket&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Camera","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Send for Session&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Send for SessionEvents&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Send for SessionNodes&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Send for SessionEdges&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; Send for Events&lt;'a, NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; Send for Nodes&lt;'a, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; Send for NodeContext&lt;'a, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI, W&gt; Send for NodeWidget&lt;'a, NI, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; Send for Edges&lt;'a, NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI&gt; Send for Edge&lt;'a, NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, NI, W&gt; Send for EdgeWidget&lt;'a, NI, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Send for Event&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Send for NodeEvent&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Send for EdgeEvent&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for Node&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for SocketLayout","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for Event&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SocketRects","synthetic":true,"types":[]},{"text":"impl Send for SocketSide","synthetic":true,"types":[]},{"text":"impl Send for SocketType","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for NumberDialer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for GlyphSlot","synthetic":true,"types":[]},{"text":"impl&lt;X, Y, F&gt; Send for PlotPath&lt;X, Y, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for RangeSlider&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Drag","synthetic":true,"types":[]},{"text":"impl Send for Edge","synthetic":true,"types":[]},{"text":"impl Send for RoundedRectangle","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Points","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for Scrollbar&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Slider&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Tabs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Tab","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TabRects&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Layout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TextBox&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TextEdit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Drag","synthetic":true,"types":[]},{"text":"impl Send for Cursor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TitleBar&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Toggle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for TimesClicked","synthetic":true,"types":[]},{"text":"impl&lt;'a, X, Y&gt; Send for XYPad&lt;'a, X, Y&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Style","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for MouseCursor","synthetic":true,"types":[]}];
implementors["conrod_example_shared"] = [{"text":"impl Send for DemoApp","synthetic":true,"types":[]},{"text":"impl Send for Ids","synthetic":true,"types":[]}];
implementors["conrod_gfx"] = [{"text":"impl&lt;'a&gt; Send for Commands&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Send for Renderer&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::PipelineStateObject: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Sampler: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::ShaderResourceView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Command&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Draw&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for RendererCreationError","synthetic":true,"types":[]}];
implementors["conrod_glium"] = [{"text":"impl !Send for GlyphCache","synthetic":true,"types":[]},{"text":"impl !Send for Renderer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Commands&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Vertex","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Command&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Draw&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for RendererCreationError","synthetic":true,"types":[]},{"text":"impl Send for DrawError","synthetic":true,"types":[]}];
implementors["conrod_rendy"] = [{"text":"impl&lt;B&gt; Send for UiTexture&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for UiPipelineDesc","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for UiPipeline&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for SimpleUiAux&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["conrod_vulkano"] = [{"text":"impl Send for Image","synthetic":true,"types":[]},{"text":"impl Send for Vertex","synthetic":true,"types":[]},{"text":"impl Send for Renderer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for GlyphCacheCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DrawCommand","synthetic":true,"types":[]},{"text":"impl Send for RendererCreationError","synthetic":true,"types":[]},{"text":"impl Send for DrawError","synthetic":true,"types":[]}];
implementors["conrod_wgpu"] = [{"text":"impl Send for Image","synthetic":true,"types":[]},{"text":"impl Send for Vertex","synthetic":true,"types":[]},{"text":"impl Send for Renderer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for GlyphCacheCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Render&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderPassCommand&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["copyless"] = [{"text":"impl&lt;T&gt; !Send for BoxAllocation&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for VecAllocation&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for VecEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["copypasta"] = [{"text":"impl Send for Clipboard","synthetic":true,"types":[]},{"text":"impl Send for Primary","synthetic":true,"types":[]},{"text":"impl Send for Primary","synthetic":true,"types":[]},{"text":"impl Send for Clipboard","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for X11ClipboardContext&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Send for NopClipboardContext","synthetic":true,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; Send for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for TryIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SelectedOperation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ReadyTimeoutError","synthetic":true,"types":[]},{"text":"impl Send for SelectTimeoutError","synthetic":true,"types":[]},{"text":"impl Send for TryReadyError","synthetic":true,"types":[]},{"text":"impl Send for TrySelectError","synthetic":true,"types":[]},{"text":"impl Send for RecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for RecvTimeoutError","synthetic":true,"types":[]},{"text":"impl Send for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Send for Select&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; Send for Steal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for Worker&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for Stealer&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for Injector&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;'g, T, P&gt; !Send for CompareAndSetError&lt;'g, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Owned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'g, T&gt; !Send for Shared&lt;'g, T&gt;","synthetic":true,"types":[]},{"text":"impl !Send for LocalHandle","synthetic":true,"types":[]},{"text":"impl !Send for Guard","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send + Sync&gt; Send for Atomic&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Send for Collector","synthetic":false,"types":[]}];
implementors["crossbeam_queue"] = [{"text":"impl Send for PopError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for PushError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for ArrayQueue&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for SegQueue&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl Send for Backoff","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Send for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Send for Scope&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; Send for ScopedThreadBuilder&lt;'scope, 'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for AtomicCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for CachePadded&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Send for Parker","synthetic":false,"types":[]},{"text":"impl Send for Unparker","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send&gt; Send for ShardedLock&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'scope, T&gt; Send for ScopedJoinHandle&lt;'scope, T&gt;","synthetic":false,"types":[]}];
implementors["daggy"] = [{"text":"impl&lt;N, E, Ix&gt; Send for Dag&lt;N, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ix&gt; Send for Children&lt;N, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ix&gt; Send for Parents&lt;N, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; Send for EdgeIndices&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for WouldCycle&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, F&gt; Send for Recursive&lt;G, Ix, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, A, B&gt; Send for Chain&lt;G, Ix, A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, P&gt; Send for Filter&lt;W, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, W&gt; Send for Peekable&lt;G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, P&gt; Send for SkipWhile&lt;W, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, P&gt; Send for TakeWhile&lt;W, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, W&gt; Send for Skip&lt;G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, W&gt; Send for Take&lt;G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, Ix, W&gt; Send for Cycle&lt;G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; Send for Inspect&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; Send for Iter&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; Send for IterEdges&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; Send for IterNodes&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; Send for IterWeights&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; Send for IterEdgeWeights&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, Ix, W&gt; Send for IterNodeWeights&lt;'a, G, Ix, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["dlib"] = [{"text":"impl Send for DlError","synthetic":true,"types":[]}];
implementors["draw_state"] = [{"text":"impl Send for Offset","synthetic":true,"types":[]},{"text":"impl Send for MultiSample","synthetic":true,"types":[]},{"text":"impl Send for Rasterizer","synthetic":true,"types":[]},{"text":"impl Send for StencilSide","synthetic":true,"types":[]},{"text":"impl Send for Stencil","synthetic":true,"types":[]},{"text":"impl Send for Depth","synthetic":true,"types":[]},{"text":"impl Send for BlendChannel","synthetic":true,"types":[]},{"text":"impl Send for Blend","synthetic":true,"types":[]},{"text":"impl Send for ColorMask","synthetic":true,"types":[]},{"text":"impl Send for Color","synthetic":true,"types":[]},{"text":"impl Send for RefValues","synthetic":true,"types":[]},{"text":"impl Send for FrontFace","synthetic":true,"types":[]},{"text":"impl Send for CullFace","synthetic":true,"types":[]},{"text":"impl Send for RasterMethod","synthetic":true,"types":[]},{"text":"impl Send for Comparison","synthetic":true,"types":[]},{"text":"impl Send for StencilOp","synthetic":true,"types":[]},{"text":"impl Send for Equation","synthetic":true,"types":[]},{"text":"impl Send for BlendValue","synthetic":true,"types":[]},{"text":"impl Send for Factor","synthetic":true,"types":[]},{"text":"impl Send for Rect","synthetic":true,"types":[]},{"text":"impl Send for Mirror","synthetic":true,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Send for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["fixedbitset"] = [{"text":"impl Send for FixedBitSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Difference&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Intersection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Union&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Ones&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl Send for FnvHasher","synthetic":true,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; Send for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for UnboundedSender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for UnboundedReceiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Cancellation&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Canceled","synthetic":true,"types":[]}];
implementors["futures_executor"] = [{"text":"impl&lt;S&gt; Send for BlockingStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Send for LocalPool","synthetic":true,"types":[]},{"text":"impl !Send for LocalSpawner","synthetic":true,"types":[]},{"text":"impl Send for Enter","synthetic":true,"types":[]},{"text":"impl Send for EnterError","synthetic":true,"types":[]}];
implementors["futures_task"] = [{"text":"impl Send for SpawnError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for WakerRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for LocalFutureObj&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, '_&gt; Send for FutureObj&lt;'_, T&gt;","synthetic":false,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;F&gt; Send for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for Fuse&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Send for Inspect&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Send for Map&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for NeverError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Send for Then&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for UnitError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, T&gt; Send for MapInto&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for CatchUnwind&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for Remote&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for RemoteHandle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for Shared&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Send for AndThen&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; Send for ErrInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; Send for OkInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Send for InspectErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Send for InspectOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for IntoFuture&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Send for MapErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Send for MapOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Send for OrElse&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Send for UnwrapOrElse&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F, G&gt; Send for MapOkOrElse&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Send for TryFlatten&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, Si&gt; Send for FlattenSink&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for Lazy&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for OptionFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Send for Join&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Send for Join3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Send for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Send for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for JoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for Select&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for SelectAll&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Send for TryJoin&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Send for TryJoin3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Send for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Send for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as TryFuture&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for TryJoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as TryFuture&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for TrySelect&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for SelectOk&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for Abortable&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AbortHandle","synthetic":true,"types":[]},{"text":"impl Send for AbortRegistration","synthetic":true,"types":[]},{"text":"impl Send for Aborted","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for MaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for TryMaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Send for Chain&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; Send for Collect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Concat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Enumerate&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for FilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, U, F&gt; Send for FlatMap&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; Send for Fold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for ForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Fuse&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Send for Inspect&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Send for Map&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Send for Next&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; Send for Peek&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Peekable&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, S, Fut, F&gt; Send for Scan&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Send for SelectNextSome&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Skip&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for StreamFuture&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Take&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for TakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut&gt; Send for TakeUntil&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for Then&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Send for Zip&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as Stream&gt;::Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for CatchUnwind&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Chunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for ReadyChunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Si&gt; Send for Forward&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for BufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for Buffered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;St as Stream&gt;::Item as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for ForEachConcurrent&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Item&gt; Send for ReuniteError&lt;T, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, Item&gt; Send for SplitSink&lt;S, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for SplitStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for AndThen&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, E&gt; Send for ErrInto&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Send for InspectErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Send for InspectOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for IntoStream&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Send for MapErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Send for MapOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for OrElse&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; Send for TryCollect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for TryConcat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for TryFilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; Send for TryFold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for TryForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Send for TryNext&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for TryTakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Send for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for IntoAsyncRead&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for TryBufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Send for TryForEachConcurrent&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Send for Once&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Send for Select&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Send for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for FuturesOrdered&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Send for SelectAll&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Send for Iter&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Send for IterMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Send for IterPinMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Send for IterPinRef&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Send for Close&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Drain&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si1, Si2&gt; Send for Fanout&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Send for Flush&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, E&gt; Send for SinkErrInto&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, F&gt; Send for SinkMapErr&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Send for Send&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, St:&nbsp;?Sized&gt; Send for SendAll&lt;'a, Si, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; Send for With&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, St, F&gt; Send for WithFlatMap&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item&gt; Send for Buffer&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for AllowStdIo&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Send for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Send for Close&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; Send for Copy&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; Send for CopyBuf&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Empty","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for FillBuf&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Send for Flush&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, Item&gt; Send for IntoSink&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for Read&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for ReadVectored&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for ReadExact&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for ReadLine&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for ReadToEnd&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for ReadToString&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for ReadUntil&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Repeat","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Send for Seek&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Sink","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for ReadHalf&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for WriteHalf&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for ReuniteError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Send for Write&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Send for WriteVectored&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Send for WriteAll&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut:&nbsp;Send&gt; Send for FuturesUnordered&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send&gt; Send for Mutex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send, '_&gt; Send for MutexLockFuture&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send, '_&gt; Send for MutexGuard&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send, U:&nbsp;?Sized, '_&gt; Send for MappedMutexGuard&lt;'_, T, U&gt;","synthetic":false,"types":[]}];
implementors["fxhash"] = [{"text":"impl Send for FxHasher","synthetic":true,"types":[]},{"text":"impl Send for FxHasher64","synthetic":true,"types":[]},{"text":"impl Send for FxHasher32","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl Send for Error","synthetic":true,"types":[]}];
implementors["gfx"] = [{"text":"impl&lt;R, C&gt; Send for Encoder&lt;R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Fence: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::PipelineStateObject: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Sampler: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::ShaderResourceView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::UnorderedAccessView: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Slice&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, D&gt; Send for CopyError&lt;S, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for UpdateError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for PipelineStateError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for IndexBuffer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RawDataSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Sampler: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::ShaderResourceView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::UnorderedAccessView: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, M&gt; Send for PipelineState&lt;R, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::PipelineStateObject: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for ElementError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for InitError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; Send for VertexBufferCommon&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for RawVertexBuffer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for ConstantBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for RawConstantBuffer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Global&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for RawGlobal","synthetic":true,"types":[]},{"text":"impl Send for NonInstanced","synthetic":true,"types":[]},{"text":"impl Send for Instanced","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for ShaderResource&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for RawShaderResource","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for UnorderedAccess&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Sampler","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for TextureSampler&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for RenderTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for BlendTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for RawRenderTarget","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DepthTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for StencilTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DepthStencilTarget&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Scissor","synthetic":true,"types":[]},{"text":"impl Send for BlendRef","synthetic":true,"types":[]},{"text":"impl&lt;R, Data&gt; Send for Bundle&lt;R, Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Data as PipelineData&lt;R&gt;&gt;::Meta: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::PipelineStateObject: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ProgramError","synthetic":true,"types":[]}];
implementors["gfx_backend_empty"] = [{"text":"impl Send for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl Send for CommandQueue","synthetic":true,"types":[]},{"text":"impl Send for Device","synthetic":true,"types":[]},{"text":"impl Send for QueueFamily","synthetic":true,"types":[]},{"text":"impl Send for CommandPool","synthetic":true,"types":[]},{"text":"impl Send for CommandBuffer","synthetic":true,"types":[]},{"text":"impl Send for Surface","synthetic":true,"types":[]},{"text":"impl Send for Instance","synthetic":true,"types":[]},{"text":"impl Send for Backend","synthetic":true,"types":[]}];
implementors["gfx_backend_vulkan"] = [{"text":"impl Send for VK_ENTRY","synthetic":true,"types":[]},{"text":"impl Send for RawInstance","synthetic":true,"types":[]},{"text":"impl Send for Instance","synthetic":true,"types":[]},{"text":"impl Send for QueueFamily","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDevice","synthetic":true,"types":[]},{"text":"impl !Send for DeviceCreationFeatures","synthetic":true,"types":[]},{"text":"impl Send for CommandQueue","synthetic":true,"types":[]},{"text":"impl Send for Device","synthetic":true,"types":[]},{"text":"impl Send for DebugMessenger","synthetic":true,"types":[]},{"text":"impl Send for Backend","synthetic":true,"types":[]}];
implementors["gfx_core"] = [{"text":"impl&lt;R&gt; Send for VertexShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for HullShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DomainShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for GeometryShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for PixelShader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Capabilities","synthetic":true,"types":[]},{"text":"impl Send for AdapterInfo","synthetic":true,"types":[]},{"text":"impl Send for Frame","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for ShaderSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Primitive","synthetic":true,"types":[]},{"text":"impl Send for IndexType","synthetic":true,"types":[]},{"text":"impl Send for SubmissionError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Raw&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Info","synthetic":true,"types":[]},{"text":"impl Send for Role","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for AccessInfo&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Send for AccessGuard&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Send for AccessGuardBuffers&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Send for AccessGuardBuffersChain&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ClearColor","synthetic":true,"types":[]},{"text":"impl Send for DummyDevice","synthetic":true,"types":[]},{"text":"impl Send for DummyFence","synthetic":true,"types":[]},{"text":"impl Send for DummyMapping","synthetic":true,"types":[]},{"text":"impl Send for DummyCommandBuffer","synthetic":true,"types":[]},{"text":"impl Send for DummyResources","synthetic":true,"types":[]},{"text":"impl Send for ResourceViewError","synthetic":true,"types":[]},{"text":"impl Send for TargetViewError","synthetic":true,"types":[]},{"text":"impl Send for CombinedError","synthetic":true,"types":[]},{"text":"impl Send for Swizzle","synthetic":true,"types":[]},{"text":"impl Send for Format","synthetic":true,"types":[]},{"text":"impl Send for U8Norm","synthetic":true,"types":[]},{"text":"impl Send for I8Norm","synthetic":true,"types":[]},{"text":"impl Send for U16Norm","synthetic":true,"types":[]},{"text":"impl Send for I16Norm","synthetic":true,"types":[]},{"text":"impl Send for F16","synthetic":true,"types":[]},{"text":"impl Send for ChannelType","synthetic":true,"types":[]},{"text":"impl Send for Int","synthetic":true,"types":[]},{"text":"impl Send for Uint","synthetic":true,"types":[]},{"text":"impl Send for Inorm","synthetic":true,"types":[]},{"text":"impl Send for Unorm","synthetic":true,"types":[]},{"text":"impl Send for Float","synthetic":true,"types":[]},{"text":"impl Send for Srgb","synthetic":true,"types":[]},{"text":"impl Send for SurfaceType","synthetic":true,"types":[]},{"text":"impl Send for R4_G4","synthetic":true,"types":[]},{"text":"impl Send for R4_G4_B4_A4","synthetic":true,"types":[]},{"text":"impl Send for R5_G5_B5_A1","synthetic":true,"types":[]},{"text":"impl Send for R5_G6_B5","synthetic":true,"types":[]},{"text":"impl Send for R8","synthetic":true,"types":[]},{"text":"impl Send for R8_G8","synthetic":true,"types":[]},{"text":"impl Send for R8_G8_B8_A8","synthetic":true,"types":[]},{"text":"impl Send for R10_G10_B10_A2","synthetic":true,"types":[]},{"text":"impl Send for R11_G11_B10","synthetic":true,"types":[]},{"text":"impl Send for R16","synthetic":true,"types":[]},{"text":"impl Send for R16_G16","synthetic":true,"types":[]},{"text":"impl Send for R16_G16_B16","synthetic":true,"types":[]},{"text":"impl Send for R16_G16_B16_A16","synthetic":true,"types":[]},{"text":"impl Send for R32","synthetic":true,"types":[]},{"text":"impl Send for R32_G32","synthetic":true,"types":[]},{"text":"impl Send for R32_G32_B32","synthetic":true,"types":[]},{"text":"impl Send for R32_G32_B32_A32","synthetic":true,"types":[]},{"text":"impl Send for B8_G8_R8_A8","synthetic":true,"types":[]},{"text":"impl Send for D16","synthetic":true,"types":[]},{"text":"impl Send for D24","synthetic":true,"types":[]},{"text":"impl Send for D24_S8","synthetic":true,"types":[]},{"text":"impl Send for D32","synthetic":true,"types":[]},{"text":"impl Send for BC1_R8_G8_B8","synthetic":true,"types":[]},{"text":"impl Send for BC3_R8_G8_B8_A8","synthetic":true,"types":[]},{"text":"impl Send for ChannelSource","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RawBuffer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; Send for Buffer&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Shader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Program&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RawPipelineState&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::PipelineStateObject: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RawTexture&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, S&gt; Send for Texture&lt;R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RawShaderResourceView&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::ShaderResourceView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; Send for ShaderResourceView&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::ShaderResourceView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RawUnorderedAccessView&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::UnorderedAccessView: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; Send for UnorderedAccessView&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::UnorderedAccessView: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RawRenderTargetView&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RawDepthStencilView&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; Send for RenderTargetView&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; Send for DepthStencilView&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Sampler&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Sampler: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Fence&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Fence: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Manager&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Fence: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Mapping: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::PipelineStateObject: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Sampler: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Shader: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::ShaderResourceView: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::UnorderedAccessView: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T&gt; Send for Reader&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T&gt; Send for Writer&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Access","synthetic":true,"types":[]},{"text":"impl Send for Bind","synthetic":true,"types":[]},{"text":"impl Send for Usage","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for ColorInfo","synthetic":true,"types":[]},{"text":"impl Send for DepthStencilInfo","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for Element&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for VertexBufferDesc","synthetic":true,"types":[]},{"text":"impl Send for Descriptor","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for VertexBufferSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for ConstantBufferParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for ResourceViewParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::ShaderResourceView: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for UnorderedViewParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::UnorderedAccessView: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for SamplerParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Sampler: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for PixelTargetSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SamplerType","synthetic":true,"types":[]},{"text":"impl Send for Usage","synthetic":true,"types":[]},{"text":"impl Send for AttributeVar","synthetic":true,"types":[]},{"text":"impl Send for ConstVar","synthetic":true,"types":[]},{"text":"impl Send for ConstantBufferVar","synthetic":true,"types":[]},{"text":"impl Send for TextureVar","synthetic":true,"types":[]},{"text":"impl Send for UnorderedVar","synthetic":true,"types":[]},{"text":"impl Send for SamplerVar","synthetic":true,"types":[]},{"text":"impl Send for OutputVar","synthetic":true,"types":[]},{"text":"impl Send for ProgramInfo","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Program&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for CreateProgramError","synthetic":true,"types":[]},{"text":"impl Send for IsArray","synthetic":true,"types":[]},{"text":"impl Send for IsComparison","synthetic":true,"types":[]},{"text":"impl Send for IsMultiSample","synthetic":true,"types":[]},{"text":"impl Send for IsRect","synthetic":true,"types":[]},{"text":"impl Send for MatrixFormat","synthetic":true,"types":[]},{"text":"impl Send for TextureType","synthetic":true,"types":[]},{"text":"impl Send for BaseType","synthetic":true,"types":[]},{"text":"impl Send for ContainerType","synthetic":true,"types":[]},{"text":"impl Send for Stage","synthetic":true,"types":[]},{"text":"impl Send for UniformValue","synthetic":true,"types":[]},{"text":"impl Send for CompatibilityError","synthetic":true,"types":[]},{"text":"impl Send for CreateShaderError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Raw&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for ImageInfoCommon&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for TextureCopyRegion&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Lod","synthetic":true,"types":[]},{"text":"impl Send for PackedColor","synthetic":true,"types":[]},{"text":"impl Send for SamplerInfo","synthetic":true,"types":[]},{"text":"impl Send for Info","synthetic":true,"types":[]},{"text":"impl Send for ResourceDesc","synthetic":true,"types":[]},{"text":"impl Send for RenderDesc","synthetic":true,"types":[]},{"text":"impl Send for DepthStencilFlags","synthetic":true,"types":[]},{"text":"impl Send for DepthStencilDesc","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for LayerError","synthetic":true,"types":[]},{"text":"impl Send for AaMode","synthetic":true,"types":[]},{"text":"impl Send for FilterMethod","synthetic":true,"types":[]},{"text":"impl Send for CubeFace","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl Send for Mipmap","synthetic":true,"types":[]},{"text":"impl Send for WrapMode","synthetic":true,"types":[]}];
implementors["gfx_descriptor"] = [{"text":"impl&lt;B&gt; Send for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for DescriptorAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DescriptorCounts","synthetic":true,"types":[]}];
implementors["gfx_hal"] = [{"text":"impl Send for Features","synthetic":true,"types":[]},{"text":"impl Send for Limits","synthetic":true,"types":[]},{"text":"impl Send for UnsupportedBackend","synthetic":true,"types":[]},{"text":"impl Send for MemoryTypeId","synthetic":true,"types":[]},{"text":"impl Send for IndexType","synthetic":true,"types":[]},{"text":"impl Send for MemoryType","synthetic":true,"types":[]},{"text":"impl Send for MemoryProperties","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Gpu&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AdapterInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DeviceType","synthetic":true,"types":[]},{"text":"impl Send for Usage","synthetic":true,"types":[]},{"text":"impl Send for Access","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for IndexBufferView&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for ViewCreationError","synthetic":true,"types":[]},{"text":"impl Send for ClearDepthStencil","synthetic":true,"types":[]},{"text":"impl Send for BufferCopy","synthetic":true,"types":[]},{"text":"impl Send for ImageCopy","synthetic":true,"types":[]},{"text":"impl Send for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl Send for ImageResolve","synthetic":true,"types":[]},{"text":"impl Send for ImageBlit","synthetic":true,"types":[]},{"text":"impl Send for CommandBufferFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for CommandBufferInheritanceInfo&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ClearColor","synthetic":true,"types":[]},{"text":"impl Send for ClearValue","synthetic":true,"types":[]},{"text":"impl Send for AttachmentClear","synthetic":true,"types":[]},{"text":"impl Send for Level","synthetic":true,"types":[]},{"text":"impl Send for SubpassContents","synthetic":true,"types":[]},{"text":"impl Send for DeviceLost","synthetic":true,"types":[]},{"text":"impl Send for SurfaceLost","synthetic":true,"types":[]},{"text":"impl Send for WindowInUse","synthetic":true,"types":[]},{"text":"impl Send for OutOfMemory","synthetic":true,"types":[]},{"text":"impl Send for OomOrDeviceLost","synthetic":true,"types":[]},{"text":"impl Send for AllocationError","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for MapError","synthetic":true,"types":[]},{"text":"impl Send for BindError","synthetic":true,"types":[]},{"text":"impl Send for WaitFor","synthetic":true,"types":[]},{"text":"impl Send for ShaderError","synthetic":true,"types":[]},{"text":"impl Send for Aspects","synthetic":true,"types":[]},{"text":"impl Send for FormatDesc","synthetic":true,"types":[]},{"text":"impl Send for FormatBits","synthetic":true,"types":[]},{"text":"impl Send for Swizzle","synthetic":true,"types":[]},{"text":"impl Send for Properties","synthetic":true,"types":[]},{"text":"impl Send for ImageFeature","synthetic":true,"types":[]},{"text":"impl Send for BufferFeature","synthetic":true,"types":[]},{"text":"impl Send for BaseFormat","synthetic":true,"types":[]},{"text":"impl Send for Rg4Unorm","synthetic":true,"types":[]},{"text":"impl Send for Rgba4Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bgra4Unorm","synthetic":true,"types":[]},{"text":"impl Send for R5g6b5Unorm","synthetic":true,"types":[]},{"text":"impl Send for B5g6r5Unorm","synthetic":true,"types":[]},{"text":"impl Send for R5g5b5a1Unorm","synthetic":true,"types":[]},{"text":"impl Send for B5g5r5a1Unorm","synthetic":true,"types":[]},{"text":"impl Send for A1r5g5b5Unorm","synthetic":true,"types":[]},{"text":"impl Send for R8Unorm","synthetic":true,"types":[]},{"text":"impl Send for R8Snorm","synthetic":true,"types":[]},{"text":"impl Send for R8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for R8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for R8Uint","synthetic":true,"types":[]},{"text":"impl Send for R8Sint","synthetic":true,"types":[]},{"text":"impl Send for R8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Rg8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Rg8Snorm","synthetic":true,"types":[]},{"text":"impl Send for Rg8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Rg8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Rg8Uint","synthetic":true,"types":[]},{"text":"impl Send for Rg8Sint","synthetic":true,"types":[]},{"text":"impl Send for Rg8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Rgb8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Rgb8Snorm","synthetic":true,"types":[]},{"text":"impl Send for Rgb8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgb8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgb8Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgb8Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgb8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Bgr8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bgr8Snorm","synthetic":true,"types":[]},{"text":"impl Send for Bgr8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Bgr8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Bgr8Uint","synthetic":true,"types":[]},{"text":"impl Send for Bgr8Sint","synthetic":true,"types":[]},{"text":"impl Send for Bgr8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Rgba8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Rgba8Snorm","synthetic":true,"types":[]},{"text":"impl Send for Rgba8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgba8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgba8Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgba8Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgba8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Bgra8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bgra8Snorm","synthetic":true,"types":[]},{"text":"impl Send for Bgra8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Bgra8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Bgra8Uint","synthetic":true,"types":[]},{"text":"impl Send for Bgra8Sint","synthetic":true,"types":[]},{"text":"impl Send for Bgra8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Abgr8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Abgr8Snorm","synthetic":true,"types":[]},{"text":"impl Send for Abgr8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Abgr8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Abgr8Uint","synthetic":true,"types":[]},{"text":"impl Send for Abgr8Sint","synthetic":true,"types":[]},{"text":"impl Send for Abgr8Srgb","synthetic":true,"types":[]},{"text":"impl Send for A2r10g10b10Unorm","synthetic":true,"types":[]},{"text":"impl Send for A2r10g10b10Snorm","synthetic":true,"types":[]},{"text":"impl Send for A2r10g10b10Uscaled","synthetic":true,"types":[]},{"text":"impl Send for A2r10g10b10Sscaled","synthetic":true,"types":[]},{"text":"impl Send for A2r10g10b10Uint","synthetic":true,"types":[]},{"text":"impl Send for A2r10g10b10Sint","synthetic":true,"types":[]},{"text":"impl Send for A2b10g10r10Unorm","synthetic":true,"types":[]},{"text":"impl Send for A2b10g10r10Snorm","synthetic":true,"types":[]},{"text":"impl Send for A2b10g10r10Uscaled","synthetic":true,"types":[]},{"text":"impl Send for A2b10g10r10Sscaled","synthetic":true,"types":[]},{"text":"impl Send for A2b10g10r10Uint","synthetic":true,"types":[]},{"text":"impl Send for A2b10g10r10Sint","synthetic":true,"types":[]},{"text":"impl Send for R16Unorm","synthetic":true,"types":[]},{"text":"impl Send for R16Snorm","synthetic":true,"types":[]},{"text":"impl Send for R16Uscaled","synthetic":true,"types":[]},{"text":"impl Send for R16Sscaled","synthetic":true,"types":[]},{"text":"impl Send for R16Uint","synthetic":true,"types":[]},{"text":"impl Send for R16Sint","synthetic":true,"types":[]},{"text":"impl Send for R16Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rg16Unorm","synthetic":true,"types":[]},{"text":"impl Send for Rg16Snorm","synthetic":true,"types":[]},{"text":"impl Send for Rg16Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Rg16Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Rg16Uint","synthetic":true,"types":[]},{"text":"impl Send for Rg16Sint","synthetic":true,"types":[]},{"text":"impl Send for Rg16Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rgb16Unorm","synthetic":true,"types":[]},{"text":"impl Send for Rgb16Snorm","synthetic":true,"types":[]},{"text":"impl Send for Rgb16Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgb16Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgb16Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgb16Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgb16Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rgba16Unorm","synthetic":true,"types":[]},{"text":"impl Send for Rgba16Snorm","synthetic":true,"types":[]},{"text":"impl Send for Rgba16Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgba16Sscaled","synthetic":true,"types":[]},{"text":"impl Send for Rgba16Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgba16Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgba16Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R32Uint","synthetic":true,"types":[]},{"text":"impl Send for R32Sint","synthetic":true,"types":[]},{"text":"impl Send for R32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rg32Uint","synthetic":true,"types":[]},{"text":"impl Send for Rg32Sint","synthetic":true,"types":[]},{"text":"impl Send for Rg32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rgb32Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgb32Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgb32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rgba32Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgba32Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgba32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R64Uint","synthetic":true,"types":[]},{"text":"impl Send for R64Sint","synthetic":true,"types":[]},{"text":"impl Send for R64Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rg64Uint","synthetic":true,"types":[]},{"text":"impl Send for Rg64Sint","synthetic":true,"types":[]},{"text":"impl Send for Rg64Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rgb64Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgb64Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgb64Sfloat","synthetic":true,"types":[]},{"text":"impl Send for Rgba64Uint","synthetic":true,"types":[]},{"text":"impl Send for Rgba64Sint","synthetic":true,"types":[]},{"text":"impl Send for Rgba64Sfloat","synthetic":true,"types":[]},{"text":"impl Send for B10g11r11Ufloat","synthetic":true,"types":[]},{"text":"impl Send for E5b9g9r9Ufloat","synthetic":true,"types":[]},{"text":"impl Send for D16Unorm","synthetic":true,"types":[]},{"text":"impl Send for X8D24Unorm","synthetic":true,"types":[]},{"text":"impl Send for D32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for S8Uint","synthetic":true,"types":[]},{"text":"impl Send for D16UnormS8Uint","synthetic":true,"types":[]},{"text":"impl Send for D24UnormS8Uint","synthetic":true,"types":[]},{"text":"impl Send for D32SfloatS8Uint","synthetic":true,"types":[]},{"text":"impl Send for Bc1RgbUnorm","synthetic":true,"types":[]},{"text":"impl Send for Bc1RgbSrgb","synthetic":true,"types":[]},{"text":"impl Send for Bc1RgbaUnorm","synthetic":true,"types":[]},{"text":"impl Send for Bc1RgbaSrgb","synthetic":true,"types":[]},{"text":"impl Send for Bc2Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bc2Srgb","synthetic":true,"types":[]},{"text":"impl Send for Bc3Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bc3Srgb","synthetic":true,"types":[]},{"text":"impl Send for Bc4Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bc4Snorm","synthetic":true,"types":[]},{"text":"impl Send for Bc5Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bc5Snorm","synthetic":true,"types":[]},{"text":"impl Send for Bc6hUfloat","synthetic":true,"types":[]},{"text":"impl Send for Bc6hSfloat","synthetic":true,"types":[]},{"text":"impl Send for Bc7Unorm","synthetic":true,"types":[]},{"text":"impl Send for Bc7Srgb","synthetic":true,"types":[]},{"text":"impl Send for Etc2R8g8b8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Etc2R8g8b8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Etc2R8g8b8a1Unorm","synthetic":true,"types":[]},{"text":"impl Send for Etc2R8g8b8a1Srgb","synthetic":true,"types":[]},{"text":"impl Send for Etc2R8g8b8a8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Etc2R8g8b8a8Srgb","synthetic":true,"types":[]},{"text":"impl Send for EacR11Unorm","synthetic":true,"types":[]},{"text":"impl Send for EacR11Snorm","synthetic":true,"types":[]},{"text":"impl Send for EacR11g11Unorm","synthetic":true,"types":[]},{"text":"impl Send for EacR11g11Snorm","synthetic":true,"types":[]},{"text":"impl Send for Astc4x4Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc4x4Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc5x4Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc5x4Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc5x5Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc5x5Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc6x5Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc6x5Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc6x6Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc6x6Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc8x5Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc8x5Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc8x6Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc8x6Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc8x8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc8x8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc10x5Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc10x5Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc10x6Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc10x6Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc10x8Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc10x8Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc10x10Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc10x10Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc12x10Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc12x10Srgb","synthetic":true,"types":[]},{"text":"impl Send for Astc12x12Unorm","synthetic":true,"types":[]},{"text":"impl Send for Astc12x12Srgb","synthetic":true,"types":[]},{"text":"impl Send for Component","synthetic":true,"types":[]},{"text":"impl Send for ChannelType","synthetic":true,"types":[]},{"text":"impl Send for SurfaceType","synthetic":true,"types":[]},{"text":"impl Send for Format","synthetic":true,"types":[]},{"text":"impl Send for Extent","synthetic":true,"types":[]},{"text":"impl Send for Offset","synthetic":true,"types":[]},{"text":"impl Send for ViewCapabilities","synthetic":true,"types":[]},{"text":"impl Send for Usage","synthetic":true,"types":[]},{"text":"impl Send for Lod","synthetic":true,"types":[]},{"text":"impl Send for PackedColor","synthetic":true,"types":[]},{"text":"impl Send for SamplerDesc","synthetic":true,"types":[]},{"text":"impl Send for Access","synthetic":true,"types":[]},{"text":"impl Send for Subresource","synthetic":true,"types":[]},{"text":"impl Send for SubresourceLayers","synthetic":true,"types":[]},{"text":"impl Send for SubresourceRange","synthetic":true,"types":[]},{"text":"impl Send for FormatProperties","synthetic":true,"types":[]},{"text":"impl Send for SubresourceFootprint","synthetic":true,"types":[]},{"text":"impl Send for Tiling","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for ViewError","synthetic":true,"types":[]},{"text":"impl Send for LayerError","synthetic":true,"types":[]},{"text":"impl Send for Filter","synthetic":true,"types":[]},{"text":"impl Send for Anisotropic","synthetic":true,"types":[]},{"text":"impl Send for CubeFace","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl Send for ViewKind","synthetic":true,"types":[]},{"text":"impl Send for WrapMode","synthetic":true,"types":[]},{"text":"impl Send for Layout","synthetic":true,"types":[]},{"text":"impl Send for Properties","synthetic":true,"types":[]},{"text":"impl Send for Dependencies","synthetic":true,"types":[]},{"text":"impl Send for Requirements","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for Barrier&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AttachmentOps","synthetic":true,"types":[]},{"text":"impl Send for Attachment","synthetic":true,"types":[]},{"text":"impl Send for SubpassDependency","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SubpassDesc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for Subpass&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AttachmentLoadOp","synthetic":true,"types":[]},{"text":"impl Send for AttachmentStoreOp","synthetic":true,"types":[]},{"text":"impl Send for SubpassRef","synthetic":true,"types":[]},{"text":"impl Send for CommandPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for ComputePipelineDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl Send for DescriptorRangeDesc","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, WI&gt; Send for DescriptorSetWrite&lt;'a, B, WI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;WI: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for DescriptorSetCopy&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DescriptorPoolCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for Rect","synthetic":true,"types":[]},{"text":"impl Send for ClearRect","synthetic":true,"types":[]},{"text":"impl Send for Viewport","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for GraphicsShaderSet&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for BakedStates","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for GraphicsPipelineDesc&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DepthBias","synthetic":true,"types":[]},{"text":"impl Send for Rasterizer","synthetic":true,"types":[]},{"text":"impl Send for BlendDesc","synthetic":true,"types":[]},{"text":"impl Send for Multisampling","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for Element&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for VertexBufferDesc","synthetic":true,"types":[]},{"text":"impl Send for AttributeDesc","synthetic":true,"types":[]},{"text":"impl Send for InputAssemblerDesc","synthetic":true,"types":[]},{"text":"impl Send for ColorMask","synthetic":true,"types":[]},{"text":"impl Send for BlendState","synthetic":true,"types":[]},{"text":"impl Send for ColorBlendDesc","synthetic":true,"types":[]},{"text":"impl Send for DepthTest","synthetic":true,"types":[]},{"text":"impl Send for StencilFace","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Sided&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for StencilTest","synthetic":true,"types":[]},{"text":"impl Send for DepthStencilDesc","synthetic":true,"types":[]},{"text":"impl Send for Face","synthetic":true,"types":[]},{"text":"impl Send for SpecializationConstant","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Specialization&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PipelineStage","synthetic":true,"types":[]},{"text":"impl Send for ShaderStageFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for EntryPoint&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for PipelineCreationFlags","synthetic":true,"types":[]},{"text":"impl Send for DescriptorType","synthetic":true,"types":[]},{"text":"impl Send for AllocationError","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for Descriptor&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::BufferView: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for PolygonMode","synthetic":true,"types":[]},{"text":"impl Send for FrontFace","synthetic":true,"types":[]},{"text":"impl Send for LogicOp","synthetic":true,"types":[]},{"text":"impl Send for VertexInputRate","synthetic":true,"types":[]},{"text":"impl Send for Primitive","synthetic":true,"types":[]},{"text":"impl Send for Comparison","synthetic":true,"types":[]},{"text":"impl Send for Factor","synthetic":true,"types":[]},{"text":"impl Send for BlendOp","synthetic":true,"types":[]},{"text":"impl Send for StencilOp","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for Stage","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Send for BasePipeline&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for State&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for Query&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueryPool: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ControlFlags","synthetic":true,"types":[]},{"text":"impl Send for ResultFlags","synthetic":true,"types":[]},{"text":"impl Send for PipelineStatistic","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for Type","synthetic":true,"types":[]},{"text":"impl&lt;Ic, Iw, Is&gt; Send for Submission&lt;Ic, Iw, Is&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ic: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Is: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Iw: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for QueueType","synthetic":true,"types":[]},{"text":"impl Send for QueueFamilyId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for QueueGroup&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Extent2D","synthetic":true,"types":[]},{"text":"impl Send for SurfaceCapabilities","synthetic":true,"types":[]},{"text":"impl Send for PresentMode","synthetic":true,"types":[]},{"text":"impl Send for CompositeAlphaMode","synthetic":true,"types":[]},{"text":"impl Send for SwapchainConfig","synthetic":true,"types":[]},{"text":"impl Send for Suboptimal","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for AcquireError","synthetic":true,"types":[]},{"text":"impl Send for PresentError","synthetic":true,"types":[]},{"text":"impl Send for InitError","synthetic":true,"types":[]}];
implementors["gfx_memory"] = [{"text":"impl Send for DedicatedAllocator","synthetic":true,"types":[]},{"text":"impl Send for GeneralConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for LinearAllocator&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Send for LinearConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Heaps&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for MemoryBlock&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; !Send for MappedRange&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, T, B&gt; Send for Writer&lt;'a, 'b, T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Memory&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for MemoryUtilization","synthetic":true,"types":[]},{"text":"impl Send for MemoryHeapUtilization","synthetic":true,"types":[]},{"text":"impl Send for MemoryTypeUtilization","synthetic":true,"types":[]},{"text":"impl Send for TotalMemoryUtilization","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl Send for HeapsError","synthetic":true,"types":[]},{"text":"impl Send for MemoryUsage","synthetic":true,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Send for DedicatedBlock&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Send for GeneralBlock&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Send for GeneralAllocator&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Send for LinearBlock&lt;B&gt;","synthetic":false,"types":[]}];
implementors["gimli"] = [{"text":"impl Send for Encoding","synthetic":true,"types":[]},{"text":"impl Send for LineEncoding","synthetic":true,"types":[]},{"text":"impl Send for Register","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugAbbrevOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugAddrBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugAddrIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugInfoOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugLineOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugLineStrOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for LocationListsOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugLocListsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugLocListsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugMacinfoOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugMacroOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for RangeListsOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugRngListsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugRngListsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugStrOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugStrOffsetsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugStrOffsetsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugTypesOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DebugTypeSignature","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugFrameOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for EhFrameOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Arm","synthetic":true,"types":[]},{"text":"impl Send for X86","synthetic":true,"types":[]},{"text":"impl Send for X86_64","synthetic":true,"types":[]},{"text":"impl Send for BigEndian","synthetic":true,"types":[]},{"text":"impl Send for LittleEndian","synthetic":true,"types":[]},{"text":"impl Send for Format","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for UnitSectionOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SectionId","synthetic":true,"types":[]},{"text":"impl Send for RunTimeEndian","synthetic":true,"types":[]},{"text":"impl Send for DwUt","synthetic":true,"types":[]},{"text":"impl Send for DwCfa","synthetic":true,"types":[]},{"text":"impl Send for DwChildren","synthetic":true,"types":[]},{"text":"impl Send for DwTag","synthetic":true,"types":[]},{"text":"impl Send for DwAt","synthetic":true,"types":[]},{"text":"impl Send for DwForm","synthetic":true,"types":[]},{"text":"impl Send for DwAte","synthetic":true,"types":[]},{"text":"impl Send for DwLle","synthetic":true,"types":[]},{"text":"impl Send for DwDs","synthetic":true,"types":[]},{"text":"impl Send for DwEnd","synthetic":true,"types":[]},{"text":"impl Send for DwAccess","synthetic":true,"types":[]},{"text":"impl Send for DwVis","synthetic":true,"types":[]},{"text":"impl Send for DwVirtuality","synthetic":true,"types":[]},{"text":"impl Send for DwLang","synthetic":true,"types":[]},{"text":"impl Send for DwAddr","synthetic":true,"types":[]},{"text":"impl Send for DwId","synthetic":true,"types":[]},{"text":"impl Send for DwCc","synthetic":true,"types":[]},{"text":"impl Send for DwInl","synthetic":true,"types":[]},{"text":"impl Send for DwOrd","synthetic":true,"types":[]},{"text":"impl Send for DwDsc","synthetic":true,"types":[]},{"text":"impl Send for DwIdx","synthetic":true,"types":[]},{"text":"impl Send for DwDefaulted","synthetic":true,"types":[]},{"text":"impl Send for DwLns","synthetic":true,"types":[]},{"text":"impl Send for DwLne","synthetic":true,"types":[]},{"text":"impl Send for DwLnct","synthetic":true,"types":[]},{"text":"impl Send for DwMacro","synthetic":true,"types":[]},{"text":"impl Send for DwRle","synthetic":true,"types":[]},{"text":"impl Send for DwOp","synthetic":true,"types":[]},{"text":"impl Send for DwEhPe","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugAddr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugFrame&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for EhFrameHdr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for ParsedEhFrameHdr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Send for EhHdrTable&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for EhFrame&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for BaseAddresses","synthetic":true,"types":[]},{"text":"impl Send for SectionBaseAddresses","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Send for CfiEntriesIter&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Augmentation","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for CommonInformationEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Send for PartialFrameDescriptionEntry&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Section as UnwindSection&lt;R&gt;&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for FrameDescriptionEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for UninitializedUnwindContext&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for UnwindContext&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Send for UnwindTable&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'iter, R&gt; Send for RegisterRuleIter&lt;'iter, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for UnwindTableRow&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Send for CallFrameInstructionIter&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Dwarf&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for Unit&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RangeIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, Endian&gt; Send for EndianSlice&lt;'input, Endian&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Endian: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ReaderOffsetId","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugAbbrev&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Abbreviations","synthetic":true,"types":[]},{"text":"impl Send for Abbreviation","synthetic":true,"types":[]},{"text":"impl Send for AttributeSpecification","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for ArangeEntry&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugAranges&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for ArangeEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugLine&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Program, Offset&gt; Send for LineRows&lt;R, Program, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Program: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for LineInstructions&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for LineRow","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for LineSequence&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for LineProgramHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for IncompleteLineProgram&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for CompleteLineProgram&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for FileEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for FileEntryFormat","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugLoc&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugLocLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for LocationLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RawLocListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for LocListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for LocationListEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for Piece&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Expression&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for OperationIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Evaluation&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for PubNamesEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugPubNames&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for PubNamesEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for PubTypesEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugPubTypes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for PubTypesEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugRanges&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugRngLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RangeLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RawRngListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RngListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Range","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugStr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugStrOffsets&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugLineStr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for UnitOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugInfo&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for CompilationUnitHeadersIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for CompilationUnitHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for UnitHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R, Offset&gt; Send for DebuggingInformationEntry&lt;'abbrev, 'unit, R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Attribute&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'entry, 'unit, R&gt; !Send for AttrsIter&lt;'abbrev, 'entry, 'unit, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; Send for EntriesRaw&lt;'abbrev, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; Send for EntriesCursor&lt;'abbrev, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; Send for EntriesTree&lt;'abbrev, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, 'tree, R&gt; Send for EntriesTreeNode&lt;'abbrev, 'unit, 'tree, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, 'tree, R&gt; Send for EntriesTreeIter&lt;'abbrev, 'unit, 'tree, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for DebugTypes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for TypeUnitHeadersIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for TypeUnitHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Send for CieOrFde&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Section as UnwindSection&lt;R&gt;&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for CfaRule&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RegisterRule&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for CallFrameInstruction&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Pointer","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for LineInstruction&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ColumnType","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for RawLocListEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DieReference&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for Operation&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for Location&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for EvaluationResult&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for RawRngListEntry&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Send for AttributeValue&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ValueType","synthetic":true,"types":[]},{"text":"impl Send for Value","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]}];
implementors["glium"] = [{"text":"impl Send for Blend","synthetic":true,"types":[]},{"text":"impl Send for Depth","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for IndexBuffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for VertexBuffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Program","synthetic":true,"types":[]},{"text":"impl !Send for SyncFence","synthetic":true,"types":[]},{"text":"impl Send for Version","synthetic":true,"types":[]},{"text":"impl Send for Rect","synthetic":true,"types":[]},{"text":"impl Send for BlitTarget","synthetic":true,"types":[]},{"text":"impl !Send for Frame","synthetic":true,"types":[]},{"text":"impl Send for IncompatibleOpenGl","synthetic":true,"types":[]},{"text":"impl Send for Profile","synthetic":true,"types":[]},{"text":"impl Send for BlendingFunction","synthetic":true,"types":[]},{"text":"impl Send for LinearBlendingFactor","synthetic":true,"types":[]},{"text":"impl Send for DepthTest","synthetic":true,"types":[]},{"text":"impl Send for StencilTest","synthetic":true,"types":[]},{"text":"impl Send for StencilOperation","synthetic":true,"types":[]},{"text":"impl Send for Api","synthetic":true,"types":[]},{"text":"impl Send for ReadError","synthetic":true,"types":[]},{"text":"impl Send for RawUniformValue","synthetic":true,"types":[]},{"text":"impl Send for DrawError","synthetic":true,"types":[]},{"text":"impl Send for SwapBuffersError","synthetic":true,"types":[]},{"text":"impl !Send for Context","synthetic":true,"types":[]},{"text":"impl Send for ReleaseBehavior","synthetic":true,"types":[]},{"text":"impl !Send for Display","synthetic":true,"types":[]},{"text":"impl !Send for GlutinBackend","synthetic":true,"types":[]},{"text":"impl Send for DisplayCreationError","synthetic":true,"types":[]},{"text":"impl !Send for Headless","synthetic":true,"types":[]},{"text":"impl !Send for GlutinBackend","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for Buffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !Send for BufferAny","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for BufferMutSlice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for BufferSlice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BufferAnySlice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'b, D&gt; !Send for Mapping&lt;'b, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'b, D&gt; !Send for WriteMapping&lt;'b, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'b, D&gt; !Send for ReadMapping&lt;'b, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Inserter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ReadError","synthetic":true,"types":[]},{"text":"impl Send for CopyError","synthetic":true,"types":[]},{"text":"impl Send for BufferCreationError","synthetic":true,"types":[]},{"text":"impl Send for BufferMode","synthetic":true,"types":[]},{"text":"impl Send for BufferType","synthetic":true,"types":[]},{"text":"impl !Send for TimestampQuery","synthetic":true,"types":[]},{"text":"impl !Send for DebugCallbackBehavior","synthetic":true,"types":[]},{"text":"impl Send for Severity","synthetic":true,"types":[]},{"text":"impl Send for Source","synthetic":true,"types":[]},{"text":"impl Send for MessageType","synthetic":true,"types":[]},{"text":"impl !Send for SamplesPassedQuery","synthetic":true,"types":[]},{"text":"impl !Send for TimeElapsedQuery","synthetic":true,"types":[]},{"text":"impl !Send for PrimitivesGeneratedQuery","synthetic":true,"types":[]},{"text":"impl !Send for AnySamplesPassedQuery","synthetic":true,"types":[]},{"text":"impl !Send for TransformFeedbackPrimitivesWrittenQuery","synthetic":true,"types":[]},{"text":"impl Send for Stencil","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DrawParameters&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ConditionalRendering&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DepthClamp","synthetic":true,"types":[]},{"text":"impl Send for QueryCreationError","synthetic":true,"types":[]},{"text":"impl Send for BackfaceCullingMode","synthetic":true,"types":[]},{"text":"impl Send for PolygonMode","synthetic":true,"types":[]},{"text":"impl Send for Smooth","synthetic":true,"types":[]},{"text":"impl Send for ProvokingVertex","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SamplesQueryParam&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DefaultFramebuffer","synthetic":true,"types":[]},{"text":"impl !Send for RenderBuffer","synthetic":true,"types":[]},{"text":"impl !Send for RenderBufferAny","synthetic":true,"types":[]},{"text":"impl !Send for DepthRenderBuffer","synthetic":true,"types":[]},{"text":"impl !Send for StencilRenderBuffer","synthetic":true,"types":[]},{"text":"impl !Send for DepthStencilRenderBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SimpleFrameBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MultiOutputFrameBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for EmptyFrameBuffer","synthetic":true,"types":[]},{"text":"impl Send for DefaultFramebufferAttachment","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for ValidationError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ColorAttachment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DepthAttachment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for StencilAttachment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DepthStencilAttachment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for IndexBufferSlice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IndexBufferAny","synthetic":true,"types":[]},{"text":"impl !Send for DrawCommandsNoIndicesBuffer","synthetic":true,"types":[]},{"text":"impl Send for DrawCommandNoIndices","synthetic":true,"types":[]},{"text":"impl !Send for DrawCommandsIndicesBuffer","synthetic":true,"types":[]},{"text":"impl Send for DrawCommandIndices","synthetic":true,"types":[]},{"text":"impl Send for NoIndices","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for IndicesSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PrimitiveType","synthetic":true,"types":[]},{"text":"impl Send for IndexType","synthetic":true,"types":[]},{"text":"impl !Send for ComputeShader","synthetic":true,"types":[]},{"text":"impl Send for ComputeCommand","synthetic":true,"types":[]},{"text":"impl Send for Uniform","synthetic":true,"types":[]},{"text":"impl Send for UniformBlock","synthetic":true,"types":[]},{"text":"impl Send for Attribute","synthetic":true,"types":[]},{"text":"impl Send for TransformFeedbackVarying","synthetic":true,"types":[]},{"text":"impl Send for TransformFeedbackBuffer","synthetic":true,"types":[]},{"text":"impl Send for SubroutineData","synthetic":true,"types":[]},{"text":"impl Send for SubroutineUniform","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SourceCode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Binary","synthetic":true,"types":[]},{"text":"impl Send for BlockLayout","synthetic":true,"types":[]},{"text":"impl Send for OutputPrimitives","synthetic":true,"types":[]},{"text":"impl Send for TransformFeedbackMode","synthetic":true,"types":[]},{"text":"impl Send for ShaderStage","synthetic":true,"types":[]},{"text":"impl Send for ShaderType","synthetic":true,"types":[]},{"text":"impl Send for ProgramCreationError","synthetic":true,"types":[]},{"text":"impl Send for ProgramChooserCreationError","synthetic":true,"types":[]},{"text":"impl Send for GetBinaryError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ProgramCreationInput&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for UniformBuffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t, T&gt; Send for Sampler&lt;'t, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SamplerBehavior","synthetic":true,"types":[]},{"text":"impl Send for EmptyUniforms","synthetic":true,"types":[]},{"text":"impl&lt;'n, T, R&gt; Send for UniformsStorage&lt;'n, T, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SamplerWrapFunction","synthetic":true,"types":[]},{"text":"impl Send for MagnifySamplerFilter","synthetic":true,"types":[]},{"text":"impl Send for MinifySamplerFilter","synthetic":true,"types":[]},{"text":"impl Send for DepthTextureComparison","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for UniformValue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for UniformType","synthetic":true,"types":[]},{"text":"impl Send for LayoutMismatchError","synthetic":true,"types":[]},{"text":"impl !Send for VertexBufferAny","synthetic":true,"types":[]},{"text":"impl&lt;'b, T&gt; !Send for VertexBufferSlice&lt;'b, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for TransformFeedbackSession&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for EmptyVertexAttributes","synthetic":true,"types":[]},{"text":"impl Send for EmptyInstanceAttributes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PerInstance&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for AttributeType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for VerticesSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for TextureAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for TextureAnyMipmap&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for TextureAnyLayer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for TextureAnyLayerMipmap&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for TextureAnyImage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for RawImage1d&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for RawImage2d&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for RawImage3d&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ClientFormat","synthetic":true,"types":[]},{"text":"impl Send for TextureFormat","synthetic":true,"types":[]},{"text":"impl Send for UncompressedFloatFormat","synthetic":true,"types":[]},{"text":"impl Send for UncompressedIntFormat","synthetic":true,"types":[]},{"text":"impl Send for UncompressedUintFormat","synthetic":true,"types":[]},{"text":"impl Send for CompressedFormat","synthetic":true,"types":[]},{"text":"impl Send for DepthFormat","synthetic":true,"types":[]},{"text":"impl Send for DepthStencilFormat","synthetic":true,"types":[]},{"text":"impl Send for StencilFormat","synthetic":true,"types":[]},{"text":"impl Send for CompressedSrgbFormat","synthetic":true,"types":[]},{"text":"impl Send for SrgbFormat","synthetic":true,"types":[]},{"text":"impl Send for Dimensions","synthetic":true,"types":[]},{"text":"impl Send for InternalFormat","synthetic":true,"types":[]},{"text":"impl Send for InternalFormatType","synthetic":true,"types":[]},{"text":"impl Send for GetFormatError","synthetic":true,"types":[]},{"text":"impl Send for CubeLayer","synthetic":true,"types":[]},{"text":"impl Send for TextureKind","synthetic":true,"types":[]},{"text":"impl Send for MipmapsOption","synthetic":true,"types":[]},{"text":"impl Send for CompressedMipmapsOption","synthetic":true,"types":[]},{"text":"impl Send for TextureCreationError","synthetic":true,"types":[]},{"text":"impl !Send for ResidentTexture","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for TextureHandle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BindlessTexturesNotSupportedError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for BufferTexture&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferTextureRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for TextureCreationError","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for BufferTextureType","synthetic":true,"types":[]},{"text":"impl Send for TextureBufferContentType","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for PixelBuffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Texture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for Texture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CompressedTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SrgbTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CompressedSrgbTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IntegralTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for UnsignedTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for StencilTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthStencilTexture1d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilTexture1dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Texture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for Texture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CompressedTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SrgbTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CompressedSrgbTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IntegralTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for UnsignedTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for StencilTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthStencilTexture2d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilTexture2dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Texture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for Texture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IntegralTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SrgbTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for UnsignedTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for StencilTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthStencilTexture2dMultisample","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilTexture2dMultisampleMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Texture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for Texture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CompressedTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SrgbTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CompressedSrgbTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IntegralTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for UnsignedTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthStencilTexture3d","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilTexture3dMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Texture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for Texture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for Texture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for Texture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CompressedTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SrgbTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CompressedSrgbTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IntegralTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for UnsignedTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for StencilTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthStencilTexture1dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilTexture1dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilTexture1dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilTexture1dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Texture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for Texture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for Texture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for Texture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CompressedTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SrgbTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CompressedSrgbTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IntegralTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for UnsignedTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for StencilTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthStencilTexture2dArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilTexture2dArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilTexture2dArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilTexture2dArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Texture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for Texture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for Texture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for Texture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SrgbTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IntegralTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for UnsignedTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for StencilTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthStencilTexture2dMultisampleArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilTexture2dMultisampleArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilTexture2dMultisampleArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilTexture2dMultisampleArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Cubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CompressedCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SrgbCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CompressedSrgbCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IntegralCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for UnsignedCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for StencilCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthStencilCubemap","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilCubemapMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilCubemapImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CompressedCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SrgbCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for SrgbCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for CompressedSrgbCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for CompressedSrgbCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for IntegralCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for IntegralCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for UnsignedCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for UnsignedCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for StencilCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for StencilCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Send for DepthStencilCubemapArray","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilCubemapArrayLayer&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilCubemapArrayMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilCubemapArrayLayerMipmap&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; !Send for DepthStencilCubemapArrayImage&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Field&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for LinearSyncFence","synthetic":false,"types":[]},{"text":"impl Send for Handle","synthetic":false,"types":[]}];
implementors["glutin"] = [{"text":"impl&lt;T&gt; Send for Context&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Send for PossiblyCurrent","synthetic":true,"types":[]},{"text":"impl&lt;T, W&gt; Send for ContextWrapper&lt;T, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for ContextBuilder&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for PixelFormat","synthetic":true,"types":[]},{"text":"impl Send for PixelFormatRequirements","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for GlAttributes&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Rect","synthetic":true,"types":[]},{"text":"impl Send for NotCurrent","synthetic":true,"types":[]},{"text":"impl Send for CreationError","synthetic":true,"types":[]},{"text":"impl Send for ContextError","synthetic":true,"types":[]},{"text":"impl Send for Api","synthetic":true,"types":[]},{"text":"impl Send for GlProfile","synthetic":true,"types":[]},{"text":"impl Send for GlRequest","synthetic":true,"types":[]},{"text":"impl Send for Robustness","synthetic":true,"types":[]},{"text":"impl Send for ReleaseBehavior","synthetic":true,"types":[]},{"text":"impl !Send for RawHandle","synthetic":true,"types":[]}];
implementors["glutin_egl_sys"] = [{"text":"impl !Send for FnPtr","synthetic":true,"types":[]},{"text":"impl !Send for EGLClientPixmapHI","synthetic":true,"types":[]},{"text":"impl Send for __eglMustCastToProperFunctionPointerType_fn","synthetic":true,"types":[]},{"text":"impl Send for Egl","synthetic":false,"types":[]}];
implementors["glutin_glx_sys"] = [{"text":"impl !Send for FnPtr","synthetic":true,"types":[]},{"text":"impl !Send for XVisualInfo","synthetic":true,"types":[]},{"text":"impl !Send for GLXPbufferClobberEvent","synthetic":true,"types":[]},{"text":"impl !Send for GLXBufferSwapComplete","synthetic":true,"types":[]},{"text":"impl !Send for GLXBufferClobberEventSGIX","synthetic":true,"types":[]},{"text":"impl Send for GLXHyperpipeNetworkSGIX","synthetic":true,"types":[]},{"text":"impl Send for GLXHyperpipeConfigSGIX","synthetic":true,"types":[]},{"text":"impl Send for GLXPipeRect","synthetic":true,"types":[]},{"text":"impl Send for GLXPipeRectLimits","synthetic":true,"types":[]},{"text":"impl Send for __GLsync","synthetic":true,"types":[]},{"text":"impl Send for _cl_context","synthetic":true,"types":[]},{"text":"impl Send for _cl_event","synthetic":true,"types":[]},{"text":"impl Send for Display","synthetic":true,"types":[]},{"text":"impl Send for Visual","synthetic":true,"types":[]},{"text":"impl Send for __GLXextFuncPtr_fn","synthetic":true,"types":[]},{"text":"impl !Send for FnPtr","synthetic":true,"types":[]},{"text":"impl !Send for XVisualInfo","synthetic":true,"types":[]},{"text":"impl !Send for GLXPbufferClobberEvent","synthetic":true,"types":[]},{"text":"impl !Send for GLXBufferSwapComplete","synthetic":true,"types":[]},{"text":"impl !Send for GLXBufferClobberEventSGIX","synthetic":true,"types":[]},{"text":"impl Send for GLXHyperpipeNetworkSGIX","synthetic":true,"types":[]},{"text":"impl Send for GLXHyperpipeConfigSGIX","synthetic":true,"types":[]},{"text":"impl Send for GLXPipeRect","synthetic":true,"types":[]},{"text":"impl Send for GLXPipeRectLimits","synthetic":true,"types":[]},{"text":"impl Send for __GLsync","synthetic":true,"types":[]},{"text":"impl Send for _cl_context","synthetic":true,"types":[]},{"text":"impl Send for _cl_event","synthetic":true,"types":[]},{"text":"impl Send for Display","synthetic":true,"types":[]},{"text":"impl Send for Visual","synthetic":true,"types":[]},{"text":"impl Send for __GLXextFuncPtr_fn","synthetic":true,"types":[]},{"text":"impl Send for Glx","synthetic":false,"types":[]},{"text":"impl Send for Glx","synthetic":false,"types":[]}];
implementors["graphics"] = [{"text":"impl Send for DrawState","synthetic":true,"types":[]},{"text":"impl Send for Blend","synthetic":true,"types":[]},{"text":"impl Send for Stencil","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Character&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Context","synthetic":true,"types":[]},{"text":"impl Send for Polygon","synthetic":true,"types":[]},{"text":"impl Send for Line","synthetic":true,"types":[]},{"text":"impl Send for Shape","synthetic":true,"types":[]},{"text":"impl Send for CircleArc","synthetic":true,"types":[]},{"text":"impl Send for Border","synthetic":true,"types":[]},{"text":"impl Send for Ellipse","synthetic":true,"types":[]},{"text":"impl Send for Border","synthetic":true,"types":[]},{"text":"impl Send for Rectangle","synthetic":true,"types":[]},{"text":"impl Send for Shape","synthetic":true,"types":[]},{"text":"impl Send for Image","synthetic":true,"types":[]},{"text":"impl Send for Text","synthetic":true,"types":[]},{"text":"impl Send for Grid","synthetic":true,"types":[]},{"text":"impl Send for GridCells","synthetic":true,"types":[]},{"text":"impl&lt;'a, F, T&gt; Send for GlyphCache&lt;'a, F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for TexturePacker&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["half"] = [{"text":"impl Send for f16","synthetic":true,"types":[]},{"text":"impl Send for bf16","synthetic":true,"types":[]}];
implementors["hibitset"] = [{"text":"impl Send for AtomicBitSet","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for BitIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for DrainBitIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for BitSetAll","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for BitSetAnd&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for BitSetNot&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for BitSetOr&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for BitSetXor&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for BitSet","synthetic":true,"types":[]}];
implementors["inplace_it"] = [{"text":"impl&lt;'a, T&gt; Send for UninitializedSliceMemoryGuard&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for SliceMemoryGuard&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["input"] = [{"text":"impl Send for AfterRenderArgs","synthetic":true,"types":[]},{"text":"impl Send for CloseArgs","synthetic":true,"types":[]},{"text":"impl Send for IdleArgs","synthetic":true,"types":[]},{"text":"impl Send for ButtonArgs","synthetic":true,"types":[]},{"text":"impl Send for ResizeArgs","synthetic":true,"types":[]},{"text":"impl Send for RenderArgs","synthetic":true,"types":[]},{"text":"impl Send for TouchArgs","synthetic":true,"types":[]},{"text":"impl Send for UpdateArgs","synthetic":true,"types":[]},{"text":"impl Send for ButtonState","synthetic":true,"types":[]},{"text":"impl Send for Touch","synthetic":true,"types":[]},{"text":"impl Send for Button","synthetic":true,"types":[]},{"text":"impl Send for Motion","synthetic":true,"types":[]},{"text":"impl Send for HatState","synthetic":true,"types":[]},{"text":"impl Send for FileDrag","synthetic":true,"types":[]},{"text":"impl Send for Input","synthetic":true,"types":[]},{"text":"impl Send for Loop","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ControllerButton","synthetic":true,"types":[]},{"text":"impl Send for ControllerHat","synthetic":true,"types":[]},{"text":"impl Send for ControllerAxisArgs","synthetic":true,"types":[]},{"text":"impl Send for ModifierKey","synthetic":true,"types":[]},{"text":"impl Send for Key","synthetic":true,"types":[]},{"text":"impl Send for MouseButton","synthetic":true,"types":[]},{"text":"impl Send for EventId","synthetic":true,"types":[]}];
implementors["interpolation"] = [{"text":"impl Send for EaseFunction","synthetic":true,"types":[]}];
implementors["iovec"] = [{"text":"impl Send for IoVec","synthetic":true,"types":[]}];
implementors["itoa"] = [{"text":"impl Send for Buffer","synthetic":true,"types":[]}];
implementors["lazycell"] = [{"text":"impl&lt;T&gt; Send for LazyCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for AtomicLazyCell&lt;T&gt;","synthetic":false,"types":[]}];
implementors["libc"] = [{"text":"impl !Send for group","synthetic":true,"types":[]},{"text":"impl Send for utimbuf","synthetic":true,"types":[]},{"text":"impl Send for timeval","synthetic":true,"types":[]},{"text":"impl Send for timespec","synthetic":true,"types":[]},{"text":"impl Send for rlimit","synthetic":true,"types":[]},{"text":"impl Send for rusage","synthetic":true,"types":[]},{"text":"impl Send for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl !Send for hostent","synthetic":true,"types":[]},{"text":"impl !Send for iovec","synthetic":true,"types":[]},{"text":"impl Send for pollfd","synthetic":true,"types":[]},{"text":"impl Send for winsize","synthetic":true,"types":[]},{"text":"impl Send for linger","synthetic":true,"types":[]},{"text":"impl !Send for sigval","synthetic":true,"types":[]},{"text":"impl Send for itimerval","synthetic":true,"types":[]},{"text":"impl Send for tms","synthetic":true,"types":[]},{"text":"impl !Send for servent","synthetic":true,"types":[]},{"text":"impl !Send for protoent","synthetic":true,"types":[]},{"text":"impl Send for in_addr","synthetic":true,"types":[]},{"text":"impl Send for ip_mreq","synthetic":true,"types":[]},{"text":"impl Send for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Send for sockaddr","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl !Send for addrinfo","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Send for fd_set","synthetic":true,"types":[]},{"text":"impl !Send for tm","synthetic":true,"types":[]},{"text":"impl Send for sched_param","synthetic":true,"types":[]},{"text":"impl !Send for Dl_info","synthetic":true,"types":[]},{"text":"impl !Send for lconv","synthetic":true,"types":[]},{"text":"impl Send for in_pktinfo","synthetic":true,"types":[]},{"text":"impl !Send for ifaddrs","synthetic":true,"types":[]},{"text":"impl Send for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Send for arpreq","synthetic":true,"types":[]},{"text":"impl Send for arpreq_old","synthetic":true,"types":[]},{"text":"impl Send for arphdr","synthetic":true,"types":[]},{"text":"impl !Send for mmsghdr","synthetic":true,"types":[]},{"text":"impl Send for epoll_event","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Send for utsname","synthetic":true,"types":[]},{"text":"impl !Send for sigevent","synthetic":true,"types":[]},{"text":"impl Send for rlimit64","synthetic":true,"types":[]},{"text":"impl !Send for glob_t","synthetic":true,"types":[]},{"text":"impl !Send for passwd","synthetic":true,"types":[]},{"text":"impl !Send for spwd","synthetic":true,"types":[]},{"text":"impl Send for dqblk","synthetic":true,"types":[]},{"text":"impl Send for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Send for itimerspec","synthetic":true,"types":[]},{"text":"impl Send for fsid_t","synthetic":true,"types":[]},{"text":"impl Send for packet_mreq","synthetic":true,"types":[]},{"text":"impl Send for cpu_set_t","synthetic":true,"types":[]},{"text":"impl !Send for if_nameindex","synthetic":true,"types":[]},{"text":"impl Send for msginfo","synthetic":true,"types":[]},{"text":"impl Send for sembuf","synthetic":true,"types":[]},{"text":"impl Send for input_event","synthetic":true,"types":[]},{"text":"impl Send for input_id","synthetic":true,"types":[]},{"text":"impl Send for input_absinfo","synthetic":true,"types":[]},{"text":"impl Send for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Send for input_mask","synthetic":true,"types":[]},{"text":"impl Send for ff_replay","synthetic":true,"types":[]},{"text":"impl Send for ff_trigger","synthetic":true,"types":[]},{"text":"impl Send for ff_envelope","synthetic":true,"types":[]},{"text":"impl Send for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl !Send for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_effect","synthetic":true,"types":[]},{"text":"impl !Send for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Send for ucred","synthetic":true,"types":[]},{"text":"impl !Send for mntent","synthetic":true,"types":[]},{"text":"impl !Send for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Send for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Send for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Send for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Send for arpd_request","synthetic":true,"types":[]},{"text":"impl Send for inotify_event","synthetic":true,"types":[]},{"text":"impl Send for fanotify_response","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Send for regmatch_t","synthetic":true,"types":[]},{"text":"impl Send for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Send for dirent","synthetic":true,"types":[]},{"text":"impl Send for dirent64","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Send for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Send for mq_attr","synthetic":true,"types":[]},{"text":"impl Send for statx","synthetic":true,"types":[]},{"text":"impl Send for statx_timestamp","synthetic":true,"types":[]},{"text":"impl !Send for aiocb","synthetic":true,"types":[]},{"text":"impl Send for __exit_status","synthetic":true,"types":[]},{"text":"impl Send for __timeval","synthetic":true,"types":[]},{"text":"impl !Send for glob64_t","synthetic":true,"types":[]},{"text":"impl !Send for msghdr","synthetic":true,"types":[]},{"text":"impl Send for cmsghdr","synthetic":true,"types":[]},{"text":"impl Send for termios","synthetic":true,"types":[]},{"text":"impl Send for mallinfo","synthetic":true,"types":[]},{"text":"impl Send for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Send for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Send for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Send for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Send for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Send for nlattr","synthetic":true,"types":[]},{"text":"impl !Send for rtentry","synthetic":true,"types":[]},{"text":"impl Send for timex","synthetic":true,"types":[]},{"text":"impl Send for ntptimeval","synthetic":true,"types":[]},{"text":"impl !Send for regex_t","synthetic":true,"types":[]},{"text":"impl Send for utmpx","synthetic":true,"types":[]},{"text":"impl Send for sigset_t","synthetic":true,"types":[]},{"text":"impl Send for sysinfo","synthetic":true,"types":[]},{"text":"impl Send for msqid_ds","synthetic":true,"types":[]},{"text":"impl Send for sigaction","synthetic":true,"types":[]},{"text":"impl Send for statfs","synthetic":true,"types":[]},{"text":"impl Send for flock","synthetic":true,"types":[]},{"text":"impl Send for flock64","synthetic":true,"types":[]},{"text":"impl Send for siginfo_t","synthetic":true,"types":[]},{"text":"impl !Send for stack_t","synthetic":true,"types":[]},{"text":"impl Send for stat","synthetic":true,"types":[]},{"text":"impl Send for stat64","synthetic":true,"types":[]},{"text":"impl Send for statfs64","synthetic":true,"types":[]},{"text":"impl Send for statvfs64","synthetic":true,"types":[]},{"text":"impl Send for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Send for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Send for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Send for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Send for user_regs_struct","synthetic":true,"types":[]},{"text":"impl !Send for user","synthetic":true,"types":[]},{"text":"impl !Send for mcontext_t","synthetic":true,"types":[]},{"text":"impl Send for ipc_perm","synthetic":true,"types":[]},{"text":"impl Send for shmid_ds","synthetic":true,"types":[]},{"text":"impl Send for termios2","synthetic":true,"types":[]},{"text":"impl Send for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Send for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl !Send for ucontext_t","synthetic":true,"types":[]},{"text":"impl Send for statvfs","synthetic":true,"types":[]},{"text":"impl Send for max_align_t","synthetic":true,"types":[]},{"text":"impl Send for sem_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Send for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Send for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Send for in6_addr","synthetic":true,"types":[]},{"text":"impl Send for DIR","synthetic":true,"types":[]},{"text":"impl Send for FILE","synthetic":true,"types":[]},{"text":"impl Send for fpos_t","synthetic":true,"types":[]},{"text":"impl Send for timezone","synthetic":true,"types":[]},{"text":"impl Send for fpos64_t","synthetic":true,"types":[]}];
implementors["libloading"] = [{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Library","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for Symbol&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Send for Library","synthetic":false,"types":[]},{"text":"impl&lt;'lib, T:&nbsp;Send&gt; Send for Symbol&lt;'lib, T&gt;","synthetic":false,"types":[]}];
implementors["line_drawing"] = [{"text":"impl&lt;T&gt; Send for Bresenham&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Send for Midpoint&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Send for XiaolinWu&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for WalkGrid&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Supercover&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Bresenham3d&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Send for WalkVoxels&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for BresenhamCircle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for VoxelOrigin","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; Send for Steps&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Octant","synthetic":true,"types":[]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;'a, K, V&gt; Send for Keys&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Send for Values&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&nbsp;=&nbsp;RandomState&gt; !Send for OccupiedEntry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Send for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&nbsp;=&nbsp;RandomState&gt; !Send for Entry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K:&nbsp;Send, V:&nbsp;Send, S:&nbsp;Send&gt; Send for LinkedHashMap&lt;K, V, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, K, V&gt; Send for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, K, V&gt; Send for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Send for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Send for Entries&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["lock_api"] = [{"text":"impl Send for GuardSend","synthetic":true,"types":[]},{"text":"impl !Send for GuardNoSend","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Send for MutexGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawMutex&gt;::GuardMarker: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T&gt; !Send for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T&gt; !Send for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Send for RwLockReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Send for RwLockWriteGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Send for RwLockUpgradableReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Send, T:&nbsp;?Sized + Send&gt; Send for Mutex&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + 'a, T:&nbsp;?Sized + 'a&gt; Send for MappedMutexGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::GuardMarker: Send,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Send, G:&nbsp;GetThreadId + Send&gt; Send for RawReentrantMutex&lt;R, G&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Send, G:&nbsp;GetThreadId + Send, T:&nbsp;?Sized + Send&gt; Send for ReentrantMutex&lt;R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawRwLock + Send, T:&nbsp;?Sized + Send&gt; Send for RwLock&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + 'a&gt; Send for MappedRwLockReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::GuardMarker: Send,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + 'a&gt; Send for MappedRwLockWriteGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::GuardMarker: Send,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; !Send for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Send for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Send for Level","synthetic":true,"types":[]},{"text":"impl Send for LevelFilter","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Send for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["memmap"] = [{"text":"impl Send for MmapOptions","synthetic":true,"types":[]},{"text":"impl Send for Mmap","synthetic":true,"types":[]},{"text":"impl Send for MmapMut","synthetic":true,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Send for StreamResult","synthetic":true,"types":[]},{"text":"impl Send for MZFlush","synthetic":true,"types":[]},{"text":"impl Send for MZStatus","synthetic":true,"types":[]},{"text":"impl Send for MZError","synthetic":true,"types":[]},{"text":"impl Send for DataFormat","synthetic":true,"types":[]},{"text":"impl Send for CompressionLevel","synthetic":true,"types":[]},{"text":"impl Send for CompressorOxide","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CallbackFunc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CompressionStrategy","synthetic":true,"types":[]},{"text":"impl Send for TDEFLFlush","synthetic":true,"types":[]},{"text":"impl Send for TDEFLStatus","synthetic":true,"types":[]},{"text":"impl Send for TINFLStatus","synthetic":true,"types":[]},{"text":"impl Send for DecompressorOxide","synthetic":true,"types":[]},{"text":"impl Send for MinReset","synthetic":true,"types":[]},{"text":"impl Send for ZeroReset","synthetic":true,"types":[]},{"text":"impl Send for FullReset","synthetic":true,"types":[]},{"text":"impl Send for InflateState","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl Send for Poll","synthetic":true,"types":[]},{"text":"impl Send for PollOpt","synthetic":true,"types":[]},{"text":"impl Send for Ready","synthetic":true,"types":[]},{"text":"impl Send for Token","synthetic":true,"types":[]},{"text":"impl Send for Events","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for EventedFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for UnixReady","synthetic":true,"types":[]},{"text":"impl Send for TcpListener","synthetic":true,"types":[]},{"text":"impl Send for TcpStream","synthetic":true,"types":[]},{"text":"impl Send for UdpSocket","synthetic":true,"types":[]},{"text":"impl Send for Registration","synthetic":false,"types":[]},{"text":"impl Send for SetReadiness","synthetic":false,"types":[]}];
implementors["mio_extras"] = [{"text":"impl&lt;T&gt; Send for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SyncSender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Timer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Builder","synthetic":true,"types":[]},{"text":"impl Send for Timeout","synthetic":true,"types":[]}];
implementors["naga"] = [{"text":"impl&lt;T&gt; Send for Arena&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Handle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Header","synthetic":true,"types":[]},{"text":"impl Send for StructMember","synthetic":true,"types":[]},{"text":"impl Send for ImageFlags","synthetic":true,"types":[]},{"text":"impl Send for Type","synthetic":true,"types":[]},{"text":"impl Send for Constant","synthetic":true,"types":[]},{"text":"impl Send for GlobalUse","synthetic":true,"types":[]},{"text":"impl Send for GlobalVariable","synthetic":true,"types":[]},{"text":"impl Send for LocalVariable","synthetic":true,"types":[]},{"text":"impl Send for FallThrough","synthetic":true,"types":[]},{"text":"impl Send for Function","synthetic":true,"types":[]},{"text":"impl Send for EntryPoint","synthetic":true,"types":[]},{"text":"impl Send for Module","synthetic":true,"types":[]},{"text":"impl Send for ShaderStage","synthetic":true,"types":[]},{"text":"impl Send for StorageClass","synthetic":true,"types":[]},{"text":"impl Send for BuiltIn","synthetic":true,"types":[]},{"text":"impl Send for VectorSize","synthetic":true,"types":[]},{"text":"impl Send for ScalarKind","synthetic":true,"types":[]},{"text":"impl Send for ArraySize","synthetic":true,"types":[]},{"text":"impl Send for MemberOrigin","synthetic":true,"types":[]},{"text":"impl Send for ImageDimension","synthetic":true,"types":[]},{"text":"impl Send for TypeInner","synthetic":true,"types":[]},{"text":"impl Send for ConstantInner","synthetic":true,"types":[]},{"text":"impl Send for Binding","synthetic":true,"types":[]},{"text":"impl Send for UnaryOperator","synthetic":true,"types":[]},{"text":"impl Send for BinaryOperator","synthetic":true,"types":[]},{"text":"impl Send for IntrinsicFunction","synthetic":true,"types":[]},{"text":"impl Send for DerivativeAxis","synthetic":true,"types":[]},{"text":"impl Send for FunctionOrigin","synthetic":true,"types":[]},{"text":"impl Send for Expression","synthetic":true,"types":[]},{"text":"impl Send for Statement","synthetic":true,"types":[]},{"text":"impl Send for BindTarget","synthetic":true,"types":[]},{"text":"impl Send for BindSource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Options&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for Writer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Writer","synthetic":true,"types":[]},{"text":"impl Send for WriterFlags","synthetic":true,"types":[]},{"text":"impl Send for SamplingFlags","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Parser&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for ModuleState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ParseError&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Parser","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Token&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Error&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Scope","synthetic":true,"types":[]},{"text":"impl Send for Typifier","synthetic":true,"types":[]},{"text":"impl Send for UnexpectedConstantTypeError","synthetic":true,"types":[]},{"text":"impl Send for Validator","synthetic":true,"types":[]},{"text":"impl Send for ResolveError","synthetic":true,"types":[]},{"text":"impl Send for ValidationError","synthetic":true,"types":[]}];
implementors["net2"] = [{"text":"impl Send for TcpBuilder","synthetic":true,"types":[]},{"text":"impl Send for UdpBuilder","synthetic":true,"types":[]}];
implementors["nix"] = [{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; Send for Iter&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl Send for Entry","synthetic":true,"types":[]},{"text":"impl Send for Type","synthetic":true,"types":[]},{"text":"impl Send for Errno","synthetic":true,"types":[]},{"text":"impl Send for AtFlags","synthetic":true,"types":[]},{"text":"impl Send for OFlag","synthetic":true,"types":[]},{"text":"impl Send for SealFlag","synthetic":true,"types":[]},{"text":"impl Send for FdFlag","synthetic":true,"types":[]},{"text":"impl Send for SpliceFFlags","synthetic":true,"types":[]},{"text":"impl Send for FallocateFlags","synthetic":true,"types":[]},{"text":"impl Send for PosixFadviseAdvice","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for FcntlArg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for FlockArg","synthetic":true,"types":[]},{"text":"impl Send for InterfaceAddress","synthetic":true,"types":[]},{"text":"impl !Send for InterfaceAddressIterator","synthetic":true,"types":[]},{"text":"impl Send for ModuleInitFlags","synthetic":true,"types":[]},{"text":"impl Send for DeleteModuleFlags","synthetic":true,"types":[]},{"text":"impl Send for MsFlags","synthetic":true,"types":[]},{"text":"impl Send for MntFlags","synthetic":true,"types":[]},{"text":"impl Send for MQ_OFlag","synthetic":true,"types":[]},{"text":"impl Send for FdFlag","synthetic":true,"types":[]},{"text":"impl Send for MqAttr","synthetic":true,"types":[]},{"text":"impl Send for InterfaceFlags","synthetic":true,"types":[]},{"text":"impl Send for PollFd","synthetic":true,"types":[]},{"text":"impl Send for PollFlags","synthetic":true,"types":[]},{"text":"impl Send for OpenptyResult","synthetic":true,"types":[]},{"text":"impl Send for ForkptyResult","synthetic":true,"types":[]},{"text":"impl Send for PtyMaster","synthetic":true,"types":[]},{"text":"impl Send for CloneFlags","synthetic":true,"types":[]},{"text":"impl Send for CpuSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for AioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for LioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for AioFsyncMode","synthetic":true,"types":[]},{"text":"impl Send for LioOpcode","synthetic":true,"types":[]},{"text":"impl Send for LioMode","synthetic":true,"types":[]},{"text":"impl Send for AioCancelStat","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for EpollFlags","synthetic":true,"types":[]},{"text":"impl Send for EpollCreateFlags","synthetic":true,"types":[]},{"text":"impl Send for EpollEvent","synthetic":true,"types":[]},{"text":"impl Send for EpollOp","synthetic":true,"types":[]},{"text":"impl Send for EfdFlags","synthetic":true,"types":[]},{"text":"impl Send for MemFdCreateFlag","synthetic":true,"types":[]},{"text":"impl Send for ProtFlags","synthetic":true,"types":[]},{"text":"impl Send for MapFlags","synthetic":true,"types":[]},{"text":"impl Send for MsFlags","synthetic":true,"types":[]},{"text":"impl Send for MlockAllFlags","synthetic":true,"types":[]},{"text":"impl Send for MmapAdvise","synthetic":true,"types":[]},{"text":"impl Send for Options","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for QuotaValidFlags","synthetic":true,"types":[]},{"text":"impl Send for Dqblk","synthetic":true,"types":[]},{"text":"impl Send for QuotaType","synthetic":true,"types":[]},{"text":"impl Send for QuotaFmt","synthetic":true,"types":[]},{"text":"impl Send for RebootMode","synthetic":true,"types":[]},{"text":"impl Send for FdSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Fds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for SigEvent","synthetic":true,"types":[]},{"text":"impl Send for SignalIterator","synthetic":true,"types":[]},{"text":"impl Send for SaFlags","synthetic":true,"types":[]},{"text":"impl Send for SigSet","synthetic":true,"types":[]},{"text":"impl Send for SigAction","synthetic":true,"types":[]},{"text":"impl Send for Signal","synthetic":true,"types":[]},{"text":"impl Send for SigmaskHow","synthetic":true,"types":[]},{"text":"impl Send for SigHandler","synthetic":true,"types":[]},{"text":"impl Send for SigevNotify","synthetic":true,"types":[]},{"text":"impl Send for SfdFlags","synthetic":true,"types":[]},{"text":"impl Send for SignalFd","synthetic":true,"types":[]},{"text":"impl Send for UnixAddr","synthetic":true,"types":[]},{"text":"impl Send for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl Send for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl Send for LinkAddr","synthetic":true,"types":[]},{"text":"impl Send for NetlinkAddr","synthetic":true,"types":[]},{"text":"impl Send for AlgAddr","synthetic":true,"types":[]},{"text":"impl Send for VsockAddr","synthetic":true,"types":[]},{"text":"impl Send for SockFlag","synthetic":true,"types":[]},{"text":"impl Send for MsgFlags","synthetic":true,"types":[]},{"text":"impl Send for UnixCredentials","synthetic":true,"types":[]},{"text":"impl Send for IpMembershipRequest","synthetic":true,"types":[]},{"text":"impl Send for Ipv6MembershipRequest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RecvMsg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CmsgIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, C&gt; Send for SendMmsgData&lt;'a, I, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Send for RecvMmsgData&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AddressFamily","synthetic":true,"types":[]},{"text":"impl Send for SockAddr","synthetic":true,"types":[]},{"text":"impl Send for InetAddr","synthetic":true,"types":[]},{"text":"impl Send for IpAddr","synthetic":true,"types":[]},{"text":"impl Send for SockType","synthetic":true,"types":[]},{"text":"impl Send for SockProtocol","synthetic":true,"types":[]},{"text":"impl Send for ControlMessageOwned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ControlMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SockLevel","synthetic":true,"types":[]},{"text":"impl Send for Shutdown","synthetic":true,"types":[]},{"text":"impl Send for ReuseAddr","synthetic":true,"types":[]},{"text":"impl Send for ReusePort","synthetic":true,"types":[]},{"text":"impl Send for TcpNoDelay","synthetic":true,"types":[]},{"text":"impl Send for Linger","synthetic":true,"types":[]},{"text":"impl Send for IpAddMembership","synthetic":true,"types":[]},{"text":"impl Send for IpDropMembership","synthetic":true,"types":[]},{"text":"impl Send for Ipv6AddMembership","synthetic":true,"types":[]},{"text":"impl Send for Ipv6DropMembership","synthetic":true,"types":[]},{"text":"impl Send for IpMulticastTtl","synthetic":true,"types":[]},{"text":"impl Send for IpMulticastLoop","synthetic":true,"types":[]},{"text":"impl Send for ReceiveTimeout","synthetic":true,"types":[]},{"text":"impl Send for SendTimeout","synthetic":true,"types":[]},{"text":"impl Send for Broadcast","synthetic":true,"types":[]},{"text":"impl Send for OobInline","synthetic":true,"types":[]},{"text":"impl Send for SocketError","synthetic":true,"types":[]},{"text":"impl Send for KeepAlive","synthetic":true,"types":[]},{"text":"impl Send for PeerCredentials","synthetic":true,"types":[]},{"text":"impl Send for TcpKeepIdle","synthetic":true,"types":[]},{"text":"impl Send for RcvBuf","synthetic":true,"types":[]},{"text":"impl Send for SndBuf","synthetic":true,"types":[]},{"text":"impl Send for RcvBufForce","synthetic":true,"types":[]},{"text":"impl Send for SndBufForce","synthetic":true,"types":[]},{"text":"impl Send for SockType","synthetic":true,"types":[]},{"text":"impl Send for AcceptConn","synthetic":true,"types":[]},{"text":"impl Send for BindToDevice","synthetic":true,"types":[]},{"text":"impl Send for OriginalDst","synthetic":true,"types":[]},{"text":"impl Send for ReceiveTimestamp","synthetic":true,"types":[]},{"text":"impl Send for IpTransparent","synthetic":true,"types":[]},{"text":"impl Send for Mark","synthetic":true,"types":[]},{"text":"impl Send for PassCred","synthetic":true,"types":[]},{"text":"impl Send for TcpCongestion","synthetic":true,"types":[]},{"text":"impl Send for Ipv4PacketInfo","synthetic":true,"types":[]},{"text":"impl Send for Ipv6RecvPacketInfo","synthetic":true,"types":[]},{"text":"impl Send for UdpGsoSegment","synthetic":true,"types":[]},{"text":"impl Send for UdpGroSegment","synthetic":true,"types":[]},{"text":"impl Send for AlgSetAeadAuthSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for AlgSetKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SFlag","synthetic":true,"types":[]},{"text":"impl Send for Mode","synthetic":true,"types":[]},{"text":"impl Send for FchmodatFlags","synthetic":true,"types":[]},{"text":"impl Send for UtimensatFlags","synthetic":true,"types":[]},{"text":"impl Send for Statfs","synthetic":true,"types":[]},{"text":"impl Send for FsType","synthetic":true,"types":[]},{"text":"impl Send for FsFlags","synthetic":true,"types":[]},{"text":"impl Send for Statvfs","synthetic":true,"types":[]},{"text":"impl Send for SysInfo","synthetic":true,"types":[]},{"text":"impl Send for Termios","synthetic":true,"types":[]},{"text":"impl Send for InputFlags","synthetic":true,"types":[]},{"text":"impl Send for OutputFlags","synthetic":true,"types":[]},{"text":"impl Send for ControlFlags","synthetic":true,"types":[]},{"text":"impl Send for LocalFlags","synthetic":true,"types":[]},{"text":"impl Send for BaudRate","synthetic":true,"types":[]},{"text":"impl Send for SetArg","synthetic":true,"types":[]},{"text":"impl Send for FlushArg","synthetic":true,"types":[]},{"text":"impl Send for FlowArg","synthetic":true,"types":[]},{"text":"impl Send for SpecialCharacterIndices","synthetic":true,"types":[]},{"text":"impl Send for TimeSpec","synthetic":true,"types":[]},{"text":"impl Send for TimeVal","synthetic":true,"types":[]},{"text":"impl Send for RemoteIoVec","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for IoVec&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Send for UtsName","synthetic":true,"types":[]},{"text":"impl Send for WaitPidFlag","synthetic":true,"types":[]},{"text":"impl Send for WaitStatus","synthetic":true,"types":[]},{"text":"impl Send for AddWatchFlags","synthetic":true,"types":[]},{"text":"impl Send for InitFlags","synthetic":true,"types":[]},{"text":"impl Send for Inotify","synthetic":true,"types":[]},{"text":"impl Send for WatchDescriptor","synthetic":true,"types":[]},{"text":"impl Send for InotifyEvent","synthetic":true,"types":[]},{"text":"impl Send for TimerFd","synthetic":true,"types":[]},{"text":"impl Send for TimerFlags","synthetic":true,"types":[]},{"text":"impl Send for TimerSetTimeFlags","synthetic":true,"types":[]},{"text":"impl Send for ClockId","synthetic":true,"types":[]},{"text":"impl Send for Expiration","synthetic":true,"types":[]},{"text":"impl !Send for UContext","synthetic":true,"types":[]},{"text":"impl Send for Uid","synthetic":true,"types":[]},{"text":"impl Send for Gid","synthetic":true,"types":[]},{"text":"impl Send for Pid","synthetic":true,"types":[]},{"text":"impl Send for AccessFlags","synthetic":true,"types":[]},{"text":"impl Send for User","synthetic":true,"types":[]},{"text":"impl Send for Group","synthetic":true,"types":[]},{"text":"impl Send for ForkResult","synthetic":true,"types":[]},{"text":"impl Send for FchownatFlags","synthetic":true,"types":[]},{"text":"impl Send for Whence","synthetic":true,"types":[]},{"text":"impl Send for LinkatFlags","synthetic":true,"types":[]},{"text":"impl Send for UnlinkatFlags","synthetic":true,"types":[]},{"text":"impl Send for PathconfVar","synthetic":true,"types":[]},{"text":"impl Send for SysconfVar","synthetic":true,"types":[]},{"text":"impl Send for Dir","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Send for ParseBigIntError","synthetic":true,"types":[]},{"text":"impl Send for BigUint","synthetic":true,"types":[]},{"text":"impl Send for BigInt","synthetic":true,"types":[]},{"text":"impl Send for Sign","synthetic":true,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T&gt; Send for Complex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for ParseComplexError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Send for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_iter"] = [{"text":"impl&lt;A&gt; Send for Range&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for RangeInclusive&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for RangeStep&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for RangeStepInclusive&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for RangeFrom&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for RangeStepFrom&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; Send for Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ParseRatioError","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Send for ParseFloatError","synthetic":true,"types":[]},{"text":"impl Send for FloatErrorKind","synthetic":true,"types":[]}];
implementors["object"] = [{"text":"impl Send for Architecture","synthetic":true,"types":[]},{"text":"impl Send for AddressSize","synthetic":true,"types":[]},{"text":"impl Send for BinaryFormat","synthetic":true,"types":[]},{"text":"impl Send for SectionKind","synthetic":true,"types":[]},{"text":"impl Send for SymbolKind","synthetic":true,"types":[]},{"text":"impl Send for SymbolScope","synthetic":true,"types":[]},{"text":"impl Send for RelocationKind","synthetic":true,"types":[]},{"text":"impl Send for RelocationEncoding","synthetic":true,"types":[]},{"text":"impl Send for FileFlags","synthetic":true,"types":[]},{"text":"impl Send for SectionFlags","synthetic":true,"types":[]},{"text":"impl&lt;Section&gt; Send for SymbolFlags&lt;Section&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for LittleEndian","synthetic":true,"types":[]},{"text":"impl Send for BigEndian","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U16Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U32Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U64Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I16Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I32Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I64Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Endianness","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Send for Bytes&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Send for StringTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Send for File&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Send for SegmentIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Send for Segment&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Send for SectionIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Send for Section&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Send for SymbolIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Send for RelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for SectionIndex","synthetic":true,"types":[]},{"text":"impl Send for SymbolIndex","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Send for Symbol&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Send for SymbolMap&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl Send for Relocation","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Send for CompressedData&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl Send for SymbolSection","synthetic":true,"types":[]},{"text":"impl Send for RelocationTarget","synthetic":true,"types":[]},{"text":"impl Send for CompressionFormat","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Send for CoffFile&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Send for SectionTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Send for CoffSegmentIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Send for CoffSegment&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Send for CoffSectionIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Send for CoffSection&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Send for SymbolTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Send for CoffSymbolIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Send for CoffRelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Send for ElfFile&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Send for ElfSegmentIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Send for ElfSegment&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Send for SectionTable&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Send for ElfSectionIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Send for ElfSection&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Send for SymbolTable&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Send for ElfSymbolIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for RelocationSections","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Send for ElfRelocationIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Rel: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Rela: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Send for ElfNoteIterator&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Send for ElfNote&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::NoteHeader: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Mach&gt; Send for MachOFile&lt;'data, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Send for MachOSegmentIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Send for MachOSegment&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Segment: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Send for MachOSectionIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Send for MachOSection&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Mach&gt; Send for SymbolTable&lt;'data, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Send for MachOSymbolIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Send for MachORelocationIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Pe&gt; Send for PeFile&lt;'data, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Send for PeSegmentIterator&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Send for PeSegment&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Send for PeSectionIterator&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Send for PeSection&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Send for PeRelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for FileHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for FileHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Ident","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for SectionHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for SectionHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for CompressionHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for CompressionHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Sym32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Sym64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Syminfo32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Syminfo64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Rel32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Rela32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Rel64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Rela64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for ProgramHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for ProgramHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Dyn32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Dyn64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for NoteHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for NoteHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for FatHeader","synthetic":true,"types":[]},{"text":"impl Send for FatArch32","synthetic":true,"types":[]},{"text":"impl Send for FatArch64","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for MachHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for MachHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for LoadCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for LcStr&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for SegmentCommand32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for SegmentCommand64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Section32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Section64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Fvmlib&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for FvmlibCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Dylib&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for DylibCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for SubFrameworkCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for SubClientCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for SubUmbrellaCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for SubLibraryCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for PreboundDylibCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for DylinkerCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for ThreadCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for RoutinesCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for RoutinesCommand_64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for SymtabCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for DysymtabCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for DylibTableOfContents&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for DylibModule32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for DylibModule64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for DylibReference&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for TwolevelHintsCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for TwolevelHint&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for PrebindCksumCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for UuidCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for RpathCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for LinkeditDataCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for EncryptionInfoCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for EncryptionInfoCommand64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for VersionMinCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for BuildVersionCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for BuildToolVersion&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for DyldInfoCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for LinkerOptionCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for SymSegCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for IdentCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for FvmfileCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for EntryPointCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for SourceVersionCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for DataInCodeEntry&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for NoteCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Nlist32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Nlist64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for Relocation&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for RelocationInfo","synthetic":true,"types":[]},{"text":"impl Send for ScatteredRelocationInfo","synthetic":true,"types":[]},{"text":"impl Send for ImageDosHeader","synthetic":true,"types":[]},{"text":"impl Send for ImageOs2Header","synthetic":true,"types":[]},{"text":"impl Send for ImageVxdHeader","synthetic":true,"types":[]},{"text":"impl Send for ImageFileHeader","synthetic":true,"types":[]},{"text":"impl Send for ImageDataDirectory","synthetic":true,"types":[]},{"text":"impl Send for ImageOptionalHeader32","synthetic":true,"types":[]},{"text":"impl Send for ImageRomOptionalHeader","synthetic":true,"types":[]},{"text":"impl Send for ImageOptionalHeader64","synthetic":true,"types":[]},{"text":"impl Send for ImageNtHeaders64","synthetic":true,"types":[]},{"text":"impl Send for ImageNtHeaders32","synthetic":true,"types":[]},{"text":"impl Send for ImageRomHeaders","synthetic":true,"types":[]},{"text":"impl Send for Guid","synthetic":true,"types":[]},{"text":"impl Send for AnonObjectHeader","synthetic":true,"types":[]},{"text":"impl Send for AnonObjectHeaderV2","synthetic":true,"types":[]},{"text":"impl Send for AnonObjectHeaderBigobj","synthetic":true,"types":[]},{"text":"impl Send for ImageSectionHeader","synthetic":true,"types":[]},{"text":"impl Send for ImageSymbol","synthetic":true,"types":[]},{"text":"impl Send for ImageSymbolBytes","synthetic":true,"types":[]},{"text":"impl Send for ImageSymbolEx","synthetic":true,"types":[]},{"text":"impl Send for ImageSymbolExBytes","synthetic":true,"types":[]},{"text":"impl Send for ImageAuxSymbolTokenDef","synthetic":true,"types":[]},{"text":"impl Send for ImageAuxSymbolFunction","synthetic":true,"types":[]},{"text":"impl Send for ImageAuxSymbolFunctionBeginEnd","synthetic":true,"types":[]},{"text":"impl Send for ImageAuxSymbolWeak","synthetic":true,"types":[]},{"text":"impl Send for ImageAuxSymbolSection","synthetic":true,"types":[]},{"text":"impl Send for ImageAuxSymbolCrc","synthetic":true,"types":[]},{"text":"impl Send for ImageRelocation","synthetic":true,"types":[]},{"text":"impl Send for ImageLinenumber","synthetic":true,"types":[]},{"text":"impl Send for ImageBaseRelocation","synthetic":true,"types":[]},{"text":"impl Send for ImageArchiveMemberHeader","synthetic":true,"types":[]},{"text":"impl Send for ImageExportDirectory","synthetic":true,"types":[]},{"text":"impl Send for ImageImportByName","synthetic":true,"types":[]},{"text":"impl Send for ImageTlsDirectory64","synthetic":true,"types":[]},{"text":"impl Send for ImageTlsDirectory32","synthetic":true,"types":[]},{"text":"impl Send for ImageImportDescriptor","synthetic":true,"types":[]},{"text":"impl Send for ImageBoundImportDescriptor","synthetic":true,"types":[]},{"text":"impl Send for ImageBoundForwarderRef","synthetic":true,"types":[]},{"text":"impl Send for ImageDelayloadDescriptor","synthetic":true,"types":[]},{"text":"impl Send for ImageResourceDirectory","synthetic":true,"types":[]},{"text":"impl Send for ImageResourceDirectoryEntry","synthetic":true,"types":[]},{"text":"impl Send for ImageResourceDirectoryString","synthetic":true,"types":[]},{"text":"impl Send for ImageResourceDirStringU","synthetic":true,"types":[]},{"text":"impl Send for ImageResourceDataEntry","synthetic":true,"types":[]},{"text":"impl Send for ImageLoadConfigCodeIntegrity","synthetic":true,"types":[]},{"text":"impl Send for ImageDynamicRelocationTable","synthetic":true,"types":[]},{"text":"impl Send for ImageDynamicRelocation32","synthetic":true,"types":[]},{"text":"impl Send for ImageDynamicRelocation64","synthetic":true,"types":[]},{"text":"impl Send for ImageDynamicRelocation32V2","synthetic":true,"types":[]},{"text":"impl Send for ImageDynamicRelocation64V2","synthetic":true,"types":[]},{"text":"impl Send for ImagePrologueDynamicRelocationHeader","synthetic":true,"types":[]},{"text":"impl Send for ImageEpilogueDynamicRelocationHeader","synthetic":true,"types":[]},{"text":"impl Send for ImageLoadConfigDirectory32","synthetic":true,"types":[]},{"text":"impl Send for ImageLoadConfigDirectory64","synthetic":true,"types":[]},{"text":"impl Send for ImageHotPatchInfo","synthetic":true,"types":[]},{"text":"impl Send for ImageHotPatchBase","synthetic":true,"types":[]},{"text":"impl Send for ImageHotPatchHashes","synthetic":true,"types":[]},{"text":"impl Send for ImageArmRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Send for ImageArm64RuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Send for ImageAlpha64RuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Send for ImageAlphaRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Send for ImageRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Send for ImageEnclaveConfig32","synthetic":true,"types":[]},{"text":"impl Send for ImageEnclaveConfig64","synthetic":true,"types":[]},{"text":"impl Send for ImageEnclaveImport","synthetic":true,"types":[]},{"text":"impl Send for ImageDebugDirectory","synthetic":true,"types":[]},{"text":"impl Send for ImageCoffSymbolsHeader","synthetic":true,"types":[]},{"text":"impl Send for ImageDebugMisc","synthetic":true,"types":[]},{"text":"impl Send for ImageFunctionEntry","synthetic":true,"types":[]},{"text":"impl Send for ImageFunctionEntry64","synthetic":true,"types":[]},{"text":"impl Send for ImageSeparateDebugHeader","synthetic":true,"types":[]},{"text":"impl Send for NonPagedDebugInfo","synthetic":true,"types":[]},{"text":"impl Send for ImageArchitectureEntry","synthetic":true,"types":[]},{"text":"impl Send for ImportObjectHeader","synthetic":true,"types":[]},{"text":"impl Send for ImageCor20Header","synthetic":true,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; Send for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; Send for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; Send for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T&gt; Send for OrderedFloat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for NotNan&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for FloatIsNan","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for ParseNotNanError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ordermap"] = [{"text":"impl&lt;K, V, S&gt; Send for OrderMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Send for OccupiedEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Send for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Send for Keys&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Send for Values&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Send for ValuesMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Send for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Send for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Send for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Send for Drain&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Send for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Send for OrderSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Send for Difference&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Send for Intersection&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S1, S2&gt; Send for SymmetricDifference&lt;'a, T, S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Send for Union&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["osmesa_sys"] = [{"text":"impl Send for OsMesa","synthetic":true,"types":[]},{"text":"impl Send for osmesa_context","synthetic":true,"types":[]}];
implementors["owned_ttf_parser"] = [{"text":"impl Send for OwnedFont","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Send for Condvar","synthetic":true,"types":[]},{"text":"impl Send for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl Send for Once","synthetic":true,"types":[]},{"text":"impl Send for RawMutex","synthetic":true,"types":[]},{"text":"impl Send for RawRwLock","synthetic":true,"types":[]},{"text":"impl Send for RawThreadId","synthetic":true,"types":[]},{"text":"impl Send for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Send for ParkToken","synthetic":true,"types":[]},{"text":"impl Send for UnparkResult","synthetic":true,"types":[]},{"text":"impl Send for UnparkToken","synthetic":true,"types":[]},{"text":"impl Send for SpinWait","synthetic":true,"types":[]},{"text":"impl Send for FilterOp","synthetic":true,"types":[]},{"text":"impl Send for ParkResult","synthetic":true,"types":[]},{"text":"impl Send for RequeueOp","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Send for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["petgraph"] = [{"text":"impl Send for Direction","synthetic":true,"types":[]},{"text":"impl Send for Directed","synthetic":true,"types":[]},{"text":"impl Send for Undirected","synthetic":true,"types":[]},{"text":"impl&lt;G, F&gt; Send for NodeFiltered&lt;G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Send for NodeFilteredNeighbors&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Send for NodeFilteredNodes&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, I, F&gt; Send for NodeFilteredEdgeReferences&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, I, F&gt; Send for NodeFilteredEdges&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, F&gt; Send for EdgeFiltered&lt;G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, F&gt; Send for EdgeFilteredNeighbors&lt;'a, G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IntoEdges&gt;::Edges: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G, I, F&gt; Send for EdgeFilteredEdges&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; Send for Reversed&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for ReversedEdgeReference&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for ReversedEdgeReferences&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Time","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; Send for Dfs&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; Send for DfsPostOrder&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; Send for Bfs&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; Send for Topo&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, C&gt; Send for WalkerIter&lt;W, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Send for DfsEvent&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Control&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Send for FilterElements&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E&gt; Send for Element&lt;N, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, VM&gt; Send for DfsSpace&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; Send for MinSpanningTree&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as Data&gt;::EdgeWeight: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as GraphBase&gt;::NodeId: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IntoNodeReferences&gt;::NodeReferences: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Send for Cycle&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for NegativeCycle","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Send for Dominators&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N&gt; Send for DominatorsIter&lt;'a, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ty&gt; Send for GraphMap&lt;N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N&gt; Send for Nodes&lt;'a, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ty&gt; Send for Neighbors&lt;'a, N, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ty&gt; Send for NeighborsDirected&lt;'a, N, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; Send for Edges&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; Send for AllEdges&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; Send for AllEdgesMut&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'b, T&gt; Send for Ptr&lt;'b, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; Send for NodeIdentifiers&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, E, Ty&gt; Send for NodeReferences&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; Send for NodeIndex&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; Send for EdgeIndex&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, Ix&gt; Send for Node&lt;N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, Ix&gt; Send for Edge&lt;E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ty, Ix&gt; Send for Graph&lt;N, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ty, Ix&gt; Send for Externals&lt;'a, N, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; Send for Neighbors&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Send for Edges&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ix&gt; Send for NodeWeightsMut&lt;'a, N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; Send for EdgeWeightsMut&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; Send for WalkNeighbors&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; Send for NodeIndices&lt;Ix&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; Send for EdgeIndices&lt;Ix&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; Send for EdgeReference&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ix&gt; Send for NodeReferences&lt;'a, N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; Send for EdgeReferences&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G&gt; Send for Frozen&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ty, Ix&gt; Send for StableGraph&lt;N, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ix&gt; Send for NodeReferences&lt;'a, N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; Send for EdgeReference&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Send for Edges&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; Send for EdgeReferences&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; Send for Neighbors&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; Send for WalkNeighbors&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, N, Ix&gt; Send for NodeIndices&lt;'a, N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ix&gt; Send for EdgeIndices&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, G&gt; Send for Dot&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Config","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Send for UnionFind&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N, E, Ty, Ix&gt; Send for Csr&lt;N, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for EdgesNotSorted","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Send for Edges&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Send for EdgeReference&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Send for EdgeReferences&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Ix&gt; Send for Neighbors&lt;'a, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ix&gt; Send for NodeIdentifiers&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Send for YesS3","synthetic":true,"types":[]},{"text":"impl Send for NoS3","synthetic":true,"types":[]},{"text":"impl Send for YesS4","synthetic":true,"types":[]},{"text":"impl Send for NoS4","synthetic":true,"types":[]},{"text":"impl Send for YesA1","synthetic":true,"types":[]},{"text":"impl Send for NoA1","synthetic":true,"types":[]},{"text":"impl Send for YesA2","synthetic":true,"types":[]},{"text":"impl Send for NoA2","synthetic":true,"types":[]},{"text":"impl Send for YesNI","synthetic":true,"types":[]},{"text":"impl Send for NoNI","synthetic":true,"types":[]},{"text":"impl&lt;S3, S4, NI&gt; Send for SseMachine&lt;S3, S4, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S4: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Send for Avx2Machine&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for vec128_storage","synthetic":true,"types":[]},{"text":"impl Send for vec256_storage","synthetic":true,"types":[]},{"text":"impl Send for vec512_storage","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl !Send for TokenStream","synthetic":true,"types":[]},{"text":"impl !Send for LexError","synthetic":true,"types":[]},{"text":"impl !Send for Span","synthetic":true,"types":[]},{"text":"impl !Send for Group","synthetic":true,"types":[]},{"text":"impl !Send for Punct","synthetic":true,"types":[]},{"text":"impl !Send for Ident","synthetic":true,"types":[]},{"text":"impl !Send for Literal","synthetic":true,"types":[]},{"text":"impl !Send for TokenTree","synthetic":true,"types":[]},{"text":"impl Send for Delimiter","synthetic":true,"types":[]},{"text":"impl Send for Spacing","synthetic":true,"types":[]},{"text":"impl !Send for IntoIter","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl Send for Bernoulli","synthetic":true,"types":[]},{"text":"impl Send for Open01","synthetic":true,"types":[]},{"text":"impl Send for OpenClosed01","synthetic":true,"types":[]},{"text":"impl Send for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Send for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Binomial","synthetic":true,"types":[]},{"text":"impl Send for Cauchy","synthetic":true,"types":[]},{"text":"impl Send for Dirichlet","synthetic":true,"types":[]},{"text":"impl Send for Exp","synthetic":true,"types":[]},{"text":"impl Send for Exp1","synthetic":true,"types":[]},{"text":"impl Send for Beta","synthetic":true,"types":[]},{"text":"impl Send for ChiSquared","synthetic":true,"types":[]},{"text":"impl Send for FisherF","synthetic":true,"types":[]},{"text":"impl Send for Gamma","synthetic":true,"types":[]},{"text":"impl Send for StudentT","synthetic":true,"types":[]},{"text":"impl Send for LogNormal","synthetic":true,"types":[]},{"text":"impl Send for Normal","synthetic":true,"types":[]},{"text":"impl Send for StandardNormal","synthetic":true,"types":[]},{"text":"impl Send for Pareto","synthetic":true,"types":[]},{"text":"impl Send for Poisson","synthetic":true,"types":[]},{"text":"impl Send for Triangular","synthetic":true,"types":[]},{"text":"impl Send for UnitCircle","synthetic":true,"types":[]},{"text":"impl Send for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl Send for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; Send for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Standard","synthetic":true,"types":[]},{"text":"impl Send for BernoulliError","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Send for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Send for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for UniformDuration","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Send for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for WeightedError","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for EntropyRng","synthetic":true,"types":[]},{"text":"impl Send for StdRng","synthetic":true,"types":[]},{"text":"impl !Send for ThreadRng","synthetic":true,"types":[]},{"text":"impl Send for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; Send for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for StepRng","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; Send for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for IndexVecIntoIter","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl Send for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl Send for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl Send for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl Send for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl Send for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl Send for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for OsRng","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Send for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Send for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["raw_window_handle"] = [{"text":"impl !Send for RawWindowHandle","synthetic":true,"types":[]},{"text":"impl !Send for XlibHandle","synthetic":true,"types":[]},{"text":"impl !Send for XcbHandle","synthetic":true,"types":[]},{"text":"impl !Send for WaylandHandle","synthetic":true,"types":[]}];
implementors["relevant"] = [{"text":"impl Send for Relevant","synthetic":true,"types":[]}];
implementors["rendy_chain"] = [{"text":"impl Send for Id","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Chain&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Link&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for LinkNode&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Chains","synthetic":true,"types":[]},{"text":"impl Send for Unsynchronized","synthetic":true,"types":[]},{"text":"impl Send for Node","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for State&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Usage: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Buffer","synthetic":true,"types":[]},{"text":"impl Send for Image","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Family&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Queue&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for QueueId","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Schedule&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Submission&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SubmissionId","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Barrier&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Access: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resource&gt;::Layout: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Guard","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Signal&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, W&gt; Send for SyncData&lt;S, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Wait&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_command"] = [{"text":"impl Send for DrawCommand","synthetic":true,"types":[]},{"text":"impl Send for DrawIndexedCommand","synthetic":true,"types":[]},{"text":"impl Send for DispatchCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, C&gt; Send for EncoderCommon&lt;'a, B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for RenderPassEncoder&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for RenderPassInlineEncoder&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for RenderPassSecondaryEncoder&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, C, L&gt; Send for Encoder&lt;'a, B, C, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for PrimaryLevel","synthetic":true,"types":[]},{"text":"impl Send for SecondaryLevel","synthetic":true,"types":[]},{"text":"impl Send for IndividualReset","synthetic":true,"types":[]},{"text":"impl Send for NoIndividualReset","synthetic":true,"types":[]},{"text":"impl Send for InitialState","synthetic":true,"types":[]},{"text":"impl&lt;U, P&gt; Send for RecordingState&lt;U, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;U, P&gt; Send for ExecutableState&lt;U, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Send for PendingState&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for InvalidState","synthetic":true,"types":[]},{"text":"impl Send for OneShot","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for MultiShot&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SimultaneousUse","synthetic":true,"types":[]},{"text":"impl Send for NoSimultaneousUse","synthetic":true,"types":[]},{"text":"impl Send for RenderPassContinue","synthetic":true,"types":[]},{"text":"impl Send for OutsideRenderPass","synthetic":true,"types":[]},{"text":"impl Send for Transfer","synthetic":true,"types":[]},{"text":"impl Send for Execute","synthetic":true,"types":[]},{"text":"impl Send for Compute","synthetic":true,"types":[]},{"text":"impl Send for Graphics","synthetic":true,"types":[]},{"text":"impl Send for General","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Queue&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, W, C, S&gt; Send for Submission&lt;B, W, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for FamilyId","synthetic":true,"types":[]},{"text":"impl Send for QueueId","synthetic":true,"types":[]},{"text":"impl&lt;B, C&gt; Send for Family&lt;B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Families&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for FenceEpoch","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Fence&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, C, R&gt; Send for CommandPool&lt;B, C, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, S, L, P&gt; Send for Submit&lt;B, S, L, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Backend,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::CommandBuffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;FamilyId: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;B, C, S, L, R&gt; Send for CommandBuffer&lt;B, C, S, L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Backend,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::CommandBuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;FamilyId: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Relevant: Send,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["rendy_core"] = [{"text":"impl Send for ParseBackendError","synthetic":true,"types":[]},{"text":"impl Send for NotEnabled","synthetic":true,"types":[]},{"text":"impl Send for InstanceId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Instance&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Instance: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DeviceId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Device&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for EnabledBackend","synthetic":true,"types":[]},{"text":"impl Send for Backend","synthetic":true,"types":[]},{"text":"impl Send for SetLayout","synthetic":true,"types":[]},{"text":"impl Send for Layout","synthetic":true,"types":[]},{"text":"impl Send for AttrUuid","synthetic":true,"types":[]},{"text":"impl Send for Position","synthetic":true,"types":[]},{"text":"impl Send for Color","synthetic":true,"types":[]},{"text":"impl Send for Normal","synthetic":true,"types":[]},{"text":"impl Send for Tangent","synthetic":true,"types":[]},{"text":"impl Send for TexCoord","synthetic":true,"types":[]},{"text":"impl Send for VertexFormat","synthetic":true,"types":[]},{"text":"impl&lt;N, I&gt; Send for AttrGenIter&lt;N, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Attribute","synthetic":true,"types":[]},{"text":"impl Send for PosColor","synthetic":true,"types":[]},{"text":"impl Send for PosNorm","synthetic":true,"types":[]},{"text":"impl Send for PosColorNorm","synthetic":true,"types":[]},{"text":"impl Send for PosTex","synthetic":true,"types":[]},{"text":"impl Send for PosNormTex","synthetic":true,"types":[]},{"text":"impl Send for PosNormTangTex","synthetic":true,"types":[]},{"text":"impl Send for Model","synthetic":true,"types":[]}];
implementors["rendy_descriptor"] = [{"text":"impl&lt;B&gt; Send for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for DescriptorAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DescriptorRanges","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DescriptorRangesIter&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["rendy_factory"] = [{"text":"impl&lt;B&gt; Send for Barriers&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Blitter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for BlitRegion","synthetic":true,"types":[]},{"text":"impl Send for BlitImageState","synthetic":true,"types":[]},{"text":"impl&lt;D, H, Q&gt; Send for Config&lt;D, H, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for OneGraphicsQueue","synthetic":true,"types":[]},{"text":"impl Send for SavedQueueConfig","synthetic":true,"types":[]},{"text":"impl Send for BasicHeapsConfigure","synthetic":true,"types":[]},{"text":"impl Send for SavedHeapsConfig","synthetic":true,"types":[]},{"text":"impl Send for BasicDevicesConfigure","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Factory&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Instance: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for BufferState","synthetic":true,"types":[]},{"text":"impl Send for ImageState","synthetic":true,"types":[]},{"text":"impl Send for UploadError","synthetic":true,"types":[]},{"text":"impl Send for ImageStateOrLayout","synthetic":true,"types":[]}];
implementors["rendy_frame"] = [{"text":"impl Send for Frame","synthetic":true,"types":[]},{"text":"impl Send for CompleteFrame","synthetic":true,"types":[]},{"text":"impl Send for FramesRange","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Frames&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I, P&gt; Send for InitialRef&lt;'a, T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I, P&gt; Send for ReadyRef&lt;'a, T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, I, P&gt; Send for Cirque&lt;T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, I, P&gt; Send for DependentCirque&lt;T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, I, P&gt; Send for CirqueRef&lt;'a, T, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_graph"] = [{"text":"impl Send for BufferId","synthetic":true,"types":[]},{"text":"impl Send for ImageId","synthetic":true,"types":[]},{"text":"impl Send for NodeId","synthetic":true,"types":[]},{"text":"impl&lt;B, T:&nbsp;?Sized&gt; Send for Graph&lt;B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Semaphore: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for GraphContext&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; !Send for GraphBuilder&lt;B, T&gt;","synthetic":true,"types":[]},{"text":"impl Send for BufferAccess","synthetic":true,"types":[]},{"text":"impl Send for BufferBarrier","synthetic":true,"types":[]},{"text":"impl Send for NodeBuffer","synthetic":true,"types":[]},{"text":"impl Send for ImageAccess","synthetic":true,"types":[]},{"text":"impl Send for ImageBarrier","synthetic":true,"types":[]},{"text":"impl Send for NodeImage","synthetic":true,"types":[]},{"text":"impl&lt;B, T:&nbsp;?Sized, N&gt; Send for DescBuilder&lt;B, T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for GraphBuildError","synthetic":true,"types":[]},{"text":"impl Send for NodeBuildError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for PresentBuilder&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for PrepareResult","synthetic":true,"types":[]},{"text":"impl Send for Pipeline","synthetic":true,"types":[]},{"text":"impl&lt;B, P&gt; Send for SimpleRenderGroup&lt;B, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Send for SimpleRenderGroupDesc&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; !Send for SubpassBuilder&lt;B, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B, T&gt; !Send for RenderPassNodeBuilder&lt;B, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B:&nbsp;Backend&gt; Send for PresentNode&lt;B&gt;","synthetic":false,"types":[]}];
implementors["rendy_init"] = [{"text":"impl&lt;B&gt; Send for Rendy&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Instance: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for RendyAutoInitError","synthetic":true,"types":[]},{"text":"impl Send for RendyInitError","synthetic":true,"types":[]},{"text":"impl Send for AnyRendy","synthetic":true,"types":[]}];
implementors["rendy_memory"] = [{"text":"impl Send for DedicatedAllocator","synthetic":true,"types":[]},{"text":"impl Send for DynamicConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for LinearAllocator&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Send for LinearConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Heaps&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Send for HeapsConfig","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for MemoryBlock&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Send for Coherent","synthetic":true,"types":[]},{"text":"impl&lt;'a, B, C&nbsp;=&nbsp;MaybeCoherent&gt; !Send for MappedRange&lt;'a, B, C&gt;","synthetic":true,"types":[]},{"text":"impl Send for MaybeCoherent","synthetic":true,"types":[]},{"text":"impl Send for NonCoherent","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Memory&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Memory: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Data","synthetic":true,"types":[]},{"text":"impl Send for Dynamic","synthetic":true,"types":[]},{"text":"impl Send for Upload","synthetic":true,"types":[]},{"text":"impl Send for Download","synthetic":true,"types":[]},{"text":"impl Send for MemoryUtilization","synthetic":true,"types":[]},{"text":"impl Send for MemoryHeapUtilization","synthetic":true,"types":[]},{"text":"impl Send for MemoryTypeUtilization","synthetic":true,"types":[]},{"text":"impl Send for TotalMemoryUtilization","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl Send for HeapsError","synthetic":true,"types":[]},{"text":"impl Send for MemoryUsageValue","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for DedicatedBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Backend,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;B&gt; Send for DynamicBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Backend,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;B&gt; Send for DynamicAllocator&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Backend,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;B&gt; Send for LinearBlock&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Backend,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["rendy_mesh"] = [{"text":"impl Send for VertexBufferLayout","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for IndexBuffer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MeshBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Mesh&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Incompatible","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Indices&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["rendy_resource"] = [{"text":"impl Send for BufferInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Buffer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Escape&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Terminal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Handle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ImageInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Image&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ImageViewInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for ImageView&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for ResourceTracker&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for SamplerCache&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Sampler&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DescriptorSetInfo","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for DescriptorSetLayout&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for DescriptorSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for CreationError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_shader"] = [{"text":"impl Send for SpirvShader","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for ShaderSet&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SpecConstantSet","synthetic":true,"types":[]},{"text":"impl Send for ShaderSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for ShaderStorage&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ShaderError","synthetic":true,"types":[]}];
implementors["rendy_texture"] = [{"text":"impl&lt;B&gt; Send for Texture&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TextureBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for MipLevels","synthetic":true,"types":[]},{"text":"impl Send for BuildError","synthetic":true,"types":[]},{"text":"impl Send for Unorm","synthetic":true,"types":[]},{"text":"impl Send for Inorm","synthetic":true,"types":[]},{"text":"impl Send for Uint","synthetic":true,"types":[]},{"text":"impl Send for Int","synthetic":true,"types":[]},{"text":"impl Send for Uscaled","synthetic":true,"types":[]},{"text":"impl Send for Iscaled","synthetic":true,"types":[]},{"text":"impl Send for Srgb","synthetic":true,"types":[]},{"text":"impl Send for Float","synthetic":true,"types":[]},{"text":"impl Send for _8","synthetic":true,"types":[]},{"text":"impl Send for _16","synthetic":true,"types":[]},{"text":"impl Send for _32","synthetic":true,"types":[]},{"text":"impl Send for _64","synthetic":true,"types":[]},{"text":"impl Send for R","synthetic":true,"types":[]},{"text":"impl Send for Rg","synthetic":true,"types":[]},{"text":"impl Send for Rgb","synthetic":true,"types":[]},{"text":"impl Send for Rgba","synthetic":true,"types":[]},{"text":"impl Send for Bgr","synthetic":true,"types":[]},{"text":"impl Send for Bgra","synthetic":true,"types":[]},{"text":"impl Send for Abgr","synthetic":true,"types":[]},{"text":"impl&lt;C, S, T&gt; Send for Pixel&lt;C, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as PixelRepr&lt;S, T&gt;&gt;::Repr: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rendy_wsi"] = [{"text":"impl&lt;B&gt; Send for Surface&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Target&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Swapchain: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Send for NextImages&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Surface: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Swapchain: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SwapchainError","synthetic":true,"types":[]}];
implementors["rustc_demangle"] = [{"text":"impl&lt;'a&gt; Send for Demangle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for TryDemangleError","synthetic":true,"types":[]}];
implementors["rustc_hash"] = [{"text":"impl Send for FxHasher","synthetic":true,"types":[]}];
implementors["rusttype"] = [{"text":"impl Send for Curve","synthetic":true,"types":[]},{"text":"impl Send for Line","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Send for Point&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Send for Rect&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Send for Vector&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for FontCollection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Font&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Codepoint","synthetic":true,"types":[]},{"text":"impl Send for GlyphId","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Glyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SharedGlyphData","synthetic":true,"types":[]},{"text":"impl Send for HMetrics","synthetic":true,"types":[]},{"text":"impl Send for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ScaledGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PositionedGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Scale","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for IntoFontsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, I&gt; Send for GlyphIter&lt;'a, 'b, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Send for LayoutIter&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Send for Contour","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SharedBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Segment","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;'font&gt; Send for Cache&lt;'font&gt;","synthetic":true,"types":[]},{"text":"impl Send for CacheBuilder","synthetic":true,"types":[]},{"text":"impl Send for CacheReadErr","synthetic":true,"types":[]},{"text":"impl Send for CacheWriteErr","synthetic":true,"types":[]},{"text":"impl Send for CachedBy","synthetic":true,"types":[]}];
implementors["ryu"] = [{"text":"impl Send for Buffer","synthetic":true,"types":[]}];
implementors["same_file"] = [{"text":"impl Send for Handle","synthetic":true,"types":[]}];
implementors["scoped_tls"] = [{"text":"impl&lt;T&gt; Send for ScopedKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["scopeguard"] = [{"text":"impl&lt;T, F, S&gt; Send for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Always","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl Send for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Send for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Send for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Send for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Send for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Send for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Send for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Send for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;R&gt; Send for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; Send for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; Send for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Send for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Number","synthetic":true,"types":[]},{"text":"impl Send for Value","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Category","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CharEscape","synthetic":true,"types":[]},{"text":"impl Send for Serializer","synthetic":true,"types":[]}];
implementors["shaderc"] = [{"text":"impl !Send for Compiler","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CompileOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ResolvedInclude","synthetic":true,"types":[]},{"text":"impl !Send for CompilationArtifact","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for TargetEnv","synthetic":true,"types":[]},{"text":"impl Send for SourceLanguage","synthetic":true,"types":[]},{"text":"impl Send for ResourceKind","synthetic":true,"types":[]},{"text":"impl Send for ShaderKind","synthetic":true,"types":[]},{"text":"impl Send for GlslProfile","synthetic":true,"types":[]},{"text":"impl Send for OptimizationLevel","synthetic":true,"types":[]},{"text":"impl Send for Limit","synthetic":true,"types":[]},{"text":"impl Send for IncludeType","synthetic":true,"types":[]}];
implementors["shaderc_sys"] = [{"text":"impl !Send for shaderc_include_result","synthetic":true,"types":[]},{"text":"impl Send for ShadercCompiler","synthetic":true,"types":[]},{"text":"impl Send for ShadercCompileOptions","synthetic":true,"types":[]},{"text":"impl Send for ShadercCompilationResult","synthetic":true,"types":[]}];
implementors["shared_library"] = [{"text":"impl Send for LoadingError","synthetic":true,"types":[]},{"text":"impl Send for SpecialHandles","synthetic":true,"types":[]},{"text":"impl Send for DynamicLibrary","synthetic":false,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Send for Slab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for VacantEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T&gt; Send for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Send for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Send,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["smithay_client_toolkit"] = [{"text":"impl Send for Environment","synthetic":true,"types":[]},{"text":"impl Send for Shell","synthetic":true,"types":[]},{"text":"impl Send for DataDevice","synthetic":true,"types":[]},{"text":"impl Send for DataOffer","synthetic":true,"types":[]},{"text":"impl Send for ReadPipe","synthetic":true,"types":[]},{"text":"impl Send for DataSource","synthetic":true,"types":[]},{"text":"impl Send for WritePipe","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DndEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DataSourceEvent","synthetic":true,"types":[]},{"text":"impl Send for ModifiersState","synthetic":true,"types":[]},{"text":"impl Send for RMLVO","synthetic":true,"types":[]},{"text":"impl Send for KeyRepeatEvent","synthetic":true,"types":[]},{"text":"impl Send for KeyRepeatKind","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Mode","synthetic":true,"types":[]},{"text":"impl Send for OutputInfo","synthetic":true,"types":[]},{"text":"impl Send for OutputMgr","synthetic":true,"types":[]},{"text":"impl Send for ThemeManager","synthetic":true,"types":[]},{"text":"impl Send for ThemedPointer","synthetic":true,"types":[]},{"text":"impl Send for AutoThemer","synthetic":true,"types":[]},{"text":"impl Send for AutoPointer","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for DoubleMemPool","synthetic":true,"types":[]},{"text":"impl Send for MemPool","synthetic":true,"types":[]},{"text":"impl Send for BasicFrame","synthetic":true,"types":[]},{"text":"impl Send for ConceptFrame","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for Window&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl Send for ButtonState","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for FrameRequest","synthetic":true,"types":[]}];
implementors["smithay_clipboard"] = [{"text":"impl Send for ThreadedClipboard","synthetic":true,"types":[]}];
implementors["spirv_headers"] = [{"text":"impl Send for ImageOperands","synthetic":true,"types":[]},{"text":"impl Send for FPFastMathMode","synthetic":true,"types":[]},{"text":"impl Send for SelectionControl","synthetic":true,"types":[]},{"text":"impl Send for LoopControl","synthetic":true,"types":[]},{"text":"impl Send for FunctionControl","synthetic":true,"types":[]},{"text":"impl Send for MemorySemantics","synthetic":true,"types":[]},{"text":"impl Send for MemoryAccess","synthetic":true,"types":[]},{"text":"impl Send for KernelProfilingInfo","synthetic":true,"types":[]},{"text":"impl Send for RayFlags","synthetic":true,"types":[]},{"text":"impl Send for SourceLanguage","synthetic":true,"types":[]},{"text":"impl Send for ExecutionModel","synthetic":true,"types":[]},{"text":"impl Send for AddressingModel","synthetic":true,"types":[]},{"text":"impl Send for MemoryModel","synthetic":true,"types":[]},{"text":"impl Send for ExecutionMode","synthetic":true,"types":[]},{"text":"impl Send for StorageClass","synthetic":true,"types":[]},{"text":"impl Send for Dim","synthetic":true,"types":[]},{"text":"impl Send for SamplerAddressingMode","synthetic":true,"types":[]},{"text":"impl Send for SamplerFilterMode","synthetic":true,"types":[]},{"text":"impl Send for ImageFormat","synthetic":true,"types":[]},{"text":"impl Send for ImageChannelOrder","synthetic":true,"types":[]},{"text":"impl Send for ImageChannelDataType","synthetic":true,"types":[]},{"text":"impl Send for FPRoundingMode","synthetic":true,"types":[]},{"text":"impl Send for LinkageType","synthetic":true,"types":[]},{"text":"impl Send for AccessQualifier","synthetic":true,"types":[]},{"text":"impl Send for FunctionParameterAttribute","synthetic":true,"types":[]},{"text":"impl Send for Decoration","synthetic":true,"types":[]},{"text":"impl Send for BuiltIn","synthetic":true,"types":[]},{"text":"impl Send for Scope","synthetic":true,"types":[]},{"text":"impl Send for GroupOperation","synthetic":true,"types":[]},{"text":"impl Send for KernelEnqueueFlags","synthetic":true,"types":[]},{"text":"impl Send for Capability","synthetic":true,"types":[]},{"text":"impl Send for RayQueryIntersection","synthetic":true,"types":[]},{"text":"impl Send for RayQueryCommittedIntersectionType","synthetic":true,"types":[]},{"text":"impl Send for RayQueryCandidateIntersectionType","synthetic":true,"types":[]},{"text":"impl Send for Op","synthetic":true,"types":[]},{"text":"impl Send for GLOp","synthetic":true,"types":[]},{"text":"impl Send for CLOp","synthetic":true,"types":[]}];
implementors["stb_truetype"] = [{"text":"impl&lt;Data&gt; Send for FontInfo&lt;Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Vertex","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for HMetrics","synthetic":true,"types":[]},{"text":"impl Send for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a, Data&gt; Send for FontNameIter&lt;'a, Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for VertexType","synthetic":true,"types":[]},{"text":"impl Send for PlatformId","synthetic":true,"types":[]},{"text":"impl Send for UnicodeEid","synthetic":true,"types":[]},{"text":"impl Send for MicrosoftEid","synthetic":true,"types":[]},{"text":"impl Send for MacEid","synthetic":true,"types":[]},{"text":"impl Send for MicrosoftLang","synthetic":true,"types":[]},{"text":"impl Send for MacLang","synthetic":true,"types":[]},{"text":"impl Send for PlatformEncodingLanguageId","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl !Send for Attribute","synthetic":true,"types":[]},{"text":"impl !Send for MetaList","synthetic":true,"types":[]},{"text":"impl !Send for MetaNameValue","synthetic":true,"types":[]},{"text":"impl !Send for Field","synthetic":true,"types":[]},{"text":"impl !Send for FieldsNamed","synthetic":true,"types":[]},{"text":"impl !Send for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl !Send for Variant","synthetic":true,"types":[]},{"text":"impl !Send for VisCrate","synthetic":true,"types":[]},{"text":"impl !Send for VisPublic","synthetic":true,"types":[]},{"text":"impl !Send for VisRestricted","synthetic":true,"types":[]},{"text":"impl !Send for Arm","synthetic":true,"types":[]},{"text":"impl !Send for FieldValue","synthetic":true,"types":[]},{"text":"impl !Send for Label","synthetic":true,"types":[]},{"text":"impl !Send for MethodTurbofish","synthetic":true,"types":[]},{"text":"impl !Send for ExprArray","synthetic":true,"types":[]},{"text":"impl !Send for ExprAssign","synthetic":true,"types":[]},{"text":"impl !Send for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl !Send for ExprAsync","synthetic":true,"types":[]},{"text":"impl !Send for ExprAwait","synthetic":true,"types":[]},{"text":"impl !Send for ExprBinary","synthetic":true,"types":[]},{"text":"impl !Send for ExprBlock","synthetic":true,"types":[]},{"text":"impl !Send for ExprBox","synthetic":true,"types":[]},{"text":"impl !Send for ExprBreak","synthetic":true,"types":[]},{"text":"impl !Send for ExprCall","synthetic":true,"types":[]},{"text":"impl !Send for ExprCast","synthetic":true,"types":[]},{"text":"impl !Send for ExprClosure","synthetic":true,"types":[]},{"text":"impl !Send for ExprContinue","synthetic":true,"types":[]},{"text":"impl !Send for ExprField","synthetic":true,"types":[]},{"text":"impl !Send for ExprForLoop","synthetic":true,"types":[]},{"text":"impl !Send for ExprGroup","synthetic":true,"types":[]},{"text":"impl !Send for ExprIf","synthetic":true,"types":[]},{"text":"impl !Send for ExprIndex","synthetic":true,"types":[]},{"text":"impl !Send for ExprLet","synthetic":true,"types":[]},{"text":"impl !Send for ExprLit","synthetic":true,"types":[]},{"text":"impl !Send for ExprLoop","synthetic":true,"types":[]},{"text":"impl !Send for ExprMacro","synthetic":true,"types":[]},{"text":"impl !Send for ExprMatch","synthetic":true,"types":[]},{"text":"impl !Send for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl !Send for ExprParen","synthetic":true,"types":[]},{"text":"impl !Send for ExprPath","synthetic":true,"types":[]},{"text":"impl !Send for ExprRange","synthetic":true,"types":[]},{"text":"impl !Send for ExprReference","synthetic":true,"types":[]},{"text":"impl !Send for ExprRepeat","synthetic":true,"types":[]},{"text":"impl !Send for ExprReturn","synthetic":true,"types":[]},{"text":"impl !Send for ExprStruct","synthetic":true,"types":[]},{"text":"impl !Send for ExprTry","synthetic":true,"types":[]},{"text":"impl !Send for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl !Send for ExprTuple","synthetic":true,"types":[]},{"text":"impl !Send for ExprType","synthetic":true,"types":[]},{"text":"impl !Send for ExprUnary","synthetic":true,"types":[]},{"text":"impl !Send for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl !Send for ExprWhile","synthetic":true,"types":[]},{"text":"impl !Send for ExprYield","synthetic":true,"types":[]},{"text":"impl !Send for Index","synthetic":true,"types":[]},{"text":"impl !Send for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl !Send for ConstParam","synthetic":true,"types":[]},{"text":"impl !Send for Generics","synthetic":true,"types":[]},{"text":"impl !Send for LifetimeDef","synthetic":true,"types":[]},{"text":"impl !Send for PredicateEq","synthetic":true,"types":[]},{"text":"impl !Send for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl !Send for PredicateType","synthetic":true,"types":[]},{"text":"impl !Send for TraitBound","synthetic":true,"types":[]},{"text":"impl !Send for TypeParam","synthetic":true,"types":[]},{"text":"impl !Send for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for ForeignItemFn","synthetic":true,"types":[]},{"text":"impl !Send for ForeignItemMacro","synthetic":true,"types":[]},{"text":"impl !Send for ForeignItemStatic","synthetic":true,"types":[]},{"text":"impl !Send for ForeignItemType","synthetic":true,"types":[]},{"text":"impl !Send for ImplItemConst","synthetic":true,"types":[]},{"text":"impl !Send for ImplItemMacro","synthetic":true,"types":[]},{"text":"impl !Send for ImplItemMethod","synthetic":true,"types":[]},{"text":"impl !Send for ImplItemType","synthetic":true,"types":[]},{"text":"impl !Send for ItemConst","synthetic":true,"types":[]},{"text":"impl !Send for ItemEnum","synthetic":true,"types":[]},{"text":"impl !Send for ItemExternCrate","synthetic":true,"types":[]},{"text":"impl !Send for ItemFn","synthetic":true,"types":[]},{"text":"impl !Send for ItemForeignMod","synthetic":true,"types":[]},{"text":"impl !Send for ItemImpl","synthetic":true,"types":[]},{"text":"impl !Send for ItemMacro","synthetic":true,"types":[]},{"text":"impl !Send for ItemMacro2","synthetic":true,"types":[]},{"text":"impl !Send for ItemMod","synthetic":true,"types":[]},{"text":"impl !Send for ItemStatic","synthetic":true,"types":[]},{"text":"impl !Send for ItemStruct","synthetic":true,"types":[]},{"text":"impl !Send for ItemTrait","synthetic":true,"types":[]},{"text":"impl !Send for ItemTraitAlias","synthetic":true,"types":[]},{"text":"impl !Send for ItemType","synthetic":true,"types":[]},{"text":"impl !Send for ItemUnion","synthetic":true,"types":[]},{"text":"impl !Send for ItemUse","synthetic":true,"types":[]},{"text":"impl !Send for Receiver","synthetic":true,"types":[]},{"text":"impl !Send for Signature","synthetic":true,"types":[]},{"text":"impl !Send for TraitItemConst","synthetic":true,"types":[]},{"text":"impl !Send for TraitItemMacro","synthetic":true,"types":[]},{"text":"impl !Send for TraitItemMethod","synthetic":true,"types":[]},{"text":"impl !Send for TraitItemType","synthetic":true,"types":[]},{"text":"impl !Send for UseGlob","synthetic":true,"types":[]},{"text":"impl !Send for UseGroup","synthetic":true,"types":[]},{"text":"impl !Send for UseName","synthetic":true,"types":[]},{"text":"impl !Send for UsePath","synthetic":true,"types":[]},{"text":"impl !Send for UseRename","synthetic":true,"types":[]},{"text":"impl !Send for File","synthetic":true,"types":[]},{"text":"impl !Send for Lifetime","synthetic":true,"types":[]},{"text":"impl !Send for LitBool","synthetic":true,"types":[]},{"text":"impl !Send for LitByte","synthetic":true,"types":[]},{"text":"impl !Send for LitByteStr","synthetic":true,"types":[]},{"text":"impl !Send for LitChar","synthetic":true,"types":[]},{"text":"impl !Send for LitFloat","synthetic":true,"types":[]},{"text":"impl !Send for LitInt","synthetic":true,"types":[]},{"text":"impl !Send for LitStr","synthetic":true,"types":[]},{"text":"impl !Send for Macro","synthetic":true,"types":[]},{"text":"impl !Send for DataEnum","synthetic":true,"types":[]},{"text":"impl !Send for DataStruct","synthetic":true,"types":[]},{"text":"impl !Send for DataUnion","synthetic":true,"types":[]},{"text":"impl !Send for DeriveInput","synthetic":true,"types":[]},{"text":"impl !Send for Block","synthetic":true,"types":[]},{"text":"impl !Send for Local","synthetic":true,"types":[]},{"text":"impl !Send for Abi","synthetic":true,"types":[]},{"text":"impl !Send for BareFnArg","synthetic":true,"types":[]},{"text":"impl !Send for TypeArray","synthetic":true,"types":[]},{"text":"impl !Send for TypeBareFn","synthetic":true,"types":[]},{"text":"impl !Send for TypeGroup","synthetic":true,"types":[]},{"text":"impl !Send for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl !Send for TypeInfer","synthetic":true,"types":[]},{"text":"impl !Send for TypeMacro","synthetic":true,"types":[]},{"text":"impl !Send for TypeNever","synthetic":true,"types":[]},{"text":"impl !Send for TypeParen","synthetic":true,"types":[]},{"text":"impl !Send for TypePath","synthetic":true,"types":[]},{"text":"impl !Send for TypePtr","synthetic":true,"types":[]},{"text":"impl !Send for TypeReference","synthetic":true,"types":[]},{"text":"impl !Send for TypeSlice","synthetic":true,"types":[]},{"text":"impl !Send for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl !Send for TypeTuple","synthetic":true,"types":[]},{"text":"impl !Send for Variadic","synthetic":true,"types":[]},{"text":"impl !Send for FieldPat","synthetic":true,"types":[]},{"text":"impl !Send for PatBox","synthetic":true,"types":[]},{"text":"impl !Send for PatIdent","synthetic":true,"types":[]},{"text":"impl !Send for PatLit","synthetic":true,"types":[]},{"text":"impl !Send for PatMacro","synthetic":true,"types":[]},{"text":"impl !Send for PatOr","synthetic":true,"types":[]},{"text":"impl !Send for PatPath","synthetic":true,"types":[]},{"text":"impl !Send for PatRange","synthetic":true,"types":[]},{"text":"impl !Send for PatReference","synthetic":true,"types":[]},{"text":"impl !Send for PatRest","synthetic":true,"types":[]},{"text":"impl !Send for PatSlice","synthetic":true,"types":[]},{"text":"impl !Send for PatStruct","synthetic":true,"types":[]},{"text":"impl !Send for PatTuple","synthetic":true,"types":[]},{"text":"impl !Send for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl !Send for PatType","synthetic":true,"types":[]},{"text":"impl !Send for PatWild","synthetic":true,"types":[]},{"text":"impl !Send for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl !Send for Binding","synthetic":true,"types":[]},{"text":"impl !Send for Constraint","synthetic":true,"types":[]},{"text":"impl !Send for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl !Send for Path","synthetic":true,"types":[]},{"text":"impl !Send for PathSegment","synthetic":true,"types":[]},{"text":"impl !Send for QSelf","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl !Send for AttrStyle","synthetic":true,"types":[]},{"text":"impl !Send for Meta","synthetic":true,"types":[]},{"text":"impl !Send for NestedMeta","synthetic":true,"types":[]},{"text":"impl !Send for Fields","synthetic":true,"types":[]},{"text":"impl !Send for Visibility","synthetic":true,"types":[]},{"text":"impl !Send for GenericMethodArgument","synthetic":true,"types":[]},{"text":"impl !Send for RangeLimits","synthetic":true,"types":[]},{"text":"impl !Send for Expr","synthetic":true,"types":[]},{"text":"impl !Send for Member","synthetic":true,"types":[]},{"text":"impl !Send for GenericParam","synthetic":true,"types":[]},{"text":"impl !Send for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl !Send for TypeParamBound","synthetic":true,"types":[]},{"text":"impl !Send for WherePredicate","synthetic":true,"types":[]},{"text":"impl !Send for FnArg","synthetic":true,"types":[]},{"text":"impl !Send for ForeignItem","synthetic":true,"types":[]},{"text":"impl !Send for ImplItem","synthetic":true,"types":[]},{"text":"impl !Send for Item","synthetic":true,"types":[]},{"text":"impl !Send for TraitItem","synthetic":true,"types":[]},{"text":"impl !Send for UseTree","synthetic":true,"types":[]},{"text":"impl !Send for Lit","synthetic":true,"types":[]},{"text":"impl Send for StrStyle","synthetic":true,"types":[]},{"text":"impl !Send for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl !Send for Data","synthetic":true,"types":[]},{"text":"impl !Send for BinOp","synthetic":true,"types":[]},{"text":"impl !Send for UnOp","synthetic":true,"types":[]},{"text":"impl !Send for Stmt","synthetic":true,"types":[]},{"text":"impl !Send for ReturnType","synthetic":true,"types":[]},{"text":"impl !Send for Type","synthetic":true,"types":[]},{"text":"impl !Send for Pat","synthetic":true,"types":[]},{"text":"impl !Send for GenericArgument","synthetic":true,"types":[]},{"text":"impl !Send for PathArguments","synthetic":true,"types":[]},{"text":"impl !Send for Underscore","synthetic":true,"types":[]},{"text":"impl !Send for Abstract","synthetic":true,"types":[]},{"text":"impl !Send for As","synthetic":true,"types":[]},{"text":"impl !Send for Async","synthetic":true,"types":[]},{"text":"impl !Send for Auto","synthetic":true,"types":[]},{"text":"impl !Send for Await","synthetic":true,"types":[]},{"text":"impl !Send for Become","synthetic":true,"types":[]},{"text":"impl !Send for Box","synthetic":true,"types":[]},{"text":"impl !Send for Break","synthetic":true,"types":[]},{"text":"impl !Send for Const","synthetic":true,"types":[]},{"text":"impl !Send for Continue","synthetic":true,"types":[]},{"text":"impl !Send for Crate","synthetic":true,"types":[]},{"text":"impl !Send for Default","synthetic":true,"types":[]},{"text":"impl !Send for Do","synthetic":true,"types":[]},{"text":"impl !Send for Dyn","synthetic":true,"types":[]},{"text":"impl !Send for Else","synthetic":true,"types":[]},{"text":"impl !Send for Enum","synthetic":true,"types":[]},{"text":"impl !Send for Extern","synthetic":true,"types":[]},{"text":"impl !Send for Final","synthetic":true,"types":[]},{"text":"impl !Send for Fn","synthetic":true,"types":[]},{"text":"impl !Send for For","synthetic":true,"types":[]},{"text":"impl !Send for If","synthetic":true,"types":[]},{"text":"impl !Send for Impl","synthetic":true,"types":[]},{"text":"impl !Send for In","synthetic":true,"types":[]},{"text":"impl !Send for Let","synthetic":true,"types":[]},{"text":"impl !Send for Loop","synthetic":true,"types":[]},{"text":"impl !Send for Macro","synthetic":true,"types":[]},{"text":"impl !Send for Match","synthetic":true,"types":[]},{"text":"impl !Send for Mod","synthetic":true,"types":[]},{"text":"impl !Send for Move","synthetic":true,"types":[]},{"text":"impl !Send for Mut","synthetic":true,"types":[]},{"text":"impl !Send for Override","synthetic":true,"types":[]},{"text":"impl !Send for Priv","synthetic":true,"types":[]},{"text":"impl !Send for Pub","synthetic":true,"types":[]},{"text":"impl !Send for Ref","synthetic":true,"types":[]},{"text":"impl !Send for Return","synthetic":true,"types":[]},{"text":"impl !Send for SelfType","synthetic":true,"types":[]},{"text":"impl !Send for SelfValue","synthetic":true,"types":[]},{"text":"impl !Send for Static","synthetic":true,"types":[]},{"text":"impl !Send for Struct","synthetic":true,"types":[]},{"text":"impl !Send for Super","synthetic":true,"types":[]},{"text":"impl !Send for Trait","synthetic":true,"types":[]},{"text":"impl !Send for Try","synthetic":true,"types":[]},{"text":"impl !Send for Type","synthetic":true,"types":[]},{"text":"impl !Send for Typeof","synthetic":true,"types":[]},{"text":"impl !Send for Union","synthetic":true,"types":[]},{"text":"impl !Send for Unsafe","synthetic":true,"types":[]},{"text":"impl !Send for Unsized","synthetic":true,"types":[]},{"text":"impl !Send for Use","synthetic":true,"types":[]},{"text":"impl !Send for Virtual","synthetic":true,"types":[]},{"text":"impl !Send for Where","synthetic":true,"types":[]},{"text":"impl !Send for While","synthetic":true,"types":[]},{"text":"impl !Send for Yield","synthetic":true,"types":[]},{"text":"impl !Send for Add","synthetic":true,"types":[]},{"text":"impl !Send for AddEq","synthetic":true,"types":[]},{"text":"impl !Send for And","synthetic":true,"types":[]},{"text":"impl !Send for AndAnd","synthetic":true,"types":[]},{"text":"impl !Send for AndEq","synthetic":true,"types":[]},{"text":"impl !Send for At","synthetic":true,"types":[]},{"text":"impl !Send for Bang","synthetic":true,"types":[]},{"text":"impl !Send for Caret","synthetic":true,"types":[]},{"text":"impl !Send for CaretEq","synthetic":true,"types":[]},{"text":"impl !Send for Colon","synthetic":true,"types":[]},{"text":"impl !Send for Colon2","synthetic":true,"types":[]},{"text":"impl !Send for Comma","synthetic":true,"types":[]},{"text":"impl !Send for Div","synthetic":true,"types":[]},{"text":"impl !Send for DivEq","synthetic":true,"types":[]},{"text":"impl !Send for Dollar","synthetic":true,"types":[]},{"text":"impl !Send for Dot","synthetic":true,"types":[]},{"text":"impl !Send for Dot2","synthetic":true,"types":[]},{"text":"impl !Send for Dot3","synthetic":true,"types":[]},{"text":"impl !Send for DotDotEq","synthetic":true,"types":[]},{"text":"impl !Send for Eq","synthetic":true,"types":[]},{"text":"impl !Send for EqEq","synthetic":true,"types":[]},{"text":"impl !Send for Ge","synthetic":true,"types":[]},{"text":"impl !Send for Gt","synthetic":true,"types":[]},{"text":"impl !Send for Le","synthetic":true,"types":[]},{"text":"impl !Send for Lt","synthetic":true,"types":[]},{"text":"impl !Send for MulEq","synthetic":true,"types":[]},{"text":"impl !Send for Ne","synthetic":true,"types":[]},{"text":"impl !Send for Or","synthetic":true,"types":[]},{"text":"impl !Send for OrEq","synthetic":true,"types":[]},{"text":"impl !Send for OrOr","synthetic":true,"types":[]},{"text":"impl !Send for Pound","synthetic":true,"types":[]},{"text":"impl !Send for Question","synthetic":true,"types":[]},{"text":"impl !Send for RArrow","synthetic":true,"types":[]},{"text":"impl !Send for LArrow","synthetic":true,"types":[]},{"text":"impl !Send for Rem","synthetic":true,"types":[]},{"text":"impl !Send for RemEq","synthetic":true,"types":[]},{"text":"impl !Send for FatArrow","synthetic":true,"types":[]},{"text":"impl !Send for Semi","synthetic":true,"types":[]},{"text":"impl !Send for Shl","synthetic":true,"types":[]},{"text":"impl !Send for ShlEq","synthetic":true,"types":[]},{"text":"impl !Send for Shr","synthetic":true,"types":[]},{"text":"impl !Send for ShrEq","synthetic":true,"types":[]},{"text":"impl !Send for Star","synthetic":true,"types":[]},{"text":"impl !Send for Sub","synthetic":true,"types":[]},{"text":"impl !Send for SubEq","synthetic":true,"types":[]},{"text":"impl !Send for Tilde","synthetic":true,"types":[]},{"text":"impl !Send for Brace","synthetic":true,"types":[]},{"text":"impl !Send for Bracket","synthetic":true,"types":[]},{"text":"impl !Send for Paren","synthetic":true,"types":[]},{"text":"impl !Send for Group","synthetic":true,"types":[]},{"text":"impl !Send for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Send for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Send for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Send for PairsMut&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Send for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Send for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; !Send for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Nothing","synthetic":true,"types":[]}];
implementors["takeable_option"] = [{"text":"impl&lt;T&gt; Send for Takeable&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["texture"] = [{"text":"impl Send for TextureSettings","synthetic":true,"types":[]},{"text":"impl Send for Format","synthetic":true,"types":[]},{"text":"impl Send for Filter","synthetic":true,"types":[]},{"text":"impl Send for Wrap","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl Send for Duration","synthetic":true,"types":[]},{"text":"impl Send for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl Send for Timespec","synthetic":true,"types":[]},{"text":"impl Send for PreciseTime","synthetic":true,"types":[]},{"text":"impl Send for SteadyTime","synthetic":true,"types":[]},{"text":"impl Send for Tm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TmFmt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ParseError","synthetic":true,"types":[]}];
implementors["tracing"] = [{"text":"impl Send for Span","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for WithDispatch&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Instrumented&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Entered&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["tracing_core"] = [{"text":"impl Send for Dispatch","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Field","synthetic":true,"types":[]},{"text":"impl Send for Level","synthetic":true,"types":[]},{"text":"impl Send for LevelFilter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Identifier","synthetic":true,"types":[]},{"text":"impl Send for DefaultGuard","synthetic":true,"types":[]},{"text":"impl Send for SetGlobalDefaultError","synthetic":true,"types":[]},{"text":"impl Send for Empty","synthetic":true,"types":[]},{"text":"impl Send for FieldSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ValueSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Iter","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DisplayValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DebugValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl Send for ParseLevelFilterError","synthetic":true,"types":[]},{"text":"impl Send for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Send for Id","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Current","synthetic":true,"types":[]},{"text":"impl Send for Interest","synthetic":true,"types":[]}];
implementors["ttf_parser"] = [{"text":"impl&lt;'a&gt; Send for VariationAxes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for VariationAxis","synthetic":true,"types":[]},{"text":"impl Send for Class","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Names&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ScriptMetrics","synthetic":true,"types":[]},{"text":"impl Send for GlyphId","synthetic":true,"types":[]},{"text":"impl Send for Variation","synthetic":true,"types":[]},{"text":"impl Send for Tag","synthetic":true,"types":[]},{"text":"impl Send for LineMetrics","synthetic":true,"types":[]},{"text":"impl Send for Rect","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RasterGlyphImage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Font&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for GlyphClass","synthetic":true,"types":[]},{"text":"impl Send for PlatformId","synthetic":true,"types":[]},{"text":"impl Send for Weight","synthetic":true,"types":[]},{"text":"impl Send for Width","synthetic":true,"types":[]},{"text":"impl Send for RasterImageFormat","synthetic":true,"types":[]},{"text":"impl Send for TableName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Subtable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Subtables&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for ValueOffset","synthetic":true,"types":[]},{"text":"impl Send for Entry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Machine&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["typed_arena"] = [{"text":"impl&lt;T&gt; Send for Arena&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["viewport"] = [{"text":"impl Send for Viewport","synthetic":true,"types":[]}];
implementors["vk_sys"] = [{"text":"impl !Send for ApplicationInfo","synthetic":true,"types":[]},{"text":"impl !Send for InstanceCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for AllocationCallbacks","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceFeatures","synthetic":true,"types":[]},{"text":"impl Send for FormatProperties","synthetic":true,"types":[]},{"text":"impl Send for Extent3D","synthetic":true,"types":[]},{"text":"impl Send for ImageFormatProperties","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceLimits","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceSparseProperties","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceProperties","synthetic":true,"types":[]},{"text":"impl Send for QueueFamilyProperties","synthetic":true,"types":[]},{"text":"impl Send for MemoryType","synthetic":true,"types":[]},{"text":"impl Send for MemoryHeap","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceMemoryProperties","synthetic":true,"types":[]},{"text":"impl !Send for DeviceQueueCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for DeviceCreateInfo","synthetic":true,"types":[]},{"text":"impl Send for ExtensionProperties","synthetic":true,"types":[]},{"text":"impl Send for LayerProperties","synthetic":true,"types":[]},{"text":"impl !Send for SubmitInfo","synthetic":true,"types":[]},{"text":"impl !Send for MemoryAllocateInfo","synthetic":true,"types":[]},{"text":"impl !Send for MappedMemoryRange","synthetic":true,"types":[]},{"text":"impl Send for MemoryRequirements","synthetic":true,"types":[]},{"text":"impl Send for SparseImageFormatProperties","synthetic":true,"types":[]},{"text":"impl Send for SparseImageMemoryRequirements","synthetic":true,"types":[]},{"text":"impl Send for SparseMemoryBind","synthetic":true,"types":[]},{"text":"impl !Send for SparseBufferMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl !Send for SparseImageOpaqueMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl Send for ImageSubresource","synthetic":true,"types":[]},{"text":"impl Send for Offset3D","synthetic":true,"types":[]},{"text":"impl Send for SparseImageMemoryBind","synthetic":true,"types":[]},{"text":"impl !Send for SparseImageMemoryBindInfo","synthetic":true,"types":[]},{"text":"impl !Send for BindSparseInfo","synthetic":true,"types":[]},{"text":"impl !Send for FenceCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for SemaphoreCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for EventCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for QueryPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for BufferCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for BufferViewCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for ImageCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for BufferDeviceAddressInfo","synthetic":true,"types":[]},{"text":"impl Send for SubresourceLayout","synthetic":true,"types":[]},{"text":"impl Send for ComponentMapping","synthetic":true,"types":[]},{"text":"impl Send for ImageSubresourceRange","synthetic":true,"types":[]},{"text":"impl !Send for ImageViewCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for ShaderModuleCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for PipelineCacheCreateInfo","synthetic":true,"types":[]},{"text":"impl Send for SpecializationMapEntry","synthetic":true,"types":[]},{"text":"impl !Send for SpecializationInfo","synthetic":true,"types":[]},{"text":"impl !Send for PipelineShaderStageCreateInfo","synthetic":true,"types":[]},{"text":"impl Send for VertexInputBindingDescription","synthetic":true,"types":[]},{"text":"impl Send for VertexInputAttributeDescription","synthetic":true,"types":[]},{"text":"impl !Send for PipelineVertexInputStateCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for PipelineInputAssemblyStateCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for PipelineTessellationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl Send for Viewport","synthetic":true,"types":[]},{"text":"impl Send for Offset2D","synthetic":true,"types":[]},{"text":"impl Send for Extent2D","synthetic":true,"types":[]},{"text":"impl Send for Rect2D","synthetic":true,"types":[]},{"text":"impl !Send for PipelineViewportStateCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for PipelineRasterizationStateCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for PipelineMultisampleStateCreateInfo","synthetic":true,"types":[]},{"text":"impl Send for StencilOpState","synthetic":true,"types":[]},{"text":"impl !Send for PipelineDepthStencilStateCreateInfo","synthetic":true,"types":[]},{"text":"impl Send for PipelineColorBlendAttachmentState","synthetic":true,"types":[]},{"text":"impl !Send for PipelineColorBlendStateCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for PipelineDynamicStateCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for GraphicsPipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for ComputePipelineCreateInfo","synthetic":true,"types":[]},{"text":"impl Send for PushConstantRange","synthetic":true,"types":[]},{"text":"impl !Send for PipelineLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for SamplerCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetLayoutBinding","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetLayoutCreateInfo","synthetic":true,"types":[]},{"text":"impl Send for DescriptorPoolSize","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorSetAllocateInfo","synthetic":true,"types":[]},{"text":"impl Send for DescriptorImageInfo","synthetic":true,"types":[]},{"text":"impl Send for DescriptorBufferInfo","synthetic":true,"types":[]},{"text":"impl !Send for WriteDescriptorSet","synthetic":true,"types":[]},{"text":"impl !Send for CopyDescriptorSet","synthetic":true,"types":[]},{"text":"impl !Send for FramebufferCreateInfo","synthetic":true,"types":[]},{"text":"impl Send for AttachmentDescription","synthetic":true,"types":[]},{"text":"impl Send for AttachmentReference","synthetic":true,"types":[]},{"text":"impl !Send for SubpassDescription","synthetic":true,"types":[]},{"text":"impl Send for SubpassDependency","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for CommandPoolCreateInfo","synthetic":true,"types":[]},{"text":"impl !Send for CommandBufferAllocateInfo","synthetic":true,"types":[]},{"text":"impl !Send for CommandBufferInheritanceInfo","synthetic":true,"types":[]},{"text":"impl !Send for CommandBufferBeginInfo","synthetic":true,"types":[]},{"text":"impl Send for BufferCopy","synthetic":true,"types":[]},{"text":"impl Send for ImageSubresourceLayers","synthetic":true,"types":[]},{"text":"impl Send for ImageCopy","synthetic":true,"types":[]},{"text":"impl Send for ImageBlit","synthetic":true,"types":[]},{"text":"impl Send for BufferImageCopy","synthetic":true,"types":[]},{"text":"impl Send for ClearDepthStencilValue","synthetic":true,"types":[]},{"text":"impl Send for ClearAttachment","synthetic":true,"types":[]},{"text":"impl Send for ClearRect","synthetic":true,"types":[]},{"text":"impl Send for ImageResolve","synthetic":true,"types":[]},{"text":"impl !Send for MemoryBarrier","synthetic":true,"types":[]},{"text":"impl !Send for BufferMemoryBarrier","synthetic":true,"types":[]},{"text":"impl !Send for ImageMemoryBarrier","synthetic":true,"types":[]},{"text":"impl !Send for RenderPassBeginInfo","synthetic":true,"types":[]},{"text":"impl Send for DispatchIndirectCommand","synthetic":true,"types":[]},{"text":"impl Send for DrawIndexedIndirectCommand","synthetic":true,"types":[]},{"text":"impl Send for DrawIndirectCommand","synthetic":true,"types":[]},{"text":"impl Send for SurfaceCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl Send for SurfaceFormatKHR","synthetic":true,"types":[]},{"text":"impl !Send for SwapchainCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl !Send for PresentInfoKHR","synthetic":true,"types":[]},{"text":"impl !Send for DisplayPropertiesKHR","synthetic":true,"types":[]},{"text":"impl Send for DisplayModeParametersKHR","synthetic":true,"types":[]},{"text":"impl Send for DisplayModePropertiesKHR","synthetic":true,"types":[]},{"text":"impl !Send for DisplayModeCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl Send for DisplayPlaneCapabilitiesKHR","synthetic":true,"types":[]},{"text":"impl Send for DisplayPlanePropertiesKHR","synthetic":true,"types":[]},{"text":"impl !Send for DisplaySurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl !Send for DisplayPresentInfoKHR","synthetic":true,"types":[]},{"text":"impl !Send for XlibSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl !Send for XcbSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl !Send for WaylandSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl !Send for AndroidSurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl !Send for Win32SurfaceCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl !Send for IOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl !Send for MacOSSurfaceCreateInfoMVK","synthetic":true,"types":[]},{"text":"impl Send for MVKDeviceConfiguration","synthetic":true,"types":[]},{"text":"impl Send for MVKPhysicalDeviceMetalFeatures","synthetic":true,"types":[]},{"text":"impl Send for MVKSwapchainPerformance","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceFeatures2KHR","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceProperties2KHR","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSubgroupProperties","synthetic":true,"types":[]},{"text":"impl !Send for FormatProperties2KHR","synthetic":true,"types":[]},{"text":"impl !Send for ImageFormatProperties2KHR","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceImageFormatInfo2KHR","synthetic":true,"types":[]},{"text":"impl !Send for QueueFamilyProperties2KHR","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceMemoryProperties2KHR","synthetic":true,"types":[]},{"text":"impl !Send for SparseImageFormatProperties2KHR","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceSparseImageFormatInfo2KHR","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDeviceBufferAddressFeaturesEXT","synthetic":true,"types":[]},{"text":"impl !Send for ViSurfaceCreateInfoNN","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevicePushDescriptorPropertiesKHR","synthetic":true,"types":[]},{"text":"impl Send for DescriptorUpdateTemplateEntryKHR","synthetic":true,"types":[]},{"text":"impl !Send for DescriptorUpdateTemplateCreateInfoKHR","synthetic":true,"types":[]},{"text":"impl !Send for MemoryDedicatedRequirementsKHR","synthetic":true,"types":[]},{"text":"impl !Send for MemoryDedicatedAllocateInfoKHR","synthetic":true,"types":[]},{"text":"impl !Send for BufferMemoryRequirementsInfo2KHR","synthetic":true,"types":[]},{"text":"impl !Send for ImageMemoryRequirementsInfo2KHR","synthetic":true,"types":[]},{"text":"impl !Send for MemoryRequirements2KHR","synthetic":true,"types":[]},{"text":"impl Send for RectLayerKHR","synthetic":true,"types":[]},{"text":"impl !Send for PresentRegionKHR","synthetic":true,"types":[]},{"text":"impl !Send for PresentRegionsKHR","synthetic":true,"types":[]},{"text":"impl !Send for DebugUtilsMessengerCreateInfoEXT","synthetic":true,"types":[]},{"text":"impl !Send for DebugUtilsMessengerCallbackDataEXT","synthetic":true,"types":[]},{"text":"impl !Send for DebugUtilsLabelEXT","synthetic":true,"types":[]},{"text":"impl !Send for PhysicalDevice16BitStorageFeaturesKHR","synthetic":true,"types":[]},{"text":"impl !Send for DebugUtilsObjectNameInfoEXT","synthetic":true,"types":[]},{"text":"impl !Send for SurfaceFullScreenExclusiveInfoEXT","synthetic":true,"types":[]},{"text":"impl Send for ClearColorValue","synthetic":true,"types":[]},{"text":"impl Send for ClearValue","synthetic":true,"types":[]},{"text":"impl Send for Static","synthetic":false,"types":[]},{"text":"impl Send for EntryPoints","synthetic":false,"types":[]},{"text":"impl Send for InstancePointers","synthetic":false,"types":[]},{"text":"impl Send for DevicePointers","synthetic":false,"types":[]}];
implementors["void"] = [{"text":"impl Send for Void","synthetic":true,"types":[]}];
implementors["vulkano"] = [{"text":"impl Send for OomError","synthetic":true,"types":[]},{"text":"impl Send for Features","synthetic":true,"types":[]},{"text":"impl Send for Version","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, B&gt; Send for BufferSlice&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferInner&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BufferUsage","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, A&gt; Send for CpuAccessibleBuffer&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for ReadLock&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for WriteLock&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Send for ReadLockError","synthetic":true,"types":[]},{"text":"impl Send for WriteLockError","synthetic":true,"types":[]},{"text":"impl&lt;T, A&gt; Send for CpuBufferPool&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as MemoryPool&gt;::Alloc: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, A&gt; Send for CpuBufferPoolChunk&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as MemoryPool&gt;::Alloc: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, A&gt; Send for CpuBufferPoolSubbuffer&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as MemoryPool&gt;::Alloc: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, A&gt; Send for DeviceLocalBuffer&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, A&gt; Send for ImmutableBuffer&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized, A&gt; Send for ImmutableBufferInitialization&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for UnsafeBuffer","synthetic":true,"types":[]},{"text":"impl Send for SparseLevel","synthetic":true,"types":[]},{"text":"impl Send for BufferCreationError","synthetic":true,"types":[]},{"text":"impl&lt;F, B&gt; Send for BufferView&lt;F, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for BufferViewCreationError","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Send for AutoCommandBuffer&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&nbsp;=&nbsp;StandardCommandPoolBuilder&gt; !Send for AutoCommandBufferBuilder&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl Send for StateCacher","synthetic":true,"types":[]},{"text":"impl&lt;F, Cb&gt; Send for CommandBufferExecFuture&lt;F, Cb&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Cb: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DrawIndirectCommand","synthetic":true,"types":[]},{"text":"impl Send for DrawIndexedIndirectCommand","synthetic":true,"types":[]},{"text":"impl Send for DispatchIndirectCommand","synthetic":true,"types":[]},{"text":"impl Send for DynamicState","synthetic":true,"types":[]},{"text":"impl Send for AutoCommandBufferBuilderContextError","synthetic":true,"types":[]},{"text":"impl Send for BeginRenderPassError","synthetic":true,"types":[]},{"text":"impl Send for BlitImageError","synthetic":true,"types":[]},{"text":"impl Send for BuildError","synthetic":true,"types":[]},{"text":"impl Send for ClearColorImageError","synthetic":true,"types":[]},{"text":"impl Send for CopyBufferError","synthetic":true,"types":[]},{"text":"impl Send for CopyBufferImageError","synthetic":true,"types":[]},{"text":"impl Send for CopyImageError","synthetic":true,"types":[]},{"text":"impl Send for DispatchError","synthetic":true,"types":[]},{"text":"impl Send for DrawError","synthetic":true,"types":[]},{"text":"impl Send for DrawIndexedError","synthetic":true,"types":[]},{"text":"impl Send for DrawIndexedIndirectError","synthetic":true,"types":[]},{"text":"impl Send for DrawIndirectError","synthetic":true,"types":[]},{"text":"impl Send for ExecuteCommandsError","synthetic":true,"types":[]},{"text":"impl Send for FillBufferError","synthetic":true,"types":[]},{"text":"impl Send for UpdateBufferError","synthetic":true,"types":[]},{"text":"impl Send for StateCacherOutcome","synthetic":true,"types":[]},{"text":"impl Send for CommandBufferExecError","synthetic":true,"types":[]},{"text":"impl Send for UnsafeCommandPoolAlloc","synthetic":true,"types":[]},{"text":"impl Send for UnsafeCommandPoolAllocIter","synthetic":true,"types":[]},{"text":"impl Send for CommandPoolTrimError","synthetic":true,"types":[]},{"text":"impl !Send for StandardCommandPoolBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SubmitBindSparseBatchBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SubmitBindSparseBufferBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SubmitBindSparseBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SubmitBindSparseImageBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SubmitBindSparseImageOpaqueBindBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubmitPresentBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SubmitCommandBufferBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SubmitSemaphoresWaitBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SubmitBindSparseError","synthetic":true,"types":[]},{"text":"impl Send for SubmitPresentError","synthetic":true,"types":[]},{"text":"impl Send for SubmitCommandBufferError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SubmitAnyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Send for SyncCommandBuffer&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; !Send for SyncCommandBufferBuilder&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'b, P&gt; !Send for SyncCommandBufferBuilderBindDescriptorSets&lt;'b, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; !Send for SyncCommandBufferBuilderBindVertexBuffer&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; !Send for SyncCommandBufferBuilderExecuteCommands&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl Send for SyncCommandBufferBuilderError","synthetic":true,"types":[]},{"text":"impl&lt;R, F&gt; Send for KindSecondaryRenderPass&lt;R, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Send for UnsafeCommandBufferBuilder&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for UnsafeCommandBufferBuilderBindVertexBuffer","synthetic":true,"types":[]},{"text":"impl Send for UnsafeCommandBufferBuilderExecuteCommands","synthetic":true,"types":[]},{"text":"impl Send for UnsafeCommandBufferBuilderImageAspect","synthetic":true,"types":[]},{"text":"impl Send for UnsafeCommandBufferBuilderColorImageClear","synthetic":true,"types":[]},{"text":"impl Send for UnsafeCommandBufferBuilderBufferImageCopy","synthetic":true,"types":[]},{"text":"impl Send for UnsafeCommandBufferBuilderImageCopy","synthetic":true,"types":[]},{"text":"impl Send for UnsafeCommandBufferBuilderImageBlit","synthetic":true,"types":[]},{"text":"impl !Send for UnsafeCommandBufferBuilderPipelineBarrier","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Send for UnsafeCommandBuffer&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, F&gt; Send for Kind&lt;R, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for KindOcclusionQuery","synthetic":true,"types":[]},{"text":"impl Send for Flags","synthetic":true,"types":[]},{"text":"impl Send for CheckCopyBuffer","synthetic":true,"types":[]},{"text":"impl Send for CheckIndexBuffer","synthetic":true,"types":[]},{"text":"impl Send for CheckVertexBuffer","synthetic":true,"types":[]},{"text":"impl Send for CheckBlitImageError","synthetic":true,"types":[]},{"text":"impl Send for CheckClearColorImageError","synthetic":true,"types":[]},{"text":"impl Send for CheckCopyBufferError","synthetic":true,"types":[]},{"text":"impl Send for CheckCopyImageError","synthetic":true,"types":[]},{"text":"impl Send for CheckCopyBufferImageError","synthetic":true,"types":[]},{"text":"impl Send for CheckCopyBufferImageTy","synthetic":true,"types":[]},{"text":"impl Send for CheckDescriptorSetsValidityError","synthetic":true,"types":[]},{"text":"impl Send for CheckDispatchError","synthetic":true,"types":[]},{"text":"impl Send for CheckDynamicStateValidityError","synthetic":true,"types":[]},{"text":"impl Send for CheckFillBufferError","synthetic":true,"types":[]},{"text":"impl Send for CheckIndexBufferError","synthetic":true,"types":[]},{"text":"impl Send for CheckPushConstantsValidityError","synthetic":true,"types":[]},{"text":"impl Send for CheckUpdateBufferError","synthetic":true,"types":[]},{"text":"impl Send for CheckVertexBufferError","synthetic":true,"types":[]},{"text":"impl Send for DescriptorDesc","synthetic":true,"types":[]},{"text":"impl Send for DescriptorImageDesc","synthetic":true,"types":[]},{"text":"impl Send for DescriptorBufferDesc","synthetic":true,"types":[]},{"text":"impl Send for ShaderStages","synthetic":true,"types":[]},{"text":"impl Send for DescriptorDescTy","synthetic":true,"types":[]},{"text":"impl Send for DescriptorImageDescArray","synthetic":true,"types":[]},{"text":"impl Send for DescriptorImageDescDimensions","synthetic":true,"types":[]},{"text":"impl Send for DescriptorType","synthetic":true,"types":[]},{"text":"impl Send for DescriptorDescSupersetError","synthetic":true,"types":[]},{"text":"impl Send for ShaderStagesSupersetError","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; Send for FixedSizeDescriptorSet&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; Send for FixedSizeDescriptorSetBuilder&lt;'a, L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, L, R&gt; Send for FixedSizeDescriptorSetBuilderArray&lt;'a, L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for FixedSizeDescriptorSetsPool&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R, P&gt; Send for PersistentDescriptorSet&lt;L, R, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for PersistentDescriptorSetBuf&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Send for PersistentDescriptorSetBufView&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; Send for PersistentDescriptorSetBuilder&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; Send for PersistentDescriptorSetBuilderArray&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for PersistentDescriptorSetImg&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for PersistentDescriptorSetSampler","synthetic":true,"types":[]},{"text":"impl Send for StdDescriptorPool","synthetic":true,"types":[]},{"text":"impl Send for StdDescriptorPoolAlloc","synthetic":true,"types":[]},{"text":"impl Send for DescriptorWrite","synthetic":true,"types":[]},{"text":"impl Send for DescriptorsCount","synthetic":true,"types":[]},{"text":"impl Send for UnsafeDescriptorPool","synthetic":true,"types":[]},{"text":"impl Send for UnsafeDescriptorPoolAllocIter","synthetic":true,"types":[]},{"text":"impl Send for UnsafeDescriptorSet","synthetic":true,"types":[]},{"text":"impl Send for UnsafeDescriptorSetLayout","synthetic":true,"types":[]},{"text":"impl Send for PersistentDescriptorSetBuildError","synthetic":true,"types":[]},{"text":"impl Send for PersistentDescriptorSetError","synthetic":true,"types":[]},{"text":"impl Send for DescriptorPoolAllocError","synthetic":true,"types":[]},{"text":"impl Send for EmptyPipelineDesc","synthetic":true,"types":[]},{"text":"impl Send for RuntimePipelineDesc","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for PipelineLayout&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PipelineLayoutSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PipelineLayoutDescPcRange","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for PipelineLayoutDescUnion&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for PipelineLayoutLimitsError","synthetic":true,"types":[]},{"text":"impl Send for RuntimePipelineDescError","synthetic":true,"types":[]},{"text":"impl Send for PipelineLayoutCreationError","synthetic":true,"types":[]},{"text":"impl Send for PipelineLayoutNotSupersetError","synthetic":true,"types":[]},{"text":"impl Send for DeviceExtensions","synthetic":true,"types":[]},{"text":"impl Send for RawDeviceExtensions","synthetic":true,"types":[]},{"text":"impl Send for QueuesIter","synthetic":true,"types":[]},{"text":"impl Send for Queue","synthetic":true,"types":[]},{"text":"impl Send for DeviceCreationError","synthetic":true,"types":[]},{"text":"impl Send for IncompatiblePixelsType","synthetic":true,"types":[]},{"text":"impl Send for R4G4UnormPack8","synthetic":true,"types":[]},{"text":"impl Send for R4G4B4A4UnormPack16","synthetic":true,"types":[]},{"text":"impl Send for B4G4R4A4UnormPack16","synthetic":true,"types":[]},{"text":"impl Send for R5G6B5UnormPack16","synthetic":true,"types":[]},{"text":"impl Send for B5G6R5UnormPack16","synthetic":true,"types":[]},{"text":"impl Send for R5G5B5A1UnormPack16","synthetic":true,"types":[]},{"text":"impl Send for B5G5R5A1UnormPack16","synthetic":true,"types":[]},{"text":"impl Send for A1R5G5B5UnormPack16","synthetic":true,"types":[]},{"text":"impl Send for R8Unorm","synthetic":true,"types":[]},{"text":"impl Send for R8Snorm","synthetic":true,"types":[]},{"text":"impl Send for R8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for R8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for R8Uint","synthetic":true,"types":[]},{"text":"impl Send for R8Sint","synthetic":true,"types":[]},{"text":"impl Send for R8Srgb","synthetic":true,"types":[]},{"text":"impl Send for R8G8Unorm","synthetic":true,"types":[]},{"text":"impl Send for R8G8Snorm","synthetic":true,"types":[]},{"text":"impl Send for R8G8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for R8G8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for R8G8Uint","synthetic":true,"types":[]},{"text":"impl Send for R8G8Sint","synthetic":true,"types":[]},{"text":"impl Send for R8G8Srgb","synthetic":true,"types":[]},{"text":"impl Send for R8G8B8Unorm","synthetic":true,"types":[]},{"text":"impl Send for R8G8B8Snorm","synthetic":true,"types":[]},{"text":"impl Send for R8G8B8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for R8G8B8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for R8G8B8Uint","synthetic":true,"types":[]},{"text":"impl Send for R8G8B8Sint","synthetic":true,"types":[]},{"text":"impl Send for R8G8B8Srgb","synthetic":true,"types":[]},{"text":"impl Send for B8G8R8Unorm","synthetic":true,"types":[]},{"text":"impl Send for B8G8R8Snorm","synthetic":true,"types":[]},{"text":"impl Send for B8G8R8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for B8G8R8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for B8G8R8Uint","synthetic":true,"types":[]},{"text":"impl Send for B8G8R8Sint","synthetic":true,"types":[]},{"text":"impl Send for B8G8R8Srgb","synthetic":true,"types":[]},{"text":"impl Send for R8G8B8A8Unorm","synthetic":true,"types":[]},{"text":"impl Send for R8G8B8A8Snorm","synthetic":true,"types":[]},{"text":"impl Send for R8G8B8A8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for R8G8B8A8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for R8G8B8A8Uint","synthetic":true,"types":[]},{"text":"impl Send for R8G8B8A8Sint","synthetic":true,"types":[]},{"text":"impl Send for R8G8B8A8Srgb","synthetic":true,"types":[]},{"text":"impl Send for B8G8R8A8Unorm","synthetic":true,"types":[]},{"text":"impl Send for B8G8R8A8Snorm","synthetic":true,"types":[]},{"text":"impl Send for B8G8R8A8Uscaled","synthetic":true,"types":[]},{"text":"impl Send for B8G8R8A8Sscaled","synthetic":true,"types":[]},{"text":"impl Send for B8G8R8A8Uint","synthetic":true,"types":[]},{"text":"impl Send for B8G8R8A8Sint","synthetic":true,"types":[]},{"text":"impl Send for B8G8R8A8Srgb","synthetic":true,"types":[]},{"text":"impl Send for A8B8G8R8UnormPack32","synthetic":true,"types":[]},{"text":"impl Send for A8B8G8R8SnormPack32","synthetic":true,"types":[]},{"text":"impl Send for A8B8G8R8UscaledPack32","synthetic":true,"types":[]},{"text":"impl Send for A8B8G8R8SscaledPack32","synthetic":true,"types":[]},{"text":"impl Send for A8B8G8R8UintPack32","synthetic":true,"types":[]},{"text":"impl Send for A8B8G8R8SintPack32","synthetic":true,"types":[]},{"text":"impl Send for A8B8G8R8SrgbPack32","synthetic":true,"types":[]},{"text":"impl Send for A2R10G10B10UnormPack32","synthetic":true,"types":[]},{"text":"impl Send for A2R10G10B10SnormPack32","synthetic":true,"types":[]},{"text":"impl Send for A2R10G10B10UscaledPack32","synthetic":true,"types":[]},{"text":"impl Send for A2R10G10B10SscaledPack32","synthetic":true,"types":[]},{"text":"impl Send for A2R10G10B10UintPack32","synthetic":true,"types":[]},{"text":"impl Send for A2R10G10B10SintPack32","synthetic":true,"types":[]},{"text":"impl Send for A2B10G10R10UnormPack32","synthetic":true,"types":[]},{"text":"impl Send for A2B10G10R10SnormPack32","synthetic":true,"types":[]},{"text":"impl Send for A2B10G10R10UscaledPack32","synthetic":true,"types":[]},{"text":"impl Send for A2B10G10R10SscaledPack32","synthetic":true,"types":[]},{"text":"impl Send for A2B10G10R10UintPack32","synthetic":true,"types":[]},{"text":"impl Send for A2B10G10R10SintPack32","synthetic":true,"types":[]},{"text":"impl Send for R16Unorm","synthetic":true,"types":[]},{"text":"impl Send for R16Snorm","synthetic":true,"types":[]},{"text":"impl Send for R16Uscaled","synthetic":true,"types":[]},{"text":"impl Send for R16Sscaled","synthetic":true,"types":[]},{"text":"impl Send for R16Uint","synthetic":true,"types":[]},{"text":"impl Send for R16Sint","synthetic":true,"types":[]},{"text":"impl Send for R16Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R16G16Unorm","synthetic":true,"types":[]},{"text":"impl Send for R16G16Snorm","synthetic":true,"types":[]},{"text":"impl Send for R16G16Uscaled","synthetic":true,"types":[]},{"text":"impl Send for R16G16Sscaled","synthetic":true,"types":[]},{"text":"impl Send for R16G16Uint","synthetic":true,"types":[]},{"text":"impl Send for R16G16Sint","synthetic":true,"types":[]},{"text":"impl Send for R16G16Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R16G16B16Unorm","synthetic":true,"types":[]},{"text":"impl Send for R16G16B16Snorm","synthetic":true,"types":[]},{"text":"impl Send for R16G16B16Uscaled","synthetic":true,"types":[]},{"text":"impl Send for R16G16B16Sscaled","synthetic":true,"types":[]},{"text":"impl Send for R16G16B16Uint","synthetic":true,"types":[]},{"text":"impl Send for R16G16B16Sint","synthetic":true,"types":[]},{"text":"impl Send for R16G16B16Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R16G16B16A16Unorm","synthetic":true,"types":[]},{"text":"impl Send for R16G16B16A16Snorm","synthetic":true,"types":[]},{"text":"impl Send for R16G16B16A16Uscaled","synthetic":true,"types":[]},{"text":"impl Send for R16G16B16A16Sscaled","synthetic":true,"types":[]},{"text":"impl Send for R16G16B16A16Uint","synthetic":true,"types":[]},{"text":"impl Send for R16G16B16A16Sint","synthetic":true,"types":[]},{"text":"impl Send for R16G16B16A16Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R32Uint","synthetic":true,"types":[]},{"text":"impl Send for R32Sint","synthetic":true,"types":[]},{"text":"impl Send for R32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R32G32Uint","synthetic":true,"types":[]},{"text":"impl Send for R32G32Sint","synthetic":true,"types":[]},{"text":"impl Send for R32G32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R32G32B32Uint","synthetic":true,"types":[]},{"text":"impl Send for R32G32B32Sint","synthetic":true,"types":[]},{"text":"impl Send for R32G32B32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R32G32B32A32Uint","synthetic":true,"types":[]},{"text":"impl Send for R32G32B32A32Sint","synthetic":true,"types":[]},{"text":"impl Send for R32G32B32A32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R64Uint","synthetic":true,"types":[]},{"text":"impl Send for R64Sint","synthetic":true,"types":[]},{"text":"impl Send for R64Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R64G64Uint","synthetic":true,"types":[]},{"text":"impl Send for R64G64Sint","synthetic":true,"types":[]},{"text":"impl Send for R64G64Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R64G64B64Uint","synthetic":true,"types":[]},{"text":"impl Send for R64G64B64Sint","synthetic":true,"types":[]},{"text":"impl Send for R64G64B64Sfloat","synthetic":true,"types":[]},{"text":"impl Send for R64G64B64A64Uint","synthetic":true,"types":[]},{"text":"impl Send for R64G64B64A64Sint","synthetic":true,"types":[]},{"text":"impl Send for R64G64B64A64Sfloat","synthetic":true,"types":[]},{"text":"impl Send for B10G11R11UfloatPack32","synthetic":true,"types":[]},{"text":"impl Send for E5B9G9R9UfloatPack32","synthetic":true,"types":[]},{"text":"impl Send for D16Unorm","synthetic":true,"types":[]},{"text":"impl Send for X8_D24UnormPack32","synthetic":true,"types":[]},{"text":"impl Send for D32Sfloat","synthetic":true,"types":[]},{"text":"impl Send for S8Uint","synthetic":true,"types":[]},{"text":"impl Send for D16Unorm_S8Uint","synthetic":true,"types":[]},{"text":"impl Send for D24Unorm_S8Uint","synthetic":true,"types":[]},{"text":"impl Send for D32Sfloat_S8Uint","synthetic":true,"types":[]},{"text":"impl Send for BC1_RGBUnormBlock","synthetic":true,"types":[]},{"text":"impl Send for BC1_RGBSrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for BC1_RGBAUnormBlock","synthetic":true,"types":[]},{"text":"impl Send for BC1_RGBASrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for BC2UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for BC2SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for BC3UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for BC3SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for BC4UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for BC4SnormBlock","synthetic":true,"types":[]},{"text":"impl Send for BC5UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for BC5SnormBlock","synthetic":true,"types":[]},{"text":"impl Send for BC6HUfloatBlock","synthetic":true,"types":[]},{"text":"impl Send for BC6HSfloatBlock","synthetic":true,"types":[]},{"text":"impl Send for BC7UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for BC7SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ETC2_R8G8B8UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ETC2_R8G8B8SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ETC2_R8G8B8A1UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ETC2_R8G8B8A1SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ETC2_R8G8B8A8UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ETC2_R8G8B8A8SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for EAC_R11UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for EAC_R11SnormBlock","synthetic":true,"types":[]},{"text":"impl Send for EAC_R11G11UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for EAC_R11G11SnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_4x4UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_4x4SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_5x4UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_5x4SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_5x5UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_5x5SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_6x5UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_6x5SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_6x6UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_6x6SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_8x5UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_8x5SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_8x6UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_8x6SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_8x8UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_8x8SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_10x5UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_10x5SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_10x6UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_10x6SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_10x8UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_10x8SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_10x10UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_10x10SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_12x10UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_12x10SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_12x12UnormBlock","synthetic":true,"types":[]},{"text":"impl Send for ASTC_12x12SrgbBlock","synthetic":true,"types":[]},{"text":"impl Send for Format","synthetic":true,"types":[]},{"text":"impl Send for FormatTy","synthetic":true,"types":[]},{"text":"impl Send for ClearValue","synthetic":true,"types":[]},{"text":"impl Send for AttachmentDescription","synthetic":true,"types":[]},{"text":"impl Send for PassDependencyDescription","synthetic":true,"types":[]},{"text":"impl Send for PassDescription","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for RenderPassDescAttachments&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for RenderPassDescDependencies&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Send for RenderPassDescSubpasses&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for EmptySinglePassRenderPassDesc","synthetic":true,"types":[]},{"text":"impl&lt;Rp, A&gt; Send for Framebuffer&lt;Rp, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rp: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Rp, A&gt; Send for FramebufferBuilder&lt;Rp, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rp: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for FramebufferSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Send for RenderPass&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderPassSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for Subpass&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for IncompatibleRenderPassAttachmentError","synthetic":true,"types":[]},{"text":"impl Send for LoadOp","synthetic":true,"types":[]},{"text":"impl Send for StoreOp","synthetic":true,"types":[]},{"text":"impl Send for FramebufferCreationError","synthetic":true,"types":[]},{"text":"impl Send for RenderPassCreationError","synthetic":true,"types":[]},{"text":"impl Send for SubpassContents","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; Send for StorageImage&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as MemoryPool&gt;::Alloc: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ImageUsage","synthetic":true,"types":[]},{"text":"impl Send for Swizzle","synthetic":true,"types":[]},{"text":"impl Send for ImageLayout","synthetic":true,"types":[]},{"text":"impl Send for MipmapsCount","synthetic":true,"types":[]},{"text":"impl Send for ComponentSwizzle","synthetic":true,"types":[]},{"text":"impl Send for Dimensions","synthetic":true,"types":[]},{"text":"impl Send for ViewType","synthetic":true,"types":[]},{"text":"impl Send for ImageDimensions","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; Send for AttachmentImage&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; Send for ImmutableImage&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; Send for ImmutableImageInitialization&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for SwapchainImage&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for UnsafeImage","synthetic":true,"types":[]},{"text":"impl Send for LinearLayout","synthetic":true,"types":[]},{"text":"impl Send for UnsafeImageView","synthetic":true,"types":[]},{"text":"impl Send for ImageCreationError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImageInner&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for ImageAccessFromUndefinedLayout&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for InstanceExtensions","synthetic":true,"types":[]},{"text":"impl Send for RawInstanceExtensions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ApplicationInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Instance","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MemoryHeap&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MemoryHeapsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MemoryType&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MemoryTypesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PhysicalDevice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PhysicalDevicesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for QueueFamiliesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for QueueFamily&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for LayerProperties","synthetic":true,"types":[]},{"text":"impl Send for LayersIterator","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Limits&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for InstanceCreationError","synthetic":true,"types":[]},{"text":"impl Send for PhysicalDeviceType","synthetic":true,"types":[]},{"text":"impl Send for LayersListError","synthetic":true,"types":[]},{"text":"impl !Send for DebugCallback","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Message&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for MessageSeverity","synthetic":true,"types":[]},{"text":"impl Send for MessageType","synthetic":true,"types":[]},{"text":"impl Send for DebugCallbackCreationError","synthetic":true,"types":[]},{"text":"impl Send for DynamicLibraryLoader","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for FunctionPointers&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for LoadingError","synthetic":true,"types":[]},{"text":"impl Send for DeviceMemory","synthetic":true,"types":[]},{"text":"impl Send for MemoryRequirements","synthetic":true,"types":[]},{"text":"impl Send for DeviceMemoryAllocError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for DedicatedAlloc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for StdHostVisibleMemoryTypePool","synthetic":true,"types":[]},{"text":"impl Send for StdHostVisibleMemoryTypePoolAlloc","synthetic":true,"types":[]},{"text":"impl Send for StdNonHostVisibleMemoryTypePool","synthetic":true,"types":[]},{"text":"impl Send for StdNonHostVisibleMemoryTypePoolAlloc","synthetic":true,"types":[]},{"text":"impl Send for StdMemoryPool","synthetic":true,"types":[]},{"text":"impl Send for StdMemoryPoolAlloc","synthetic":true,"types":[]},{"text":"impl Send for AllocFromRequirementsFilter","synthetic":true,"types":[]},{"text":"impl Send for MappingRequirement","synthetic":true,"types":[]},{"text":"impl Send for AllocLayout","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for PotentialDedicatedAllocation&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Pl&gt; Send for ComputePipeline&lt;Pl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pl: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ComputePipelineSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;VertexDefinition, Layout, RenderP&gt; Send for GraphicsPipeline&lt;VertexDefinition, Layout, RenderP&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Layout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;RenderP: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;VertexDefinition: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Vdef, Vs, Vss, Tcs, Tcss, Tes, Tess, Gs, Gss, Fs, Fss, Rp&gt; !Send for GraphicsPipelineBuilder&lt;Vdef, Vs, Vss, Tcs, Tcss, Tes, Tess, Gs, Gss, Fs, Fss, Rp&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for GraphicsPipelineSys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ComputePipelineCreationError","synthetic":true,"types":[]},{"text":"impl Send for GraphicsPipelineCreationError","synthetic":true,"types":[]},{"text":"impl Send for Blend","synthetic":true,"types":[]},{"text":"impl Send for AttachmentBlend","synthetic":true,"types":[]},{"text":"impl Send for AttachmentsBlend","synthetic":true,"types":[]},{"text":"impl Send for LogicOp","synthetic":true,"types":[]},{"text":"impl Send for BlendOp","synthetic":true,"types":[]},{"text":"impl Send for BlendFactor","synthetic":true,"types":[]},{"text":"impl Send for PipelineCache","synthetic":true,"types":[]},{"text":"impl Send for DepthStencil","synthetic":true,"types":[]},{"text":"impl Send for Stencil","synthetic":true,"types":[]},{"text":"impl Send for DynamicStencilValue","synthetic":true,"types":[]},{"text":"impl Send for StencilOp","synthetic":true,"types":[]},{"text":"impl Send for StencilFaceFlags","synthetic":true,"types":[]},{"text":"impl Send for DepthBounds","synthetic":true,"types":[]},{"text":"impl Send for Compare","synthetic":true,"types":[]},{"text":"impl Send for InputAssembly","synthetic":true,"types":[]},{"text":"impl Send for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl Send for IndexType","synthetic":true,"types":[]},{"text":"impl Send for Multisample","synthetic":true,"types":[]},{"text":"impl Send for Rasterization","synthetic":true,"types":[]},{"text":"impl Send for DepthBias","synthetic":true,"types":[]},{"text":"impl Send for DepthBiasControl","synthetic":true,"types":[]},{"text":"impl Send for CullMode","synthetic":true,"types":[]},{"text":"impl Send for FrontFace","synthetic":true,"types":[]},{"text":"impl Send for PolygonMode","synthetic":true,"types":[]},{"text":"impl Send for ShaderModule","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, I, O, L&gt; Send for GraphicsEntryPoint&lt;'a, S, I, O, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S, L&gt; Send for ComputeEntryPoint&lt;'a, S, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ShaderInterfaceDefEntry","synthetic":true,"types":[]},{"text":"impl Send for EmptyShaderInterfaceDef","synthetic":true,"types":[]},{"text":"impl Send for SpecializationMapEntry","synthetic":true,"types":[]},{"text":"impl Send for GraphicsShaderType","synthetic":true,"types":[]},{"text":"impl Send for GeometryShaderExecutionMode","synthetic":true,"types":[]},{"text":"impl Send for EmptyEntryPointDummy","synthetic":true,"types":[]},{"text":"impl Send for ShaderInterfaceMismatchError","synthetic":true,"types":[]},{"text":"impl Send for BufferlessDefinition","synthetic":true,"types":[]},{"text":"impl Send for BufferlessVertices","synthetic":true,"types":[]},{"text":"impl Send for AttributeInfo","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SingleInstanceBufferDefinition&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Send for OneVertexOneInstanceDefinition&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SingleBufferDefinition&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Send for TwoBuffersDefinition&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for VertexMemberInfo","synthetic":true,"types":[]},{"text":"impl Send for IncompatibleVertexDefinitionError","synthetic":true,"types":[]},{"text":"impl Send for InputRate","synthetic":true,"types":[]},{"text":"impl Send for VertexMemberTy","synthetic":true,"types":[]},{"text":"impl Send for Viewport","synthetic":true,"types":[]},{"text":"impl Send for Scissor","synthetic":true,"types":[]},{"text":"impl Send for ViewportsState","synthetic":true,"types":[]},{"text":"impl Send for UnsafeQueryPool","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for UnsafeQuery&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for UnsafeQueriesRange&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for QueryPipelineStatisticFlags","synthetic":true,"types":[]},{"text":"impl Send for OcclusionQueriesPool","synthetic":true,"types":[]},{"text":"impl Send for QueryType","synthetic":true,"types":[]},{"text":"impl Send for QueryPoolCreationError","synthetic":true,"types":[]},{"text":"impl Send for Sampler","synthetic":true,"types":[]},{"text":"impl Send for Filter","synthetic":true,"types":[]},{"text":"impl Send for MipmapMode","synthetic":true,"types":[]},{"text":"impl Send for SamplerAddressMode","synthetic":true,"types":[]},{"text":"impl Send for UnnormalizedSamplerAddressMode","synthetic":true,"types":[]},{"text":"impl Send for BorderColor","synthetic":true,"types":[]},{"text":"impl Send for SamplerCreationError","synthetic":true,"types":[]},{"text":"impl Send for Capabilities","synthetic":true,"types":[]},{"text":"impl Send for SupportedCompositeAlpha","synthetic":true,"types":[]},{"text":"impl Send for SupportedCompositeAlphaIter","synthetic":true,"types":[]},{"text":"impl Send for SupportedPresentModes","synthetic":true,"types":[]},{"text":"impl Send for SupportedPresentModesIter","synthetic":true,"types":[]},{"text":"impl Send for SupportedSurfaceTransforms","synthetic":true,"types":[]},{"text":"impl Send for SupportedSurfaceTransformsIter","synthetic":true,"types":[]},{"text":"impl Send for PresentRegion","synthetic":true,"types":[]},{"text":"impl Send for RectangleLayer","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for Surface&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AcquiredImage","synthetic":true,"types":[]},{"text":"impl&lt;P, W&gt; Send for PresentFuture&lt;P, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for Swapchain&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for SwapchainAcquireFuture&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ColorSpace","synthetic":true,"types":[]},{"text":"impl Send for CompositeAlpha","synthetic":true,"types":[]},{"text":"impl Send for PresentMode","synthetic":true,"types":[]},{"text":"impl Send for SurfaceTransform","synthetic":true,"types":[]},{"text":"impl Send for CapabilitiesError","synthetic":true,"types":[]},{"text":"impl Send for SurfaceCreationError","synthetic":true,"types":[]},{"text":"impl Send for AcquireError","synthetic":true,"types":[]},{"text":"impl Send for SwapchainCreationError","synthetic":true,"types":[]},{"text":"impl Send for DisplayPlane","synthetic":true,"types":[]},{"text":"impl !Send for Display","synthetic":true,"types":[]},{"text":"impl !Send for DisplayMode","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Send for Fence&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for FenceSignalFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for JoinFuture&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for NowFuture","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for SemaphoreSignalFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AccessFlagBits","synthetic":true,"types":[]},{"text":"impl Send for PipelineStages","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Send for Semaphore&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for FenceWaitError","synthetic":true,"types":[]},{"text":"impl Send for AccessCheckError","synthetic":true,"types":[]},{"text":"impl Send for AccessError","synthetic":true,"types":[]},{"text":"impl Send for FlushError","synthetic":true,"types":[]},{"text":"impl Send for SharingMode","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Sharing&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for StandardCommandPool","synthetic":false,"types":[]},{"text":"impl Send for StandardCommandPoolAlloc","synthetic":false,"types":[]},{"text":"impl Send for UnsafeCommandPool","synthetic":false,"types":[]},{"text":"impl Send for Device","synthetic":false,"types":[]},{"text":"impl Send for MappedDeviceMemory","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized + 'a&gt; Send for CpuAccess&lt;'a, T&gt;","synthetic":false,"types":[]}];
implementors["walkdir"] = [{"text":"impl Send for DirEntry","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for WalkDir","synthetic":true,"types":[]},{"text":"impl Send for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Send for FilterEntry&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["wayland_client"] = [{"text":"impl Send for Display","synthetic":true,"types":[]},{"text":"impl Send for ProtocolError","synthetic":true,"types":[]},{"text":"impl !Send for EventQueue","synthetic":true,"types":[]},{"text":"impl !Send for QueueToken","synthetic":true,"types":[]},{"text":"impl !Send for ReadEventsGuard","synthetic":true,"types":[]},{"text":"impl Send for GlobalManager","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !Send for NewProxy&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for Proxy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AnonymousObject","synthetic":true,"types":[]},{"text":"impl Send for ConnectError","synthetic":true,"types":[]},{"text":"impl Send for GlobalError","synthetic":true,"types":[]},{"text":"impl Send for GlobalEvent","synthetic":true,"types":[]},{"text":"impl Send for ProxyMap","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for BlockingMsgIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Send for WlDisplay","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlRegistry","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlCallback","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlCompositor","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlShmPool","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlShm","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Format","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlBuffer","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlDataOffer","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlDataSource","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlDataDevice","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for DndAction","synthetic":true,"types":[]},{"text":"impl Send for WlDataDeviceManager","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlShell","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for Resize","synthetic":true,"types":[]},{"text":"impl Send for Transient","synthetic":true,"types":[]},{"text":"impl Send for WlShellSurface","synthetic":true,"types":[]},{"text":"impl Send for FullscreenMethod","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlSurface","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for Capability","synthetic":true,"types":[]},{"text":"impl Send for WlSeat","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlPointer","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for ButtonState","synthetic":true,"types":[]},{"text":"impl Send for Axis","synthetic":true,"types":[]},{"text":"impl Send for AxisSource","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlKeyboard","synthetic":true,"types":[]},{"text":"impl Send for KeymapFormat","synthetic":true,"types":[]},{"text":"impl Send for KeyState","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlTouch","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for Mode","synthetic":true,"types":[]},{"text":"impl Send for WlOutput","synthetic":true,"types":[]},{"text":"impl Send for Subpixel","synthetic":true,"types":[]},{"text":"impl Send for Transform","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlRegion","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlSubcompositor","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WlSubsurface","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for CursorTheme","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Send for Cursor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Send for CursorImageBuffer&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["wayland_commons"] = [{"text":"impl Send for NoMessage","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for DispatchData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !Send for Filter&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; Send for Object&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; Send for ObjectMap&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Socket","synthetic":true,"types":[]},{"text":"impl Send for BufferedSocket","synthetic":true,"types":[]},{"text":"impl Send for UserDataMap","synthetic":true,"types":[]},{"text":"impl Send for MessageDesc","synthetic":true,"types":[]},{"text":"impl Send for Message","synthetic":true,"types":[]},{"text":"impl Send for ArgumentType","synthetic":true,"types":[]},{"text":"impl Send for Argument","synthetic":true,"types":[]},{"text":"impl Send for MessageWriteError","synthetic":true,"types":[]},{"text":"impl Send for MessageParseError","synthetic":true,"types":[]},{"text":"impl Send for UserData","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Send for ThreadGuard&lt;T&gt;","synthetic":false,"types":[]}];
implementors["wayland_cursor"] = [{"text":"impl !Send for CursorTheme","synthetic":true,"types":[]},{"text":"impl Send for Cursor","synthetic":true,"types":[]},{"text":"impl Send for CursorImageBuffer","synthetic":true,"types":[]},{"text":"impl Send for FrameAndDuration","synthetic":true,"types":[]}];
implementors["wayland_egl"] = [{"text":"impl Send for WlEglSurface","synthetic":false,"types":[]}];
implementors["wayland_protocols"] = [{"text":"impl Send for ZwpFullscreenShellV1","synthetic":true,"types":[]},{"text":"impl Send for Capability","synthetic":true,"types":[]},{"text":"impl Send for PresentMethod","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpFullscreenShellModeFeedbackV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpIdleInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpIdleInhibitorV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpInputMethodContextV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpInputMethodV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpInputPanelV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpInputPanelSurfaceV1","synthetic":true,"types":[]},{"text":"impl Send for Position","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpInputTimestampsManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpInputTimestampsV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpKeyboardShortcutsInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpKeyboardShortcutsInhibitorV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpLinuxDmabufV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpLinuxBufferParamsV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Flags","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpLinuxExplicitSynchronizationV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpLinuxSurfaceSynchronizationV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpLinuxBufferReleaseV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPointerConstraintsV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Lifetime","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpLockedPointerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpConfinedPointerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPointerGesturesV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPointerGestureSwipeV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPointerGesturePinchV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPrimarySelectionDeviceManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPrimarySelectionDeviceV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPrimarySelectionOfferV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpPrimarySelectionSourceV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpRelativePointerManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpRelativePointerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletSeatV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletToolV1","synthetic":true,"types":[]},{"text":"impl Send for Type","synthetic":true,"types":[]},{"text":"impl Send for Capability","synthetic":true,"types":[]},{"text":"impl Send for ButtonState","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletManagerV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletSeatV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletToolV2","synthetic":true,"types":[]},{"text":"impl Send for Type","synthetic":true,"types":[]},{"text":"impl Send for Capability","synthetic":true,"types":[]},{"text":"impl Send for ButtonState","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletPadRingV2","synthetic":true,"types":[]},{"text":"impl Send for Source","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletPadStripV2","synthetic":true,"types":[]},{"text":"impl Send for Source","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletPadGroupV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTabletPadV2","synthetic":true,"types":[]},{"text":"impl Send for ButtonState","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTextInputV1","synthetic":true,"types":[]},{"text":"impl Send for ContentHint","synthetic":true,"types":[]},{"text":"impl Send for ContentPurpose","synthetic":true,"types":[]},{"text":"impl Send for PreeditStyle","synthetic":true,"types":[]},{"text":"impl Send for TextDirection","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTextInputManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ContentHint","synthetic":true,"types":[]},{"text":"impl Send for ZwpTextInputV3","synthetic":true,"types":[]},{"text":"impl Send for ChangeCause","synthetic":true,"types":[]},{"text":"impl Send for ContentPurpose","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpTextInputManagerV3","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgDecorationManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgToplevelDecorationV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Mode","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgExporterV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgImporterV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgExportedV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgImportedV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgExporterV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgImporterV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgExportedV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgImportedV2","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgOutputManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgOutputV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for XdgShell","synthetic":true,"types":[]},{"text":"impl Send for Version","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for XdgSurface","synthetic":true,"types":[]},{"text":"impl Send for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for XdgPopup","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgShellV6","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for Anchor","synthetic":true,"types":[]},{"text":"impl Send for Gravity","synthetic":true,"types":[]},{"text":"impl Send for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl Send for ZxdgPositionerV6","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgSurfaceV6","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgToplevelV6","synthetic":true,"types":[]},{"text":"impl Send for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZxdgPopupV6","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpXwaylandKeyboardGrabManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwpXwaylandKeyboardGrabV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for GtkPrimarySelectionDeviceManager","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for GtkPrimarySelectionDevice","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for GtkPrimarySelectionOffer","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for GtkPrimarySelectionSource","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrDataControlManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrDataControlDeviceV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrDataControlSourceV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrDataControlOfferV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrExportDmabufManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrExportDmabufFrameV1","synthetic":true,"types":[]},{"text":"impl Send for Flags","synthetic":true,"types":[]},{"text":"impl Send for CancelReason","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrForeignToplevelManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl !Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrForeignToplevelHandleV1","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrGammaControlManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrGammaControlV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrInputInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrInputInhibitorV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrLayerShellV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Layer","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for Anchor","synthetic":true,"types":[]},{"text":"impl Send for ZwlrLayerSurfaceV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ZwlrScreencopyManagerV1","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for Flags","synthetic":true,"types":[]},{"text":"impl Send for ZwlrScreencopyFrameV1","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WpPresentation","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WpPresentationFeedback","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for XdgWmBase","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl Send for XdgPositioner","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Anchor","synthetic":true,"types":[]},{"text":"impl Send for Gravity","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for XdgSurface","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for XdgToplevel","synthetic":true,"types":[]},{"text":"impl Send for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Send for State","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for XdgPopup","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WpViewporter","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]},{"text":"impl Send for WpViewport","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Request","synthetic":true,"types":[]},{"text":"impl Send for Event","synthetic":true,"types":[]}];
implementors["wayland_sys"] = [{"text":"impl !Send for wl_message","synthetic":true,"types":[]},{"text":"impl !Send for wl_interface","synthetic":true,"types":[]},{"text":"impl !Send for wl_list","synthetic":true,"types":[]},{"text":"impl !Send for wl_array","synthetic":true,"types":[]},{"text":"impl !Send for wl_argument","synthetic":true,"types":[]},{"text":"impl Send for WaylandClient","synthetic":true,"types":[]},{"text":"impl Send for WAYLAND_CLIENT_OPTION","synthetic":true,"types":[]},{"text":"impl Send for WAYLAND_CLIENT_HANDLE","synthetic":true,"types":[]},{"text":"impl Send for wl_proxy","synthetic":true,"types":[]},{"text":"impl Send for wl_display","synthetic":true,"types":[]},{"text":"impl Send for wl_event_queue","synthetic":true,"types":[]},{"text":"impl !Send for wl_listener","synthetic":true,"types":[]},{"text":"impl !Send for wl_signal","synthetic":true,"types":[]},{"text":"impl Send for wl_client","synthetic":true,"types":[]},{"text":"impl Send for wl_display","synthetic":true,"types":[]},{"text":"impl Send for wl_event_loop","synthetic":true,"types":[]},{"text":"impl Send for wl_event_source","synthetic":true,"types":[]},{"text":"impl Send for wl_global","synthetic":true,"types":[]},{"text":"impl Send for wl_resource","synthetic":true,"types":[]},{"text":"impl Send for wl_shm_buffer","synthetic":true,"types":[]},{"text":"impl Send for WaylandEgl","synthetic":true,"types":[]},{"text":"impl Send for WAYLAND_EGL_OPTION","synthetic":true,"types":[]},{"text":"impl Send for WAYLAND_EGL_HANDLE","synthetic":true,"types":[]},{"text":"impl Send for wl_egl_window","synthetic":true,"types":[]}];
implementors["wgpu"] = [{"text":"impl Send for Instance","synthetic":true,"types":[]},{"text":"impl Send for Adapter","synthetic":true,"types":[]},{"text":"impl Send for Device","synthetic":true,"types":[]},{"text":"impl Send for Buffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferSlice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Texture","synthetic":true,"types":[]},{"text":"impl Send for TextureView","synthetic":true,"types":[]},{"text":"impl Send for Sampler","synthetic":true,"types":[]},{"text":"impl Send for Surface","synthetic":true,"types":[]},{"text":"impl Send for SwapChain","synthetic":true,"types":[]},{"text":"impl Send for BindGroupLayout","synthetic":true,"types":[]},{"text":"impl Send for BindGroup","synthetic":true,"types":[]},{"text":"impl Send for ShaderModule","synthetic":true,"types":[]},{"text":"impl Send for PipelineLayout","synthetic":true,"types":[]},{"text":"impl Send for RenderPipeline","synthetic":true,"types":[]},{"text":"impl Send for ComputePipeline","synthetic":true,"types":[]},{"text":"impl Send for CommandBuffer","synthetic":true,"types":[]},{"text":"impl !Send for CommandEncoder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderPass&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ComputePass&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RenderBundleEncoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for RenderBundle","synthetic":true,"types":[]},{"text":"impl Send for Queue","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Send for Operations&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderPassColorAttachmentDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderPassDepthStencilAttachmentDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for CommandEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderBundleDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TextureDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TextureViewDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PipelineLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SamplerDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindGroupEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindGroupDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ProgrammableStageDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Send for RenderPassDescriptor&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderPipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ComputePipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindGroupLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VertexBufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VertexStateDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderBundleEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SwapChainTexture","synthetic":true,"types":[]},{"text":"impl Send for SwapChainFrame","synthetic":true,"types":[]},{"text":"impl Send for RequestDeviceError","synthetic":true,"types":[]},{"text":"impl Send for BufferAsyncError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferViewMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Maintain","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ShaderModuleSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindingResource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Send for LoadOp&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SwapChainError","synthetic":true,"types":[]},{"text":"impl Send for MapMode","synthetic":true,"types":[]},{"text":"impl Send for StagingBelt","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BufferInitDescriptor&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["wgpu_core"] = [{"text":"impl Send for BindingTypeMaxCountError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindGroupEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindGroupDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindGroupLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for BindGroupLayout&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PipelineLayoutDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for PipelineLayout&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for BufferBinding","synthetic":true,"types":[]},{"text":"impl Send for BindGroupDynamicBindingData","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for BindGroup&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for CreateBindGroupLayoutError","synthetic":true,"types":[]},{"text":"impl Send for CreateBindGroupError","synthetic":true,"types":[]},{"text":"impl Send for BindingZone","synthetic":true,"types":[]},{"text":"impl Send for BindingTypeMaxCountErrorKind","synthetic":true,"types":[]},{"text":"impl Send for CreatePipelineLayoutError","synthetic":true,"types":[]},{"text":"impl Send for PushConstantUploadError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BindingResource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BindError","synthetic":true,"types":[]},{"text":"impl Send for GetBindGroupLayoutError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderBundleEncoderDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for RenderBundleEncoder","synthetic":true,"types":[]},{"text":"impl Send for ComputePass","synthetic":true,"types":[]},{"text":"impl Send for ComputePassDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Send for PassChannel&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ColorAttachmentDescriptor","synthetic":true,"types":[]},{"text":"impl Send for DepthStencilAttachmentDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderPassDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for RenderPass","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for CommandBuffer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; Send for BasePassRef&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for CommandAllocatorError","synthetic":true,"types":[]},{"text":"impl Send for CreateRenderBundleError","synthetic":true,"types":[]},{"text":"impl Send for RenderBundleError","synthetic":true,"types":[]},{"text":"impl Send for DispatchError","synthetic":true,"types":[]},{"text":"impl Send for ComputePassError","synthetic":true,"types":[]},{"text":"impl Send for DrawError","synthetic":true,"types":[]},{"text":"impl Send for RenderCommandError","synthetic":true,"types":[]},{"text":"impl Send for LoadOp","synthetic":true,"types":[]},{"text":"impl Send for StoreOp","synthetic":true,"types":[]},{"text":"impl Send for RenderPassError","synthetic":true,"types":[]},{"text":"impl Send for TransferError","synthetic":true,"types":[]},{"text":"impl Send for CopyError","synthetic":true,"types":[]},{"text":"impl Send for CommandEncoderError","synthetic":true,"types":[]},{"text":"impl Send for UsageConflict","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Device&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for InvalidDevice","synthetic":true,"types":[]},{"text":"impl&lt;'a, G&gt; Send for ImplicitPipelineIds&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: IdentityHandler&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;G as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter as IdentityHandler&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Input: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;G as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter as IdentityHandler&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Input: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for HostMap","synthetic":true,"types":[]},{"text":"impl Send for CreateDeviceError","synthetic":true,"types":[]},{"text":"impl Send for DeviceError","synthetic":true,"types":[]},{"text":"impl Send for IdentityManager","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; Send for Storage&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Token&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for IdentityManagerFactory","synthetic":true,"types":[]},{"text":"impl&lt;T, I, F&gt; Send for Registry&lt;T, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;I&gt;&gt;::Filter: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B, F&gt; Send for Hub&lt;B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandBuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CommandQueue: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorPool: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSet: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::DescriptorSetLayout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Device: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Fence: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Adapter&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;BindGroup&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Buffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;CommandBuffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;ComputePipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Device&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;RenderBundle&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;RenderPipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Sampler&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;ShaderModule&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;SwapChain&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Texture&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;TextureView&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PipelineLayout: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::RenderPass: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Semaphore: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;B as Backend&gt;::Surface as PresentationSurface&lt;B&gt;&gt;::SwapchainImage: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for Hubs&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Adapter&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;BindGroup&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Buffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;CommandBuffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;ComputePipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Device&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;RenderBundle&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;RenderPipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Sampler&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;ShaderModule&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;SwapChain&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;Texture&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as IdentityHandlerFactory&lt;Id&lt;TextureView&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G&gt; Send for Global&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Adapter&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;BindGroup&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;BindGroupLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Buffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;CommandBuffer&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;ComputePipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Device&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;PipelineLayout&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;RenderBundle&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;RenderPipeline&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Sampler&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;ShaderModule&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Surface&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;SwapChain&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;Texture&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as IdentityHandlerFactory&lt;Id&lt;TextureView&lt;Backend&gt;&gt;&gt;&gt;::Filter: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Root","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Id&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Instance","synthetic":true,"types":[]},{"text":"impl Send for Surface","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Adapter&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::PhysicalDevice: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::QueueFamily: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AdapterInfo","synthetic":true,"types":[]},{"text":"impl Send for InvalidAdapter","synthetic":true,"types":[]},{"text":"impl Send for RequestDeviceError","synthetic":true,"types":[]},{"text":"impl Send for DeviceType","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Send for AdapterInputs&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for RequestAdapterError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for ShaderModule&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ShaderModule: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ProgrammableStageDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ComputePipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for ComputePipeline&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ComputePipeline: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VertexBufferDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VertexStateDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RenderPipelineDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for PipelineFlags","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for RenderPipeline&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::GraphicsPipeline: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ShaderModuleSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CreateShaderModuleError","synthetic":true,"types":[]},{"text":"impl Send for ImplicitLayoutError","synthetic":true,"types":[]},{"text":"impl Send for CreateComputePipelineError","synthetic":true,"types":[]},{"text":"impl Send for CreateRenderPipelineError","synthetic":true,"types":[]},{"text":"impl Send for BufferUse","synthetic":true,"types":[]},{"text":"impl Send for TextureUse","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Buffer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Buffer: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Texture&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Image: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TextureViewDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for TextureView&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::ImageView: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;B as Backend&gt;::Surface as PresentationSurface&lt;B&gt;&gt;::SwapchainImage: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SamplerDescriptor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for Sampler&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Sampler: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for BufferMapAsyncStatus","synthetic":true,"types":[]},{"text":"impl Send for BufferAccessError","synthetic":true,"types":[]},{"text":"impl Send for CreateBufferError","synthetic":true,"types":[]},{"text":"impl Send for TextureDimensionError","synthetic":true,"types":[]},{"text":"impl Send for CreateTextureError","synthetic":true,"types":[]},{"text":"impl Send for CreateTextureViewError","synthetic":true,"types":[]},{"text":"impl Send for TextureViewDestroyError","synthetic":true,"types":[]},{"text":"impl Send for CreateSamplerError","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for SwapChain&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Framebuffer: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::Semaphore: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SwapChainOutput","synthetic":true,"types":[]},{"text":"impl Send for InvalidSwapChain","synthetic":true,"types":[]},{"text":"impl Send for SwapChainError","synthetic":true,"types":[]},{"text":"impl Send for CreateSwapChainError","synthetic":true,"types":[]},{"text":"impl Send for RenderBundle","synthetic":false,"types":[]},{"text":"impl Send for BufferMapOperation","synthetic":false,"types":[]}];
implementors["wgpu_types"] = [{"text":"impl Send for BackendBit","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for RequestAdapterOptions&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Features","synthetic":true,"types":[]},{"text":"impl Send for Limits","synthetic":true,"types":[]},{"text":"impl Send for DeviceDescriptor","synthetic":true,"types":[]},{"text":"impl Send for ShaderStage","synthetic":true,"types":[]},{"text":"impl Send for BlendDescriptor","synthetic":true,"types":[]},{"text":"impl Send for ColorStateDescriptor","synthetic":true,"types":[]},{"text":"impl Send for RasterizationStateDescriptor","synthetic":true,"types":[]},{"text":"impl Send for ColorWrite","synthetic":true,"types":[]},{"text":"impl Send for StencilStateDescriptor","synthetic":true,"types":[]},{"text":"impl Send for DepthStencilStateDescriptor","synthetic":true,"types":[]},{"text":"impl Send for StencilStateFaceDescriptor","synthetic":true,"types":[]},{"text":"impl Send for VertexAttributeDescriptor","synthetic":true,"types":[]},{"text":"impl Send for BufferUsage","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for BufferDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for CommandEncoderDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for TextureUsage","synthetic":true,"types":[]},{"text":"impl Send for SwapChainDescriptor","synthetic":true,"types":[]},{"text":"impl Send for Color","synthetic":true,"types":[]},{"text":"impl Send for Origin3d","synthetic":true,"types":[]},{"text":"impl Send for Extent3d","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for TextureDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for PushConstantRange","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for CommandBufferDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Send for RenderBundleDescriptor&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for TextureDataLayout","synthetic":true,"types":[]},{"text":"impl Send for BindGroupLayoutEntry","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Send for BufferCopyView&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for TextureCopyView&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Backend","synthetic":true,"types":[]},{"text":"impl Send for PowerPreference","synthetic":true,"types":[]},{"text":"impl Send for TextureViewDimension","synthetic":true,"types":[]},{"text":"impl Send for BlendFactor","synthetic":true,"types":[]},{"text":"impl Send for BlendOperation","synthetic":true,"types":[]},{"text":"impl Send for PrimitiveTopology","synthetic":true,"types":[]},{"text":"impl Send for FrontFace","synthetic":true,"types":[]},{"text":"impl Send for CullMode","synthetic":true,"types":[]},{"text":"impl Send for TextureFormat","synthetic":true,"types":[]},{"text":"impl Send for IndexFormat","synthetic":true,"types":[]},{"text":"impl Send for StencilOperation","synthetic":true,"types":[]},{"text":"impl Send for CompareFunction","synthetic":true,"types":[]},{"text":"impl Send for InputStepMode","synthetic":true,"types":[]},{"text":"impl Send for VertexFormat","synthetic":true,"types":[]},{"text":"impl Send for PresentMode","synthetic":true,"types":[]},{"text":"impl Send for SwapChainStatus","synthetic":true,"types":[]},{"text":"impl Send for TextureDimension","synthetic":true,"types":[]},{"text":"impl Send for TextureAspect","synthetic":true,"types":[]},{"text":"impl Send for AddressMode","synthetic":true,"types":[]},{"text":"impl Send for FilterMode","synthetic":true,"types":[]},{"text":"impl Send for TextureComponentType","synthetic":true,"types":[]},{"text":"impl Send for BindingType","synthetic":true,"types":[]}];
implementors["winit"] = [{"text":"impl&lt;P&gt; Send for LogicalPosition&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Send for PhysicalPosition&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Send for LogicalSize&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Send for PhysicalSize&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Size","synthetic":true,"types":[]},{"text":"impl Send for Position","synthetic":true,"types":[]},{"text":"impl Send for NotSupportedError","synthetic":true,"types":[]},{"text":"impl Send for OsError","synthetic":true,"types":[]},{"text":"impl Send for ExternalError","synthetic":true,"types":[]},{"text":"impl Send for DeviceId","synthetic":true,"types":[]},{"text":"impl Send for KeyboardInput","synthetic":true,"types":[]},{"text":"impl Send for Touch","synthetic":true,"types":[]},{"text":"impl Send for ModifiersState","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Event&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for StartCause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for WindowEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for DeviceEvent","synthetic":true,"types":[]},{"text":"impl Send for TouchPhase","synthetic":true,"types":[]},{"text":"impl Send for Force","synthetic":true,"types":[]},{"text":"impl Send for ElementState","synthetic":true,"types":[]},{"text":"impl Send for MouseButton","synthetic":true,"types":[]},{"text":"impl Send for MouseScrollDelta","synthetic":true,"types":[]},{"text":"impl Send for VirtualKeyCode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for EventLoop&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for EventLoopWindowTarget&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for EventLoopProxy&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for EventLoopClosed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ControlFlow","synthetic":true,"types":[]},{"text":"impl Send for Icon","synthetic":true,"types":[]},{"text":"impl Send for BadIcon","synthetic":true,"types":[]},{"text":"impl Send for VideoMode","synthetic":true,"types":[]},{"text":"impl Send for MonitorHandle","synthetic":true,"types":[]},{"text":"impl Send for WindowType","synthetic":true,"types":[]},{"text":"impl Send for XNotSupported","synthetic":true,"types":[]},{"text":"impl Send for Window","synthetic":true,"types":[]},{"text":"impl Send for WindowId","synthetic":true,"types":[]},{"text":"impl !Send for WindowBuilder","synthetic":true,"types":[]},{"text":"impl Send for WindowAttributes","synthetic":true,"types":[]},{"text":"impl Send for CursorIcon","synthetic":true,"types":[]},{"text":"impl Send for Fullscreen","synthetic":true,"types":[]},{"text":"impl Send for Theme","synthetic":true,"types":[]},{"text":"impl Send for ARGBColor","synthetic":true,"types":[]},{"text":"impl Send for Button","synthetic":true,"types":[]},{"text":"impl Send for ButtonState","synthetic":true,"types":[]},{"text":"impl Send for Element","synthetic":true,"types":[]}];
implementors["x11"] = [{"text":"impl Send for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl Send for XcmsColor","synthetic":true,"types":[]},{"text":"impl Send for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl Send for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl Send for _XkbAction","synthetic":true,"types":[]},{"text":"impl Send for _XkbBounds","synthetic":true,"types":[]},{"text":"impl Send for _XkbChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbColor","synthetic":true,"types":[]},{"text":"impl Send for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl Send for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl Send for _XkbControls","synthetic":true,"types":[]},{"text":"impl Send for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl Send for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl Send for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl Send for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl Send for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl Send for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl Send for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl Send for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbKey","synthetic":true,"types":[]},{"text":"impl Send for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl Send for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbMods","synthetic":true,"types":[]},{"text":"impl Send for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl Send for _XkbOutline","synthetic":true,"types":[]},{"text":"impl Send for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl Send for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl Send for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl Send for _XkbProperty","synthetic":true,"types":[]},{"text":"impl Send for _XkbRow","synthetic":true,"types":[]},{"text":"impl Send for _XkbSection","synthetic":true,"types":[]},{"text":"impl Send for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbShape","synthetic":true,"types":[]},{"text":"impl Send for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl !Send for XAnyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XButtonEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl !Send for XColormapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl !Send for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl !Send for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl !Send for XErrorEvent","synthetic":true,"types":[]},{"text":"impl !Send for XExposeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XGravityEvent","synthetic":true,"types":[]},{"text":"impl !Send for XKeyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMappingEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMotionEvent","synthetic":true,"types":[]},{"text":"impl !Send for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XReparentEvent","synthetic":true,"types":[]},{"text":"impl !Send for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl !Send for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl !Send for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl !Send for _XkbDesc","synthetic":true,"types":[]},{"text":"impl Send for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl !Send for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl !Send for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl Send for XkbEvent","synthetic":true,"types":[]},{"text":"impl !Send for Depth","synthetic":true,"types":[]},{"text":"impl !Send for Screen","synthetic":true,"types":[]},{"text":"impl !Send for ScreenFormat","synthetic":true,"types":[]},{"text":"impl !Send for Visual","synthetic":true,"types":[]},{"text":"impl Send for XArc","synthetic":true,"types":[]},{"text":"impl Send for XChar2b","synthetic":true,"types":[]},{"text":"impl Send for XCharStruct","synthetic":true,"types":[]},{"text":"impl !Send for XClassHint","synthetic":true,"types":[]},{"text":"impl Send for XColor","synthetic":true,"types":[]},{"text":"impl !Send for XComposeStatus","synthetic":true,"types":[]},{"text":"impl Send for XExtCodes","synthetic":true,"types":[]},{"text":"impl !Send for XExtData","synthetic":true,"types":[]},{"text":"impl Send for XFontProp","synthetic":true,"types":[]},{"text":"impl Send for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl !Send for XFontStruct","synthetic":true,"types":[]},{"text":"impl Send for XGCValues","synthetic":true,"types":[]},{"text":"impl !Send for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl !Send for XHostAddress","synthetic":true,"types":[]},{"text":"impl Send for XIconSize","synthetic":true,"types":[]},{"text":"impl !Send for XImage","synthetic":true,"types":[]},{"text":"impl Send for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl Send for XKeyboardState","synthetic":true,"types":[]},{"text":"impl !Send for XmbTextItem","synthetic":true,"types":[]},{"text":"impl !Send for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl !Send for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl Send for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl Send for XPoint","synthetic":true,"types":[]},{"text":"impl Send for XRectangle","synthetic":true,"types":[]},{"text":"impl !Send for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl !Send for XrmValue","synthetic":true,"types":[]},{"text":"impl Send for XSegment","synthetic":true,"types":[]},{"text":"impl Send for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl Send for XSizeHints","synthetic":true,"types":[]},{"text":"impl Send for XStandardColormap","synthetic":true,"types":[]},{"text":"impl !Send for XTextItem","synthetic":true,"types":[]},{"text":"impl !Send for XTextItem16","synthetic":true,"types":[]},{"text":"impl !Send for XTextProperty","synthetic":true,"types":[]},{"text":"impl Send for XTimeCoord","synthetic":true,"types":[]},{"text":"impl !Send for XVisualInfo","synthetic":true,"types":[]},{"text":"impl !Send for XwcTextItem","synthetic":true,"types":[]},{"text":"impl !Send for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl Send for XWindowChanges","synthetic":true,"types":[]},{"text":"impl Send for XWMHints","synthetic":true,"types":[]},{"text":"impl !Send for XIMCallback","synthetic":true,"types":[]},{"text":"impl !Send for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl Send for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl !Send for XIMText","synthetic":true,"types":[]},{"text":"impl !Send for XICCallback","synthetic":true,"types":[]},{"text":"impl Send for AspectRatio","synthetic":true,"types":[]},{"text":"impl Send for ClientMessageData","synthetic":true,"types":[]},{"text":"impl Send for ImageFns","synthetic":true,"types":[]},{"text":"impl !Send for XEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIMTextString","synthetic":true,"types":[]},{"text":"impl Send for _XDisplay","synthetic":true,"types":[]},{"text":"impl Send for xError","synthetic":true,"types":[]},{"text":"impl Send for xEvent","synthetic":true,"types":[]},{"text":"impl Send for _XGC","synthetic":true,"types":[]},{"text":"impl Send for _XIC","synthetic":true,"types":[]},{"text":"impl Send for _XIM","synthetic":true,"types":[]},{"text":"impl Send for _XRegion","synthetic":true,"types":[]},{"text":"impl Send for _XOC","synthetic":true,"types":[]},{"text":"impl Send for _XOM","synthetic":true,"types":[]},{"text":"impl Send for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl Send for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl Send for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl Send for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl Send for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl Send for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl Send for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorComment","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorComments","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorFile","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl Send for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorImage","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorImages","synthetic":true,"types":[]},{"text":"impl Send for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl Send for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XftFont","synthetic":true,"types":[]},{"text":"impl Send for XftColor","synthetic":true,"types":[]},{"text":"impl Send for XftCharSpec","synthetic":true,"types":[]},{"text":"impl !Send for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl !Send for XftFontSet","synthetic":true,"types":[]},{"text":"impl Send for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl !Send for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl Send for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl Send for FcCharSet","synthetic":true,"types":[]},{"text":"impl Send for FcPattern","synthetic":true,"types":[]},{"text":"impl Send for FcEndian","synthetic":true,"types":[]},{"text":"impl Send for FcResult","synthetic":true,"types":[]},{"text":"impl Send for XftFontInfo","synthetic":true,"types":[]},{"text":"impl Send for XftDraw","synthetic":true,"types":[]},{"text":"impl Send for XftPattern","synthetic":true,"types":[]},{"text":"impl Send for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl Send for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl !Send for XDevice","synthetic":true,"types":[]},{"text":"impl Send for XDeviceControl","synthetic":true,"types":[]},{"text":"impl !Send for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl !Send for XDeviceState","synthetic":true,"types":[]},{"text":"impl !Send for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl Send for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl Send for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl Send for XFeedbackState","synthetic":true,"types":[]},{"text":"impl Send for XInputClass","synthetic":true,"types":[]},{"text":"impl Send for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl Send for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl !Send for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl Send for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl Send for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Send for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Send for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl Send for XIModifierState","synthetic":true,"types":[]},{"text":"impl !Send for XIButtonState","synthetic":true,"types":[]},{"text":"impl !Send for XIValuatorState","synthetic":true,"types":[]},{"text":"impl !Send for XIEventMask","synthetic":true,"types":[]},{"text":"impl Send for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl Send for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl Send for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl Send for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl Send for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl Send for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIEvent","synthetic":true,"types":[]},{"text":"impl Send for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIRawEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl Send for _AtomRec","synthetic":true,"types":[]},{"text":"impl Send for _XmuArea","synthetic":true,"types":[]},{"text":"impl Send for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl Send for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl Send for _XmuScanline","synthetic":true,"types":[]},{"text":"impl Send for _XmuSegment","synthetic":true,"types":[]},{"text":"impl Send for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl Send for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl Send for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl !Send for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl !Send for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl Send for XRRPanning","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl Send for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl !Send for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl Send for XRecordRange","synthetic":true,"types":[]},{"text":"impl Send for XRecordRange8","synthetic":true,"types":[]},{"text":"impl Send for XRecordRange16","synthetic":true,"types":[]},{"text":"impl !Send for XRecordState","synthetic":true,"types":[]},{"text":"impl Send for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl Send for _XCircle","synthetic":true,"types":[]},{"text":"impl Send for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl !Send for _XFilters","synthetic":true,"types":[]},{"text":"impl !Send for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl !Send for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl !Send for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl Send for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl Send for _XIndexValue","synthetic":true,"types":[]},{"text":"impl Send for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl Send for _XLineFixed","synthetic":true,"types":[]},{"text":"impl Send for _XPointDouble","synthetic":true,"types":[]},{"text":"impl Send for _XPointFixed","synthetic":true,"types":[]},{"text":"impl Send for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl Send for XRenderColor","synthetic":true,"types":[]},{"text":"impl Send for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl Send for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl Send for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl Send for _XSpanFix","synthetic":true,"types":[]},{"text":"impl Send for _XTrap","synthetic":true,"types":[]},{"text":"impl Send for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl Send for _XTriangle","synthetic":true,"types":[]},{"text":"impl Send for _XTransform","synthetic":true,"types":[]},{"text":"impl Send for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl !Send for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl Send for Arg","synthetic":true,"types":[]},{"text":"impl Send for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl Send for _TranslationData","synthetic":true,"types":[]},{"text":"impl Send for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl Send for _WidgetRec","synthetic":true,"types":[]},{"text":"impl Send for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl Send for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl Send for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl Send for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl Send for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl Send for _XtResource","synthetic":true,"types":[]},{"text":"impl Send for XtWidgetGeometry","synthetic":true,"types":[]}];
implementors["x11_clipboard"] = [{"text":"impl Send for Atoms","synthetic":true,"types":[]},{"text":"impl Send for Clipboard","synthetic":true,"types":[]},{"text":"impl Send for Context","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]}];
implementors["x11_dl"] = [{"text":"impl Send for OpenError","synthetic":true,"types":[]},{"text":"impl Send for OpenErrorKind","synthetic":true,"types":[]},{"text":"impl Send for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl Send for XcmsColor","synthetic":true,"types":[]},{"text":"impl Send for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl Send for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl Send for _XkbAction","synthetic":true,"types":[]},{"text":"impl Send for _XkbBounds","synthetic":true,"types":[]},{"text":"impl Send for _XkbChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbColor","synthetic":true,"types":[]},{"text":"impl Send for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl Send for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl Send for _XkbControls","synthetic":true,"types":[]},{"text":"impl Send for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl Send for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl Send for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl Send for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl Send for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl Send for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl Send for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl Send for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbKey","synthetic":true,"types":[]},{"text":"impl Send for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl Send for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbMods","synthetic":true,"types":[]},{"text":"impl Send for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl Send for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl Send for _XkbOutline","synthetic":true,"types":[]},{"text":"impl Send for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl Send for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl Send for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl Send for _XkbProperty","synthetic":true,"types":[]},{"text":"impl Send for _XkbRow","synthetic":true,"types":[]},{"text":"impl Send for _XkbSection","synthetic":true,"types":[]},{"text":"impl Send for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbShape","synthetic":true,"types":[]},{"text":"impl Send for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl !Send for XAnyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XButtonEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl !Send for XColormapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl !Send for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl !Send for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl !Send for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl !Send for XErrorEvent","synthetic":true,"types":[]},{"text":"impl !Send for XExposeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XGravityEvent","synthetic":true,"types":[]},{"text":"impl !Send for XKeyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMappingEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XMotionEvent","synthetic":true,"types":[]},{"text":"impl !Send for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl !Send for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XReparentEvent","synthetic":true,"types":[]},{"text":"impl !Send for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl !Send for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl !Send for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl !Send for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl !Send for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl !Send for _XkbDesc","synthetic":true,"types":[]},{"text":"impl Send for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl !Send for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl Send for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl !Send for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl !Send for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl Send for XkbEvent","synthetic":true,"types":[]},{"text":"impl !Send for Depth","synthetic":true,"types":[]},{"text":"impl !Send for Screen","synthetic":true,"types":[]},{"text":"impl !Send for ScreenFormat","synthetic":true,"types":[]},{"text":"impl !Send for Visual","synthetic":true,"types":[]},{"text":"impl Send for XArc","synthetic":true,"types":[]},{"text":"impl Send for XChar2b","synthetic":true,"types":[]},{"text":"impl Send for XCharStruct","synthetic":true,"types":[]},{"text":"impl !Send for XClassHint","synthetic":true,"types":[]},{"text":"impl Send for XColor","synthetic":true,"types":[]},{"text":"impl !Send for XComposeStatus","synthetic":true,"types":[]},{"text":"impl Send for XExtCodes","synthetic":true,"types":[]},{"text":"impl !Send for XExtData","synthetic":true,"types":[]},{"text":"impl Send for XFontProp","synthetic":true,"types":[]},{"text":"impl Send for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl !Send for XFontStruct","synthetic":true,"types":[]},{"text":"impl Send for XGCValues","synthetic":true,"types":[]},{"text":"impl !Send for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl !Send for XHostAddress","synthetic":true,"types":[]},{"text":"impl Send for XIconSize","synthetic":true,"types":[]},{"text":"impl !Send for XImage","synthetic":true,"types":[]},{"text":"impl Send for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl Send for XKeyboardState","synthetic":true,"types":[]},{"text":"impl !Send for XmbTextItem","synthetic":true,"types":[]},{"text":"impl !Send for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl !Send for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl Send for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl Send for XPoint","synthetic":true,"types":[]},{"text":"impl Send for XRectangle","synthetic":true,"types":[]},{"text":"impl !Send for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl !Send for XrmValue","synthetic":true,"types":[]},{"text":"impl Send for XSegment","synthetic":true,"types":[]},{"text":"impl Send for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl Send for XSizeHints","synthetic":true,"types":[]},{"text":"impl Send for XStandardColormap","synthetic":true,"types":[]},{"text":"impl !Send for XTextItem","synthetic":true,"types":[]},{"text":"impl !Send for XTextItem16","synthetic":true,"types":[]},{"text":"impl !Send for XTextProperty","synthetic":true,"types":[]},{"text":"impl Send for XTimeCoord","synthetic":true,"types":[]},{"text":"impl !Send for XVisualInfo","synthetic":true,"types":[]},{"text":"impl !Send for XwcTextItem","synthetic":true,"types":[]},{"text":"impl !Send for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl Send for XWindowChanges","synthetic":true,"types":[]},{"text":"impl Send for XWMHints","synthetic":true,"types":[]},{"text":"impl !Send for XIMCallback","synthetic":true,"types":[]},{"text":"impl !Send for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl Send for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl !Send for XIMText","synthetic":true,"types":[]},{"text":"impl !Send for XICCallback","synthetic":true,"types":[]},{"text":"impl Send for AspectRatio","synthetic":true,"types":[]},{"text":"impl Send for ClientMessageData","synthetic":true,"types":[]},{"text":"impl Send for ImageFns","synthetic":true,"types":[]},{"text":"impl !Send for XEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIMTextString","synthetic":true,"types":[]},{"text":"impl Send for _XDisplay","synthetic":true,"types":[]},{"text":"impl Send for xError","synthetic":true,"types":[]},{"text":"impl Send for xEvent","synthetic":true,"types":[]},{"text":"impl Send for _XGC","synthetic":true,"types":[]},{"text":"impl Send for _XIC","synthetic":true,"types":[]},{"text":"impl Send for _XIM","synthetic":true,"types":[]},{"text":"impl Send for _XRegion","synthetic":true,"types":[]},{"text":"impl Send for _XOC","synthetic":true,"types":[]},{"text":"impl Send for _XOM","synthetic":true,"types":[]},{"text":"impl Send for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl Send for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl Send for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl Send for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl Send for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl Send for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl Send for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorComment","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorComments","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorFile","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl Send for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorImage","synthetic":true,"types":[]},{"text":"impl !Send for _XcursorImages","synthetic":true,"types":[]},{"text":"impl Send for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl Send for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl !Send for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XftFont","synthetic":true,"types":[]},{"text":"impl Send for XftColor","synthetic":true,"types":[]},{"text":"impl Send for XftCharSpec","synthetic":true,"types":[]},{"text":"impl !Send for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl !Send for XftFontSet","synthetic":true,"types":[]},{"text":"impl Send for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl !Send for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl Send for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl Send for FcCharSet","synthetic":true,"types":[]},{"text":"impl Send for FcPattern","synthetic":true,"types":[]},{"text":"impl Send for FcEndian","synthetic":true,"types":[]},{"text":"impl Send for FcResult","synthetic":true,"types":[]},{"text":"impl Send for XftFontInfo","synthetic":true,"types":[]},{"text":"impl Send for XftDraw","synthetic":true,"types":[]},{"text":"impl Send for XftPattern","synthetic":true,"types":[]},{"text":"impl Send for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl Send for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl !Send for XDevice","synthetic":true,"types":[]},{"text":"impl Send for XDeviceControl","synthetic":true,"types":[]},{"text":"impl !Send for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl !Send for XDeviceState","synthetic":true,"types":[]},{"text":"impl !Send for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl Send for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl Send for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl Send for XFeedbackState","synthetic":true,"types":[]},{"text":"impl Send for XInputClass","synthetic":true,"types":[]},{"text":"impl Send for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl Send for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl !Send for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl Send for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl Send for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Send for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Send for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl Send for XIModifierState","synthetic":true,"types":[]},{"text":"impl !Send for XIButtonState","synthetic":true,"types":[]},{"text":"impl !Send for XIValuatorState","synthetic":true,"types":[]},{"text":"impl !Send for XIEventMask","synthetic":true,"types":[]},{"text":"impl Send for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl Send for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl Send for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl Send for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl Send for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl Send for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIEvent","synthetic":true,"types":[]},{"text":"impl Send for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl !Send for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIRawEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl !Send for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl Send for _AtomRec","synthetic":true,"types":[]},{"text":"impl Send for _XmuArea","synthetic":true,"types":[]},{"text":"impl Send for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl Send for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl Send for _XmuScanline","synthetic":true,"types":[]},{"text":"impl Send for _XmuSegment","synthetic":true,"types":[]},{"text":"impl Send for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl !Send for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl Send for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl !Send for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl Send for XRecordRange","synthetic":true,"types":[]},{"text":"impl Send for XRecordRange8","synthetic":true,"types":[]},{"text":"impl Send for XRecordRange16","synthetic":true,"types":[]},{"text":"impl !Send for XRecordState","synthetic":true,"types":[]},{"text":"impl Send for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl Send for _XCircle","synthetic":true,"types":[]},{"text":"impl Send for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl !Send for _XFilters","synthetic":true,"types":[]},{"text":"impl !Send for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl !Send for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl !Send for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl Send for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl Send for _XIndexValue","synthetic":true,"types":[]},{"text":"impl Send for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl Send for _XLineFixed","synthetic":true,"types":[]},{"text":"impl Send for _XPointDouble","synthetic":true,"types":[]},{"text":"impl Send for _XPointFixed","synthetic":true,"types":[]},{"text":"impl Send for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl Send for XRenderColor","synthetic":true,"types":[]},{"text":"impl Send for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl Send for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl Send for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl Send for _XSpanFix","synthetic":true,"types":[]},{"text":"impl Send for _XTrap","synthetic":true,"types":[]},{"text":"impl Send for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl Send for _XTriangle","synthetic":true,"types":[]},{"text":"impl Send for _XTransform","synthetic":true,"types":[]},{"text":"impl Send for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl !Send for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl Send for Arg","synthetic":true,"types":[]},{"text":"impl Send for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl Send for _TranslationData","synthetic":true,"types":[]},{"text":"impl Send for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl Send for _WidgetRec","synthetic":true,"types":[]},{"text":"impl Send for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl Send for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl Send for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl Send for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl Send for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl Send for _XtResource","synthetic":true,"types":[]},{"text":"impl Send for XtWidgetGeometry","synthetic":true,"types":[]},{"text":"impl Send for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl Send for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl !Send for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl !Send for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl Send for XRRPanning","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl !Send for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl !Send for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Send for Xlib","synthetic":false,"types":[]},{"text":"impl Send for Xext","synthetic":false,"types":[]},{"text":"impl Send for Glx","synthetic":false,"types":[]},{"text":"impl Send for Xcursor","synthetic":false,"types":[]},{"text":"impl Send for Xf86vmode","synthetic":false,"types":[]},{"text":"impl Send for Xft","synthetic":false,"types":[]},{"text":"impl Send for Xlib","synthetic":false,"types":[]},{"text":"impl Send for XInput","synthetic":false,"types":[]},{"text":"impl Send for XInput2","synthetic":false,"types":[]},{"text":"impl Send for Xmu","synthetic":false,"types":[]},{"text":"impl Send for Xf86vmode","synthetic":false,"types":[]},{"text":"impl Send for Xrender","synthetic":false,"types":[]},{"text":"impl Send for Xss","synthetic":false,"types":[]},{"text":"impl Send for Xt","synthetic":false,"types":[]},{"text":"impl Send for Xf86vmode","synthetic":false,"types":[]},{"text":"impl Send for Xlib_xcb","synthetic":false,"types":[]},{"text":"impl Send for Xrandr","synthetic":false,"types":[]},{"text":"impl Send for Xrandr_2_2_0","synthetic":false,"types":[]}];
implementors["xcb"] = [{"text":"impl&lt;'a, T&gt; !Send for StructPtr&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for QueryExtensionData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ConnError","synthetic":true,"types":[]},{"text":"impl Send for RequestError","synthetic":true,"types":[]},{"text":"impl Send for ValueError","synthetic":true,"types":[]},{"text":"impl Send for WindowError","synthetic":true,"types":[]},{"text":"impl Send for PixmapError","synthetic":true,"types":[]},{"text":"impl Send for AtomError","synthetic":true,"types":[]},{"text":"impl Send for CursorError","synthetic":true,"types":[]},{"text":"impl Send for FontError","synthetic":true,"types":[]},{"text":"impl Send for MatchError","synthetic":true,"types":[]},{"text":"impl Send for DrawableError","synthetic":true,"types":[]},{"text":"impl Send for AccessError","synthetic":true,"types":[]},{"text":"impl Send for AllocError","synthetic":true,"types":[]},{"text":"impl Send for ColormapError","synthetic":true,"types":[]},{"text":"impl Send for GContextError","synthetic":true,"types":[]},{"text":"impl Send for IdChoiceError","synthetic":true,"types":[]},{"text":"impl Send for NameError","synthetic":true,"types":[]},{"text":"impl Send for LengthError","synthetic":true,"types":[]},{"text":"impl Send for ImplementationError","synthetic":true,"types":[]},{"text":"impl Send for Char2b","synthetic":true,"types":[]},{"text":"impl Send for Point","synthetic":true,"types":[]},{"text":"impl Send for Rectangle","synthetic":true,"types":[]},{"text":"impl Send for Arc","synthetic":true,"types":[]},{"text":"impl Send for Format","synthetic":true,"types":[]},{"text":"impl Send for Visualtype","synthetic":true,"types":[]},{"text":"impl Send for Timecoord","synthetic":true,"types":[]},{"text":"impl Send for Fontprop","synthetic":true,"types":[]},{"text":"impl Send for Charinfo","synthetic":true,"types":[]},{"text":"impl Send for Segment","synthetic":true,"types":[]},{"text":"impl Send for Coloritem","synthetic":true,"types":[]},{"text":"impl Send for Rgb","synthetic":true,"types":[]},{"text":"impl Send for PictFormatError","synthetic":true,"types":[]},{"text":"impl Send for PictureError","synthetic":true,"types":[]},{"text":"impl Send for PictOpError","synthetic":true,"types":[]},{"text":"impl Send for GlyphSetError","synthetic":true,"types":[]},{"text":"impl Send for GlyphError","synthetic":true,"types":[]},{"text":"impl Send for Directformat","synthetic":true,"types":[]},{"text":"impl Send for Pictforminfo","synthetic":true,"types":[]},{"text":"impl Send for Pictvisual","synthetic":true,"types":[]},{"text":"impl Send for Indexvalue","synthetic":true,"types":[]},{"text":"impl Send for Color","synthetic":true,"types":[]},{"text":"impl Send for Pointfix","synthetic":true,"types":[]},{"text":"impl Send for Linefix","synthetic":true,"types":[]},{"text":"impl Send for Triangle","synthetic":true,"types":[]},{"text":"impl Send for Trapezoid","synthetic":true,"types":[]},{"text":"impl Send for Glyphinfo","synthetic":true,"types":[]},{"text":"impl Send for Transform","synthetic":true,"types":[]},{"text":"impl Send for Animcursorelt","synthetic":true,"types":[]},{"text":"impl Send for Spanfix","synthetic":true,"types":[]},{"text":"impl Send for Trap","synthetic":true,"types":[]},{"text":"impl Send for BadRegionError","synthetic":true,"types":[]},{"text":"impl !Send for xcb_generic_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_generic_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_generic_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_ge_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_generic_error_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_void_cookie_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_auth_info_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_connection_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_extension_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_special_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_char2b_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_char2b_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_window_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_pixmap_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_cursor_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_font_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_gcontext_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_colormap_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_atom_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_drawable_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_fontable_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_visualid_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_timestamp_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_keysym_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_keycode_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_button_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_point_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_point_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_rectangle_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_rectangle_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_arc_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_arc_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_format_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_format_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_visualtype_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_visualtype_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_depth_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for xcb_depth_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for xcb_screen_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for xcb_screen_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for xcb_setup_request_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for xcb_setup_request_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for xcb_setup_failed_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for xcb_setup_failed_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for xcb_setup_authenticate_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for xcb_setup_authenticate_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for xcb_setup_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for xcb_setup_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for xcb_key_press_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_button_press_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_motion_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_enter_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_focus_in_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_keymap_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_expose_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_graphics_exposure_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_no_exposure_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_visibility_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_create_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_destroy_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_unmap_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_map_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_map_request_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_reparent_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_configure_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_configure_request_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_gravity_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_resize_request_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_circulate_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_property_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_selection_clear_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_selection_request_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_selection_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_colormap_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_client_message_data_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_client_message_data_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_client_message_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_mapping_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_ge_generic_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_request_error_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_value_error_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_create_window_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_change_window_attributes_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_window_attributes_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_window_attributes_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_window_attributes_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_destroy_window_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_destroy_subwindows_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_change_save_set_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_reparent_window_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_map_window_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_map_subwindows_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_unmap_window_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_unmap_subwindows_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_configure_window_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_circulate_window_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_geometry_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_geometry_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_geometry_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_tree_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_tree_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_tree_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_intern_atom_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_intern_atom_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_intern_atom_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_atom_name_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_atom_name_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_atom_name_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_change_property_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_delete_property_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_property_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_property_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_property_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_properties_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_properties_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_properties_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_set_selection_owner_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_selection_owner_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_selection_owner_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_selection_owner_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_convert_selection_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_send_event_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_grab_pointer_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_grab_pointer_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_grab_pointer_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_ungrab_pointer_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_grab_button_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_ungrab_button_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_change_active_pointer_grab_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_grab_keyboard_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_grab_keyboard_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_grab_keyboard_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_ungrab_keyboard_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_grab_key_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_ungrab_key_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_allow_events_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_grab_server_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_ungrab_server_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_pointer_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_pointer_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_pointer_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_timecoord_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_timecoord_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_motion_events_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_motion_events_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_motion_events_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_translate_coordinates_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_translate_coordinates_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_translate_coordinates_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_warp_pointer_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_set_input_focus_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_input_focus_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_input_focus_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_input_focus_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_keymap_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_keymap_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_keymap_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_open_font_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_close_font_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_fontprop_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_fontprop_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_charinfo_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_charinfo_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_font_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_font_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_font_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_text_extents_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_text_extents_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_text_extents_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_str_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for xcb_str_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_fonts_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_fonts_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_fonts_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_fonts_with_info_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_fonts_with_info_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_fonts_with_info_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_set_font_path_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_font_path_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_font_path_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_font_path_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_create_pixmap_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_free_pixmap_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_create_gc_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_change_gc_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_copy_gc_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_set_dashes_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_set_clip_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_free_gc_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_clear_area_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_copy_area_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_copy_plane_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_poly_point_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_poly_line_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_segment_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_segment_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_poly_segment_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_poly_rectangle_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_poly_arc_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_fill_poly_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_poly_fill_rectangle_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_poly_fill_arc_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_put_image_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_image_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_image_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_image_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_poly_text_8_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_poly_text_16_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_image_text_8_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_image_text_16_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_create_colormap_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_free_colormap_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_copy_colormap_and_free_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_install_colormap_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_uninstall_colormap_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_installed_colormaps_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_installed_colormaps_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_installed_colormaps_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_alloc_color_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_alloc_color_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_alloc_color_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_alloc_named_color_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_alloc_named_color_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_alloc_named_color_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_alloc_color_cells_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_alloc_color_cells_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_alloc_color_cells_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_alloc_color_planes_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_alloc_color_planes_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_alloc_color_planes_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_free_colors_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_coloritem_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_coloritem_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_store_colors_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_store_named_color_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_rgb_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_rgb_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_colors_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_colors_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_colors_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_lookup_color_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_lookup_color_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_lookup_color_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_create_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_create_glyph_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_free_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_recolor_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_best_size_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_best_size_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_best_size_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_extension_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_extension_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_query_extension_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_extensions_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_extensions_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_extensions_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_change_keyboard_mapping_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_keyboard_mapping_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_keyboard_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_keyboard_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_change_keyboard_control_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_keyboard_control_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_keyboard_control_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_keyboard_control_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_bell_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_change_pointer_control_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_pointer_control_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_pointer_control_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_pointer_control_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_set_screen_saver_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_screen_saver_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_screen_saver_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_screen_saver_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_change_hosts_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_host_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for xcb_host_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_hosts_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_hosts_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_list_hosts_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_set_access_control_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_set_close_down_mode_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_kill_client_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_rotate_properties_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_force_screen_saver_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_set_pointer_mapping_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_set_pointer_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_set_pointer_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_pointer_mapping_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_pointer_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_pointer_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_set_modifier_mapping_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_set_modifier_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_set_modifier_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_modifier_mapping_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_modifier_mapping_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_get_modifier_mapping_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_no_operation_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_big_requests_enable_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_big_requests_enable_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_big_requests_enable_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xc_misc_get_version_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xc_misc_get_version_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xc_misc_get_version_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xc_misc_get_xid_range_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xc_misc_get_xid_range_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xc_misc_get_xid_range_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xc_misc_get_xid_list_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xc_misc_get_xid_list_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xc_misc_get_xid_list_reply_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_glyph_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_glyphset_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_picture_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_pictformat_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_fixed_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_pict_format_error_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_picture_error_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_pict_op_error_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_glyph_set_error_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_glyph_error_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_directformat_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_directformat_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_pictforminfo_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_pictforminfo_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_pictvisual_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_pictvisual_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_pictdepth_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for xcb_render_pictdepth_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_pictscreen_t","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for xcb_render_pictscreen_iterator_t&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_indexvalue_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_indexvalue_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_color_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_color_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_pointfix_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_pointfix_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_linefix_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_linefix_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_triangle_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_triangle_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_trapezoid_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_trapezoid_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_glyphinfo_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_glyphinfo_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_query_version_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_query_version_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_query_version_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_query_pict_formats_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_query_pict_formats_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_query_pict_formats_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_query_pict_index_values_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_query_pict_index_values_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_query_pict_index_values_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_create_picture_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_change_picture_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_set_picture_clip_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_free_picture_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_composite_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_trapezoids_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_triangles_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_tri_strip_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_tri_fan_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_create_glyph_set_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_reference_glyph_set_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_free_glyph_set_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_add_glyphs_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_free_glyphs_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_composite_glyphs_8_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_composite_glyphs_16_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_composite_glyphs_32_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_fill_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_create_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_transform_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_transform_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_set_picture_transform_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_query_filters_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_query_filters_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_query_filters_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_set_picture_filter_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_animcursorelt_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_animcursorelt_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_create_anim_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_spanfix_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_spanfix_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_trap_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_render_trap_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_add_traps_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_create_solid_fill_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_create_linear_gradient_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_create_radial_gradient_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_render_create_conical_gradient_request_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_shape_op_iterator_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_shape_kind_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_query_version_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_query_version_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_query_version_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_mask_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_combine_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_offset_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_query_extents_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_query_extents_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_query_extents_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_select_input_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_input_selected_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_input_selected_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_input_selected_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_get_rectangles_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_get_rectangles_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_shape_get_rectangles_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_query_version_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_query_version_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_query_version_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_change_save_set_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_selection_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_select_selection_input_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_cursor_notify_event_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_select_cursor_input_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_get_cursor_image_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_get_cursor_image_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_get_cursor_image_reply_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_xfixes_region_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_bad_region_error_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_create_region_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_create_region_from_bitmap_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_create_region_from_window_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_create_region_from_gc_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_create_region_from_picture_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_destroy_region_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_set_region_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_copy_region_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_union_region_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_intersect_region_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_subtract_region_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_invert_region_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_translate_region_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_region_extents_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_fetch_region_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_fetch_region_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_fetch_region_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_set_gc_clip_region_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_set_window_shape_region_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_set_picture_clip_region_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_set_cursor_name_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_get_cursor_name_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_get_cursor_name_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_get_cursor_name_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_get_cursor_image_and_name_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_get_cursor_image_and_name_cookie_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_get_cursor_image_and_name_reply_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_change_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_change_cursor_by_name_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_expand_region_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_hide_cursor_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_show_cursor_request_t","synthetic":true,"types":[]},{"text":"impl !Send for xcb_xfixes_barrier_iterator_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_create_pointer_barrier_request_t","synthetic":true,"types":[]},{"text":"impl Send for xcb_xfixes_delete_pointer_barrier_request_t","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Event&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for Error&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Copy + CookieSeq&gt; Send for Cookie&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for Reply&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Send for Connection","synthetic":false,"types":[]}];
implementors["xcursor"] = [{"text":"impl Send for CursorTheme","synthetic":true,"types":[]},{"text":"impl Send for Image","synthetic":true,"types":[]}];
implementors["xdg"] = [{"text":"impl Send for BaseDirectories","synthetic":true,"types":[]},{"text":"impl Send for BaseDirectoriesError","synthetic":true,"types":[]},{"text":"impl Send for FileFindIterator","synthetic":true,"types":[]}];
implementors["xml"] = [{"text":"impl Send for ParserConfig","synthetic":true,"types":[]},{"text":"impl Send for EmitterConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Send for ReprDisplay&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Send for OwnedName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for OwnedAttribute","synthetic":true,"types":[]},{"text":"impl Send for TextPosition","synthetic":true,"types":[]},{"text":"impl Send for XmlVersion","synthetic":true,"types":[]},{"text":"impl Send for Namespace","synthetic":true,"types":[]},{"text":"impl Send for NamespaceStack","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for NamespaceStackMappings&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for CheckedTarget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for EventReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Events&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for XmlEvent","synthetic":true,"types":[]},{"text":"impl Send for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Send for EventWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for EmitterError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for EndElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for StartElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for XmlEvent&lt;'a&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()