(function() {var implementors = {};
implementors["andrew"] = [{"text":"impl UpperHex for Sides","synthetic":false,"types":[]}];
implementors["draw_state"] = [{"text":"impl UpperHex for ColorMask","synthetic":false,"types":[]},{"text":"impl UpperHex for Mirror","synthetic":false,"types":[]}];
implementors["gfx_core"] = [{"text":"impl UpperHex for Access","synthetic":false,"types":[]},{"text":"impl UpperHex for Bind","synthetic":false,"types":[]},{"text":"impl UpperHex for Usage","synthetic":false,"types":[]},{"text":"impl UpperHex for DepthStencilFlags","synthetic":false,"types":[]}];
implementors["gfx_hal"] = [{"text":"impl UpperHex for Usage","synthetic":false,"types":[]},{"text":"impl UpperHex for Access","synthetic":false,"types":[]},{"text":"impl UpperHex for CommandBufferFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for Aspects","synthetic":false,"types":[]},{"text":"impl UpperHex for ImageFeature","synthetic":false,"types":[]},{"text":"impl UpperHex for BufferFeature","synthetic":false,"types":[]},{"text":"impl UpperHex for ViewCapabilities","synthetic":false,"types":[]},{"text":"impl UpperHex for Usage","synthetic":false,"types":[]},{"text":"impl UpperHex for Access","synthetic":false,"types":[]},{"text":"impl UpperHex for Properties","synthetic":false,"types":[]},{"text":"impl UpperHex for Dependencies","synthetic":false,"types":[]},{"text":"impl UpperHex for CommandPoolCreateFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for DescriptorPoolCreateFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for ColorMask","synthetic":false,"types":[]},{"text":"impl UpperHex for Face","synthetic":false,"types":[]},{"text":"impl UpperHex for PipelineStage","synthetic":false,"types":[]},{"text":"impl UpperHex for ShaderStageFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for PipelineCreationFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for ControlFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for ResultFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for PipelineStatistic","synthetic":false,"types":[]},{"text":"impl UpperHex for PresentMode","synthetic":false,"types":[]},{"text":"impl UpperHex for CompositeAlphaMode","synthetic":false,"types":[]},{"text":"impl UpperHex for Features","synthetic":false,"types":[]},{"text":"impl UpperHex for Hints","synthetic":false,"types":[]}];
implementors["input"] = [{"text":"impl UpperHex for ModifierKey","synthetic":false,"types":[]}];
implementors["naga"] = [{"text":"impl UpperHex for WriterFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for SamplingFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for ImageFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for GlobalUse","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl UpperHex for AtFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for OFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for SealFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for FdFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for SpliceFFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for FallocateFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for ModuleInitFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for DeleteModuleFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MsFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MntFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MQ_OFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for FdFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for InterfaceFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for PollFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for CloneFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for EpollFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for EpollCreateFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for EfdFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MemFdCreateFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for ProtFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MapFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MsFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MlockAllFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for Options","synthetic":false,"types":[]},{"text":"impl UpperHex for QuotaValidFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for SaFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for SfdFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for SockFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for MsgFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for SFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for Mode","synthetic":false,"types":[]},{"text":"impl UpperHex for FsFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for InputFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for OutputFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for ControlFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for LocalFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for WaitPidFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for AddWatchFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for InitFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for TimerFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for TimerSetTimeFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for AccessFlags","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl UpperHex for BigInt","synthetic":false,"types":[]},{"text":"impl UpperHex for BigUint","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T&gt; UpperHex for Complex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UpperHex + Num + PartialOrd + Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["spirv_headers"] = [{"text":"impl UpperHex for ImageOperands","synthetic":false,"types":[]},{"text":"impl UpperHex for FPFastMathMode","synthetic":false,"types":[]},{"text":"impl UpperHex for SelectionControl","synthetic":false,"types":[]},{"text":"impl UpperHex for LoopControl","synthetic":false,"types":[]},{"text":"impl UpperHex for FunctionControl","synthetic":false,"types":[]},{"text":"impl UpperHex for MemorySemantics","synthetic":false,"types":[]},{"text":"impl UpperHex for MemoryAccess","synthetic":false,"types":[]},{"text":"impl UpperHex for KernelProfilingInfo","synthetic":false,"types":[]},{"text":"impl UpperHex for RayFlags","synthetic":false,"types":[]}];
implementors["wayland_client"] = [{"text":"impl UpperHex for DndAction","synthetic":false,"types":[]},{"text":"impl UpperHex for Resize","synthetic":false,"types":[]},{"text":"impl UpperHex for Transient","synthetic":false,"types":[]},{"text":"impl UpperHex for Capability","synthetic":false,"types":[]},{"text":"impl UpperHex for Mode","synthetic":false,"types":[]}];
implementors["wayland_protocols"] = [{"text":"impl UpperHex for ContentHint","synthetic":false,"types":[]},{"text":"impl UpperHex for Anchor","synthetic":false,"types":[]},{"text":"impl UpperHex for Gravity","synthetic":false,"types":[]},{"text":"impl UpperHex for ConstraintAdjustment","synthetic":false,"types":[]},{"text":"impl UpperHex for Anchor","synthetic":false,"types":[]},{"text":"impl UpperHex for Flags","synthetic":false,"types":[]},{"text":"impl UpperHex for ConstraintAdjustment","synthetic":false,"types":[]}];
implementors["wgpu_core"] = [{"text":"impl UpperHex for PipelineFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for BufferUse","synthetic":false,"types":[]},{"text":"impl UpperHex for TextureUse","synthetic":false,"types":[]}];
implementors["wgpu_types"] = [{"text":"impl UpperHex for BackendBit","synthetic":false,"types":[]},{"text":"impl UpperHex for Features","synthetic":false,"types":[]},{"text":"impl UpperHex for ShaderStage","synthetic":false,"types":[]},{"text":"impl UpperHex for ColorWrite","synthetic":false,"types":[]},{"text":"impl UpperHex for BufferUsage","synthetic":false,"types":[]},{"text":"impl UpperHex for TextureUsage","synthetic":false,"types":[]}];
implementors["winit"] = [{"text":"impl UpperHex for ModifiersState","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()