initSidebarItems({"enum":[["Api","Describes an OpenGL-related API."],["DrawError","Error that can happen while drawing."],["Handle","Handle to a shader or a program."],["Profile","Describes the OpenGL context profile."],["RawUniformValue","A raw value of a uniform. \"Raw\" means that it's passed directly with `glUniform`. Textures for example are just passed as integers."],["SwapBuffersError","Error that can happen when swapping buffers."]],"fn":[["get_supported_glsl_version","Given an API version, this function returns the GLSL version that the implementation is required to support."]],"mod":[["backend","The `backend` module allows one to link between glium and the OpenGL context.."],["buffer","A buffer is a memory location accessible to the video card."],["debug",""],["draw_parameters","Describes miscellaneous parameters to be used when drawing."],["framebuffer","Framebuffers allow you to customize the color, depth and stencil buffers you will draw on."],["index","In order to draw, you need to provide a way for the video card to know how to link primitives together."],["pixel_buffer","DEPRECATED. Moved to the `texture` module."],["program","Items related to creating an OpenGL program."],["texture","A texture is an image loaded in video memory, which can be sampled in your shaders."],["uniforms","A uniform is a global variable in your program. In order to draw something, you will need to give `glium` the values of all your uniforms. Objects that implement the `Uniform` trait are here to do that."],["vertex","Contains everything related to vertex sources."]],"struct":[["BlitTarget","Area of a surface in pixels. Similar to a `Rect` except that dimensions can be negative."],["Frame","Implementation of `Surface`, targeting the default framebuffer."],["IncompatibleOpenGl","Returned during Context creation if the OpenGL implementation is too old."],["LinearSyncFence","Prototype for a `SyncFence`."],["Rect","Area of a surface in pixels."],["SyncFence","Provides a way to wait for a server-side operation to be finished."],["Version","Describes a version."]],"trait":[["CapabilitiesSource","Trait for objects that describe the capabilities of an OpenGL backend."],["GlObject","Trait for objects that are OpenGL objects."],["Surface","Object that can be drawn upon."]]});