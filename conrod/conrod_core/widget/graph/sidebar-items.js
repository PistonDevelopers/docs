initSidebarItems({"enum":[["EdgeEvent","Events related to adding and removing edges."],["Event","An interaction has caused some event to occur."],["NodeEvent","Events related to adding and removing nodes."]],"fn":[["edge_node_widget_ids","Returns the `widget::Id`s for the start and end nodes."],["node_widget_id","Returns the `widget::Id` for a node if one exists."]],"mod":[["node","A default container widget to use for nodes that exist within a `Graph` widget."]],"struct":[["Camera","The camera used to view the graph."],["Edge","A context for an edge yielded during the edge instantiation stage."],["EdgeWidget","Returned when an `Edge` is assigned a widget."],["Edges","An iterator-like type yielding a `NodeContext` for every node in the graph."],["Events","An iterator yielding all pending events."],["Graph","A widget used for visualising and manipulating Graph types."],["Layout","Stores the layout of all nodes within the graph."],["NodeContext","A context for a node yielded during the node instantiation stage."],["NodeSocket","Represents a socket connection on a node."],["NodeWidget","Returned when a `NodeContext` is assigned a widget."],["Nodes","An iterator-like type yielding a `NodeContext` for every node in the graph."],["Session","A context for moving through the modes of graph widget instantiation in a type-safe manner."],["SessionEdges","The third stage of the graph's Session event."],["SessionEvents","The first stage of the graph's Session event."],["SessionNodes","The second stage of the graph's Session event."],["State","Unique state for the `Graph`."],["Style","Unique styling for the BorderedRectangle widget."]],"trait":[["NodeId","Traits required by types that may be used as a graph node identifier."]]});