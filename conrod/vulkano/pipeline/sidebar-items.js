initSidebarItems({"enum":[["ComputePipelineCreationError","Error that can happen when creating a compute pipeline."],["GraphicsPipelineCreationError","Error that can happen when creating a graphics pipeline."]],"mod":[["blend","Defines how the color output of the fragment shader is written to the attachment."],["cache","Cache the pipeline objects to disk for faster reloads."],["depth_stencil","Depth and stencil operations description."],["input_assembly","Assembling vertices into primitives."],["multisample","State of multisampling."],["raster","Stage when triangles are turned into pixels."],["shader","Stage of a graphics pipeline."],["vertex","Vertex sources definition"],["viewport","Viewports and scissor boxes."]],"struct":[["ComputePipeline","A pipeline object that describes to the Vulkan implementation how it should perform compute operations."],["ComputePipelineSys","Opaque object that represents the inside of the compute pipeline. Can be made into a trait object."],["GraphicsPipeline","Defines how the implementation should perform a draw operation."],["GraphicsPipelineBuilder","Prototype for a `GraphicsPipeline`."],["GraphicsPipelineSys","Opaque object that represents the inside of the graphics pipeline."]],"trait":[["ComputePipelineAbstract","Trait implemented on all compute pipelines."],["GraphicsPipelineAbstract","Trait implemented on objects that reference a graphics pipeline. Can be made into a trait object. When using this trait `AutoCommandBufferBuilder::draw*` calls will need the buffers to be wrapped in a `vec!()`."]]});