initSidebarItems({"enum":[["AutoCommandBufferBuilderContextError",""],["BeginRenderPassError",""],["BlitImageError",""],["BuildError",""],["ClearColorImageError",""],["CommandBufferExecError","Error that can happen when attempting to execute a command buffer."],["CopyBufferError",""],["CopyBufferImageError",""],["CopyImageError",""],["DispatchError",""],["DrawError",""],["DrawIndexedError",""],["DrawIndexedIndirectError",""],["DrawIndirectError",""],["ExecuteCommandsError",""],["FillBufferError",""],["StateCacherOutcome","Outcome of an operation."],["UpdateBufferError",""]],"mod":[["pool","In the Vulkan API, command buffers must be allocated from command pools."],["submit","Low-level builders that allow submitting an operation to a queue."],["synced","Contains `SyncCommandBufferBuilder` and `SyncCommandBuffer`."],["sys",""],["validity","Functions that check the validity of commands."]],"struct":[["AutoCommandBuffer",""],["AutoCommandBufferBuilder","Note that command buffers allocated from the default command pool (`Arc<StandardCommandPool>`) don't implement the `Send` and `Sync` traits. If you use this pool, then the `AutoCommandBufferBuilder` will not implement `Send` and `Sync` either. Once a command buffer is built, however, it does implement `Send` and `Sync`."],["CommandBufferExecFuture","Represents a command buffer being executed by the GPU and the moment when the execution finishes."],["DispatchIndirectCommand",""],["DrawIndexedIndirectCommand",""],["DrawIndirectCommand",""],["DynamicState","The dynamic state to use for a draw command."],["StateCacher","Keep track of the state of a command buffer builder, so that you don't need to bind objects that were already bound."]],"trait":[["CommandBuffer",""]]});