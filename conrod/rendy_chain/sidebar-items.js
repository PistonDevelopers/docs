initSidebarItems({"fn":[["collect","Calculate automatic `Chains` for nodes. This function tries to find the most appropriate schedule for nodes execution."],["sync","Find required synchronization for all submissions in `Chains`."]],"struct":[["Barrier","Pipeline barrier info."],["Buffer","Buffer resource type."],["Chain","This type corresponds to resource category. All resources from the same category must be accessed as permitted by links of the chain."],["Chains","Result of node scheduler."],["Family","Instances of this type contains array of `Queue`s. All contained queues has identical capabilities."],["Guard","Synchronization for submission at one side."],["Id","Unique resource id."],["Image","Image resource type."],["Link","This type defines what states resource are at some point in time when commands recorded into corresponding submissions are executed. Those commands doesn't required to perform actions with all access types declared by the link. But performing actions with access types not declared by the link is prohibited."],["LinkNode","Node for the link."],["Node","Description of node."],["Queue","Instances of this type contains array of `Submission`s. Those submissions are expected to be submitted in order."],["QueueId","Queue id."],["Schedule","Whole passes schedule."],["Signal","Semaphore signal info. There must be paired wait."],["State","State in which node uses resource and usage flags."],["Submission","This type corresponds to commands that should be recorded into single primary command buffer."],["SubmissionId","Submission id."],["SyncData","Both sides of synchronization for submission."],["Unsynchronized","Placeholder for synchronization type."],["Wait","Semaphore wait info. There must be paired signal."]],"trait":[["AccessFlags","Trait to abstract of specific access flags."],["Resource","Abstracts resource types that uses different usage flags and layouts types."],["UsageFlags","Trait to abstract of specific usage flags."]],"type":[["Barriers","Map of barriers by resource id."],["BufferBarriers","Map of barriers by buffer id."],["BufferState","Type alias for `State<Buffer>`"],["ImageBarriers","Map of barriers by image id."],["ImageState","Type alias for `State<Image>`"]]});