initSidebarItems({"constant":[["CUBE_FACES","A constant array of cube faces in the order they map to the hardware."],["MAX_LEVEL","Maximum accessible mipmap level of an image."]],"enum":[["Anisotropic","Anisotropic filtering description for the sampler."],["CreationError","Error creating a resource."],["CubeFace","The face of a cube image to do an operation on."],["Filter","How to filter the image when sampling. They correspond to increasing levels of quality, but also cost."],["Kind","Specifies the dimensionality of an image to be allocated, along with the number of mipmap layers and MSAA samples if applicable."],["LayerError","An error associated with selected image layer."],["Layout","Specifies options for how memory for an image is arranged. These are hints to the GPU driver and may or may not have actual performance effects, but describe constraints on how the data may be used that a program must obey. They do not specify how channel values or such are laid out in memory; the actual image data is considered opaque."],["Tiling","Image tiling modes."],["ViewCreationError","Error creating a buffer view."],["ViewError","Error creating an `ImageView`."],["ViewKind","Specifies the kind/dimensionality of an image view."],["WrapMode","Specifies how image coordinates outside the range `[0, 1]` are handled."]],"struct":[["Buffer","Generic buffer resource wrapper."],["BufferInfo","Buffer info."],["DescriptorSet","Generic descriptor set resource wrapper."],["DescriptorSetInfo","Descriptor set layout info."],["DescriptorSetLayout","Generic descriptor set layout resource wrapper."],["Escape","Allows values to \"escape\" dropping by sending them to the `Terminal`."],["Extent","Describes the size of an image, which may be up to three dimensional."],["FormatProperties","Image format properties."],["Handle","Allows values to \"escape\" dropping by sending them to the `Terminal`. Permit sharing unlike `Escape`"],["Image","Generic image resource wrapper."],["ImageInfo","Image info."],["ImageView","Generic image view resource wrapper."],["ImageViewInfo","Image view info"],["IndexBufferView","Index buffer view for `bind_index_buffer`."],["Lod","A wrapper for the LOD level of an image. Needed so that we can implement Eq and Hash for it."],["PackedColor","A wrapper for an RGBA color with 8 bits per texel, encoded as a u32."],["ResourceTracker","Resource handler."],["Sampler","Generic sampler resource wrapper."],["SamplerCache","Sampler cache holds handlers to created samplers."],["SamplerDesc","Specifies how to sample from an image.  These are all the parameters available that alter how the GPU goes from a coordinate in an image to producing an actual value from the texture, including filtering/ scaling, wrap mode, etc."],["Subresource","Selector of a concrete subresource in an image."],["SubresourceFootprint","Footprint of a subresource in memory."],["SubresourceLayers","A subset of resource layers contained within an image's level."],["SubresourceRange","A subset of resources contained within an image."],["Terminal","This types allows the user to create `Escape` wrappers. Receives values from dropped `Escape` instances that was created by this `Terminal`."],["ViewCapabilities","Capabilities to create views into an image."]],"type":[["BufferCreationError","Alias for the error to create a buffer."],["ImageCreationError","Alias for the error to create an image."],["ImageViewCreationError","Alias for the error to create an image view."],["Layer","Image layer."],["Level","Image mipmap level."],["NumSamples","Number of MSAA samples."],["Size","Dimension size."],["TexelCoordinate","A texel coordinate in an image."]]});