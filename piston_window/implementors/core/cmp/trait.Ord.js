(function() {var implementors = {};
implementors["andrew"] = [{"text":"impl Ord for Sides","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Ord for BigEndian","synthetic":false,"types":[]},{"text":"impl Ord for LittleEndian","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T:&nbsp;?Sized + Pointable, '_&gt; Ord for Shared&lt;'_, T&gt;","synthetic":false,"types":[]}];
implementors["deflate"] = [{"text":"impl Ord for Compression","synthetic":false,"types":[]},{"text":"impl Ord for MatchingType","synthetic":false,"types":[]}];
implementors["draw_state"] = [{"text":"impl Ord for FrontFace","synthetic":false,"types":[]},{"text":"impl Ord for CullFace","synthetic":false,"types":[]},{"text":"impl Ord for MultiSample","synthetic":false,"types":[]},{"text":"impl Ord for Comparison","synthetic":false,"types":[]},{"text":"impl Ord for StencilOp","synthetic":false,"types":[]},{"text":"impl Ord for StencilSide","synthetic":false,"types":[]},{"text":"impl Ord for Stencil","synthetic":false,"types":[]},{"text":"impl Ord for Depth","synthetic":false,"types":[]},{"text":"impl Ord for Equation","synthetic":false,"types":[]},{"text":"impl Ord for BlendValue","synthetic":false,"types":[]},{"text":"impl Ord for Factor","synthetic":false,"types":[]},{"text":"impl Ord for BlendChannel","synthetic":false,"types":[]},{"text":"impl Ord for ColorMask","synthetic":false,"types":[]},{"text":"impl Ord for Mirror","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L:&nbsp;Ord, R:&nbsp;Ord&gt; Ord for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["gfx_core"] = [{"text":"impl Ord for ChannelType","synthetic":false,"types":[]},{"text":"impl Ord for Int","synthetic":false,"types":[]},{"text":"impl Ord for Uint","synthetic":false,"types":[]},{"text":"impl Ord for Inorm","synthetic":false,"types":[]},{"text":"impl Ord for Unorm","synthetic":false,"types":[]},{"text":"impl Ord for Float","synthetic":false,"types":[]},{"text":"impl Ord for Srgb","synthetic":false,"types":[]},{"text":"impl Ord for SurfaceType","synthetic":false,"types":[]},{"text":"impl Ord for R4_G4","synthetic":false,"types":[]},{"text":"impl Ord for R4_G4_B4_A4","synthetic":false,"types":[]},{"text":"impl Ord for R5_G5_B5_A1","synthetic":false,"types":[]},{"text":"impl Ord for R5_G6_B5","synthetic":false,"types":[]},{"text":"impl Ord for R8","synthetic":false,"types":[]},{"text":"impl Ord for R8_G8","synthetic":false,"types":[]},{"text":"impl Ord for R8_G8_B8_A8","synthetic":false,"types":[]},{"text":"impl Ord for R10_G10_B10_A2","synthetic":false,"types":[]},{"text":"impl Ord for R11_G11_B10","synthetic":false,"types":[]},{"text":"impl Ord for R16","synthetic":false,"types":[]},{"text":"impl Ord for R16_G16","synthetic":false,"types":[]},{"text":"impl Ord for R16_G16_B16","synthetic":false,"types":[]},{"text":"impl Ord for R16_G16_B16_A16","synthetic":false,"types":[]},{"text":"impl Ord for R32","synthetic":false,"types":[]},{"text":"impl Ord for R32_G32","synthetic":false,"types":[]},{"text":"impl Ord for R32_G32_B32","synthetic":false,"types":[]},{"text":"impl Ord for R32_G32_B32_A32","synthetic":false,"types":[]},{"text":"impl Ord for B8_G8_R8_A8","synthetic":false,"types":[]},{"text":"impl Ord for D16","synthetic":false,"types":[]},{"text":"impl Ord for D24","synthetic":false,"types":[]},{"text":"impl Ord for D24_S8","synthetic":false,"types":[]},{"text":"impl Ord for D32","synthetic":false,"types":[]},{"text":"impl Ord for BC1_R8_G8_B8","synthetic":false,"types":[]},{"text":"impl Ord for BC3_R8_G8_B8_A8","synthetic":false,"types":[]},{"text":"impl Ord for ChannelSource","synthetic":false,"types":[]},{"text":"impl Ord for Swizzle","synthetic":false,"types":[]},{"text":"impl Ord for Format","synthetic":false,"types":[]},{"text":"impl Ord for U8Norm","synthetic":false,"types":[]},{"text":"impl Ord for I8Norm","synthetic":false,"types":[]},{"text":"impl Ord for U16Norm","synthetic":false,"types":[]},{"text":"impl Ord for I16Norm","synthetic":false,"types":[]},{"text":"impl Ord for F16","synthetic":false,"types":[]},{"text":"impl Ord for Usage","synthetic":false,"types":[]},{"text":"impl Ord for Access","synthetic":false,"types":[]},{"text":"impl Ord for Bind","synthetic":false,"types":[]},{"text":"impl Ord for Usage","synthetic":false,"types":[]},{"text":"impl Ord for AaMode","synthetic":false,"types":[]},{"text":"impl Ord for FilterMethod","synthetic":false,"types":[]},{"text":"impl Ord for CubeFace","synthetic":false,"types":[]},{"text":"impl Ord for Kind","synthetic":false,"types":[]},{"text":"impl Ord for Mipmap","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Ord&gt; Ord for ImageInfoCommon&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Ord&gt; Ord for TextureCopyRegion&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Ord for WrapMode","synthetic":false,"types":[]},{"text":"impl Ord for Info","synthetic":false,"types":[]},{"text":"impl Ord for ResourceDesc","synthetic":false,"types":[]},{"text":"impl Ord for RenderDesc","synthetic":false,"types":[]},{"text":"impl Ord for DepthStencilFlags","synthetic":false,"types":[]},{"text":"impl Ord for DepthStencilDesc","synthetic":false,"types":[]},{"text":"impl Ord for IndexType","synthetic":false,"types":[]}];
implementors["graphics_api_version"] = [{"text":"impl Ord for Version","synthetic":false,"types":[]}];
implementors["input"] = [{"text":"impl Ord for ControllerButton","synthetic":false,"types":[]},{"text":"impl Ord for ControllerHat","synthetic":false,"types":[]},{"text":"impl Ord for ModifierKey","synthetic":false,"types":[]},{"text":"impl Ord for Key","synthetic":false,"types":[]},{"text":"impl Ord for MouseButton","synthetic":false,"types":[]},{"text":"impl Ord for EventId","synthetic":false,"types":[]},{"text":"impl Ord for AfterRenderArgs","synthetic":false,"types":[]},{"text":"impl Ord for ButtonState","synthetic":false,"types":[]},{"text":"impl Ord for ButtonArgs","synthetic":false,"types":[]},{"text":"impl Ord for CloseArgs","synthetic":false,"types":[]},{"text":"impl Ord for Touch","synthetic":false,"types":[]},{"text":"impl Ord for Button","synthetic":false,"types":[]},{"text":"impl Ord for HatState","synthetic":false,"types":[]},{"text":"impl Ord for FileDrag","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Ord for Level","synthetic":false,"types":[]},{"text":"impl Ord for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Ord for Metadata&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Ord for MetadataBuilder&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl Ord for AtFlags","synthetic":false,"types":[]},{"text":"impl Ord for OFlag","synthetic":false,"types":[]},{"text":"impl Ord for SealFlag","synthetic":false,"types":[]},{"text":"impl Ord for FdFlag","synthetic":false,"types":[]},{"text":"impl Ord for SpliceFFlags","synthetic":false,"types":[]},{"text":"impl Ord for FallocateFlags","synthetic":false,"types":[]},{"text":"impl Ord for ModuleInitFlags","synthetic":false,"types":[]},{"text":"impl Ord for DeleteModuleFlags","synthetic":false,"types":[]},{"text":"impl Ord for MsFlags","synthetic":false,"types":[]},{"text":"impl Ord for MntFlags","synthetic":false,"types":[]},{"text":"impl Ord for MQ_OFlag","synthetic":false,"types":[]},{"text":"impl Ord for FdFlag","synthetic":false,"types":[]},{"text":"impl Ord for InterfaceFlags","synthetic":false,"types":[]},{"text":"impl Ord for PollFlags","synthetic":false,"types":[]},{"text":"impl Ord for CloneFlags","synthetic":false,"types":[]},{"text":"impl Ord for AioFsyncMode","synthetic":false,"types":[]},{"text":"impl Ord for LioOpcode","synthetic":false,"types":[]},{"text":"impl Ord for LioMode","synthetic":false,"types":[]},{"text":"impl Ord for EpollFlags","synthetic":false,"types":[]},{"text":"impl Ord for EpollCreateFlags","synthetic":false,"types":[]},{"text":"impl Ord for EfdFlags","synthetic":false,"types":[]},{"text":"impl Ord for MemFdCreateFlag","synthetic":false,"types":[]},{"text":"impl Ord for ProtFlags","synthetic":false,"types":[]},{"text":"impl Ord for MapFlags","synthetic":false,"types":[]},{"text":"impl Ord for MmapAdvise","synthetic":false,"types":[]},{"text":"impl Ord for MsFlags","synthetic":false,"types":[]},{"text":"impl Ord for MlockAllFlags","synthetic":false,"types":[]},{"text":"impl Ord for Request","synthetic":false,"types":[]},{"text":"impl Ord for Event","synthetic":false,"types":[]},{"text":"impl Ord for Options","synthetic":false,"types":[]},{"text":"impl Ord for QuotaType","synthetic":false,"types":[]},{"text":"impl Ord for QuotaFmt","synthetic":false,"types":[]},{"text":"impl Ord for QuotaValidFlags","synthetic":false,"types":[]},{"text":"impl Ord for RebootMode","synthetic":false,"types":[]},{"text":"impl Ord for Signal","synthetic":false,"types":[]},{"text":"impl Ord for SaFlags","synthetic":false,"types":[]},{"text":"impl Ord for SigmaskHow","synthetic":false,"types":[]},{"text":"impl Ord for SfdFlags","synthetic":false,"types":[]},{"text":"impl Ord for SockFlag","synthetic":false,"types":[]},{"text":"impl Ord for MsgFlags","synthetic":false,"types":[]},{"text":"impl Ord for SFlag","synthetic":false,"types":[]},{"text":"impl Ord for Mode","synthetic":false,"types":[]},{"text":"impl Ord for FsFlags","synthetic":false,"types":[]},{"text":"impl Ord for BaudRate","synthetic":false,"types":[]},{"text":"impl Ord for SetArg","synthetic":false,"types":[]},{"text":"impl Ord for FlushArg","synthetic":false,"types":[]},{"text":"impl Ord for FlowArg","synthetic":false,"types":[]},{"text":"impl Ord for SpecialCharacterIndices","synthetic":false,"types":[]},{"text":"impl Ord for InputFlags","synthetic":false,"types":[]},{"text":"impl Ord for OutputFlags","synthetic":false,"types":[]},{"text":"impl Ord for ControlFlags","synthetic":false,"types":[]},{"text":"impl Ord for LocalFlags","synthetic":false,"types":[]},{"text":"impl Ord for TimeSpec","synthetic":false,"types":[]},{"text":"impl Ord for TimeVal","synthetic":false,"types":[]},{"text":"impl Ord for WaitPidFlag","synthetic":false,"types":[]},{"text":"impl Ord for AddWatchFlags","synthetic":false,"types":[]},{"text":"impl Ord for InitFlags","synthetic":false,"types":[]},{"text":"impl Ord for WatchDescriptor","synthetic":false,"types":[]},{"text":"impl Ord for AccessFlags","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T:&nbsp;Clone + Integer&gt; Ord for Ratio&lt;T&gt;","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T:&nbsp;Float&gt; Ord for OrderedFloat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Float&gt; Ord for NotNan&lt;T&gt;","synthetic":false,"types":[]}];
implementors["png"] = [{"text":"impl Ord for Transformations","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Ord for Ident","synthetic":false,"types":[]}];
implementors["rusttype"] = [{"text":"impl&lt;N:&nbsp;Ord&gt; Ord for Point&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Ord&gt; Ord for Vector&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Ord&gt; Ord for Rect&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Ord for Codepoint","synthetic":false,"types":[]},{"text":"impl Ord for GlyphId","synthetic":false,"types":[]}];
implementors["shader_version"] = [{"text":"impl Ord for OpenGL","synthetic":false,"types":[]},{"text":"impl Ord for GLSL","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Ord for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Ord,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["stb_truetype"] = [{"text":"impl Ord for PlatformId","synthetic":false,"types":[]},{"text":"impl Ord for UnicodeEid","synthetic":false,"types":[]},{"text":"impl Ord for MicrosoftEid","synthetic":false,"types":[]},{"text":"impl Ord for MacEid","synthetic":false,"types":[]},{"text":"impl Ord for MicrosoftLang","synthetic":false,"types":[]},{"text":"impl Ord for MacLang","synthetic":false,"types":[]},{"text":"impl Ord for PlatformEncodingLanguageId","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Ord for Lifetime","synthetic":false,"types":[]}];
implementors["wayland_client"] = [{"text":"impl Ord for DndAction","synthetic":false,"types":[]},{"text":"impl Ord for Resize","synthetic":false,"types":[]},{"text":"impl Ord for Transient","synthetic":false,"types":[]},{"text":"impl Ord for Capability","synthetic":false,"types":[]},{"text":"impl Ord for Mode","synthetic":false,"types":[]}];
implementors["wayland_protocols"] = [{"text":"impl Ord for ContentHint","synthetic":false,"types":[]},{"text":"impl Ord for Anchor","synthetic":false,"types":[]},{"text":"impl Ord for Gravity","synthetic":false,"types":[]},{"text":"impl Ord for ConstraintAdjustment","synthetic":false,"types":[]},{"text":"impl Ord for Anchor","synthetic":false,"types":[]},{"text":"impl Ord for Flags","synthetic":false,"types":[]},{"text":"impl Ord for ConstraintAdjustment","synthetic":false,"types":[]}];
implementors["winit"] = [{"text":"impl Ord for VirtualKeyCode","synthetic":false,"types":[]},{"text":"impl Ord for WindowId","synthetic":false,"types":[]},{"text":"impl Ord for DeviceId","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()