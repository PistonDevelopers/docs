(function() {var implementors = {};
implementors["adler"] = [{"text":"impl Clone for Adler32","synthetic":false,"types":[]}];
implementors["adler32"] = [{"text":"impl Clone for RollingAdler32","synthetic":false,"types":[]}];
implementors["andrew"] = [{"text":"impl Clone for Sides","synthetic":false,"types":[]}];
implementors["bytemuck"] = [{"text":"impl Clone for PodCastError","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Clone for BigEndian","synthetic":false,"types":[]},{"text":"impl Clone for LittleEndian","synthetic":false,"types":[]}];
implementors["crc32fast"] = [{"text":"impl Clone for Hasher","synthetic":false,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; Clone for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for SendTimeoutError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RecvError","synthetic":false,"types":[]},{"text":"impl Clone for TryRecvError","synthetic":false,"types":[]},{"text":"impl Clone for RecvTimeoutError","synthetic":false,"types":[]},{"text":"impl Clone for TrySelectError","synthetic":false,"types":[]},{"text":"impl Clone for SelectTimeoutError","synthetic":false,"types":[]},{"text":"impl Clone for TryReadyError","synthetic":false,"types":[]},{"text":"impl Clone for ReadyTimeoutError","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Select&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; Clone for Stealer&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Steal&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T:&nbsp;?Sized + Pointable&gt; Clone for Atomic&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Owned&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Pointable, '_&gt; Clone for Shared&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Collector","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for CachePadded&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Unparker","synthetic":false,"types":[]},{"text":"impl Clone for WaitGroup","synthetic":false,"types":[]}];
implementors["deflate"] = [{"text":"impl Clone for Compression","synthetic":false,"types":[]},{"text":"impl Clone for SpecialOptions","synthetic":false,"types":[]},{"text":"impl Clone for CompressionOptions","synthetic":false,"types":[]},{"text":"impl Clone for MatchingType","synthetic":false,"types":[]}];
implementors["draw_state"] = [{"text":"impl Clone for FrontFace","synthetic":false,"types":[]},{"text":"impl Clone for Offset","synthetic":false,"types":[]},{"text":"impl Clone for CullFace","synthetic":false,"types":[]},{"text":"impl Clone for RasterMethod","synthetic":false,"types":[]},{"text":"impl Clone for MultiSample","synthetic":false,"types":[]},{"text":"impl Clone for Rasterizer","synthetic":false,"types":[]},{"text":"impl Clone for Comparison","synthetic":false,"types":[]},{"text":"impl Clone for StencilOp","synthetic":false,"types":[]},{"text":"impl Clone for StencilSide","synthetic":false,"types":[]},{"text":"impl Clone for Stencil","synthetic":false,"types":[]},{"text":"impl Clone for Depth","synthetic":false,"types":[]},{"text":"impl Clone for Equation","synthetic":false,"types":[]},{"text":"impl Clone for BlendValue","synthetic":false,"types":[]},{"text":"impl Clone for Factor","synthetic":false,"types":[]},{"text":"impl Clone for BlendChannel","synthetic":false,"types":[]},{"text":"impl Clone for Blend","synthetic":false,"types":[]},{"text":"impl Clone for ColorMask","synthetic":false,"types":[]},{"text":"impl Clone for Color","synthetic":false,"types":[]},{"text":"impl Clone for RefValues","synthetic":false,"types":[]},{"text":"impl Clone for Rect","synthetic":false,"types":[]},{"text":"impl Clone for Mirror","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L:&nbsp;Clone, R:&nbsp;Clone&gt; Clone for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["event_loop"] = [{"text":"impl Clone for EventSettings","synthetic":false,"types":[]},{"text":"impl Clone for Events","synthetic":false,"types":[]}];
implementors["gfx"] = [{"text":"impl&lt;S:&nbsp;Clone, D:&nbsp;Clone&gt; Clone for CopyError&lt;S, D&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for UpdateError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for PipelineStateError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for Slice&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for IndexBuffer&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, I&gt; Clone for VertexBufferCommon&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RawVertexBuffer","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Structure&lt;ConstFormat&gt;&gt; Clone for ConstantBuffer&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RawConstantBuffer","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;ToUniform&gt; Clone for Global&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RawGlobal","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for ShaderResource&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RawShaderResource","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for UnorderedAccess&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Sampler","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for TextureSampler&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for RenderTarget&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for BlendTarget&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RawRenderTarget","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for DepthTarget&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for StencilTarget&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for DepthStencilTarget&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Scissor","synthetic":false,"types":[]},{"text":"impl Clone for BlendRef","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for RawDataSet&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for ElementError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for InitError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources, M:&nbsp;Clone&gt; Clone for PipelineState&lt;R, M&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ProgramError","synthetic":false,"types":[]}];
implementors["gfx_core"] = [{"text":"impl Clone for Role","synthetic":false,"types":[]},{"text":"impl Clone for Info","synthetic":false,"types":[]},{"text":"impl Clone for CreationError","synthetic":false,"types":[]},{"text":"impl Clone for ClearColor","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for AccessInfo&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl Clone for DummyResources","synthetic":false,"types":[]},{"text":"impl Clone for DummyFence","synthetic":false,"types":[]},{"text":"impl Clone for DummyMapping","synthetic":false,"types":[]},{"text":"impl Clone for ResourceViewError","synthetic":false,"types":[]},{"text":"impl Clone for TargetViewError","synthetic":false,"types":[]},{"text":"impl Clone for CombinedError","synthetic":false,"types":[]},{"text":"impl Clone for ChannelType","synthetic":false,"types":[]},{"text":"impl Clone for Int","synthetic":false,"types":[]},{"text":"impl Clone for Uint","synthetic":false,"types":[]},{"text":"impl Clone for Inorm","synthetic":false,"types":[]},{"text":"impl Clone for Unorm","synthetic":false,"types":[]},{"text":"impl Clone for Float","synthetic":false,"types":[]},{"text":"impl Clone for Srgb","synthetic":false,"types":[]},{"text":"impl Clone for SurfaceType","synthetic":false,"types":[]},{"text":"impl Clone for R4_G4","synthetic":false,"types":[]},{"text":"impl Clone for R4_G4_B4_A4","synthetic":false,"types":[]},{"text":"impl Clone for R5_G5_B5_A1","synthetic":false,"types":[]},{"text":"impl Clone for R5_G6_B5","synthetic":false,"types":[]},{"text":"impl Clone for R8","synthetic":false,"types":[]},{"text":"impl Clone for R8_G8","synthetic":false,"types":[]},{"text":"impl Clone for R8_G8_B8_A8","synthetic":false,"types":[]},{"text":"impl Clone for R10_G10_B10_A2","synthetic":false,"types":[]},{"text":"impl Clone for R11_G11_B10","synthetic":false,"types":[]},{"text":"impl Clone for R16","synthetic":false,"types":[]},{"text":"impl Clone for R16_G16","synthetic":false,"types":[]},{"text":"impl Clone for R16_G16_B16","synthetic":false,"types":[]},{"text":"impl Clone for R16_G16_B16_A16","synthetic":false,"types":[]},{"text":"impl Clone for R32","synthetic":false,"types":[]},{"text":"impl Clone for R32_G32","synthetic":false,"types":[]},{"text":"impl Clone for R32_G32_B32","synthetic":false,"types":[]},{"text":"impl Clone for R32_G32_B32_A32","synthetic":false,"types":[]},{"text":"impl Clone for B8_G8_R8_A8","synthetic":false,"types":[]},{"text":"impl Clone for D16","synthetic":false,"types":[]},{"text":"impl Clone for D24","synthetic":false,"types":[]},{"text":"impl Clone for D24_S8","synthetic":false,"types":[]},{"text":"impl Clone for D32","synthetic":false,"types":[]},{"text":"impl Clone for BC1_R8_G8_B8","synthetic":false,"types":[]},{"text":"impl Clone for BC3_R8_G8_B8_A8","synthetic":false,"types":[]},{"text":"impl Clone for ChannelSource","synthetic":false,"types":[]},{"text":"impl Clone for Swizzle","synthetic":false,"types":[]},{"text":"impl Clone for Format","synthetic":false,"types":[]},{"text":"impl Clone for U8Norm","synthetic":false,"types":[]},{"text":"impl Clone for I8Norm","synthetic":false,"types":[]},{"text":"impl Clone for U16Norm","synthetic":false,"types":[]},{"text":"impl Clone for I16Norm","synthetic":false,"types":[]},{"text":"impl Clone for F16","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for RawBuffer&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Resources, T&gt; Clone for Buffer&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for Shader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Shader: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for Program&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for RawPipelineState&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::PipelineStateObject: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for RawTexture&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Resources, T&gt; Clone for Texture&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for RawShaderResourceView&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::ShaderResourceView: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Resources, T&gt; Clone for ShaderResourceView&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for RawUnorderedAccessView&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::UnorderedAccessView: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Resources, T&gt; Clone for UnorderedAccessView&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for RawRenderTargetView&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::RenderTargetView: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for RawDepthStencilView&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::DepthStencilView: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Resources, T&gt; Clone for RenderTargetView&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Resources, T&gt; Clone for DepthStencilView&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for Sampler&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Sampler: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for Fence&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Fence: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Usage","synthetic":false,"types":[]},{"text":"impl Clone for Access","synthetic":false,"types":[]},{"text":"impl Clone for Bind","synthetic":false,"types":[]},{"text":"impl Clone for CreationError","synthetic":false,"types":[]},{"text":"impl Clone for ColorInfo","synthetic":false,"types":[]},{"text":"impl Clone for DepthStencilInfo","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone&gt; Clone for Element&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl Clone for VertexBufferDesc","synthetic":false,"types":[]},{"text":"impl Clone for Descriptor","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for VertexBufferSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Buffer: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for ConstantBufferParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Buffer: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for ResourceViewParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::ShaderResourceView: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for UnorderedViewParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::UnorderedAccessView: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for SamplerParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Sampler: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for PixelTargetSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::RenderTargetView: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::DepthStencilView: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;R::DepthStencilView: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for IsArray","synthetic":false,"types":[]},{"text":"impl Clone for IsComparison","synthetic":false,"types":[]},{"text":"impl Clone for IsMultiSample","synthetic":false,"types":[]},{"text":"impl Clone for IsRect","synthetic":false,"types":[]},{"text":"impl Clone for MatrixFormat","synthetic":false,"types":[]},{"text":"impl Clone for TextureType","synthetic":false,"types":[]},{"text":"impl Clone for SamplerType","synthetic":false,"types":[]},{"text":"impl Clone for BaseType","synthetic":false,"types":[]},{"text":"impl Clone for ContainerType","synthetic":false,"types":[]},{"text":"impl Clone for Stage","synthetic":false,"types":[]},{"text":"impl Clone for UniformValue","synthetic":false,"types":[]},{"text":"impl Clone for Usage","synthetic":false,"types":[]},{"text":"impl Clone for AttributeVar","synthetic":false,"types":[]},{"text":"impl Clone for ConstVar","synthetic":false,"types":[]},{"text":"impl Clone for ConstantBufferVar","synthetic":false,"types":[]},{"text":"impl Clone for TextureVar","synthetic":false,"types":[]},{"text":"impl Clone for UnorderedVar","synthetic":false,"types":[]},{"text":"impl Clone for SamplerVar","synthetic":false,"types":[]},{"text":"impl Clone for OutputVar","synthetic":false,"types":[]},{"text":"impl Clone for ProgramInfo","synthetic":false,"types":[]},{"text":"impl Clone for CompatibilityError","synthetic":false,"types":[]},{"text":"impl Clone for CreateShaderError","synthetic":false,"types":[]},{"text":"impl Clone for CreateProgramError","synthetic":false,"types":[]},{"text":"impl Clone for CreationError","synthetic":false,"types":[]},{"text":"impl Clone for LayerError","synthetic":false,"types":[]},{"text":"impl Clone for AaMode","synthetic":false,"types":[]},{"text":"impl Clone for FilterMethod","synthetic":false,"types":[]},{"text":"impl Clone for CubeFace","synthetic":false,"types":[]},{"text":"impl Clone for Kind","synthetic":false,"types":[]},{"text":"impl Clone for Mipmap","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone&gt; Clone for ImageInfoCommon&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for TextureCopyRegion&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for WrapMode","synthetic":false,"types":[]},{"text":"impl Clone for Lod","synthetic":false,"types":[]},{"text":"impl Clone for PackedColor","synthetic":false,"types":[]},{"text":"impl Clone for SamplerInfo","synthetic":false,"types":[]},{"text":"impl Clone for Info","synthetic":false,"types":[]},{"text":"impl Clone for ResourceDesc","synthetic":false,"types":[]},{"text":"impl Clone for RenderDesc","synthetic":false,"types":[]},{"text":"impl Clone for DepthStencilFlags","synthetic":false,"types":[]},{"text":"impl Clone for DepthStencilDesc","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for VertexShader&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for HullShader&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for DomainShader&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for GeometryShader&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for PixelShader&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + Resources&gt; Clone for ShaderSet&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Capabilities","synthetic":false,"types":[]},{"text":"impl Clone for Primitive","synthetic":false,"types":[]},{"text":"impl Clone for IndexType","synthetic":false,"types":[]},{"text":"impl Clone for SubmissionError","synthetic":false,"types":[]},{"text":"impl Clone for AdapterInfo","synthetic":false,"types":[]},{"text":"impl Clone for Frame","synthetic":false,"types":[]}];
implementors["gfx_device_gl"] = [{"text":"impl Clone for Factory","synthetic":false,"types":[]},{"text":"impl Clone for Version","synthetic":false,"types":[]},{"text":"impl Clone for PlatformName","synthetic":false,"types":[]},{"text":"impl Clone for Fence","synthetic":false,"types":[]},{"text":"impl Clone for Resources","synthetic":false,"types":[]},{"text":"impl Clone for BufferElement","synthetic":false,"types":[]},{"text":"impl Clone for OutputMerger","synthetic":false,"types":[]},{"text":"impl Clone for PipelineState","synthetic":false,"types":[]},{"text":"impl Clone for NewTexture","synthetic":false,"types":[]},{"text":"impl Clone for ResourceView","synthetic":false,"types":[]},{"text":"impl Clone for FatSampler","synthetic":false,"types":[]},{"text":"impl Clone for TargetView","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["gfx_gl"] = [{"text":"impl Clone for FnPtr","synthetic":false,"types":[]},{"text":"impl Clone for Gl","synthetic":false,"types":[]}];
implementors["gfx_texture"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Flip","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for Texture&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Resources,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["gif"] = [{"text":"impl Clone for DisposalMethod","synthetic":false,"types":[]},{"text":"impl Clone for Block","synthetic":false,"types":[]},{"text":"impl Clone for AnyExtension","synthetic":false,"types":[]},{"text":"impl Clone for Extension","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Frame&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ColorOutput","synthetic":false,"types":[]},{"text":"impl Clone for MemoryLimit","synthetic":false,"types":[]},{"text":"impl Clone for DecodeOptions","synthetic":false,"types":[]}];
implementors["glutin"] = [{"text":"impl Clone for PossiblyCurrent","synthetic":false,"types":[]},{"text":"impl Clone for NotCurrent","synthetic":false,"types":[]},{"text":"impl Clone for RawHandle","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Clone + ContextCurrentState&gt; Clone for ContextBuilder&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Api","synthetic":false,"types":[]},{"text":"impl Clone for GlProfile","synthetic":false,"types":[]},{"text":"impl Clone for GlRequest","synthetic":false,"types":[]},{"text":"impl Clone for Robustness","synthetic":false,"types":[]},{"text":"impl Clone for ReleaseBehavior","synthetic":false,"types":[]},{"text":"impl Clone for PixelFormat","synthetic":false,"types":[]},{"text":"impl Clone for PixelFormatRequirements","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for GlAttributes&lt;S&gt;","synthetic":false,"types":[]}];
implementors["glutin_egl_sys"] = [{"text":"impl Clone for FnPtr","synthetic":false,"types":[]},{"text":"impl Clone for Egl","synthetic":false,"types":[]}];
implementors["glutin_glx_sys"] = [{"text":"impl Clone for FnPtr","synthetic":false,"types":[]},{"text":"impl Clone for Glx","synthetic":false,"types":[]},{"text":"impl Clone for FnPtr","synthetic":false,"types":[]},{"text":"impl Clone for Glx","synthetic":false,"types":[]}];
implementors["graphics"] = [{"text":"impl Clone for DrawState","synthetic":false,"types":[]},{"text":"impl Clone for Blend","synthetic":false,"types":[]},{"text":"impl Clone for Stencil","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Clone + 'a + ImageSize&gt; Clone for Character&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Context","synthetic":false,"types":[]},{"text":"impl Clone for Polygon","synthetic":false,"types":[]},{"text":"impl Clone for Shape","synthetic":false,"types":[]},{"text":"impl Clone for Line","synthetic":false,"types":[]},{"text":"impl Clone for CircleArc","synthetic":false,"types":[]},{"text":"impl Clone for Border","synthetic":false,"types":[]},{"text":"impl Clone for Ellipse","synthetic":false,"types":[]},{"text":"impl Clone for Shape","synthetic":false,"types":[]},{"text":"impl Clone for Border","synthetic":false,"types":[]},{"text":"impl Clone for Rectangle","synthetic":false,"types":[]},{"text":"impl Clone for Image","synthetic":false,"types":[]},{"text":"impl Clone for Text","synthetic":false,"types":[]},{"text":"impl Clone for Grid","synthetic":false,"types":[]},{"text":"impl Clone for GridCells","synthetic":false,"types":[]}];
implementors["graphics_api_version"] = [{"text":"impl Clone for Version","synthetic":false,"types":[]}];
implementors["image"] = [{"text":"impl Clone for UnsupportedErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for ParameterErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for LimitErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for ImageFormatHint","synthetic":false,"types":[]},{"text":"impl Clone for Rect","synthetic":false,"types":[]},{"text":"impl Clone for BiLevel","synthetic":false,"types":[]},{"text":"impl Clone for FilterType","synthetic":false,"types":[]},{"text":"impl&lt;Buffer:&nbsp;Clone&gt; Clone for FlatSamples&lt;Buffer&gt;","synthetic":false,"types":[]},{"text":"impl Clone for SampleLayout","synthetic":false,"types":[]},{"text":"impl&lt;Buffer:&nbsp;Clone, P:&nbsp;Clone + Pixel&gt; Clone for View&lt;Buffer, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buffer: AsRef&lt;[P::Subpixel]&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Buffer:&nbsp;Clone, P:&nbsp;Clone + Pixel&gt; Clone for ViewMut&lt;Buffer, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buffer: AsMut&lt;[P::Subpixel]&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for NormalForm","synthetic":false,"types":[]},{"text":"impl Clone for DXTVariant","synthetic":false,"types":[]},{"text":"impl Clone for Rgbe8Pixel","synthetic":false,"types":[]},{"text":"impl Clone for HdrMetadata","synthetic":false,"types":[]},{"text":"impl Clone for PixelDensityUnit","synthetic":false,"types":[]},{"text":"impl Clone for PixelDensity","synthetic":false,"types":[]},{"text":"impl Clone for CompressionType","synthetic":false,"types":[]},{"text":"impl Clone for FilterType","synthetic":false,"types":[]},{"text":"impl Clone for SampleEncoding","synthetic":false,"types":[]},{"text":"impl Clone for PNMSubtype","synthetic":false,"types":[]},{"text":"impl Clone for BitmapHeader","synthetic":false,"types":[]},{"text":"impl Clone for GraymapHeader","synthetic":false,"types":[]},{"text":"impl Clone for PixmapHeader","synthetic":false,"types":[]},{"text":"impl Clone for ArbitraryHeader","synthetic":false,"types":[]},{"text":"impl Clone for ArbitraryTuplType","synthetic":false,"types":[]},{"text":"impl Clone for Frame","synthetic":false,"types":[]},{"text":"impl Clone for Frame","synthetic":false,"types":[]},{"text":"impl Clone for Delay","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Pixel, '_&gt; Clone for Pixels&lt;'_, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Pixel, '_&gt; Clone for Rows&lt;'_, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Pixel, '_&gt; Clone for EnumeratePixels&lt;'_, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Pixel, '_&gt; Clone for EnumerateRows&lt;'_, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P, Container&gt; Clone for ImageBuffer&lt;P, Container&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Pixel,<br>&nbsp;&nbsp;&nbsp;&nbsp;Container: Deref&lt;Target = [P::Subpixel]&gt; + Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for ColorType","synthetic":false,"types":[]},{"text":"impl Clone for ExtendedColorType","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Primitive&gt; Clone for Rgb&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Primitive&gt; Clone for Bgr&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Primitive&gt; Clone for Luma&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Primitive&gt; Clone for Rgba&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Primitive&gt; Clone for Bgra&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Primitive&gt; Clone for LumaA&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for DynamicImage","synthetic":false,"types":[]},{"text":"impl Clone for ImageFormat","synthetic":false,"types":[]},{"text":"impl Clone for ImageOutputFormat","synthetic":false,"types":[]},{"text":"impl Clone for Progress","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;?Sized, '_&gt; Clone for Pixels&lt;'_, I&gt;","synthetic":false,"types":[]}];
implementors["input"] = [{"text":"impl Clone for ControllerButton","synthetic":false,"types":[]},{"text":"impl Clone for ControllerHat","synthetic":false,"types":[]},{"text":"impl Clone for ControllerAxisArgs","synthetic":false,"types":[]},{"text":"impl Clone for ModifierKey","synthetic":false,"types":[]},{"text":"impl Clone for Key","synthetic":false,"types":[]},{"text":"impl Clone for MouseButton","synthetic":false,"types":[]},{"text":"impl Clone for EventId","synthetic":false,"types":[]},{"text":"impl Clone for AfterRenderArgs","synthetic":false,"types":[]},{"text":"impl Clone for ButtonState","synthetic":false,"types":[]},{"text":"impl Clone for ButtonArgs","synthetic":false,"types":[]},{"text":"impl Clone for CloseArgs","synthetic":false,"types":[]},{"text":"impl Clone for IdleArgs","synthetic":false,"types":[]},{"text":"impl Clone for RenderArgs","synthetic":false,"types":[]},{"text":"impl Clone for ResizeArgs","synthetic":false,"types":[]},{"text":"impl Clone for Touch","synthetic":false,"types":[]},{"text":"impl Clone for TouchArgs","synthetic":false,"types":[]},{"text":"impl Clone for UpdateArgs","synthetic":false,"types":[]},{"text":"impl Clone for Button","synthetic":false,"types":[]},{"text":"impl Clone for Motion","synthetic":false,"types":[]},{"text":"impl Clone for HatState","synthetic":false,"types":[]},{"text":"impl Clone for FileDrag","synthetic":false,"types":[]},{"text":"impl Clone for Input","synthetic":false,"types":[]},{"text":"impl Clone for Loop","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]}];
implementors["interpolation"] = [{"text":"impl Clone for EaseFunction","synthetic":false,"types":[]}];
implementors["jpeg_decoder"] = [{"text":"impl Clone for PixelFormat","synthetic":false,"types":[]},{"text":"impl Clone for ImageInfo","synthetic":false,"types":[]}];
implementors["libc"] = [{"text":"impl Clone for DIR","synthetic":false,"types":[]},{"text":"impl Clone for group","synthetic":false,"types":[]},{"text":"impl Clone for utimbuf","synthetic":false,"types":[]},{"text":"impl Clone for timeval","synthetic":false,"types":[]},{"text":"impl Clone for timespec","synthetic":false,"types":[]},{"text":"impl Clone for rlimit","synthetic":false,"types":[]},{"text":"impl Clone for rusage","synthetic":false,"types":[]},{"text":"impl Clone for ipv6_mreq","synthetic":false,"types":[]},{"text":"impl Clone for hostent","synthetic":false,"types":[]},{"text":"impl Clone for iovec","synthetic":false,"types":[]},{"text":"impl Clone for pollfd","synthetic":false,"types":[]},{"text":"impl Clone for winsize","synthetic":false,"types":[]},{"text":"impl Clone for linger","synthetic":false,"types":[]},{"text":"impl Clone for sigval","synthetic":false,"types":[]},{"text":"impl Clone for itimerval","synthetic":false,"types":[]},{"text":"impl Clone for tms","synthetic":false,"types":[]},{"text":"impl Clone for servent","synthetic":false,"types":[]},{"text":"impl Clone for protoent","synthetic":false,"types":[]},{"text":"impl Clone for FILE","synthetic":false,"types":[]},{"text":"impl Clone for fpos_t","synthetic":false,"types":[]},{"text":"impl Clone for timezone","synthetic":false,"types":[]},{"text":"impl Clone for in_addr","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreq","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreq_source","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_in","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_in6","synthetic":false,"types":[]},{"text":"impl Clone for addrinfo","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_ll","synthetic":false,"types":[]},{"text":"impl Clone for fd_set","synthetic":false,"types":[]},{"text":"impl Clone for tm","synthetic":false,"types":[]},{"text":"impl Clone for sched_param","synthetic":false,"types":[]},{"text":"impl Clone for Dl_info","synthetic":false,"types":[]},{"text":"impl Clone for lconv","synthetic":false,"types":[]},{"text":"impl Clone for in_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for ifaddrs","synthetic":false,"types":[]},{"text":"impl Clone for in6_rtmsg","synthetic":false,"types":[]},{"text":"impl Clone for arpreq","synthetic":false,"types":[]},{"text":"impl Clone for arpreq_old","synthetic":false,"types":[]},{"text":"impl Clone for arphdr","synthetic":false,"types":[]},{"text":"impl Clone for mmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for epoll_event","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_un","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_storage","synthetic":false,"types":[]},{"text":"impl Clone for utsname","synthetic":false,"types":[]},{"text":"impl Clone for sigevent","synthetic":false,"types":[]},{"text":"impl Clone for fpos64_t","synthetic":false,"types":[]},{"text":"impl Clone for rlimit64","synthetic":false,"types":[]},{"text":"impl Clone for glob_t","synthetic":false,"types":[]},{"text":"impl Clone for passwd","synthetic":false,"types":[]},{"text":"impl Clone for spwd","synthetic":false,"types":[]},{"text":"impl Clone for dqblk","synthetic":false,"types":[]},{"text":"impl Clone for signalfd_siginfo","synthetic":false,"types":[]},{"text":"impl Clone for itimerspec","synthetic":false,"types":[]},{"text":"impl Clone for fsid_t","synthetic":false,"types":[]},{"text":"impl Clone for packet_mreq","synthetic":false,"types":[]},{"text":"impl Clone for cpu_set_t","synthetic":false,"types":[]},{"text":"impl Clone for if_nameindex","synthetic":false,"types":[]},{"text":"impl Clone for msginfo","synthetic":false,"types":[]},{"text":"impl Clone for sembuf","synthetic":false,"types":[]},{"text":"impl Clone for input_event","synthetic":false,"types":[]},{"text":"impl Clone for input_id","synthetic":false,"types":[]},{"text":"impl Clone for input_absinfo","synthetic":false,"types":[]},{"text":"impl Clone for input_keymap_entry","synthetic":false,"types":[]},{"text":"impl Clone for input_mask","synthetic":false,"types":[]},{"text":"impl Clone for ff_replay","synthetic":false,"types":[]},{"text":"impl Clone for ff_trigger","synthetic":false,"types":[]},{"text":"impl Clone for ff_envelope","synthetic":false,"types":[]},{"text":"impl Clone for ff_constant_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_ramp_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_condition_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_periodic_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_rumble_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_effect","synthetic":false,"types":[]},{"text":"impl Clone for dl_phdr_info","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Ehdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Ehdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Sym","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Sym","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Phdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Phdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Shdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Shdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Chdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Chdr","synthetic":false,"types":[]},{"text":"impl Clone for ucred","synthetic":false,"types":[]},{"text":"impl Clone for mntent","synthetic":false,"types":[]},{"text":"impl Clone for posix_spawn_file_actions_t","synthetic":false,"types":[]},{"text":"impl Clone for posix_spawnattr_t","synthetic":false,"types":[]},{"text":"impl Clone for genlmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for in6_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for arpd_request","synthetic":false,"types":[]},{"text":"impl Clone for inotify_event","synthetic":false,"types":[]},{"text":"impl Clone for fanotify_response","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_vm","synthetic":false,"types":[]},{"text":"impl Clone for regmatch_t","synthetic":false,"types":[]},{"text":"impl Clone for sock_extended_err","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_nl","synthetic":false,"types":[]},{"text":"impl Clone for dirent","synthetic":false,"types":[]},{"text":"impl Clone for dirent64","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_alg","synthetic":false,"types":[]},{"text":"impl Clone for af_alg_iv","synthetic":false,"types":[]},{"text":"impl Clone for mq_attr","synthetic":false,"types":[]},{"text":"impl Clone for statx","synthetic":false,"types":[]},{"text":"impl Clone for statx_timestamp","synthetic":false,"types":[]},{"text":"impl Clone for aiocb","synthetic":false,"types":[]},{"text":"impl Clone for __exit_status","synthetic":false,"types":[]},{"text":"impl Clone for __timeval","synthetic":false,"types":[]},{"text":"impl Clone for glob64_t","synthetic":false,"types":[]},{"text":"impl Clone for msghdr","synthetic":false,"types":[]},{"text":"impl Clone for cmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for termios","synthetic":false,"types":[]},{"text":"impl Clone for mallinfo","synthetic":false,"types":[]},{"text":"impl Clone for nlmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for nlmsgerr","synthetic":false,"types":[]},{"text":"impl Clone for nl_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for nl_mmap_req","synthetic":false,"types":[]},{"text":"impl Clone for nl_mmap_hdr","synthetic":false,"types":[]},{"text":"impl Clone for nlattr","synthetic":false,"types":[]},{"text":"impl Clone for rtentry","synthetic":false,"types":[]},{"text":"impl Clone for timex","synthetic":false,"types":[]},{"text":"impl Clone for ntptimeval","synthetic":false,"types":[]},{"text":"impl Clone for regex_t","synthetic":false,"types":[]},{"text":"impl Clone for utmpx","synthetic":false,"types":[]},{"text":"impl Clone for sigset_t","synthetic":false,"types":[]},{"text":"impl Clone for sysinfo","synthetic":false,"types":[]},{"text":"impl Clone for msqid_ds","synthetic":false,"types":[]},{"text":"impl Clone for sigaction","synthetic":false,"types":[]},{"text":"impl Clone for statfs","synthetic":false,"types":[]},{"text":"impl Clone for flock","synthetic":false,"types":[]},{"text":"impl Clone for flock64","synthetic":false,"types":[]},{"text":"impl Clone for siginfo_t","synthetic":false,"types":[]},{"text":"impl Clone for stack_t","synthetic":false,"types":[]},{"text":"impl Clone for stat","synthetic":false,"types":[]},{"text":"impl Clone for stat64","synthetic":false,"types":[]},{"text":"impl Clone for statfs64","synthetic":false,"types":[]},{"text":"impl Clone for statvfs64","synthetic":false,"types":[]},{"text":"impl Clone for pthread_attr_t","synthetic":false,"types":[]},{"text":"impl Clone for _libc_fpxreg","synthetic":false,"types":[]},{"text":"impl Clone for _libc_xmmreg","synthetic":false,"types":[]},{"text":"impl Clone for _libc_fpstate","synthetic":false,"types":[]},{"text":"impl Clone for user_regs_struct","synthetic":false,"types":[]},{"text":"impl Clone for user","synthetic":false,"types":[]},{"text":"impl Clone for mcontext_t","synthetic":false,"types":[]},{"text":"impl Clone for ipc_perm","synthetic":false,"types":[]},{"text":"impl Clone for shmid_ds","synthetic":false,"types":[]},{"text":"impl Clone for termios2","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreqn","synthetic":false,"types":[]},{"text":"impl Clone for user_fpregs_struct","synthetic":false,"types":[]},{"text":"impl Clone for ucontext_t","synthetic":false,"types":[]},{"text":"impl Clone for statvfs","synthetic":false,"types":[]},{"text":"impl Clone for max_align_t","synthetic":false,"types":[]},{"text":"impl Clone for sem_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_mutexattr_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_rwlockattr_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_condattr_t","synthetic":false,"types":[]},{"text":"impl Clone for fanotify_event_metadata","synthetic":false,"types":[]},{"text":"impl Clone for pthread_cond_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_mutex_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_rwlock_t","synthetic":false,"types":[]},{"text":"impl Clone for in6_addr","synthetic":false,"types":[]}];
implementors["libloading"] = [{"text":"impl&lt;T&gt; Clone for Symbol&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'lib, T&gt; Clone for Symbol&lt;'lib, T&gt;","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Clone for Level","synthetic":false,"types":[]},{"text":"impl Clone for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Record&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Metadata&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["memmap"] = [{"text":"impl Clone for MmapOptions","synthetic":false,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Clone for CompressionStrategy","synthetic":false,"types":[]},{"text":"impl Clone for TDEFLFlush","synthetic":false,"types":[]},{"text":"impl Clone for TDEFLStatus","synthetic":false,"types":[]},{"text":"impl Clone for CompressionLevel","synthetic":false,"types":[]},{"text":"impl Clone for TINFLStatus","synthetic":false,"types":[]},{"text":"impl Clone for MZFlush","synthetic":false,"types":[]},{"text":"impl Clone for MZStatus","synthetic":false,"types":[]},{"text":"impl Clone for MZError","synthetic":false,"types":[]},{"text":"impl Clone for DataFormat","synthetic":false,"types":[]},{"text":"impl Clone for StreamResult","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl Clone for Entry","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Errno","synthetic":false,"types":[]},{"text":"impl Clone for AtFlags","synthetic":false,"types":[]},{"text":"impl Clone for OFlag","synthetic":false,"types":[]},{"text":"impl Clone for SealFlag","synthetic":false,"types":[]},{"text":"impl Clone for FdFlag","synthetic":false,"types":[]},{"text":"impl Clone for FlockArg","synthetic":false,"types":[]},{"text":"impl Clone for SpliceFFlags","synthetic":false,"types":[]},{"text":"impl Clone for FallocateFlags","synthetic":false,"types":[]},{"text":"impl Clone for InterfaceAddress","synthetic":false,"types":[]},{"text":"impl Clone for ModuleInitFlags","synthetic":false,"types":[]},{"text":"impl Clone for DeleteModuleFlags","synthetic":false,"types":[]},{"text":"impl Clone for MsFlags","synthetic":false,"types":[]},{"text":"impl Clone for MntFlags","synthetic":false,"types":[]},{"text":"impl Clone for MQ_OFlag","synthetic":false,"types":[]},{"text":"impl Clone for FdFlag","synthetic":false,"types":[]},{"text":"impl Clone for MqAttr","synthetic":false,"types":[]},{"text":"impl Clone for InterfaceFlags","synthetic":false,"types":[]},{"text":"impl Clone for PollFd","synthetic":false,"types":[]},{"text":"impl Clone for PollFlags","synthetic":false,"types":[]},{"text":"impl Clone for OpenptyResult","synthetic":false,"types":[]},{"text":"impl Clone for ForkptyResult","synthetic":false,"types":[]},{"text":"impl Clone for CloneFlags","synthetic":false,"types":[]},{"text":"impl Clone for CpuSet","synthetic":false,"types":[]},{"text":"impl Clone for AioFsyncMode","synthetic":false,"types":[]},{"text":"impl Clone for LioOpcode","synthetic":false,"types":[]},{"text":"impl Clone for LioMode","synthetic":false,"types":[]},{"text":"impl Clone for AioCancelStat","synthetic":false,"types":[]},{"text":"impl Clone for EpollFlags","synthetic":false,"types":[]},{"text":"impl Clone for EpollOp","synthetic":false,"types":[]},{"text":"impl Clone for EpollCreateFlags","synthetic":false,"types":[]},{"text":"impl Clone for EpollEvent","synthetic":false,"types":[]},{"text":"impl Clone for EfdFlags","synthetic":false,"types":[]},{"text":"impl Clone for MemFdCreateFlag","synthetic":false,"types":[]},{"text":"impl Clone for ProtFlags","synthetic":false,"types":[]},{"text":"impl Clone for MapFlags","synthetic":false,"types":[]},{"text":"impl Clone for MmapAdvise","synthetic":false,"types":[]},{"text":"impl Clone for MsFlags","synthetic":false,"types":[]},{"text":"impl Clone for MlockAllFlags","synthetic":false,"types":[]},{"text":"impl Clone for Request","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]},{"text":"impl Clone for Options","synthetic":false,"types":[]},{"text":"impl Clone for QuotaType","synthetic":false,"types":[]},{"text":"impl Clone for QuotaFmt","synthetic":false,"types":[]},{"text":"impl Clone for QuotaValidFlags","synthetic":false,"types":[]},{"text":"impl Clone for Dqblk","synthetic":false,"types":[]},{"text":"impl Clone for RebootMode","synthetic":false,"types":[]},{"text":"impl Clone for FdSet","synthetic":false,"types":[]},{"text":"impl Clone for Signal","synthetic":false,"types":[]},{"text":"impl Clone for SignalIterator","synthetic":false,"types":[]},{"text":"impl Clone for SaFlags","synthetic":false,"types":[]},{"text":"impl Clone for SigmaskHow","synthetic":false,"types":[]},{"text":"impl Clone for SigSet","synthetic":false,"types":[]},{"text":"impl Clone for SigHandler","synthetic":false,"types":[]},{"text":"impl Clone for SigAction","synthetic":false,"types":[]},{"text":"impl Clone for SigevNotify","synthetic":false,"types":[]},{"text":"impl Clone for SigEvent","synthetic":false,"types":[]},{"text":"impl Clone for SfdFlags","synthetic":false,"types":[]},{"text":"impl Clone for SignalFd","synthetic":false,"types":[]},{"text":"impl Clone for AddressFamily","synthetic":false,"types":[]},{"text":"impl Clone for InetAddr","synthetic":false,"types":[]},{"text":"impl Clone for IpAddr","synthetic":false,"types":[]},{"text":"impl Clone for Ipv4Addr","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6Addr","synthetic":false,"types":[]},{"text":"impl Clone for UnixAddr","synthetic":false,"types":[]},{"text":"impl Clone for SockAddr","synthetic":false,"types":[]},{"text":"impl Clone for NetlinkAddr","synthetic":false,"types":[]},{"text":"impl Clone for AlgAddr","synthetic":false,"types":[]},{"text":"impl Clone for LinkAddr","synthetic":false,"types":[]},{"text":"impl Clone for ReuseAddr","synthetic":false,"types":[]},{"text":"impl Clone for ReusePort","synthetic":false,"types":[]},{"text":"impl Clone for TcpNoDelay","synthetic":false,"types":[]},{"text":"impl Clone for Linger","synthetic":false,"types":[]},{"text":"impl Clone for IpAddMembership","synthetic":false,"types":[]},{"text":"impl Clone for IpDropMembership","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6AddMembership","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6DropMembership","synthetic":false,"types":[]},{"text":"impl Clone for IpMulticastTtl","synthetic":false,"types":[]},{"text":"impl Clone for IpMulticastLoop","synthetic":false,"types":[]},{"text":"impl Clone for ReceiveTimeout","synthetic":false,"types":[]},{"text":"impl Clone for SendTimeout","synthetic":false,"types":[]},{"text":"impl Clone for Broadcast","synthetic":false,"types":[]},{"text":"impl Clone for OobInline","synthetic":false,"types":[]},{"text":"impl Clone for SocketError","synthetic":false,"types":[]},{"text":"impl Clone for KeepAlive","synthetic":false,"types":[]},{"text":"impl Clone for PeerCredentials","synthetic":false,"types":[]},{"text":"impl Clone for TcpKeepIdle","synthetic":false,"types":[]},{"text":"impl Clone for RcvBuf","synthetic":false,"types":[]},{"text":"impl Clone for SndBuf","synthetic":false,"types":[]},{"text":"impl Clone for RcvBufForce","synthetic":false,"types":[]},{"text":"impl Clone for SndBufForce","synthetic":false,"types":[]},{"text":"impl Clone for SockType","synthetic":false,"types":[]},{"text":"impl Clone for AcceptConn","synthetic":false,"types":[]},{"text":"impl Clone for OriginalDst","synthetic":false,"types":[]},{"text":"impl Clone for ReceiveTimestamp","synthetic":false,"types":[]},{"text":"impl Clone for IpTransparent","synthetic":false,"types":[]},{"text":"impl Clone for Mark","synthetic":false,"types":[]},{"text":"impl Clone for PassCred","synthetic":false,"types":[]},{"text":"impl Clone for TcpCongestion","synthetic":false,"types":[]},{"text":"impl Clone for Ipv4PacketInfo","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6RecvPacketInfo","synthetic":false,"types":[]},{"text":"impl Clone for AlgSetAeadAuthSize","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for AlgSetKey&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for SockType","synthetic":false,"types":[]},{"text":"impl Clone for SockProtocol","synthetic":false,"types":[]},{"text":"impl Clone for SockFlag","synthetic":false,"types":[]},{"text":"impl Clone for MsgFlags","synthetic":false,"types":[]},{"text":"impl Clone for UnixCredentials","synthetic":false,"types":[]},{"text":"impl Clone for IpMembershipRequest","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6MembershipRequest","synthetic":false,"types":[]},{"text":"impl Clone for SockLevel","synthetic":false,"types":[]},{"text":"impl Clone for Shutdown","synthetic":false,"types":[]},{"text":"impl Clone for SFlag","synthetic":false,"types":[]},{"text":"impl Clone for Mode","synthetic":false,"types":[]},{"text":"impl Clone for FchmodatFlags","synthetic":false,"types":[]},{"text":"impl Clone for UtimensatFlags","synthetic":false,"types":[]},{"text":"impl Clone for FsFlags","synthetic":false,"types":[]},{"text":"impl Clone for Statvfs","synthetic":false,"types":[]},{"text":"impl Clone for SysInfo","synthetic":false,"types":[]},{"text":"impl Clone for Termios","synthetic":false,"types":[]},{"text":"impl Clone for BaudRate","synthetic":false,"types":[]},{"text":"impl Clone for SetArg","synthetic":false,"types":[]},{"text":"impl Clone for FlushArg","synthetic":false,"types":[]},{"text":"impl Clone for FlowArg","synthetic":false,"types":[]},{"text":"impl Clone for SpecialCharacterIndices","synthetic":false,"types":[]},{"text":"impl Clone for InputFlags","synthetic":false,"types":[]},{"text":"impl Clone for OutputFlags","synthetic":false,"types":[]},{"text":"impl Clone for ControlFlags","synthetic":false,"types":[]},{"text":"impl Clone for LocalFlags","synthetic":false,"types":[]},{"text":"impl Clone for TimeSpec","synthetic":false,"types":[]},{"text":"impl Clone for TimeVal","synthetic":false,"types":[]},{"text":"impl Clone for RemoteIoVec","synthetic":false,"types":[]},{"text":"impl Clone for UtsName","synthetic":false,"types":[]},{"text":"impl Clone for WaitPidFlag","synthetic":false,"types":[]},{"text":"impl Clone for WaitStatus","synthetic":false,"types":[]},{"text":"impl Clone for AddWatchFlags","synthetic":false,"types":[]},{"text":"impl Clone for InitFlags","synthetic":false,"types":[]},{"text":"impl Clone for Inotify","synthetic":false,"types":[]},{"text":"impl Clone for WatchDescriptor","synthetic":false,"types":[]},{"text":"impl Clone for UContext","synthetic":false,"types":[]},{"text":"impl Clone for Uid","synthetic":false,"types":[]},{"text":"impl Clone for Gid","synthetic":false,"types":[]},{"text":"impl Clone for Pid","synthetic":false,"types":[]},{"text":"impl Clone for ForkResult","synthetic":false,"types":[]},{"text":"impl Clone for FchownatFlags","synthetic":false,"types":[]},{"text":"impl Clone for Whence","synthetic":false,"types":[]},{"text":"impl Clone for PathconfVar","synthetic":false,"types":[]},{"text":"impl Clone for SysconfVar","synthetic":false,"types":[]},{"text":"impl Clone for AccessFlags","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for ExtendedGcd&lt;A&gt;","synthetic":false,"types":[]}];
implementors["num_iter"] = [{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for Range&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for RangeInclusive&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for RangeStep&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for RangeStepInclusive&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for RangeFrom&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for RangeStepFrom&lt;A&gt;","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Ratio&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ParseRatioError","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T:&nbsp;Clone + Float&gt; Clone for OrderedFloat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Float&gt; Clone for NotNan&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for FloatIsNan","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone&gt; Clone for ParseNotNanError&lt;E&gt;","synthetic":false,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Clone for WaitTimeoutResult","synthetic":false,"types":[]},{"text":"impl Clone for OnceState","synthetic":false,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Clone for ParkResult","synthetic":false,"types":[]},{"text":"impl Clone for UnparkResult","synthetic":false,"types":[]},{"text":"impl Clone for RequeueOp","synthetic":false,"types":[]},{"text":"impl Clone for FilterOp","synthetic":false,"types":[]},{"text":"impl Clone for UnparkToken","synthetic":false,"types":[]},{"text":"impl Clone for ParkToken","synthetic":false,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl&lt;'a&gt; Clone for PercentEncode&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for PercentDecode&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["png"] = [{"text":"impl Clone for ColorType","synthetic":false,"types":[]},{"text":"impl Clone for BitDepth","synthetic":false,"types":[]},{"text":"impl Clone for PixelDimensions","synthetic":false,"types":[]},{"text":"impl Clone for Unit","synthetic":false,"types":[]},{"text":"impl Clone for DisposeOp","synthetic":false,"types":[]},{"text":"impl Clone for BlendOp","synthetic":false,"types":[]},{"text":"impl Clone for FrameControl","synthetic":false,"types":[]},{"text":"impl Clone for AnimationControl","synthetic":false,"types":[]},{"text":"impl Clone for Compression","synthetic":false,"types":[]},{"text":"impl Clone for Info","synthetic":false,"types":[]},{"text":"impl Clone for Transformations","synthetic":false,"types":[]},{"text":"impl Clone for Limits","synthetic":false,"types":[]},{"text":"impl Clone for FilterType","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Clone for TokenStream","synthetic":false,"types":[]},{"text":"impl Clone for Span","synthetic":false,"types":[]},{"text":"impl Clone for TokenTree","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for Delimiter","synthetic":false,"types":[]},{"text":"impl Clone for Punct","synthetic":false,"types":[]},{"text":"impl Clone for Spacing","synthetic":false,"types":[]},{"text":"impl Clone for Ident","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for IntoIter","synthetic":false,"types":[]}];
implementors["raw_window_handle"] = [{"text":"impl Clone for XlibHandle","synthetic":false,"types":[]},{"text":"impl Clone for XcbHandle","synthetic":false,"types":[]},{"text":"impl Clone for WaylandHandle","synthetic":false,"types":[]},{"text":"impl Clone for RawWindowHandle","synthetic":false,"types":[]}];
implementors["rayon"] = [{"text":"impl&lt;T:&nbsp;Clone + Ord + Send&gt; Clone for IntoIter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Ord + Sync&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, K:&nbsp;Ord + Sync, V:&nbsp;Sync&gt; Clone for Iter&lt;'a, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Ord + Sync + 'a&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, K:&nbsp;Hash + Eq + Sync, V:&nbsp;Sync&gt; Clone for Iter&lt;'a, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Hash + Eq + Sync&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for IntoIter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for IntoIter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone, B:&nbsp;Clone&gt; Clone for Chain&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: ParallelIterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: ParallelIterator&lt;Item = A::Item&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Chunks&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: IndexedParallelIterator,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator&gt; Clone for Cloned&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator&gt; Clone for Copied&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Clone for Empty&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + IndexedParallelIterator&gt; Clone for Enumerate&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, P:&nbsp;Clone&gt; Clone for Filter&lt;I, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, P:&nbsp;Clone&gt; Clone for FilterMap&lt;I, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, F:&nbsp;Clone&gt; Clone for FlatMap&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, F:&nbsp;Clone&gt; Clone for FlatMapIter&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator&gt; Clone for Flatten&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator&gt; Clone for FlattenIter&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, ID:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Fold&lt;I, ID, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, U:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for FoldWith&lt;I, U, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, F:&nbsp;Clone&gt; Clone for Inspect&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, J:&nbsp;Clone&gt; Clone for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: IndexedParallelIterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: IndexedParallelIterator&lt;Item = I::Item&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, J:&nbsp;Clone&gt; Clone for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: IndexedParallelIterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: IndexedParallelIterator&lt;Item = I::Item&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: ParallelIterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + IndexedParallelIterator&gt; Clone for MinLen&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + IndexedParallelIterator&gt; Clone for MaxLen&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, F:&nbsp;Clone&gt; Clone for Map&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, T:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for MapWith&lt;I, T, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, INIT:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for MapInit&lt;I, INIT, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for MultiZip&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for Once&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator&gt; Clone for PanicFuse&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Iter:&nbsp;Clone&gt; Clone for IterBridge&lt;Iter&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + IndexedParallelIterator, P:&nbsp;Clone&gt; Clone for Positions&lt;I, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for Repeat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for RepeatN&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + IndexedParallelIterator&gt; Clone for Rev&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Skip&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for Split&lt;D, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Take&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, U:&nbsp;Clone, ID:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for TryFold&lt;I, U, ID, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, U:&nbsp;Clone + Try, F:&nbsp;Clone&gt; Clone for TryFoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U::Ok: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator, F:&nbsp;Clone&gt; Clone for Update&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + ParallelIterator&gt; Clone for WhileSome&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone + IndexedParallelIterator, B:&nbsp;Clone + IndexedParallelIterator&gt; Clone for Zip&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone + IndexedParallelIterator, B:&nbsp;Clone + IndexedParallelIterator&gt; Clone for ZipEq&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + IndexedParallelIterator&gt; Clone for StepBy&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for IntoIter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Iter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Iter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for IntoIter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, T:&nbsp;Sync&gt; Clone for Iter&lt;'data, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, T:&nbsp;Sync&gt; Clone for Chunks&lt;'data, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, T:&nbsp;Sync&gt; Clone for ChunksExact&lt;'data, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, T:&nbsp;Sync&gt; Clone for Windows&lt;'data, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, T, P:&nbsp;Clone&gt; Clone for Split&lt;'data, T, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch&gt; Clone for Chars&lt;'ch&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch&gt; Clone for CharIndices&lt;'ch&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch&gt; Clone for Bytes&lt;'ch&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch&gt; Clone for EncodeUtf16&lt;'ch&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch, P:&nbsp;Clone + Pattern&gt; Clone for Split&lt;'ch, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch, P:&nbsp;Clone + Pattern&gt; Clone for SplitTerminator&lt;'ch, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch&gt; Clone for Lines&lt;'ch&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch&gt; Clone for SplitWhitespace&lt;'ch&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch, P:&nbsp;Clone + Pattern&gt; Clone for Matches&lt;'ch, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ch, P:&nbsp;Clone + Pattern&gt; Clone for MatchIndices&lt;'ch, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Send&gt; Clone for IntoIter&lt;T&gt;","synthetic":false,"types":[]}];
implementors["rusttype"] = [{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Point&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Vector&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Line","synthetic":false,"types":[]},{"text":"impl Clone for Curve","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Clone&gt; Clone for Rect&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for FontCollection&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Font&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for SharedBytes&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Codepoint","synthetic":false,"types":[]},{"text":"impl Clone for GlyphId","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Glyph&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for HMetrics","synthetic":false,"types":[]},{"text":"impl Clone for VMetrics","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ScaledGlyph&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for PositionedGlyph&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Scale","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b, I:&nbsp;Clone + Iterator&gt; Clone for GlyphIter&lt;'a, 'b, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: IntoGlyphId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; Clone for LayoutIter&lt;'a, 'b&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Segment","synthetic":false,"types":[]},{"text":"impl Clone for Contour","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for UnitDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for BoolDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for IsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for UsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for F32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for F64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for CharDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for StrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for BorrowedStrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for StringDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, E&gt; Clone for CowStrDeserializer&lt;'a, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for BorrowedBytesDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, E:&nbsp;Clone&gt; Clone for SeqDeserializer&lt;I, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for SeqAccessDeserializer&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, I, E&gt; Clone for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Pair,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I::Item as Pair&gt;::Second: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for MapAccessDeserializer&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl Clone for IgnoredAny","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Unexpected&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["shader_version"] = [{"text":"impl Clone for OpenGL","synthetic":false,"types":[]},{"text":"impl Clone for GLSL","synthetic":false,"types":[]}];
implementors["shared_library"] = [{"text":"impl Clone for LoadingError","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Clone for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["smithay_client_toolkit"] = [{"text":"impl Clone for ModifiersState","synthetic":false,"types":[]},{"text":"impl Clone for Mode","synthetic":false,"types":[]},{"text":"impl Clone for OutputInfo","synthetic":false,"types":[]},{"text":"impl Clone for OutputMgr","synthetic":false,"types":[]},{"text":"impl Clone for ThemedPointer","synthetic":false,"types":[]},{"text":"impl Clone for AutoPointer","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]}];
implementors["stb_truetype"] = [{"text":"impl&lt;Data:&nbsp;Clone + Deref&lt;Target = [u8]&gt;&gt; Clone for FontInfo&lt;Data&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Vertex","synthetic":false,"types":[]},{"text":"impl Clone for VertexType","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Rect&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for HMetrics","synthetic":false,"types":[]},{"text":"impl Clone for VMetrics","synthetic":false,"types":[]},{"text":"impl Clone for PlatformId","synthetic":false,"types":[]},{"text":"impl Clone for UnicodeEid","synthetic":false,"types":[]},{"text":"impl Clone for MicrosoftEid","synthetic":false,"types":[]},{"text":"impl Clone for MacEid","synthetic":false,"types":[]},{"text":"impl Clone for MicrosoftLang","synthetic":false,"types":[]},{"text":"impl Clone for MacLang","synthetic":false,"types":[]},{"text":"impl Clone for PlatformEncodingLanguageId","synthetic":false,"types":[]},{"text":"impl&lt;'a, Data:&nbsp;Clone + Deref&lt;Target = [u8]&gt;&gt; Clone for FontNameIter&lt;'a, Data&gt;","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Clone for Underscore","synthetic":false,"types":[]},{"text":"impl Clone for Abstract","synthetic":false,"types":[]},{"text":"impl Clone for As","synthetic":false,"types":[]},{"text":"impl Clone for Async","synthetic":false,"types":[]},{"text":"impl Clone for Auto","synthetic":false,"types":[]},{"text":"impl Clone for Await","synthetic":false,"types":[]},{"text":"impl Clone for Become","synthetic":false,"types":[]},{"text":"impl Clone for Box","synthetic":false,"types":[]},{"text":"impl Clone for Break","synthetic":false,"types":[]},{"text":"impl Clone for Const","synthetic":false,"types":[]},{"text":"impl Clone for Continue","synthetic":false,"types":[]},{"text":"impl Clone for Crate","synthetic":false,"types":[]},{"text":"impl Clone for Default","synthetic":false,"types":[]},{"text":"impl Clone for Do","synthetic":false,"types":[]},{"text":"impl Clone for Dyn","synthetic":false,"types":[]},{"text":"impl Clone for Else","synthetic":false,"types":[]},{"text":"impl Clone for Enum","synthetic":false,"types":[]},{"text":"impl Clone for Extern","synthetic":false,"types":[]},{"text":"impl Clone for Final","synthetic":false,"types":[]},{"text":"impl Clone for Fn","synthetic":false,"types":[]},{"text":"impl Clone for For","synthetic":false,"types":[]},{"text":"impl Clone for If","synthetic":false,"types":[]},{"text":"impl Clone for Impl","synthetic":false,"types":[]},{"text":"impl Clone for In","synthetic":false,"types":[]},{"text":"impl Clone for Let","synthetic":false,"types":[]},{"text":"impl Clone for Loop","synthetic":false,"types":[]},{"text":"impl Clone for Macro","synthetic":false,"types":[]},{"text":"impl Clone for Match","synthetic":false,"types":[]},{"text":"impl Clone for Mod","synthetic":false,"types":[]},{"text":"impl Clone for Move","synthetic":false,"types":[]},{"text":"impl Clone for Mut","synthetic":false,"types":[]},{"text":"impl Clone for Override","synthetic":false,"types":[]},{"text":"impl Clone for Priv","synthetic":false,"types":[]},{"text":"impl Clone for Pub","synthetic":false,"types":[]},{"text":"impl Clone for Ref","synthetic":false,"types":[]},{"text":"impl Clone for Return","synthetic":false,"types":[]},{"text":"impl Clone for SelfType","synthetic":false,"types":[]},{"text":"impl Clone for SelfValue","synthetic":false,"types":[]},{"text":"impl Clone for Static","synthetic":false,"types":[]},{"text":"impl Clone for Struct","synthetic":false,"types":[]},{"text":"impl Clone for Super","synthetic":false,"types":[]},{"text":"impl Clone for Trait","synthetic":false,"types":[]},{"text":"impl Clone for Try","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Typeof","synthetic":false,"types":[]},{"text":"impl Clone for Union","synthetic":false,"types":[]},{"text":"impl Clone for Unsafe","synthetic":false,"types":[]},{"text":"impl Clone for Unsized","synthetic":false,"types":[]},{"text":"impl Clone for Use","synthetic":false,"types":[]},{"text":"impl Clone for Virtual","synthetic":false,"types":[]},{"text":"impl Clone for Where","synthetic":false,"types":[]},{"text":"impl Clone for While","synthetic":false,"types":[]},{"text":"impl Clone for Yield","synthetic":false,"types":[]},{"text":"impl Clone for Add","synthetic":false,"types":[]},{"text":"impl Clone for AddEq","synthetic":false,"types":[]},{"text":"impl Clone for And","synthetic":false,"types":[]},{"text":"impl Clone for AndAnd","synthetic":false,"types":[]},{"text":"impl Clone for AndEq","synthetic":false,"types":[]},{"text":"impl Clone for At","synthetic":false,"types":[]},{"text":"impl Clone for Bang","synthetic":false,"types":[]},{"text":"impl Clone for Caret","synthetic":false,"types":[]},{"text":"impl Clone for CaretEq","synthetic":false,"types":[]},{"text":"impl Clone for Colon","synthetic":false,"types":[]},{"text":"impl Clone for Colon2","synthetic":false,"types":[]},{"text":"impl Clone for Comma","synthetic":false,"types":[]},{"text":"impl Clone for Div","synthetic":false,"types":[]},{"text":"impl Clone for DivEq","synthetic":false,"types":[]},{"text":"impl Clone for Dollar","synthetic":false,"types":[]},{"text":"impl Clone for Dot","synthetic":false,"types":[]},{"text":"impl Clone for Dot2","synthetic":false,"types":[]},{"text":"impl Clone for Dot3","synthetic":false,"types":[]},{"text":"impl Clone for DotDotEq","synthetic":false,"types":[]},{"text":"impl Clone for Eq","synthetic":false,"types":[]},{"text":"impl Clone for EqEq","synthetic":false,"types":[]},{"text":"impl Clone for Ge","synthetic":false,"types":[]},{"text":"impl Clone for Gt","synthetic":false,"types":[]},{"text":"impl Clone for Le","synthetic":false,"types":[]},{"text":"impl Clone for Lt","synthetic":false,"types":[]},{"text":"impl Clone for MulEq","synthetic":false,"types":[]},{"text":"impl Clone for Ne","synthetic":false,"types":[]},{"text":"impl Clone for Or","synthetic":false,"types":[]},{"text":"impl Clone for OrEq","synthetic":false,"types":[]},{"text":"impl Clone for OrOr","synthetic":false,"types":[]},{"text":"impl Clone for Pound","synthetic":false,"types":[]},{"text":"impl Clone for Question","synthetic":false,"types":[]},{"text":"impl Clone for RArrow","synthetic":false,"types":[]},{"text":"impl Clone for LArrow","synthetic":false,"types":[]},{"text":"impl Clone for Rem","synthetic":false,"types":[]},{"text":"impl Clone for RemEq","synthetic":false,"types":[]},{"text":"impl Clone for FatArrow","synthetic":false,"types":[]},{"text":"impl Clone for Semi","synthetic":false,"types":[]},{"text":"impl Clone for Shl","synthetic":false,"types":[]},{"text":"impl Clone for ShlEq","synthetic":false,"types":[]},{"text":"impl Clone for Shr","synthetic":false,"types":[]},{"text":"impl Clone for ShrEq","synthetic":false,"types":[]},{"text":"impl Clone for Star","synthetic":false,"types":[]},{"text":"impl Clone for Sub","synthetic":false,"types":[]},{"text":"impl Clone for SubEq","synthetic":false,"types":[]},{"text":"impl Clone for Tilde","synthetic":false,"types":[]},{"text":"impl Clone for Brace","synthetic":false,"types":[]},{"text":"impl Clone for Bracket","synthetic":false,"types":[]},{"text":"impl Clone for Paren","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ImplGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for TypeGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Turbofish&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Lifetime","synthetic":false,"types":[]},{"text":"impl Clone for LitStr","synthetic":false,"types":[]},{"text":"impl Clone for LitByteStr","synthetic":false,"types":[]},{"text":"impl Clone for LitByte","synthetic":false,"types":[]},{"text":"impl Clone for LitChar","synthetic":false,"types":[]},{"text":"impl Clone for LitInt","synthetic":false,"types":[]},{"text":"impl Clone for LitFloat","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Cursor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T, P&gt; Clone for Pairs&lt;'a, T, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Abi","synthetic":false,"types":[]},{"text":"impl Clone for AngleBracketedGenericArguments","synthetic":false,"types":[]},{"text":"impl Clone for AttrStyle","synthetic":false,"types":[]},{"text":"impl Clone for Attribute","synthetic":false,"types":[]},{"text":"impl Clone for BareFnArg","synthetic":false,"types":[]},{"text":"impl Clone for BinOp","synthetic":false,"types":[]},{"text":"impl Clone for Binding","synthetic":false,"types":[]},{"text":"impl Clone for BoundLifetimes","synthetic":false,"types":[]},{"text":"impl Clone for ConstParam","synthetic":false,"types":[]},{"text":"impl Clone for Constraint","synthetic":false,"types":[]},{"text":"impl Clone for Data","synthetic":false,"types":[]},{"text":"impl Clone for DataEnum","synthetic":false,"types":[]},{"text":"impl Clone for DataStruct","synthetic":false,"types":[]},{"text":"impl Clone for DataUnion","synthetic":false,"types":[]},{"text":"impl Clone for DeriveInput","synthetic":false,"types":[]},{"text":"impl Clone for Expr","synthetic":false,"types":[]},{"text":"impl Clone for ExprBinary","synthetic":false,"types":[]},{"text":"impl Clone for ExprCall","synthetic":false,"types":[]},{"text":"impl Clone for ExprCast","synthetic":false,"types":[]},{"text":"impl Clone for ExprField","synthetic":false,"types":[]},{"text":"impl Clone for ExprIndex","synthetic":false,"types":[]},{"text":"impl Clone for ExprLit","synthetic":false,"types":[]},{"text":"impl Clone for ExprParen","synthetic":false,"types":[]},{"text":"impl Clone for ExprPath","synthetic":false,"types":[]},{"text":"impl Clone for ExprUnary","synthetic":false,"types":[]},{"text":"impl Clone for Field","synthetic":false,"types":[]},{"text":"impl Clone for Fields","synthetic":false,"types":[]},{"text":"impl Clone for FieldsNamed","synthetic":false,"types":[]},{"text":"impl Clone for FieldsUnnamed","synthetic":false,"types":[]},{"text":"impl Clone for GenericArgument","synthetic":false,"types":[]},{"text":"impl Clone for GenericParam","synthetic":false,"types":[]},{"text":"impl Clone for Generics","synthetic":false,"types":[]},{"text":"impl Clone for Index","synthetic":false,"types":[]},{"text":"impl Clone for LifetimeDef","synthetic":false,"types":[]},{"text":"impl Clone for Lit","synthetic":false,"types":[]},{"text":"impl Clone for LitBool","synthetic":false,"types":[]},{"text":"impl Clone for Macro","synthetic":false,"types":[]},{"text":"impl Clone for MacroDelimiter","synthetic":false,"types":[]},{"text":"impl Clone for Member","synthetic":false,"types":[]},{"text":"impl Clone for Meta","synthetic":false,"types":[]},{"text":"impl Clone for MetaList","synthetic":false,"types":[]},{"text":"impl Clone for MetaNameValue","synthetic":false,"types":[]},{"text":"impl Clone for NestedMeta","synthetic":false,"types":[]},{"text":"impl Clone for ParenthesizedGenericArguments","synthetic":false,"types":[]},{"text":"impl Clone for Path","synthetic":false,"types":[]},{"text":"impl Clone for PathArguments","synthetic":false,"types":[]},{"text":"impl Clone for PathSegment","synthetic":false,"types":[]},{"text":"impl Clone for PredicateEq","synthetic":false,"types":[]},{"text":"impl Clone for PredicateLifetime","synthetic":false,"types":[]},{"text":"impl Clone for PredicateType","synthetic":false,"types":[]},{"text":"impl Clone for QSelf","synthetic":false,"types":[]},{"text":"impl Clone for ReturnType","synthetic":false,"types":[]},{"text":"impl Clone for TraitBound","synthetic":false,"types":[]},{"text":"impl Clone for TraitBoundModifier","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for TypeArray","synthetic":false,"types":[]},{"text":"impl Clone for TypeBareFn","synthetic":false,"types":[]},{"text":"impl Clone for TypeGroup","synthetic":false,"types":[]},{"text":"impl Clone for TypeImplTrait","synthetic":false,"types":[]},{"text":"impl Clone for TypeInfer","synthetic":false,"types":[]},{"text":"impl Clone for TypeMacro","synthetic":false,"types":[]},{"text":"impl Clone for TypeNever","synthetic":false,"types":[]},{"text":"impl Clone for TypeParam","synthetic":false,"types":[]},{"text":"impl Clone for TypeParamBound","synthetic":false,"types":[]},{"text":"impl Clone for TypeParen","synthetic":false,"types":[]},{"text":"impl Clone for TypePath","synthetic":false,"types":[]},{"text":"impl Clone for TypePtr","synthetic":false,"types":[]},{"text":"impl Clone for TypeReference","synthetic":false,"types":[]},{"text":"impl Clone for TypeSlice","synthetic":false,"types":[]},{"text":"impl Clone for TypeTraitObject","synthetic":false,"types":[]},{"text":"impl Clone for TypeTuple","synthetic":false,"types":[]},{"text":"impl Clone for UnOp","synthetic":false,"types":[]},{"text":"impl Clone for Variadic","synthetic":false,"types":[]},{"text":"impl Clone for Variant","synthetic":false,"types":[]},{"text":"impl Clone for VisCrate","synthetic":false,"types":[]},{"text":"impl Clone for VisPublic","synthetic":false,"types":[]},{"text":"impl Clone for VisRestricted","synthetic":false,"types":[]},{"text":"impl Clone for Visibility","synthetic":false,"types":[]},{"text":"impl Clone for WhereClause","synthetic":false,"types":[]},{"text":"impl Clone for WherePredicate","synthetic":false,"types":[]},{"text":"impl&lt;'c, 'a&gt; Clone for StepCursor&lt;'c, 'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["texture"] = [{"text":"impl Clone for TextureSettings","synthetic":false,"types":[]},{"text":"impl Clone for Format","synthetic":false,"types":[]},{"text":"impl Clone for Filter","synthetic":false,"types":[]},{"text":"impl Clone for Wrap","synthetic":false,"types":[]}];
implementors["tiff"] = [{"text":"impl Clone for Value","synthetic":false,"types":[]},{"text":"impl Clone for Entry","synthetic":false,"types":[]},{"text":"impl Clone for Limits","synthetic":false,"types":[]},{"text":"impl Clone for Rational","synthetic":false,"types":[]},{"text":"impl Clone for TiffFormatError","synthetic":false,"types":[]},{"text":"impl Clone for InflateError","synthetic":false,"types":[]},{"text":"impl Clone for TiffUnsupportedError","synthetic":false,"types":[]},{"text":"impl Clone for Tag","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for CompressionMethod","synthetic":false,"types":[]},{"text":"impl Clone for PhotometricInterpretation","synthetic":false,"types":[]},{"text":"impl Clone for PlanarConfiguration","synthetic":false,"types":[]},{"text":"impl Clone for Predictor","synthetic":false,"types":[]},{"text":"impl Clone for ResolutionUnit","synthetic":false,"types":[]},{"text":"impl Clone for SampleFormat","synthetic":false,"types":[]},{"text":"impl Clone for ColorType","synthetic":false,"types":[]}];
implementors["viewport"] = [{"text":"impl Clone for Viewport","synthetic":false,"types":[]}];
implementors["void"] = [{"text":"impl Clone for Void","synthetic":false,"types":[]}];
implementors["walkdir"] = [{"text":"impl Clone for DirEntry","synthetic":false,"types":[]}];
implementors["wayland_client"] = [{"text":"impl Clone for GlobalManager","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interface&gt; Clone for Proxy&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Format","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for DndAction","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Resize","synthetic":false,"types":[]},{"text":"impl Clone for Transient","synthetic":false,"types":[]},{"text":"impl Clone for FullscreenMethod","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Capability","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ButtonState","synthetic":false,"types":[]},{"text":"impl Clone for Axis","synthetic":false,"types":[]},{"text":"impl Clone for AxisSource","synthetic":false,"types":[]},{"text":"impl Clone for KeymapFormat","synthetic":false,"types":[]},{"text":"impl Clone for KeyState","synthetic":false,"types":[]},{"text":"impl Clone for Subpixel","synthetic":false,"types":[]},{"text":"impl Clone for Transform","synthetic":false,"types":[]},{"text":"impl Clone for Mode","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["wayland_commons"] = [{"text":"impl&lt;Meta:&nbsp;Clone + ObjectMetadata&gt; Clone for Object&lt;Meta&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ArgumentType","synthetic":false,"types":[]},{"text":"impl Clone for Argument","synthetic":false,"types":[]},{"text":"impl Clone for Message","synthetic":false,"types":[]},{"text":"impl Clone for MessageWriteError","synthetic":false,"types":[]},{"text":"impl Clone for MessageParseError","synthetic":false,"types":[]}];
implementors["wayland_protocols"] = [{"text":"impl Clone for Capability","synthetic":false,"types":[]},{"text":"impl Clone for PresentMethod","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Position","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Flags","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Lifetime","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Capability","synthetic":false,"types":[]},{"text":"impl Clone for ButtonState","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Capability","synthetic":false,"types":[]},{"text":"impl Clone for ButtonState","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Source","synthetic":false,"types":[]},{"text":"impl Clone for Source","synthetic":false,"types":[]},{"text":"impl Clone for ButtonState","synthetic":false,"types":[]},{"text":"impl Clone for ContentHint","synthetic":false,"types":[]},{"text":"impl Clone for ContentPurpose","synthetic":false,"types":[]},{"text":"impl Clone for PreeditStyle","synthetic":false,"types":[]},{"text":"impl Clone for TextDirection","synthetic":false,"types":[]},{"text":"impl Clone for ChangeCause","synthetic":false,"types":[]},{"text":"impl Clone for ContentHint","synthetic":false,"types":[]},{"text":"impl Clone for ContentPurpose","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Mode","synthetic":false,"types":[]},{"text":"impl Clone for Version","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ResizeEdge","synthetic":false,"types":[]},{"text":"impl Clone for State","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Anchor","synthetic":false,"types":[]},{"text":"impl Clone for Gravity","synthetic":false,"types":[]},{"text":"impl Clone for ConstraintAdjustment","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ResizeEdge","synthetic":false,"types":[]},{"text":"impl Clone for State","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Flags","synthetic":false,"types":[]},{"text":"impl Clone for CancelReason","synthetic":false,"types":[]},{"text":"impl Clone for State","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Layer","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Anchor","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Flags","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Kind","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Anchor","synthetic":false,"types":[]},{"text":"impl Clone for Gravity","synthetic":false,"types":[]},{"text":"impl Clone for ConstraintAdjustment","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ResizeEdge","synthetic":false,"types":[]},{"text":"impl Clone for State","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["weezl"] = [{"text":"impl Clone for LzwStatus","synthetic":false,"types":[]},{"text":"impl Clone for LzwError","synthetic":false,"types":[]}];
implementors["window"] = [{"text":"impl Clone for Size","synthetic":false,"types":[]},{"text":"impl Clone for Position","synthetic":false,"types":[]},{"text":"impl Clone for WindowSettings","synthetic":false,"types":[]}];
implementors["winit"] = [{"text":"impl Clone for LogicalPosition","synthetic":false,"types":[]},{"text":"impl Clone for PhysicalPosition","synthetic":false,"types":[]},{"text":"impl Clone for LogicalSize","synthetic":false,"types":[]},{"text":"impl Clone for PhysicalSize","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]},{"text":"impl Clone for WindowEvent","synthetic":false,"types":[]},{"text":"impl Clone for DeviceEvent","synthetic":false,"types":[]},{"text":"impl Clone for KeyboardInput","synthetic":false,"types":[]},{"text":"impl Clone for TouchPhase","synthetic":false,"types":[]},{"text":"impl Clone for Touch","synthetic":false,"types":[]},{"text":"impl Clone for ElementState","synthetic":false,"types":[]},{"text":"impl Clone for MouseButton","synthetic":false,"types":[]},{"text":"impl Clone for MouseScrollDelta","synthetic":false,"types":[]},{"text":"impl Clone for VirtualKeyCode","synthetic":false,"types":[]},{"text":"impl Clone for ModifiersState","synthetic":false,"types":[]},{"text":"impl Clone for BadIcon","synthetic":false,"types":[]},{"text":"impl Clone for Icon","synthetic":false,"types":[]},{"text":"impl Clone for XNotSupported","synthetic":false,"types":[]},{"text":"impl Clone for WindowType","synthetic":false,"types":[]},{"text":"impl Clone for MonitorId","synthetic":false,"types":[]},{"text":"impl Clone for WindowId","synthetic":false,"types":[]},{"text":"impl Clone for DeviceId","synthetic":false,"types":[]},{"text":"impl Clone for ControlFlow","synthetic":false,"types":[]},{"text":"impl Clone for EventsLoopProxy","synthetic":false,"types":[]},{"text":"impl Clone for EventsLoopClosed","synthetic":false,"types":[]},{"text":"impl Clone for WindowBuilder","synthetic":false,"types":[]},{"text":"impl Clone for CreationError","synthetic":false,"types":[]},{"text":"impl Clone for MouseCursor","synthetic":false,"types":[]},{"text":"impl Clone for WindowAttributes","synthetic":false,"types":[]}];
implementors["x11_dl"] = [{"text":"impl Clone for OpenError","synthetic":false,"types":[]},{"text":"impl Clone for OpenErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for XEvent","synthetic":false,"types":[]},{"text":"impl Clone for XAnyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XButtonEvent","synthetic":false,"types":[]},{"text":"impl Clone for XCirculateEvent","synthetic":false,"types":[]},{"text":"impl Clone for XCirculateRequestEvent","synthetic":false,"types":[]},{"text":"impl Clone for XClientMessageEvent","synthetic":false,"types":[]},{"text":"impl Clone for XColormapEvent","synthetic":false,"types":[]},{"text":"impl Clone for XConfigureEvent","synthetic":false,"types":[]},{"text":"impl Clone for XConfigureRequestEvent","synthetic":false,"types":[]},{"text":"impl Clone for XCreateWindowEvent","synthetic":false,"types":[]},{"text":"impl Clone for XCrossingEvent","synthetic":false,"types":[]},{"text":"impl Clone for XDestroyWindowEvent","synthetic":false,"types":[]},{"text":"impl Clone for XErrorEvent","synthetic":false,"types":[]},{"text":"impl Clone for XExposeEvent","synthetic":false,"types":[]},{"text":"impl Clone for XFocusChangeEvent","synthetic":false,"types":[]},{"text":"impl Clone for XGraphicsExposeEvent","synthetic":false,"types":[]},{"text":"impl Clone for XGravityEvent","synthetic":false,"types":[]},{"text":"impl Clone for XKeyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XKeymapEvent","synthetic":false,"types":[]},{"text":"impl Clone for XMapEvent","synthetic":false,"types":[]},{"text":"impl Clone for XMappingEvent","synthetic":false,"types":[]},{"text":"impl Clone for XMapRequestEvent","synthetic":false,"types":[]},{"text":"impl Clone for XMotionEvent","synthetic":false,"types":[]},{"text":"impl Clone for XNoExposeEvent","synthetic":false,"types":[]},{"text":"impl Clone for XPropertyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XReparentEvent","synthetic":false,"types":[]},{"text":"impl Clone for XResizeRequestEvent","synthetic":false,"types":[]},{"text":"impl Clone for XSelectionClearEvent","synthetic":false,"types":[]},{"text":"impl Clone for XSelectionEvent","synthetic":false,"types":[]},{"text":"impl Clone for XSelectionRequestEvent","synthetic":false,"types":[]},{"text":"impl Clone for XUnmapEvent","synthetic":false,"types":[]},{"text":"impl Clone for XVisibilityEvent","synthetic":false,"types":[]},{"text":"impl Clone for _XkbDesc","synthetic":false,"types":[]},{"text":"impl Clone for _XkbKeyAliasRec","synthetic":false,"types":[]},{"text":"impl Clone for _XkbKeyNameRec","synthetic":false,"types":[]},{"text":"impl Clone for _XkbNamesRec","synthetic":false,"types":[]},{"text":"impl Clone for _XkbStateRec","synthetic":false,"types":[]},{"text":"impl Clone for XkbAnyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbNewKeyboardNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for _XkbMapNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbStateNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for _XkbControlsNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbIndicatorNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for _XkbNamesNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbCompatMapNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbBellNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbActionMessageEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbAccessXNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for _XkbExtensionDeviceNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XkbEvent","synthetic":false,"types":[]},{"text":"impl Clone for Depth","synthetic":false,"types":[]},{"text":"impl Clone for Screen","synthetic":false,"types":[]},{"text":"impl Clone for ScreenFormat","synthetic":false,"types":[]},{"text":"impl Clone for Visual","synthetic":false,"types":[]},{"text":"impl Clone for XArc","synthetic":false,"types":[]},{"text":"impl Clone for XChar2b","synthetic":false,"types":[]},{"text":"impl Clone for XCharStruct","synthetic":false,"types":[]},{"text":"impl Clone for XClassHint","synthetic":false,"types":[]},{"text":"impl Clone for XColor","synthetic":false,"types":[]},{"text":"impl Clone for XComposeStatus","synthetic":false,"types":[]},{"text":"impl Clone for XExtCodes","synthetic":false,"types":[]},{"text":"impl Clone for XFontProp","synthetic":false,"types":[]},{"text":"impl Clone for XFontSetExtents","synthetic":false,"types":[]},{"text":"impl Clone for XFontStruct","synthetic":false,"types":[]},{"text":"impl Clone for XGCValues","synthetic":false,"types":[]},{"text":"impl Clone for XGenericEventCookie","synthetic":false,"types":[]},{"text":"impl Clone for XHostAddress","synthetic":false,"types":[]},{"text":"impl Clone for XIconSize","synthetic":false,"types":[]},{"text":"impl Clone for XImage","synthetic":false,"types":[]},{"text":"impl Clone for XKeyboardControl","synthetic":false,"types":[]},{"text":"impl Clone for XKeyboardState","synthetic":false,"types":[]},{"text":"impl Clone for XmbTextItem","synthetic":false,"types":[]},{"text":"impl Clone for XModifierKeymap","synthetic":false,"types":[]},{"text":"impl Clone for XOMCharSetList","synthetic":false,"types":[]},{"text":"impl Clone for XPixmapFormatValues","synthetic":false,"types":[]},{"text":"impl Clone for XPoint","synthetic":false,"types":[]},{"text":"impl Clone for XRectangle","synthetic":false,"types":[]},{"text":"impl Clone for XrmOptionDescRec","synthetic":false,"types":[]},{"text":"impl Clone for XrmValue","synthetic":false,"types":[]},{"text":"impl Clone for XSegment","synthetic":false,"types":[]},{"text":"impl Clone for XSetWindowAttributes","synthetic":false,"types":[]},{"text":"impl Clone for XSizeHints","synthetic":false,"types":[]},{"text":"impl Clone for XStandardColormap","synthetic":false,"types":[]},{"text":"impl Clone for XTextItem","synthetic":false,"types":[]},{"text":"impl Clone for XTextItem16","synthetic":false,"types":[]},{"text":"impl Clone for XTextProperty","synthetic":false,"types":[]},{"text":"impl Clone for XTimeCoord","synthetic":false,"types":[]},{"text":"impl Clone for XVisualInfo","synthetic":false,"types":[]},{"text":"impl Clone for XwcTextItem","synthetic":false,"types":[]},{"text":"impl Clone for XWindowAttributes","synthetic":false,"types":[]},{"text":"impl Clone for XWindowChanges","synthetic":false,"types":[]},{"text":"impl Clone for XWMHints","synthetic":false,"types":[]},{"text":"impl Clone for XIMCaretDirection","synthetic":false,"types":[]},{"text":"impl Clone for XIMCaretStyle","synthetic":false,"types":[]},{"text":"impl Clone for XIMPreeditDrawCallbackStruct","synthetic":false,"types":[]},{"text":"impl Clone for XIMPreeditCaretCallbackStruct","synthetic":false,"types":[]},{"text":"impl Clone for XIMTextString","synthetic":false,"types":[]},{"text":"impl Clone for XIMText","synthetic":false,"types":[]},{"text":"impl Clone for AspectRatio","synthetic":false,"types":[]},{"text":"impl Clone for ClientMessageData","synthetic":false,"types":[]},{"text":"impl Clone for ImageFns","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorAnimate","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorChunkHeader","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorComment","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorComments","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorCursors","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorFile","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorFileHeader","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorFileToc","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorImage","synthetic":false,"types":[]},{"text":"impl Clone for _XcursorImages","synthetic":false,"types":[]},{"text":"impl Clone for XF86VidModeGamma","synthetic":false,"types":[]},{"text":"impl Clone for XF86VidModeModeInfo","synthetic":false,"types":[]},{"text":"impl Clone for XF86VidModeModeLine","synthetic":false,"types":[]},{"text":"impl Clone for XF86VidModeMonitor","synthetic":false,"types":[]},{"text":"impl Clone for XF86VidModeSyncRange","synthetic":false,"types":[]},{"text":"impl Clone for XF86VidModeNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XftFont","synthetic":false,"types":[]},{"text":"impl Clone for XftColor","synthetic":false,"types":[]},{"text":"impl Clone for XftCharSpec","synthetic":false,"types":[]},{"text":"impl Clone for XftCharFontSpec","synthetic":false,"types":[]},{"text":"impl Clone for XftFontSet","synthetic":false,"types":[]},{"text":"impl Clone for XftGlyphSpec","synthetic":false,"types":[]},{"text":"impl Clone for XftGlyphFontSpec","synthetic":false,"types":[]},{"text":"impl Clone for XineramaScreenInfo","synthetic":false,"types":[]},{"text":"impl Clone for XPanoramiXInfo","synthetic":false,"types":[]},{"text":"impl Clone for XDevice","synthetic":false,"types":[]},{"text":"impl Clone for XDeviceControl","synthetic":false,"types":[]},{"text":"impl Clone for XDeviceInfo","synthetic":false,"types":[]},{"text":"impl Clone for XDeviceState","synthetic":false,"types":[]},{"text":"impl Clone for XDeviceTimeCoord","synthetic":false,"types":[]},{"text":"impl Clone for XExtensionVersion","synthetic":false,"types":[]},{"text":"impl Clone for XFeedbackControl","synthetic":false,"types":[]},{"text":"impl Clone for XFeedbackState","synthetic":false,"types":[]},{"text":"impl Clone for XInputClass","synthetic":false,"types":[]},{"text":"impl Clone for XInputClassInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIAddMasterInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIRemoveMasterInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIAttachSlaveInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIDetachSlaveInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIAnyHierarchyChangeInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIModifierState","synthetic":false,"types":[]},{"text":"impl Clone for XIButtonState","synthetic":false,"types":[]},{"text":"impl Clone for XIValuatorState","synthetic":false,"types":[]},{"text":"impl Clone for XIEventMask","synthetic":false,"types":[]},{"text":"impl Clone for XIAnyClassInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIButtonClassInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIKeyClassInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIValuatorClassInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIScrollClassInfo","synthetic":false,"types":[]},{"text":"impl Clone for XITouchClassInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIDeviceInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIGrabModifiers","synthetic":false,"types":[]},{"text":"impl Clone for XIBarrierReleasePointerInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIEvent","synthetic":false,"types":[]},{"text":"impl Clone for XIHierarchyInfo","synthetic":false,"types":[]},{"text":"impl Clone for XIHierarchyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XIDeviceChangedEvent","synthetic":false,"types":[]},{"text":"impl Clone for XIDeviceEvent","synthetic":false,"types":[]},{"text":"impl Clone for XIRawEvent","synthetic":false,"types":[]},{"text":"impl Clone for XIEnterEvent","synthetic":false,"types":[]},{"text":"impl Clone for XIPropertyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XITouchOwnershipEvent","synthetic":false,"types":[]},{"text":"impl Clone for XIBarrierEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRecordClientInfo","synthetic":false,"types":[]},{"text":"impl Clone for XRecordExtRange","synthetic":false,"types":[]},{"text":"impl Clone for XRecordInterceptData","synthetic":false,"types":[]},{"text":"impl Clone for XRecordRange","synthetic":false,"types":[]},{"text":"impl Clone for XRecordRange8","synthetic":false,"types":[]},{"text":"impl Clone for XRecordRange16","synthetic":false,"types":[]},{"text":"impl Clone for XRecordState","synthetic":false,"types":[]},{"text":"impl Clone for _XAnimCursor","synthetic":false,"types":[]},{"text":"impl Clone for _XCircle","synthetic":false,"types":[]},{"text":"impl Clone for _XConicalGradient","synthetic":false,"types":[]},{"text":"impl Clone for _XFilters","synthetic":false,"types":[]},{"text":"impl Clone for _XGlyphElt8","synthetic":false,"types":[]},{"text":"impl Clone for _XGlyphElt16","synthetic":false,"types":[]},{"text":"impl Clone for _XGlyphElt32","synthetic":false,"types":[]},{"text":"impl Clone for _XGlyphInfo","synthetic":false,"types":[]},{"text":"impl Clone for _XIndexValue","synthetic":false,"types":[]},{"text":"impl Clone for _XLinearGradient","synthetic":false,"types":[]},{"text":"impl Clone for _XLineFixed","synthetic":false,"types":[]},{"text":"impl Clone for _XPointDouble","synthetic":false,"types":[]},{"text":"impl Clone for _XPointFixed","synthetic":false,"types":[]},{"text":"impl Clone for _XRadialGradient","synthetic":false,"types":[]},{"text":"impl Clone for XRenderColor","synthetic":false,"types":[]},{"text":"impl Clone for XRenderDirectFormat","synthetic":false,"types":[]},{"text":"impl Clone for XRenderPictFormat","synthetic":false,"types":[]},{"text":"impl Clone for _XRenderPictureAttributes","synthetic":false,"types":[]},{"text":"impl Clone for _XSpanFix","synthetic":false,"types":[]},{"text":"impl Clone for _XTrap","synthetic":false,"types":[]},{"text":"impl Clone for _XTrapezoid","synthetic":false,"types":[]},{"text":"impl Clone for _XTriangle","synthetic":false,"types":[]},{"text":"impl Clone for _XTransform","synthetic":false,"types":[]},{"text":"impl Clone for XScreenSaverInfo","synthetic":false,"types":[]},{"text":"impl Clone for XScreenSaverNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRRScreenSize","synthetic":false,"types":[]},{"text":"impl Clone for XRRModeInfo","synthetic":false,"types":[]},{"text":"impl Clone for XRRScreenResources","synthetic":false,"types":[]},{"text":"impl Clone for XRROutputInfo","synthetic":false,"types":[]},{"text":"impl Clone for XRRPropertyInfo","synthetic":false,"types":[]},{"text":"impl Clone for XRRCrtcInfo","synthetic":false,"types":[]},{"text":"impl Clone for XRRCrtcGamma","synthetic":false,"types":[]},{"text":"impl Clone for XRRCrtcTransformAttributes","synthetic":false,"types":[]},{"text":"impl Clone for XRRPanning","synthetic":false,"types":[]},{"text":"impl Clone for XRRProviderResources","synthetic":false,"types":[]},{"text":"impl Clone for XRRProviderInfo","synthetic":false,"types":[]},{"text":"impl Clone for XRRMonitorInfo","synthetic":false,"types":[]},{"text":"impl Clone for XRRScreenChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRRNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRROutputChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRRCrtcChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRROutputPropertyNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRRProviderChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRRProviderPropertyNotifyEvent","synthetic":false,"types":[]},{"text":"impl Clone for XRRResourceChangeNotifyEvent","synthetic":false,"types":[]}];
implementors["xdg"] = [{"text":"impl Clone for BaseDirectories","synthetic":false,"types":[]}];
implementors["xml"] = [{"text":"impl&lt;'a&gt; Clone for Name&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for OwnedName","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Attribute&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for OwnedAttribute","synthetic":false,"types":[]},{"text":"impl Clone for TextPosition","synthetic":false,"types":[]},{"text":"impl Clone for XmlVersion","synthetic":false,"types":[]},{"text":"impl Clone for Namespace","synthetic":false,"types":[]},{"text":"impl Clone for NamespaceStack","synthetic":false,"types":[]},{"text":"impl Clone for ParserConfig","synthetic":false,"types":[]},{"text":"impl Clone for XmlEvent","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for EmitterConfig","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()