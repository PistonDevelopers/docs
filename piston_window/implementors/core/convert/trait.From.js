(function() {var implementors = {};
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; From&lt;SendError&lt;T&gt;&gt; for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;SendError&lt;T&gt;&gt; for SendTimeoutError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RecvError&gt; for TryRecvError","synthetic":false,"types":[]},{"text":"impl From&lt;RecvError&gt; for RecvTimeoutError","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T&gt; From&lt;Owned&lt;T&gt;&gt; for Atomic&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;Box&lt;T&gt;&gt; for Atomic&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;T&gt; for Atomic&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'g, T&gt; From&lt;Shared&lt;'g, T&gt;&gt; for Atomic&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;*const T&gt; for Atomic&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;T&gt; for Owned&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;Box&lt;T&gt;&gt; for Owned&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'g, T&gt; From&lt;*const T&gt; for Shared&lt;'g, T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; From&lt;T&gt; for CachePadded&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;T&gt; for ShardedLock&lt;T&gt;","synthetic":false,"types":[]}];
implementors["deflate"] = [{"text":"impl From&lt;Compression&gt; for CompressionOptions","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; From&lt;Result&lt;R, L&gt;&gt; for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["gfx"] = [{"text":"impl&lt;R:&nbsp;Resources, C&gt; From&lt;C&gt; for Encoder&lt;R, C&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;PipelineStateError&lt;&amp;'a str&gt;&gt; for PipelineStateError&lt;String&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; From&lt;ProgramError&gt; for PipelineStateError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; From&lt;InitError&lt;S&gt;&gt; for PipelineStateError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; From&lt;CreationError&gt; for PipelineStateError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;ElementError&lt;&amp;'a str&gt;&gt; for ElementError&lt;String&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;InitError&lt;&amp;'a str&gt;&gt; for InitError&lt;String&gt;","synthetic":false,"types":[]}];
implementors["gfx_core"] = [{"text":"impl From&lt;[f32; 4]&gt; for ClearColor","synthetic":false,"types":[]},{"text":"impl From&lt;[f32; 3]&gt; for ClearColor","synthetic":false,"types":[]},{"text":"impl From&lt;[f32; 2]&gt; for ClearColor","synthetic":false,"types":[]},{"text":"impl From&lt;[i32; 4]&gt; for ClearColor","synthetic":false,"types":[]},{"text":"impl From&lt;[i32; 3]&gt; for ClearColor","synthetic":false,"types":[]},{"text":"impl From&lt;[i32; 2]&gt; for ClearColor","synthetic":false,"types":[]},{"text":"impl From&lt;[u32; 4]&gt; for ClearColor","synthetic":false,"types":[]},{"text":"impl From&lt;[u32; 3]&gt; for ClearColor","synthetic":false,"types":[]},{"text":"impl From&lt;[u32; 2]&gt; for ClearColor","synthetic":false,"types":[]},{"text":"impl From&lt;f32&gt; for ClearColor","synthetic":false,"types":[]},{"text":"impl From&lt;i32&gt; for ClearColor","synthetic":false,"types":[]},{"text":"impl From&lt;u32&gt; for ClearColor","synthetic":false,"types":[]},{"text":"impl From&lt;CreationError&gt; for CombinedError","synthetic":false,"types":[]},{"text":"impl From&lt;ResourceViewError&gt; for CombinedError","synthetic":false,"types":[]},{"text":"impl From&lt;TargetViewError&gt; for CombinedError","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for U8Norm","synthetic":false,"types":[]},{"text":"impl From&lt;i8&gt; for I8Norm","synthetic":false,"types":[]},{"text":"impl From&lt;u16&gt; for U16Norm","synthetic":false,"types":[]},{"text":"impl From&lt;i16&gt; for I16Norm","synthetic":false,"types":[]},{"text":"impl From&lt;u16&gt; for F16","synthetic":false,"types":[]},{"text":"impl From&lt;ColorMask&gt; for ColorInfo","synthetic":false,"types":[]},{"text":"impl From&lt;Blend&gt; for ColorInfo","synthetic":false,"types":[]},{"text":"impl From&lt;Depth&gt; for DepthStencilInfo","synthetic":false,"types":[]},{"text":"impl From&lt;Stencil&gt; for DepthStencilInfo","synthetic":false,"types":[]},{"text":"impl From&lt;(Depth, Stencil)&gt; for DepthStencilInfo","synthetic":false,"types":[]},{"text":"impl From&lt;Stage&gt; for Usage","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Into&lt;String&gt;&gt; From&lt;S&gt; for CreateProgramError","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for AaMode","synthetic":false,"types":[]},{"text":"impl From&lt;f32&gt; for Lod","synthetic":false,"types":[]},{"text":"impl From&lt;[f32; 4]&gt; for PackedColor","synthetic":false,"types":[]},{"text":"impl From&lt;RenderDesc&gt; for DepthStencilDesc","synthetic":false,"types":[]}];
implementors["gfx_texture"] = [{"text":"impl From&lt;UpdateError&lt;[u16; 3]&gt;&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;CreationError&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;ResourceViewError&gt; for Error","synthetic":false,"types":[]}];
implementors["gif"] = [{"text":"impl From&lt;Error&gt; for DecodingError","synthetic":false,"types":[]}];
implementors["glutin"] = [{"text":"impl From&lt;CreationError&gt; for CreationError","synthetic":false,"types":[]}];
implementors["image"] = [{"text":"impl From&lt;Error&gt; for ImageError","synthetic":false,"types":[]},{"text":"impl From&lt;ImageFormat&gt; for ImageFormatHint","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; From&lt;&amp;'_ Path&gt; for ImageFormatHint","synthetic":false,"types":[]},{"text":"impl From&lt;ImageFormatHint&gt; for UnsupportedError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for ImageError","synthetic":false,"types":[]},{"text":"impl From&lt;BitmapHeader&gt; for PnmHeader","synthetic":false,"types":[]},{"text":"impl From&lt;GraymapHeader&gt; for PnmHeader","synthetic":false,"types":[]},{"text":"impl From&lt;PixmapHeader&gt; for PnmHeader","synthetic":false,"types":[]},{"text":"impl From&lt;ArbitraryHeader&gt; for PnmHeader","synthetic":false,"types":[]},{"text":"impl From&lt;Delay&gt; for Duration","synthetic":false,"types":[]},{"text":"impl From&lt;ColorType&gt; for ExtendedColorType","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Primitive + 'static&gt; From&lt;[T; 3]&gt; for Rgb&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Primitive + 'static&gt; From&lt;[T; 3]&gt; for Bgr&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Primitive + 'static&gt; From&lt;[T; 1]&gt; for Luma&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Primitive + 'static&gt; From&lt;[T; 4]&gt; for Rgba&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Primitive + 'static&gt; From&lt;[T; 4]&gt; for Bgra&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Primitive + 'static&gt; From&lt;[T; 2]&gt; for LumaA&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;ImageFormat&gt; for ImageOutputFormat","synthetic":false,"types":[]}];
implementors["input"] = [{"text":"impl From&lt;u32&gt; for Key","synthetic":false,"types":[]},{"text":"impl From&lt;Key&gt; for u32","synthetic":false,"types":[]},{"text":"impl From&lt;u32&gt; for MouseButton","synthetic":false,"types":[]},{"text":"impl From&lt;MouseButton&gt; for u32","synthetic":false,"types":[]},{"text":"impl From&lt;Key&gt; for Button","synthetic":false,"types":[]},{"text":"impl From&lt;MouseButton&gt; for Button","synthetic":false,"types":[]},{"text":"impl From&lt;ControllerButton&gt; for Button","synthetic":false,"types":[]},{"text":"impl From&lt;ButtonArgs&gt; for Input","synthetic":false,"types":[]},{"text":"impl From&lt;ControllerAxisArgs&gt; for Motion","synthetic":false,"types":[]},{"text":"impl From&lt;ControllerAxisArgs&gt; for Input","synthetic":false,"types":[]},{"text":"impl From&lt;TouchArgs&gt; for Motion","synthetic":false,"types":[]},{"text":"impl From&lt;TouchArgs&gt; for Input","synthetic":false,"types":[]},{"text":"impl From&lt;Motion&gt; for Input","synthetic":false,"types":[]},{"text":"impl From&lt;RenderArgs&gt; for Loop","synthetic":false,"types":[]},{"text":"impl From&lt;RenderArgs&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;AfterRenderArgs&gt; for Loop","synthetic":false,"types":[]},{"text":"impl From&lt;AfterRenderArgs&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;UpdateArgs&gt; for Loop","synthetic":false,"types":[]},{"text":"impl From&lt;UpdateArgs&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;IdleArgs&gt; for Loop","synthetic":false,"types":[]},{"text":"impl From&lt;IdleArgs&gt; for Event","synthetic":false,"types":[]},{"text":"impl From&lt;CloseArgs&gt; for Input","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;T&gt; for Event <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: From&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;(T, Option&lt;u32&gt;)&gt; for Event <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: From&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl From&lt;Loop&gt; for Event","synthetic":false,"types":[]}];
implementors["jpeg_decoder"] = [{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]}];
implementors["libloading"] = [{"text":"impl From&lt;Library&gt; for Library","synthetic":false,"types":[]},{"text":"impl From&lt;Library&gt; for Library","synthetic":false,"types":[]}];
implementors["lock_api"] = [{"text":"impl&lt;R:&nbsp;RawMutex, T&gt; From&lt;T&gt; for Mutex&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex, G:&nbsp;GetThreadId, T&gt; From&lt;T&gt; for ReentrantMutex&lt;R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawRwLock, T&gt; From&lt;T&gt; for RwLock&lt;R, T&gt;","synthetic":false,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl From&lt;MZFlush&gt; for TDEFLFlush","synthetic":false,"types":[]},{"text":"impl From&lt;StreamResult&gt; for MZResult","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; From&lt;&amp;'_ StreamResult&gt; for MZResult","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl From&lt;Errno&gt; for Error","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;Vec&lt;AioCb&lt;'a&gt;&gt;&gt; for LioCb&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a sigevent&gt; for SigEvent","synthetic":false,"types":[]},{"text":"impl From&lt;ucred&gt; for UnixCredentials","synthetic":false,"types":[]},{"text":"impl From&lt;termios&gt; for Termios","synthetic":false,"types":[]},{"text":"impl From&lt;Termios&gt; for termios","synthetic":false,"types":[]},{"text":"impl From&lt;u32&gt; for BaudRate","synthetic":false,"types":[]},{"text":"impl From&lt;timeval&gt; for TimeVal","synthetic":false,"types":[]},{"text":"impl From&lt;Uid&gt; for uid_t","synthetic":false,"types":[]},{"text":"impl From&lt;Gid&gt; for gid_t","synthetic":false,"types":[]},{"text":"impl From&lt;Pid&gt; for pid_t","synthetic":false,"types":[]},{"text":"impl From&lt;Errno&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;FromUtf8Error&gt; for Error","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; From&lt;T&gt; for Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + Integer,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;(T, T)&gt; for Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + Integer,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T:&nbsp;Float&gt; From&lt;T&gt; for OrderedFloat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;NotNan&lt;f32&gt;&gt; for f32","synthetic":false,"types":[]},{"text":"impl From&lt;NotNan&lt;f64&gt;&gt; for f64","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Float&gt; From&lt;T&gt; for NotNan&lt;T&gt;","synthetic":false,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl&lt;'a&gt; From&lt;PercentEncode&lt;'a&gt;&gt; for Cow&lt;'a, str&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;PercentDecode&lt;'a&gt;&gt; for Cow&lt;'a, [u8]&gt;","synthetic":false,"types":[]}];
implementors["png"] = [{"text":"impl From&lt;Compression&gt; for Compression","synthetic":false,"types":[]},{"text":"impl From&lt;Compression&gt; for CompressionOptions","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for DecodingError","synthetic":false,"types":[]},{"text":"impl From&lt;String&gt; for DecodingError","synthetic":false,"types":[]},{"text":"impl From&lt;DecodingError&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for EncodingError","synthetic":false,"types":[]},{"text":"impl From&lt;EncodingError&gt; for Error","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl From&lt;Span&gt; for Span","synthetic":false,"types":[]},{"text":"impl From&lt;TokenStream&gt; for TokenStream","synthetic":false,"types":[]},{"text":"impl From&lt;TokenStream&gt; for TokenStream","synthetic":false,"types":[]},{"text":"impl From&lt;TokenTree&gt; for TokenStream","synthetic":false,"types":[]},{"text":"impl From&lt;Group&gt; for TokenTree","synthetic":false,"types":[]},{"text":"impl From&lt;Ident&gt; for TokenTree","synthetic":false,"types":[]},{"text":"impl From&lt;Punct&gt; for TokenTree","synthetic":false,"types":[]},{"text":"impl From&lt;Literal&gt; for TokenTree","synthetic":false,"types":[]}];
implementors["rusttype"] = [{"text":"impl&lt;'a&gt; From&lt;&amp;'a [u8]&gt; for SharedBytes&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Arc&lt;[u8]&gt;&gt; for SharedBytes&lt;'static&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Box&lt;[u8]&gt;&gt; for SharedBytes&lt;'static&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Vec&lt;u8&gt;&gt; for SharedBytes&lt;'static&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;AsRef&lt;[u8]&gt;&gt; From&lt;&amp;'a T&gt; for SharedBytes&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;VMetrics&gt; for VMetrics","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, A:&nbsp;Array&gt; From&lt;&amp;'a [&lt;A as Array&gt;::Item]&gt; for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; From&lt;Vec&lt;&lt;A as Array&gt;::Item&gt;&gt; for SmallVec&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; From&lt;A&gt; for SmallVec&lt;A&gt;","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl From&lt;SelfValue&gt; for Ident","synthetic":false,"types":[]},{"text":"impl From&lt;SelfType&gt; for Ident","synthetic":false,"types":[]},{"text":"impl From&lt;Super&gt; for Ident","synthetic":false,"types":[]},{"text":"impl From&lt;Crate&gt; for Ident","synthetic":false,"types":[]},{"text":"impl From&lt;Extern&gt; for Ident","synthetic":false,"types":[]},{"text":"impl From&lt;Underscore&gt; for Ident","synthetic":false,"types":[]},{"text":"impl From&lt;Path&gt; for Meta","synthetic":false,"types":[]},{"text":"impl From&lt;MetaList&gt; for Meta","synthetic":false,"types":[]},{"text":"impl From&lt;MetaNameValue&gt; for Meta","synthetic":false,"types":[]},{"text":"impl From&lt;Meta&gt; for NestedMeta","synthetic":false,"types":[]},{"text":"impl From&lt;Lit&gt; for NestedMeta","synthetic":false,"types":[]},{"text":"impl From&lt;FieldsNamed&gt; for Fields","synthetic":false,"types":[]},{"text":"impl From&lt;FieldsUnnamed&gt; for Fields","synthetic":false,"types":[]},{"text":"impl From&lt;VisPublic&gt; for Visibility","synthetic":false,"types":[]},{"text":"impl From&lt;VisCrate&gt; for Visibility","synthetic":false,"types":[]},{"text":"impl From&lt;VisRestricted&gt; for Visibility","synthetic":false,"types":[]},{"text":"impl From&lt;ExprArray&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprAssign&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprAssignOp&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprAsync&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprAwait&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprBinary&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprBlock&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprBox&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprBreak&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprCall&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprCast&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprClosure&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprContinue&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprField&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprForLoop&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprGroup&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprIf&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprIndex&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprLet&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprLit&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprLoop&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprMacro&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprMatch&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprMethodCall&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprParen&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprPath&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprRange&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprReference&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprRepeat&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprReturn&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprStruct&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprTry&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprTryBlock&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprTuple&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprType&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprUnary&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprUnsafe&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprWhile&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;ExprYield&gt; for Expr","synthetic":false,"types":[]},{"text":"impl From&lt;usize&gt; for Index","synthetic":false,"types":[]},{"text":"impl From&lt;TypeParam&gt; for GenericParam","synthetic":false,"types":[]},{"text":"impl From&lt;LifetimeDef&gt; for GenericParam","synthetic":false,"types":[]},{"text":"impl From&lt;ConstParam&gt; for GenericParam","synthetic":false,"types":[]},{"text":"impl From&lt;Ident&gt; for TypeParam","synthetic":false,"types":[]},{"text":"impl From&lt;TraitBound&gt; for TypeParamBound","synthetic":false,"types":[]},{"text":"impl From&lt;Lifetime&gt; for TypeParamBound","synthetic":false,"types":[]},{"text":"impl From&lt;PredicateType&gt; for WherePredicate","synthetic":false,"types":[]},{"text":"impl From&lt;PredicateLifetime&gt; for WherePredicate","synthetic":false,"types":[]},{"text":"impl From&lt;PredicateEq&gt; for WherePredicate","synthetic":false,"types":[]},{"text":"impl From&lt;LitStr&gt; for Lit","synthetic":false,"types":[]},{"text":"impl From&lt;LitByteStr&gt; for Lit","synthetic":false,"types":[]},{"text":"impl From&lt;LitByte&gt; for Lit","synthetic":false,"types":[]},{"text":"impl From&lt;LitChar&gt; for Lit","synthetic":false,"types":[]},{"text":"impl From&lt;LitInt&gt; for Lit","synthetic":false,"types":[]},{"text":"impl From&lt;LitFloat&gt; for Lit","synthetic":false,"types":[]},{"text":"impl From&lt;LitBool&gt; for Lit","synthetic":false,"types":[]},{"text":"impl From&lt;Literal&gt; for LitInt","synthetic":false,"types":[]},{"text":"impl From&lt;Literal&gt; for LitFloat","synthetic":false,"types":[]},{"text":"impl From&lt;DataStruct&gt; for Data","synthetic":false,"types":[]},{"text":"impl From&lt;DataEnum&gt; for Data","synthetic":false,"types":[]},{"text":"impl From&lt;DataUnion&gt; for Data","synthetic":false,"types":[]},{"text":"impl From&lt;TypeArray&gt; for Type","synthetic":false,"types":[]},{"text":"impl From&lt;TypeBareFn&gt; for Type","synthetic":false,"types":[]},{"text":"impl From&lt;TypeGroup&gt; for Type","synthetic":false,"types":[]},{"text":"impl From&lt;TypeImplTrait&gt; for Type","synthetic":false,"types":[]},{"text":"impl From&lt;TypeInfer&gt; for Type","synthetic":false,"types":[]},{"text":"impl From&lt;TypeMacro&gt; for Type","synthetic":false,"types":[]},{"text":"impl From&lt;TypeNever&gt; for Type","synthetic":false,"types":[]},{"text":"impl From&lt;TypeParen&gt; for Type","synthetic":false,"types":[]},{"text":"impl From&lt;TypePath&gt; for Type","synthetic":false,"types":[]},{"text":"impl From&lt;TypePtr&gt; for Type","synthetic":false,"types":[]},{"text":"impl From&lt;TypeReference&gt; for Type","synthetic":false,"types":[]},{"text":"impl From&lt;TypeSlice&gt; for Type","synthetic":false,"types":[]},{"text":"impl From&lt;TypeTraitObject&gt; for Type","synthetic":false,"types":[]},{"text":"impl From&lt;TypeTuple&gt; for Type","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;T&gt; for Path <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Into&lt;PathSegment&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;T&gt; for PathSegment <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Into&lt;Ident&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl From&lt;LexError&gt; for Error","synthetic":false,"types":[]}];
implementors["tiff"] = [{"text":"impl From&lt;Error&gt; for TiffError","synthetic":false,"types":[]},{"text":"impl From&lt;FromUtf8Error&gt; for TiffError","synthetic":false,"types":[]},{"text":"impl From&lt;TiffFormatError&gt; for TiffError","synthetic":false,"types":[]},{"text":"impl From&lt;TiffUnsupportedError&gt; for TiffError","synthetic":false,"types":[]},{"text":"impl From&lt;TryFromIntError&gt; for TiffError","synthetic":false,"types":[]}];
implementors["walkdir"] = [{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]}];
implementors["window"] = [{"text":"impl From&lt;[u32; 2]&gt; for Size","synthetic":false,"types":[]},{"text":"impl From&lt;[f64; 2]&gt; for Size","synthetic":false,"types":[]},{"text":"impl From&lt;(u32, u32)&gt; for Size","synthetic":false,"types":[]},{"text":"impl From&lt;(f64, f64)&gt; for Size","synthetic":false,"types":[]},{"text":"impl From&lt;Size&gt; for [u32; 2]","synthetic":false,"types":[]},{"text":"impl From&lt;Size&gt; for [f64; 2]","synthetic":false,"types":[]},{"text":"impl From&lt;Size&gt; for (u32, u32)","synthetic":false,"types":[]},{"text":"impl From&lt;Size&gt; for (f64, f64)","synthetic":false,"types":[]},{"text":"impl From&lt;[i32; 2]&gt; for Position","synthetic":false,"types":[]},{"text":"impl From&lt;(i32, i32)&gt; for Position","synthetic":false,"types":[]},{"text":"impl From&lt;Position&gt; for [i32; 2]","synthetic":false,"types":[]},{"text":"impl From&lt;Position&gt; for (i32, i32)","synthetic":false,"types":[]}];
implementors["winit"] = [{"text":"impl From&lt;(f64, f64)&gt; for LogicalPosition","synthetic":false,"types":[]},{"text":"impl From&lt;(i32, i32)&gt; for LogicalPosition","synthetic":false,"types":[]},{"text":"impl From&lt;(f64, f64)&gt; for PhysicalPosition","synthetic":false,"types":[]},{"text":"impl From&lt;(i32, i32)&gt; for PhysicalPosition","synthetic":false,"types":[]},{"text":"impl From&lt;(f64, f64)&gt; for LogicalSize","synthetic":false,"types":[]},{"text":"impl From&lt;(u32, u32)&gt; for LogicalSize","synthetic":false,"types":[]},{"text":"impl From&lt;(f64, f64)&gt; for PhysicalSize","synthetic":false,"types":[]},{"text":"impl From&lt;(u32, u32)&gt; for PhysicalSize","synthetic":false,"types":[]},{"text":"impl From&lt;ModifiersState&gt; for ModifiersState","synthetic":false,"types":[]},{"text":"impl From&lt;OpenError&gt; for XNotSupported","synthetic":false,"types":[]},{"text":"impl From&lt;XIModifierState&gt; for ModifiersState","synthetic":false,"types":[]}];
implementors["x11_dl"] = [{"text":"impl From&lt;XAnyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XAnyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XAnyEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XAnyEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XButtonEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XButtonEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XButtonEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XButtonEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XCirculateEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XCirculateEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XCirculateEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XCirculateEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XCirculateRequestEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XCirculateRequestEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XCirculateRequestEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XCirculateRequestEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XClientMessageEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XClientMessageEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XClientMessageEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XClientMessageEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XColormapEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XColormapEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XColormapEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XColormapEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XConfigureEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XConfigureEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XConfigureEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XConfigureEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XConfigureRequestEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XConfigureRequestEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XConfigureRequestEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XConfigureRequestEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XCreateWindowEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XCreateWindowEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XCreateWindowEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XCreateWindowEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XCrossingEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XCrossingEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XCrossingEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XCrossingEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XDestroyWindowEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XDestroyWindowEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XDestroyWindowEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XDestroyWindowEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XErrorEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XErrorEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XErrorEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XErrorEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XExposeEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XExposeEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XExposeEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XExposeEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XFocusChangeEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XFocusChangeEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XFocusChangeEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XFocusChangeEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XGenericEventCookie&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XGenericEventCookie&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XGenericEventCookie","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XGenericEventCookie","synthetic":false,"types":[]},{"text":"impl From&lt;XGraphicsExposeEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XGraphicsExposeEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XGraphicsExposeEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XGraphicsExposeEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XGravityEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XGravityEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XGravityEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XGravityEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XKeyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XKeyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XKeyEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XKeyEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XKeymapEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XKeymapEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XKeymapEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XKeymapEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XMapEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XMapEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XMapEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XMapEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XMappingEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XMappingEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XMappingEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XMappingEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XMapRequestEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XMapRequestEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XMapRequestEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XMapRequestEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XMotionEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XMotionEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XMotionEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XMotionEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XNoExposeEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XNoExposeEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XNoExposeEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XNoExposeEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XPropertyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XPropertyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XPropertyEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XPropertyEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XReparentEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XReparentEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XReparentEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XReparentEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XResizeRequestEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XResizeRequestEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XResizeRequestEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XResizeRequestEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XSelectionClearEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XSelectionClearEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XSelectionClearEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XSelectionClearEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XSelectionEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XSelectionEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XSelectionEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XSelectionEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XSelectionRequestEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XSelectionRequestEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XSelectionRequestEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XSelectionRequestEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XUnmapEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XUnmapEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XUnmapEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XUnmapEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XVisibilityEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XVisibilityEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XVisibilityEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XVisibilityEvent","synthetic":false,"types":[]},{"text":"impl From&lt;[i8; 20]&gt; for ClientMessageData","synthetic":false,"types":[]},{"text":"impl From&lt;[u8; 20]&gt; for ClientMessageData","synthetic":false,"types":[]},{"text":"impl From&lt;[i16; 10]&gt; for ClientMessageData","synthetic":false,"types":[]},{"text":"impl From&lt;[u16; 10]&gt; for ClientMessageData","synthetic":false,"types":[]},{"text":"impl From&lt;[i64; 5]&gt; for ClientMessageData","synthetic":false,"types":[]},{"text":"impl From&lt;[u64; 5]&gt; for ClientMessageData","synthetic":false,"types":[]},{"text":"impl From&lt;XF86VidModeNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XF86VidModeNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XF86VidModeNotifyEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XF86VidModeNotifyEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XScreenSaverNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XScreenSaverNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XScreenSaverNotifyEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XScreenSaverNotifyEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XRRScreenChangeNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XRRScreenChangeNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XRRScreenChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XRRScreenChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XRRNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XRRNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XRRNotifyEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XRRNotifyEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XRROutputChangeNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XRROutputChangeNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XRROutputChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XRROutputChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XRRCrtcChangeNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XRRCrtcChangeNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XRRCrtcChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XRRCrtcChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XRROutputPropertyNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XRROutputPropertyNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XRROutputPropertyNotifyEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XRROutputPropertyNotifyEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XRRProviderChangeNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XRRProviderChangeNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XRRProviderChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XRRProviderChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XRRProviderPropertyNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XRRProviderPropertyNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XRRProviderPropertyNotifyEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XRRProviderPropertyNotifyEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XRRResourceChangeNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XRRResourceChangeNotifyEvent&gt; for XEvent","synthetic":false,"types":[]},{"text":"impl From&lt;XEvent&gt; for XRRResourceChangeNotifyEvent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a XEvent&gt; for XRRResourceChangeNotifyEvent","synthetic":false,"types":[]}];
implementors["xdg"] = [{"text":"impl From&lt;BaseDirectoriesError&gt; for Error","synthetic":false,"types":[]}];
implementors["xml"] = [{"text":"impl&lt;'a&gt; From&lt;&amp;'a str&gt; for Name&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;(&amp;'a str, &amp;'a str)&gt; for Name&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;Name&lt;'a&gt;&gt; for OwnedName","synthetic":false,"types":[]},{"text":"impl&lt;'a, P, M&gt; From&lt;(&amp;'a P, M)&gt; for Error <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Position,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Into&lt;Cow&lt;'static, str&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for EmitterError","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a str&gt; for XmlEvent&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;EndElementBuilder&lt;'a&gt;&gt; for XmlEvent&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;StartElementBuilder&lt;'a&gt;&gt; for XmlEvent&lt;'a&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()