(function() {var implementors = {};
implementors["adler32"] = [{"text":"impl Freeze for RollingAdler32","synthetic":true,"types":[]}];
implementors["andrew"] = [{"text":"impl&lt;'a&gt; Freeze for Canvas&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Endian","synthetic":true,"types":[]},{"text":"impl Freeze for Line","synthetic":true,"types":[]},{"text":"impl Freeze for Sides","synthetic":true,"types":[]},{"text":"impl Freeze for Rectangle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FontConfig","synthetic":true,"types":[]}];
implementors["approx"] = [{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Freeze for AbsDiff&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Freeze for Relative&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B:&nbsp;?Sized&gt; Freeze for Ulps&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as AbsDiffEq&lt;B&gt;&gt;::Epsilon: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["bytemuck"] = [{"text":"impl Freeze for PodCastError","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl Freeze for BigEndian","synthetic":true,"types":[]},{"text":"impl Freeze for LittleEndian","synthetic":true,"types":[]}];
implementors["color_quant"] = [{"text":"impl Freeze for NeuQuant","synthetic":true,"types":[]}];
implementors["crc32fast"] = [{"text":"impl Freeze for Hasher","synthetic":true,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; !Freeze for Worker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Stealer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Injector&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Steal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T&gt; !Freeze for Atomic&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'g, T, P&gt; Freeze for CompareAndSetError&lt;'g, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Owned&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'g, T&gt; Freeze for Shared&lt;'g, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Collector","synthetic":true,"types":[]},{"text":"impl Freeze for LocalHandle","synthetic":true,"types":[]},{"text":"impl Freeze for Guard","synthetic":true,"types":[]}];
implementors["crossbeam_queue"] = [{"text":"impl&lt;T&gt; !Freeze for ArrayQueue&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PopError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for PushError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for SegQueue&lt;T&gt;","synthetic":true,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; Freeze for CachePadded&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for Backoff","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for AtomicCell&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Parker","synthetic":true,"types":[]},{"text":"impl Freeze for Unparker","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for ShardedLock&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Freeze for Scope&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; Freeze for ScopedThreadBuilder&lt;'scope, 'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; Freeze for ScopedJoinHandle&lt;'scope, T&gt;","synthetic":true,"types":[]}];
implementors["deflate"] = [{"text":"impl Freeze for CompressionOptions","synthetic":true,"types":[]},{"text":"impl Freeze for Compression","synthetic":true,"types":[]},{"text":"impl Freeze for SpecialOptions","synthetic":true,"types":[]},{"text":"impl Freeze for MatchingType","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for DeflateEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for ZlibEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["dlib"] = [{"text":"impl Freeze for DlError","synthetic":true,"types":[]}];
implementors["draw_state"] = [{"text":"impl Freeze for Offset","synthetic":true,"types":[]},{"text":"impl Freeze for MultiSample","synthetic":true,"types":[]},{"text":"impl Freeze for Rasterizer","synthetic":true,"types":[]},{"text":"impl Freeze for StencilSide","synthetic":true,"types":[]},{"text":"impl Freeze for Stencil","synthetic":true,"types":[]},{"text":"impl Freeze for Depth","synthetic":true,"types":[]},{"text":"impl Freeze for BlendChannel","synthetic":true,"types":[]},{"text":"impl Freeze for Blend","synthetic":true,"types":[]},{"text":"impl Freeze for ColorMask","synthetic":true,"types":[]},{"text":"impl Freeze for Color","synthetic":true,"types":[]},{"text":"impl Freeze for RefValues","synthetic":true,"types":[]},{"text":"impl Freeze for FrontFace","synthetic":true,"types":[]},{"text":"impl Freeze for CullFace","synthetic":true,"types":[]},{"text":"impl Freeze for RasterMethod","synthetic":true,"types":[]},{"text":"impl Freeze for Comparison","synthetic":true,"types":[]},{"text":"impl Freeze for StencilOp","synthetic":true,"types":[]},{"text":"impl Freeze for Equation","synthetic":true,"types":[]},{"text":"impl Freeze for BlendValue","synthetic":true,"types":[]},{"text":"impl Freeze for Factor","synthetic":true,"types":[]},{"text":"impl Freeze for Rect","synthetic":true,"types":[]},{"text":"impl Freeze for Mirror","synthetic":true,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Freeze for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["event_loop"] = [{"text":"impl Freeze for EventSettings","synthetic":true,"types":[]},{"text":"impl Freeze for Events","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl Freeze for FnvHasher","synthetic":true,"types":[]}];
implementors["gfx"] = [{"text":"impl&lt;R, C&gt; Freeze for Encoder&lt;R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Slice&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, D&gt; Freeze for CopyError&lt;S, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UpdateError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for PipelineStateError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for IndexBuffer&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RawDataSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, M&gt; Freeze for PipelineState&lt;R, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for ElementError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for InitError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; Freeze for VertexBufferCommon&lt;T, I&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RawVertexBuffer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ConstantBuffer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RawConstantBuffer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Global&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RawGlobal","synthetic":true,"types":[]},{"text":"impl Freeze for NonInstanced","synthetic":true,"types":[]},{"text":"impl Freeze for Instanced","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ShaderResource&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RawShaderResource","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UnorderedAccess&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Sampler","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TextureSampler&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RenderTarget&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for BlendTarget&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RawRenderTarget","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DepthTarget&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for StencilTarget&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DepthStencilTarget&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Scissor","synthetic":true,"types":[]},{"text":"impl Freeze for BlendRef","synthetic":true,"types":[]},{"text":"impl&lt;R, Data&gt; Freeze for Bundle&lt;R, Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Data as PipelineData&lt;R&gt;&gt;::Meta: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ProgramError","synthetic":true,"types":[]}];
implementors["gfx_core"] = [{"text":"impl&lt;R&gt; Freeze for VertexShader&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for HullShader&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DomainShader&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for GeometryShader&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for PixelShader&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Capabilities","synthetic":true,"types":[]},{"text":"impl Freeze for AdapterInfo","synthetic":true,"types":[]},{"text":"impl Freeze for Frame","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for ShaderSet&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Primitive","synthetic":true,"types":[]},{"text":"impl Freeze for IndexType","synthetic":true,"types":[]},{"text":"impl Freeze for SubmissionError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !Freeze for Raw&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Info","synthetic":true,"types":[]},{"text":"impl Freeze for Role","synthetic":true,"types":[]},{"text":"impl Freeze for CreationError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for AccessInfo&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Freeze for AccessGuard&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Freeze for AccessGuardBuffers&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Freeze for AccessGuardBuffersChain&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ClearColor","synthetic":true,"types":[]},{"text":"impl Freeze for DummyDevice","synthetic":true,"types":[]},{"text":"impl Freeze for DummyFence","synthetic":true,"types":[]},{"text":"impl Freeze for DummyMapping","synthetic":true,"types":[]},{"text":"impl Freeze for DummyCommandBuffer","synthetic":true,"types":[]},{"text":"impl Freeze for DummyResources","synthetic":true,"types":[]},{"text":"impl Freeze for ResourceViewError","synthetic":true,"types":[]},{"text":"impl Freeze for TargetViewError","synthetic":true,"types":[]},{"text":"impl Freeze for CombinedError","synthetic":true,"types":[]},{"text":"impl Freeze for Swizzle","synthetic":true,"types":[]},{"text":"impl Freeze for Format","synthetic":true,"types":[]},{"text":"impl Freeze for U8Norm","synthetic":true,"types":[]},{"text":"impl Freeze for I8Norm","synthetic":true,"types":[]},{"text":"impl Freeze for U16Norm","synthetic":true,"types":[]},{"text":"impl Freeze for I16Norm","synthetic":true,"types":[]},{"text":"impl Freeze for F16","synthetic":true,"types":[]},{"text":"impl Freeze for ChannelType","synthetic":true,"types":[]},{"text":"impl Freeze for Int","synthetic":true,"types":[]},{"text":"impl Freeze for Uint","synthetic":true,"types":[]},{"text":"impl Freeze for Inorm","synthetic":true,"types":[]},{"text":"impl Freeze for Unorm","synthetic":true,"types":[]},{"text":"impl Freeze for Float","synthetic":true,"types":[]},{"text":"impl Freeze for Srgb","synthetic":true,"types":[]},{"text":"impl Freeze for SurfaceType","synthetic":true,"types":[]},{"text":"impl Freeze for R4_G4","synthetic":true,"types":[]},{"text":"impl Freeze for R4_G4_B4_A4","synthetic":true,"types":[]},{"text":"impl Freeze for R5_G5_B5_A1","synthetic":true,"types":[]},{"text":"impl Freeze for R5_G6_B5","synthetic":true,"types":[]},{"text":"impl Freeze for R8","synthetic":true,"types":[]},{"text":"impl Freeze for R8_G8","synthetic":true,"types":[]},{"text":"impl Freeze for R8_G8_B8_A8","synthetic":true,"types":[]},{"text":"impl Freeze for R10_G10_B10_A2","synthetic":true,"types":[]},{"text":"impl Freeze for R11_G11_B10","synthetic":true,"types":[]},{"text":"impl Freeze for R16","synthetic":true,"types":[]},{"text":"impl Freeze for R16_G16","synthetic":true,"types":[]},{"text":"impl Freeze for R16_G16_B16","synthetic":true,"types":[]},{"text":"impl Freeze for R16_G16_B16_A16","synthetic":true,"types":[]},{"text":"impl Freeze for R32","synthetic":true,"types":[]},{"text":"impl Freeze for R32_G32","synthetic":true,"types":[]},{"text":"impl Freeze for R32_G32_B32","synthetic":true,"types":[]},{"text":"impl Freeze for R32_G32_B32_A32","synthetic":true,"types":[]},{"text":"impl Freeze for B8_G8_R8_A8","synthetic":true,"types":[]},{"text":"impl Freeze for D16","synthetic":true,"types":[]},{"text":"impl Freeze for D24","synthetic":true,"types":[]},{"text":"impl Freeze for D24_S8","synthetic":true,"types":[]},{"text":"impl Freeze for D32","synthetic":true,"types":[]},{"text":"impl Freeze for BC1_R8_G8_B8","synthetic":true,"types":[]},{"text":"impl Freeze for BC3_R8_G8_B8_A8","synthetic":true,"types":[]},{"text":"impl Freeze for ChannelSource","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RawBuffer&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; Freeze for Buffer&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Shader&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Program&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RawPipelineState&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RawTexture&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, S&gt; Freeze for Texture&lt;R, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RawShaderResourceView&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; Freeze for ShaderResourceView&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RawUnorderedAccessView&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; Freeze for UnorderedAccessView&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RawRenderTargetView&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RawDepthStencilView&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; Freeze for RenderTargetView&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; Freeze for DepthStencilView&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Sampler&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Fence&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Manager&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T&gt; Freeze for Reader&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T&gt; Freeze for Writer&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Access","synthetic":true,"types":[]},{"text":"impl Freeze for Bind","synthetic":true,"types":[]},{"text":"impl Freeze for Usage","synthetic":true,"types":[]},{"text":"impl Freeze for CreationError","synthetic":true,"types":[]},{"text":"impl Freeze for ColorInfo","synthetic":true,"types":[]},{"text":"impl Freeze for DepthStencilInfo","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for Element&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for VertexBufferDesc","synthetic":true,"types":[]},{"text":"impl Freeze for Descriptor","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for VertexBufferSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for ConstantBufferParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for ResourceViewParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::ShaderResourceView: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for UnorderedViewParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::UnorderedAccessView: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for SamplerParam&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Sampler: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for PixelTargetSet&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for SamplerType","synthetic":true,"types":[]},{"text":"impl Freeze for Usage","synthetic":true,"types":[]},{"text":"impl Freeze for AttributeVar","synthetic":true,"types":[]},{"text":"impl Freeze for ConstVar","synthetic":true,"types":[]},{"text":"impl Freeze for ConstantBufferVar","synthetic":true,"types":[]},{"text":"impl Freeze for TextureVar","synthetic":true,"types":[]},{"text":"impl Freeze for UnorderedVar","synthetic":true,"types":[]},{"text":"impl Freeze for SamplerVar","synthetic":true,"types":[]},{"text":"impl Freeze for OutputVar","synthetic":true,"types":[]},{"text":"impl Freeze for ProgramInfo","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Program&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Program: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for CreateProgramError","synthetic":true,"types":[]},{"text":"impl Freeze for IsArray","synthetic":true,"types":[]},{"text":"impl Freeze for IsComparison","synthetic":true,"types":[]},{"text":"impl Freeze for IsMultiSample","synthetic":true,"types":[]},{"text":"impl Freeze for IsRect","synthetic":true,"types":[]},{"text":"impl Freeze for MatrixFormat","synthetic":true,"types":[]},{"text":"impl Freeze for TextureType","synthetic":true,"types":[]},{"text":"impl Freeze for BaseType","synthetic":true,"types":[]},{"text":"impl Freeze for ContainerType","synthetic":true,"types":[]},{"text":"impl Freeze for Stage","synthetic":true,"types":[]},{"text":"impl Freeze for UniformValue","synthetic":true,"types":[]},{"text":"impl Freeze for CompatibilityError","synthetic":true,"types":[]},{"text":"impl Freeze for CreateShaderError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Raw&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Texture: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for ImageInfoCommon&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TextureCopyRegion&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Lod","synthetic":true,"types":[]},{"text":"impl Freeze for PackedColor","synthetic":true,"types":[]},{"text":"impl Freeze for SamplerInfo","synthetic":true,"types":[]},{"text":"impl Freeze for Info","synthetic":true,"types":[]},{"text":"impl Freeze for ResourceDesc","synthetic":true,"types":[]},{"text":"impl Freeze for RenderDesc","synthetic":true,"types":[]},{"text":"impl Freeze for DepthStencilFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DepthStencilDesc","synthetic":true,"types":[]},{"text":"impl Freeze for CreationError","synthetic":true,"types":[]},{"text":"impl Freeze for LayerError","synthetic":true,"types":[]},{"text":"impl Freeze for AaMode","synthetic":true,"types":[]},{"text":"impl Freeze for FilterMethod","synthetic":true,"types":[]},{"text":"impl Freeze for CubeFace","synthetic":true,"types":[]},{"text":"impl Freeze for Kind","synthetic":true,"types":[]},{"text":"impl Freeze for Mipmap","synthetic":true,"types":[]},{"text":"impl Freeze for WrapMode","synthetic":true,"types":[]}];
implementors["gfx_device_gl"] = [{"text":"impl Freeze for CommandBuffer","synthetic":true,"types":[]},{"text":"impl Freeze for Factory","synthetic":true,"types":[]},{"text":"impl Freeze for Info","synthetic":true,"types":[]},{"text":"impl Freeze for PlatformName","synthetic":true,"types":[]},{"text":"impl Freeze for Version","synthetic":true,"types":[]},{"text":"impl Freeze for Fence","synthetic":true,"types":[]},{"text":"impl Freeze for BufferElement","synthetic":true,"types":[]},{"text":"impl Freeze for OutputMerger","synthetic":true,"types":[]},{"text":"impl Freeze for PipelineState","synthetic":true,"types":[]},{"text":"impl Freeze for ResourceView","synthetic":true,"types":[]},{"text":"impl Freeze for FatSampler","synthetic":true,"types":[]},{"text":"impl Freeze for Device","synthetic":true,"types":[]},{"text":"impl Freeze for Resources","synthetic":true,"types":[]},{"text":"impl Freeze for NewTexture","synthetic":true,"types":[]},{"text":"impl Freeze for TargetView","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["gfx_gl"] = [{"text":"impl Freeze for FnPtr","synthetic":true,"types":[]},{"text":"impl Freeze for Gl","synthetic":true,"types":[]},{"text":"impl Freeze for __GLsync","synthetic":true,"types":[]},{"text":"impl Freeze for _cl_context","synthetic":true,"types":[]},{"text":"impl Freeze for _cl_event","synthetic":true,"types":[]}];
implementors["gfx_graphics"] = [{"text":"impl&lt;R&gt; Freeze for Gfx2d&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, C&gt; Freeze for GfxGraphics&lt;'a, R, C&gt;","synthetic":true,"types":[]}];
implementors["gfx_texture"] = [{"text":"impl&lt;F, R, C&gt; Freeze for TextureContext&lt;F, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::Buffer: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::DepthStencilView: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Resources&gt;::RenderTargetView: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Texture&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Flip","synthetic":true,"types":[]}];
implementors["gif"] = [{"text":"impl&lt;'a&gt; Freeze for Frame&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for StreamingDecoder","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryLimit","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Reader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for Encoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Block","synthetic":true,"types":[]},{"text":"impl Freeze for Extension","synthetic":true,"types":[]},{"text":"impl Freeze for DisposalMethod","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Decoded&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DecodingError","synthetic":true,"types":[]},{"text":"impl Freeze for ColorOutput","synthetic":true,"types":[]},{"text":"impl Freeze for Extensions","synthetic":true,"types":[]},{"text":"impl Freeze for ExtensionData","synthetic":true,"types":[]},{"text":"impl Freeze for Repeat","synthetic":true,"types":[]}];
implementors["gl"] = [{"text":"impl Freeze for FnPtr","synthetic":true,"types":[]},{"text":"impl Freeze for __GLsync","synthetic":true,"types":[]},{"text":"impl Freeze for _cl_context","synthetic":true,"types":[]},{"text":"impl Freeze for _cl_event","synthetic":true,"types":[]}];
implementors["glutin"] = [{"text":"impl&lt;T&gt; !Freeze for Context&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PossiblyCurrent","synthetic":true,"types":[]},{"text":"impl&lt;T, W&gt; !Freeze for ContextWrapper&lt;T, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ContextBuilder&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PixelFormat","synthetic":true,"types":[]},{"text":"impl Freeze for PixelFormatRequirements","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for GlAttributes&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for NotCurrent","synthetic":true,"types":[]},{"text":"impl Freeze for CreationError","synthetic":true,"types":[]},{"text":"impl Freeze for ContextError","synthetic":true,"types":[]},{"text":"impl Freeze for Api","synthetic":true,"types":[]},{"text":"impl Freeze for GlProfile","synthetic":true,"types":[]},{"text":"impl Freeze for GlRequest","synthetic":true,"types":[]},{"text":"impl Freeze for Robustness","synthetic":true,"types":[]},{"text":"impl Freeze for ReleaseBehavior","synthetic":true,"types":[]},{"text":"impl Freeze for RawHandle","synthetic":true,"types":[]}];
implementors["glutin_egl_sys"] = [{"text":"impl Freeze for FnPtr","synthetic":true,"types":[]},{"text":"impl Freeze for Egl","synthetic":true,"types":[]},{"text":"impl Freeze for EGLClientPixmapHI","synthetic":true,"types":[]},{"text":"impl Freeze for __eglMustCastToProperFunctionPointerType_fn","synthetic":true,"types":[]}];
implementors["glutin_glx_sys"] = [{"text":"impl Freeze for FnPtr","synthetic":true,"types":[]},{"text":"impl Freeze for Glx","synthetic":true,"types":[]},{"text":"impl Freeze for XVisualInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GLXPbufferClobberEvent","synthetic":true,"types":[]},{"text":"impl Freeze for GLXBufferSwapComplete","synthetic":true,"types":[]},{"text":"impl Freeze for GLXBufferClobberEventSGIX","synthetic":true,"types":[]},{"text":"impl Freeze for GLXHyperpipeNetworkSGIX","synthetic":true,"types":[]},{"text":"impl Freeze for GLXHyperpipeConfigSGIX","synthetic":true,"types":[]},{"text":"impl Freeze for GLXPipeRect","synthetic":true,"types":[]},{"text":"impl Freeze for GLXPipeRectLimits","synthetic":true,"types":[]},{"text":"impl Freeze for __GLsync","synthetic":true,"types":[]},{"text":"impl Freeze for _cl_context","synthetic":true,"types":[]},{"text":"impl Freeze for _cl_event","synthetic":true,"types":[]},{"text":"impl Freeze for Display","synthetic":true,"types":[]},{"text":"impl Freeze for Visual","synthetic":true,"types":[]},{"text":"impl Freeze for __GLXextFuncPtr_fn","synthetic":true,"types":[]},{"text":"impl Freeze for FnPtr","synthetic":true,"types":[]},{"text":"impl Freeze for Glx","synthetic":true,"types":[]},{"text":"impl Freeze for XVisualInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GLXPbufferClobberEvent","synthetic":true,"types":[]},{"text":"impl Freeze for GLXBufferSwapComplete","synthetic":true,"types":[]},{"text":"impl Freeze for GLXBufferClobberEventSGIX","synthetic":true,"types":[]},{"text":"impl Freeze for GLXHyperpipeNetworkSGIX","synthetic":true,"types":[]},{"text":"impl Freeze for GLXHyperpipeConfigSGIX","synthetic":true,"types":[]},{"text":"impl Freeze for GLXPipeRect","synthetic":true,"types":[]},{"text":"impl Freeze for GLXPipeRectLimits","synthetic":true,"types":[]},{"text":"impl Freeze for __GLsync","synthetic":true,"types":[]},{"text":"impl Freeze for _cl_context","synthetic":true,"types":[]},{"text":"impl Freeze for _cl_event","synthetic":true,"types":[]},{"text":"impl Freeze for Display","synthetic":true,"types":[]},{"text":"impl Freeze for Visual","synthetic":true,"types":[]},{"text":"impl Freeze for __GLXextFuncPtr_fn","synthetic":true,"types":[]}];
implementors["glutin_window"] = [{"text":"impl !Freeze for GlutinWindow","synthetic":true,"types":[]}];
implementors["graphics"] = [{"text":"impl Freeze for DrawState","synthetic":true,"types":[]},{"text":"impl Freeze for Blend","synthetic":true,"types":[]},{"text":"impl Freeze for Stencil","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Character&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Context","synthetic":true,"types":[]},{"text":"impl Freeze for Polygon","synthetic":true,"types":[]},{"text":"impl Freeze for Line","synthetic":true,"types":[]},{"text":"impl Freeze for Shape","synthetic":true,"types":[]},{"text":"impl Freeze for CircleArc","synthetic":true,"types":[]},{"text":"impl Freeze for Border","synthetic":true,"types":[]},{"text":"impl Freeze for Ellipse","synthetic":true,"types":[]},{"text":"impl Freeze for Border","synthetic":true,"types":[]},{"text":"impl Freeze for Rectangle","synthetic":true,"types":[]},{"text":"impl Freeze for Shape","synthetic":true,"types":[]},{"text":"impl Freeze for Image","synthetic":true,"types":[]},{"text":"impl Freeze for Text","synthetic":true,"types":[]},{"text":"impl Freeze for Grid","synthetic":true,"types":[]},{"text":"impl Freeze for GridCells","synthetic":true,"types":[]},{"text":"impl&lt;'a, F, T&gt; Freeze for GlyphCache&lt;'a, F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TexturePacker&lt;T&gt;","synthetic":true,"types":[]}];
implementors["graphics_api_version"] = [{"text":"impl Freeze for Version","synthetic":true,"types":[]},{"text":"impl Freeze for UnsupportedGraphicsApiError","synthetic":true,"types":[]}];
implementors["image"] = [{"text":"impl&lt;T&gt; Freeze for Luma&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for LumaA&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Rgb&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Rgba&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Bgr&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Bgra&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Progress","synthetic":true,"types":[]},{"text":"impl&lt;'a, I:&nbsp;?Sized&gt; Freeze for Pixels&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for SubImage&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P, Container&gt; Freeze for ImageBuffer&lt;P, Container&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Container: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Delay","synthetic":true,"types":[]},{"text":"impl Freeze for Frame","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Frames&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ColorType","synthetic":true,"types":[]},{"text":"impl Freeze for ExtendedColorType","synthetic":true,"types":[]},{"text":"impl Freeze for ImageFormat","synthetic":true,"types":[]},{"text":"impl Freeze for ImageOutputFormat","synthetic":true,"types":[]},{"text":"impl Freeze for DynamicImage","synthetic":true,"types":[]},{"text":"impl Freeze for UnsupportedError","synthetic":true,"types":[]},{"text":"impl Freeze for EncodingError","synthetic":true,"types":[]},{"text":"impl Freeze for ParameterError","synthetic":true,"types":[]},{"text":"impl Freeze for DecodingError","synthetic":true,"types":[]},{"text":"impl Freeze for LimitError","synthetic":true,"types":[]},{"text":"impl Freeze for ImageError","synthetic":true,"types":[]},{"text":"impl Freeze for UnsupportedErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for ParameterErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for LimitErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for ImageFormatHint","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Freeze for EnumeratePixels&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Freeze for EnumeratePixelsMut&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Freeze for EnumerateRows&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Freeze for EnumerateRowsMut&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Freeze for Pixels&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Freeze for PixelsMut&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Freeze for Rows&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Freeze for RowsMut&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Rect","synthetic":true,"types":[]},{"text":"impl Freeze for NeuQuant","synthetic":true,"types":[]},{"text":"impl Freeze for FilterType","synthetic":true,"types":[]},{"text":"impl Freeze for BiLevel","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Reader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Buffer&gt; Freeze for FlatSamples&lt;Buffer&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for SampleLayout","synthetic":true,"types":[]},{"text":"impl&lt;Buffer, P&gt; Freeze for View&lt;Buffer, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Buffer, P&gt; Freeze for ViewMut&lt;Buffer, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for NormalForm","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BmpDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Freeze for BMPEncoder&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DdsDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DxtDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DXTReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for DXTEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for DXTVariant","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for GifDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for GifReader&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for Encoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for HDRAdapter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for HdrReader&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for HdrDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RGBE8Pixel","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for HDRImageDecoderIterator&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for HDRMetadata","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for HDREncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for IcoDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for ICOEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for JpegDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Freeze for JPEGEncoder&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PixelDensity","synthetic":true,"types":[]},{"text":"impl Freeze for PixelDensityUnit","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for PNGReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for PngDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for ApngDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for PNGEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for CompressionType","synthetic":true,"types":[]},{"text":"impl Freeze for FilterType","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for PnmDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for PNMEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ArbitraryHeader","synthetic":true,"types":[]},{"text":"impl Freeze for BitmapHeader","synthetic":true,"types":[]},{"text":"impl Freeze for GraymapHeader","synthetic":true,"types":[]},{"text":"impl Freeze for PixmapHeader","synthetic":true,"types":[]},{"text":"impl Freeze for PNMHeader","synthetic":true,"types":[]},{"text":"impl Freeze for ArbitraryTuplType","synthetic":true,"types":[]},{"text":"impl Freeze for PNMSubtype","synthetic":true,"types":[]},{"text":"impl Freeze for SampleEncoding","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for TgaDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for TgaEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for TiffDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for TiffReader&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for TiffEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for WebPDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Frame","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Vp8Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for FarbfeldReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for FarbfeldDecoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for FarbfeldEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["input"] = [{"text":"impl Freeze for AfterRenderArgs","synthetic":true,"types":[]},{"text":"impl Freeze for CloseArgs","synthetic":true,"types":[]},{"text":"impl Freeze for IdleArgs","synthetic":true,"types":[]},{"text":"impl Freeze for ButtonArgs","synthetic":true,"types":[]},{"text":"impl Freeze for ResizeArgs","synthetic":true,"types":[]},{"text":"impl Freeze for RenderArgs","synthetic":true,"types":[]},{"text":"impl Freeze for TouchArgs","synthetic":true,"types":[]},{"text":"impl Freeze for UpdateArgs","synthetic":true,"types":[]},{"text":"impl Freeze for ButtonState","synthetic":true,"types":[]},{"text":"impl Freeze for Touch","synthetic":true,"types":[]},{"text":"impl Freeze for Button","synthetic":true,"types":[]},{"text":"impl Freeze for Motion","synthetic":true,"types":[]},{"text":"impl Freeze for HatState","synthetic":true,"types":[]},{"text":"impl Freeze for FileDrag","synthetic":true,"types":[]},{"text":"impl Freeze for Input","synthetic":true,"types":[]},{"text":"impl Freeze for Loop","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ControllerButton","synthetic":true,"types":[]},{"text":"impl Freeze for ControllerHat","synthetic":true,"types":[]},{"text":"impl Freeze for ControllerAxisArgs","synthetic":true,"types":[]},{"text":"impl Freeze for ModifierKey","synthetic":true,"types":[]},{"text":"impl Freeze for Key","synthetic":true,"types":[]},{"text":"impl Freeze for MouseButton","synthetic":true,"types":[]},{"text":"impl Freeze for EventId","synthetic":true,"types":[]}];
implementors["interpolation"] = [{"text":"impl Freeze for EaseFunction","synthetic":true,"types":[]}];
implementors["jpeg_decoder"] = [{"text":"impl&lt;R&gt; Freeze for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ImageInfo","synthetic":true,"types":[]},{"text":"impl Freeze for PixelFormat","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for UnsupportedFeature","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl Freeze for group","synthetic":true,"types":[]},{"text":"impl Freeze for utimbuf","synthetic":true,"types":[]},{"text":"impl Freeze for timeval","synthetic":true,"types":[]},{"text":"impl Freeze for timespec","synthetic":true,"types":[]},{"text":"impl Freeze for rlimit","synthetic":true,"types":[]},{"text":"impl Freeze for rusage","synthetic":true,"types":[]},{"text":"impl Freeze for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for hostent","synthetic":true,"types":[]},{"text":"impl Freeze for iovec","synthetic":true,"types":[]},{"text":"impl Freeze for pollfd","synthetic":true,"types":[]},{"text":"impl Freeze for winsize","synthetic":true,"types":[]},{"text":"impl Freeze for linger","synthetic":true,"types":[]},{"text":"impl Freeze for sigval","synthetic":true,"types":[]},{"text":"impl Freeze for itimerval","synthetic":true,"types":[]},{"text":"impl Freeze for tms","synthetic":true,"types":[]},{"text":"impl Freeze for servent","synthetic":true,"types":[]},{"text":"impl Freeze for protoent","synthetic":true,"types":[]},{"text":"impl Freeze for in_addr","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Freeze for addrinfo","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Freeze for fd_set","synthetic":true,"types":[]},{"text":"impl Freeze for tm","synthetic":true,"types":[]},{"text":"impl Freeze for sched_param","synthetic":true,"types":[]},{"text":"impl Freeze for Dl_info","synthetic":true,"types":[]},{"text":"impl Freeze for lconv","synthetic":true,"types":[]},{"text":"impl Freeze for in_pktinfo","synthetic":true,"types":[]},{"text":"impl Freeze for ifaddrs","synthetic":true,"types":[]},{"text":"impl Freeze for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Freeze for arpreq","synthetic":true,"types":[]},{"text":"impl Freeze for arpreq_old","synthetic":true,"types":[]},{"text":"impl Freeze for arphdr","synthetic":true,"types":[]},{"text":"impl Freeze for mmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for epoll_event","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Freeze for utsname","synthetic":true,"types":[]},{"text":"impl Freeze for sigevent","synthetic":true,"types":[]},{"text":"impl Freeze for rlimit64","synthetic":true,"types":[]},{"text":"impl Freeze for glob_t","synthetic":true,"types":[]},{"text":"impl Freeze for passwd","synthetic":true,"types":[]},{"text":"impl Freeze for spwd","synthetic":true,"types":[]},{"text":"impl Freeze for dqblk","synthetic":true,"types":[]},{"text":"impl Freeze for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Freeze for itimerspec","synthetic":true,"types":[]},{"text":"impl Freeze for fsid_t","synthetic":true,"types":[]},{"text":"impl Freeze for packet_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for cpu_set_t","synthetic":true,"types":[]},{"text":"impl Freeze for if_nameindex","synthetic":true,"types":[]},{"text":"impl Freeze for msginfo","synthetic":true,"types":[]},{"text":"impl Freeze for sembuf","synthetic":true,"types":[]},{"text":"impl Freeze for input_event","synthetic":true,"types":[]},{"text":"impl Freeze for input_id","synthetic":true,"types":[]},{"text":"impl Freeze for input_absinfo","synthetic":true,"types":[]},{"text":"impl Freeze for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Freeze for input_mask","synthetic":true,"types":[]},{"text":"impl Freeze for ff_replay","synthetic":true,"types":[]},{"text":"impl Freeze for ff_trigger","synthetic":true,"types":[]},{"text":"impl Freeze for ff_envelope","synthetic":true,"types":[]},{"text":"impl Freeze for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_effect","synthetic":true,"types":[]},{"text":"impl Freeze for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Freeze for ucred","synthetic":true,"types":[]},{"text":"impl Freeze for mntent","synthetic":true,"types":[]},{"text":"impl Freeze for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Freeze for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Freeze for arpd_request","synthetic":true,"types":[]},{"text":"impl Freeze for inotify_event","synthetic":true,"types":[]},{"text":"impl Freeze for fanotify_response","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Freeze for regmatch_t","synthetic":true,"types":[]},{"text":"impl Freeze for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Freeze for dirent","synthetic":true,"types":[]},{"text":"impl Freeze for dirent64","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Freeze for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Freeze for mq_attr","synthetic":true,"types":[]},{"text":"impl Freeze for statx","synthetic":true,"types":[]},{"text":"impl Freeze for statx_timestamp","synthetic":true,"types":[]},{"text":"impl Freeze for aiocb","synthetic":true,"types":[]},{"text":"impl Freeze for __exit_status","synthetic":true,"types":[]},{"text":"impl Freeze for __timeval","synthetic":true,"types":[]},{"text":"impl Freeze for glob64_t","synthetic":true,"types":[]},{"text":"impl Freeze for msghdr","synthetic":true,"types":[]},{"text":"impl Freeze for cmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for termios","synthetic":true,"types":[]},{"text":"impl Freeze for mallinfo","synthetic":true,"types":[]},{"text":"impl Freeze for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Freeze for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Freeze for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Freeze for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Freeze for nlattr","synthetic":true,"types":[]},{"text":"impl Freeze for rtentry","synthetic":true,"types":[]},{"text":"impl Freeze for timex","synthetic":true,"types":[]},{"text":"impl Freeze for ntptimeval","synthetic":true,"types":[]},{"text":"impl Freeze for regex_t","synthetic":true,"types":[]},{"text":"impl Freeze for utmpx","synthetic":true,"types":[]},{"text":"impl Freeze for sigset_t","synthetic":true,"types":[]},{"text":"impl Freeze for sysinfo","synthetic":true,"types":[]},{"text":"impl Freeze for msqid_ds","synthetic":true,"types":[]},{"text":"impl Freeze for sigaction","synthetic":true,"types":[]},{"text":"impl Freeze for statfs","synthetic":true,"types":[]},{"text":"impl Freeze for flock","synthetic":true,"types":[]},{"text":"impl Freeze for flock64","synthetic":true,"types":[]},{"text":"impl Freeze for siginfo_t","synthetic":true,"types":[]},{"text":"impl Freeze for stack_t","synthetic":true,"types":[]},{"text":"impl Freeze for stat","synthetic":true,"types":[]},{"text":"impl Freeze for stat64","synthetic":true,"types":[]},{"text":"impl Freeze for statfs64","synthetic":true,"types":[]},{"text":"impl Freeze for statvfs64","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Freeze for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Freeze for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Freeze for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Freeze for user_regs_struct","synthetic":true,"types":[]},{"text":"impl Freeze for user","synthetic":true,"types":[]},{"text":"impl Freeze for mcontext_t","synthetic":true,"types":[]},{"text":"impl Freeze for ipc_perm","synthetic":true,"types":[]},{"text":"impl Freeze for shmid_ds","synthetic":true,"types":[]},{"text":"impl Freeze for termios2","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Freeze for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl Freeze for ucontext_t","synthetic":true,"types":[]},{"text":"impl Freeze for statvfs","synthetic":true,"types":[]},{"text":"impl Freeze for max_align_t","synthetic":true,"types":[]},{"text":"impl Freeze for sem_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Freeze for in6_addr","synthetic":true,"types":[]},{"text":"impl Freeze for DIR","synthetic":true,"types":[]},{"text":"impl Freeze for FILE","synthetic":true,"types":[]},{"text":"impl Freeze for fpos_t","synthetic":true,"types":[]},{"text":"impl Freeze for timezone","synthetic":true,"types":[]},{"text":"impl Freeze for fpos64_t","synthetic":true,"types":[]}];
implementors["libloading"] = [{"text":"impl Freeze for Library","synthetic":true,"types":[]},{"text":"impl&lt;'lib, T&gt; Freeze for Symbol&lt;'lib, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Library","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Symbol&lt;T&gt;","synthetic":true,"types":[]}];
implementors["line_drawing"] = [{"text":"impl&lt;T&gt; Freeze for Bresenham&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Freeze for Midpoint&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Freeze for XiaolinWu&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for WalkGrid&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Supercover&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Bresenham3d&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, O&gt; Freeze for WalkVoxels&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for BresenhamCircle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for VoxelOrigin","synthetic":true,"types":[]},{"text":"impl&lt;T, I&gt; Freeze for Steps&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Octant","synthetic":true,"types":[]}];
implementors["lock_api"] = [{"text":"impl Freeze for GuardSend","synthetic":true,"types":[]},{"text":"impl Freeze for GuardNoSend","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; !Freeze for Mutex&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for MutexGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, G, T&gt; !Freeze for ReentrantMutex&lt;R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Freeze for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Freeze for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; !Freeze for RwLock&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for RwLockReadGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for RwLockWriteGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for RwLockUpgradableReadGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; Freeze for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Freeze for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Freeze for Level","synthetic":true,"types":[]},{"text":"impl Freeze for LevelFilter","synthetic":true,"types":[]}];
implementors["lzw"] = [{"text":"impl&lt;R&gt; Freeze for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DecoderEarlyChange&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for Encoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for LsbReader","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for LsbWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for MsbReader","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for MsbWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Bits","synthetic":true,"types":[]}];
implementors["memmap"] = [{"text":"impl Freeze for MmapOptions","synthetic":true,"types":[]},{"text":"impl Freeze for Mmap","synthetic":true,"types":[]},{"text":"impl Freeze for MmapMut","synthetic":true,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Freeze for StreamResult","synthetic":true,"types":[]},{"text":"impl Freeze for MZFlush","synthetic":true,"types":[]},{"text":"impl Freeze for MZStatus","synthetic":true,"types":[]},{"text":"impl Freeze for MZError","synthetic":true,"types":[]},{"text":"impl Freeze for DataFormat","synthetic":true,"types":[]},{"text":"impl Freeze for CompressionLevel","synthetic":true,"types":[]},{"text":"impl Freeze for CompressorOxide","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CallbackFunc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CompressionStrategy","synthetic":true,"types":[]},{"text":"impl Freeze for TDEFLFlush","synthetic":true,"types":[]},{"text":"impl Freeze for TDEFLStatus","synthetic":true,"types":[]},{"text":"impl Freeze for TINFLStatus","synthetic":true,"types":[]},{"text":"impl Freeze for DecompressorOxide","synthetic":true,"types":[]},{"text":"impl Freeze for InflateState","synthetic":true,"types":[]}];
implementors["nix"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Dir","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; Freeze for Iter&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Entry","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for Errno","synthetic":true,"types":[]},{"text":"impl Freeze for AtFlags","synthetic":true,"types":[]},{"text":"impl Freeze for OFlag","synthetic":true,"types":[]},{"text":"impl Freeze for SealFlag","synthetic":true,"types":[]},{"text":"impl Freeze for FdFlag","synthetic":true,"types":[]},{"text":"impl Freeze for SpliceFFlags","synthetic":true,"types":[]},{"text":"impl Freeze for FallocateFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FcntlArg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FlockArg","synthetic":true,"types":[]},{"text":"impl Freeze for InterfaceAddress","synthetic":true,"types":[]},{"text":"impl Freeze for InterfaceAddressIterator","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleInitFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DeleteModuleFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MsFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MntFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MQ_OFlag","synthetic":true,"types":[]},{"text":"impl Freeze for FdFlag","synthetic":true,"types":[]},{"text":"impl Freeze for MqAttr","synthetic":true,"types":[]},{"text":"impl Freeze for InterfaceFlags","synthetic":true,"types":[]},{"text":"impl Freeze for PollFd","synthetic":true,"types":[]},{"text":"impl Freeze for PollFlags","synthetic":true,"types":[]},{"text":"impl Freeze for OpenptyResult","synthetic":true,"types":[]},{"text":"impl Freeze for ForkptyResult","synthetic":true,"types":[]},{"text":"impl Freeze for PtyMaster","synthetic":true,"types":[]},{"text":"impl Freeze for CloneFlags","synthetic":true,"types":[]},{"text":"impl Freeze for CpuSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for AioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for LioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for AioFsyncMode","synthetic":true,"types":[]},{"text":"impl Freeze for LioOpcode","synthetic":true,"types":[]},{"text":"impl Freeze for LioMode","synthetic":true,"types":[]},{"text":"impl Freeze for AioCancelStat","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for EpollFlags","synthetic":true,"types":[]},{"text":"impl Freeze for EpollCreateFlags","synthetic":true,"types":[]},{"text":"impl Freeze for EpollEvent","synthetic":true,"types":[]},{"text":"impl Freeze for EpollOp","synthetic":true,"types":[]},{"text":"impl Freeze for EfdFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MemFdCreateFlag","synthetic":true,"types":[]},{"text":"impl Freeze for ProtFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MapFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MsFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MlockAllFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MmapAdvise","synthetic":true,"types":[]},{"text":"impl Freeze for Options","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for QuotaValidFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Dqblk","synthetic":true,"types":[]},{"text":"impl Freeze for QuotaType","synthetic":true,"types":[]},{"text":"impl Freeze for QuotaFmt","synthetic":true,"types":[]},{"text":"impl Freeze for RebootMode","synthetic":true,"types":[]},{"text":"impl Freeze for FdSet","synthetic":true,"types":[]},{"text":"impl Freeze for SigEvent","synthetic":true,"types":[]},{"text":"impl Freeze for SignalIterator","synthetic":true,"types":[]},{"text":"impl Freeze for SaFlags","synthetic":true,"types":[]},{"text":"impl Freeze for SigSet","synthetic":true,"types":[]},{"text":"impl Freeze for SigAction","synthetic":true,"types":[]},{"text":"impl Freeze for Signal","synthetic":true,"types":[]},{"text":"impl Freeze for SigmaskHow","synthetic":true,"types":[]},{"text":"impl Freeze for SigHandler","synthetic":true,"types":[]},{"text":"impl Freeze for SigevNotify","synthetic":true,"types":[]},{"text":"impl Freeze for SfdFlags","synthetic":true,"types":[]},{"text":"impl Freeze for SignalFd","synthetic":true,"types":[]},{"text":"impl Freeze for UnixAddr","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl Freeze for LinkAddr","synthetic":true,"types":[]},{"text":"impl Freeze for NetlinkAddr","synthetic":true,"types":[]},{"text":"impl Freeze for AlgAddr","synthetic":true,"types":[]},{"text":"impl Freeze for SockFlag","synthetic":true,"types":[]},{"text":"impl Freeze for MsgFlags","synthetic":true,"types":[]},{"text":"impl Freeze for UnixCredentials","synthetic":true,"types":[]},{"text":"impl Freeze for IpMembershipRequest","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6MembershipRequest","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for CmsgSpace&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RecvMsg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CmsgIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for AddressFamily","synthetic":true,"types":[]},{"text":"impl Freeze for SockAddr","synthetic":true,"types":[]},{"text":"impl Freeze for InetAddr","synthetic":true,"types":[]},{"text":"impl Freeze for IpAddr","synthetic":true,"types":[]},{"text":"impl Freeze for SockType","synthetic":true,"types":[]},{"text":"impl Freeze for SockProtocol","synthetic":true,"types":[]},{"text":"impl Freeze for ControlMessageOwned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ControlMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SockLevel","synthetic":true,"types":[]},{"text":"impl Freeze for Shutdown","synthetic":true,"types":[]},{"text":"impl Freeze for ReuseAddr","synthetic":true,"types":[]},{"text":"impl Freeze for ReusePort","synthetic":true,"types":[]},{"text":"impl Freeze for TcpNoDelay","synthetic":true,"types":[]},{"text":"impl Freeze for Linger","synthetic":true,"types":[]},{"text":"impl Freeze for IpAddMembership","synthetic":true,"types":[]},{"text":"impl Freeze for IpDropMembership","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6AddMembership","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6DropMembership","synthetic":true,"types":[]},{"text":"impl Freeze for IpMulticastTtl","synthetic":true,"types":[]},{"text":"impl Freeze for IpMulticastLoop","synthetic":true,"types":[]},{"text":"impl Freeze for ReceiveTimeout","synthetic":true,"types":[]},{"text":"impl Freeze for SendTimeout","synthetic":true,"types":[]},{"text":"impl Freeze for Broadcast","synthetic":true,"types":[]},{"text":"impl Freeze for OobInline","synthetic":true,"types":[]},{"text":"impl Freeze for SocketError","synthetic":true,"types":[]},{"text":"impl Freeze for KeepAlive","synthetic":true,"types":[]},{"text":"impl Freeze for PeerCredentials","synthetic":true,"types":[]},{"text":"impl Freeze for TcpKeepIdle","synthetic":true,"types":[]},{"text":"impl Freeze for RcvBuf","synthetic":true,"types":[]},{"text":"impl Freeze for SndBuf","synthetic":true,"types":[]},{"text":"impl Freeze for RcvBufForce","synthetic":true,"types":[]},{"text":"impl Freeze for SndBufForce","synthetic":true,"types":[]},{"text":"impl Freeze for SockType","synthetic":true,"types":[]},{"text":"impl Freeze for AcceptConn","synthetic":true,"types":[]},{"text":"impl Freeze for OriginalDst","synthetic":true,"types":[]},{"text":"impl Freeze for ReceiveTimestamp","synthetic":true,"types":[]},{"text":"impl Freeze for IpTransparent","synthetic":true,"types":[]},{"text":"impl Freeze for Mark","synthetic":true,"types":[]},{"text":"impl Freeze for PassCred","synthetic":true,"types":[]},{"text":"impl Freeze for TcpCongestion","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv4PacketInfo","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6RecvPacketInfo","synthetic":true,"types":[]},{"text":"impl Freeze for AlgSetAeadAuthSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for AlgSetKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SFlag","synthetic":true,"types":[]},{"text":"impl Freeze for Mode","synthetic":true,"types":[]},{"text":"impl Freeze for FchmodatFlags","synthetic":true,"types":[]},{"text":"impl Freeze for UtimensatFlags","synthetic":true,"types":[]},{"text":"impl Freeze for FsFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Statvfs","synthetic":true,"types":[]},{"text":"impl Freeze for SysInfo","synthetic":true,"types":[]},{"text":"impl !Freeze for Termios","synthetic":true,"types":[]},{"text":"impl Freeze for InputFlags","synthetic":true,"types":[]},{"text":"impl Freeze for OutputFlags","synthetic":true,"types":[]},{"text":"impl Freeze for ControlFlags","synthetic":true,"types":[]},{"text":"impl Freeze for LocalFlags","synthetic":true,"types":[]},{"text":"impl Freeze for BaudRate","synthetic":true,"types":[]},{"text":"impl Freeze for SetArg","synthetic":true,"types":[]},{"text":"impl Freeze for FlushArg","synthetic":true,"types":[]},{"text":"impl Freeze for FlowArg","synthetic":true,"types":[]},{"text":"impl Freeze for SpecialCharacterIndices","synthetic":true,"types":[]},{"text":"impl Freeze for TimeSpec","synthetic":true,"types":[]},{"text":"impl Freeze for TimeVal","synthetic":true,"types":[]},{"text":"impl Freeze for RemoteIoVec","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IoVec&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for UtsName","synthetic":true,"types":[]},{"text":"impl Freeze for WaitPidFlag","synthetic":true,"types":[]},{"text":"impl Freeze for WaitStatus","synthetic":true,"types":[]},{"text":"impl Freeze for AddWatchFlags","synthetic":true,"types":[]},{"text":"impl Freeze for InitFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Inotify","synthetic":true,"types":[]},{"text":"impl Freeze for WatchDescriptor","synthetic":true,"types":[]},{"text":"impl Freeze for InotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for UContext","synthetic":true,"types":[]},{"text":"impl Freeze for Uid","synthetic":true,"types":[]},{"text":"impl Freeze for Gid","synthetic":true,"types":[]},{"text":"impl Freeze for Pid","synthetic":true,"types":[]},{"text":"impl Freeze for AccessFlags","synthetic":true,"types":[]},{"text":"impl Freeze for ForkResult","synthetic":true,"types":[]},{"text":"impl Freeze for FchownatFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Whence","synthetic":true,"types":[]},{"text":"impl Freeze for PathconfVar","synthetic":true,"types":[]},{"text":"impl Freeze for SysconfVar","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Freeze for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_iter"] = [{"text":"impl&lt;A&gt; Freeze for Range&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for RangeInclusive&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for RangeStep&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for RangeStepInclusive&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for RangeFrom&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for RangeStepFrom&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; Freeze for Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ParseRatioError","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Freeze for ParseFloatError","synthetic":true,"types":[]},{"text":"impl Freeze for FloatErrorKind","synthetic":true,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T&gt; Freeze for OrderedFloat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for NotNan&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for FloatIsNan","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for ParseNotNanError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["osmesa_sys"] = [{"text":"impl Freeze for OsMesa","synthetic":true,"types":[]},{"text":"impl Freeze for osmesa_context","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl !Freeze for Condvar","synthetic":true,"types":[]},{"text":"impl Freeze for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl !Freeze for Once","synthetic":true,"types":[]},{"text":"impl !Freeze for RawMutex","synthetic":true,"types":[]},{"text":"impl !Freeze for RawRwLock","synthetic":true,"types":[]},{"text":"impl Freeze for RawThreadId","synthetic":true,"types":[]},{"text":"impl Freeze for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Freeze for ParkToken","synthetic":true,"types":[]},{"text":"impl Freeze for UnparkResult","synthetic":true,"types":[]},{"text":"impl Freeze for UnparkToken","synthetic":true,"types":[]},{"text":"impl Freeze for SpinWait","synthetic":true,"types":[]},{"text":"impl Freeze for FilterOp","synthetic":true,"types":[]},{"text":"impl Freeze for ParkResult","synthetic":true,"types":[]},{"text":"impl Freeze for RequeueOp","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Freeze for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["piston_window"] = [{"text":"impl&lt;W&gt; Freeze for PistonWindow&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["png"] = [{"text":"impl Freeze for PixelDimensions","synthetic":true,"types":[]},{"text":"impl Freeze for FrameControl","synthetic":true,"types":[]},{"text":"impl Freeze for AnimationControl","synthetic":true,"types":[]},{"text":"impl Freeze for Info","synthetic":true,"types":[]},{"text":"impl Freeze for Transformations","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Limits","synthetic":true,"types":[]},{"text":"impl Freeze for OutputInfo","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Reader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for StreamingDecoder","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for Encoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Freeze for StreamWriter&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for Writer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ColorType","synthetic":true,"types":[]},{"text":"impl Freeze for BitDepth","synthetic":true,"types":[]},{"text":"impl Freeze for Unit","synthetic":true,"types":[]},{"text":"impl Freeze for DisposeOp","synthetic":true,"types":[]},{"text":"impl Freeze for BlendOp","synthetic":true,"types":[]},{"text":"impl Freeze for Compression","synthetic":true,"types":[]},{"text":"impl Freeze for Decoded","synthetic":true,"types":[]},{"text":"impl Freeze for DecodingError","synthetic":true,"types":[]},{"text":"impl Freeze for EncodingError","synthetic":true,"types":[]},{"text":"impl Freeze for FilterType","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for TokenStream","synthetic":true,"types":[]},{"text":"impl Freeze for LexError","synthetic":true,"types":[]},{"text":"impl Freeze for Span","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for Punct","synthetic":true,"types":[]},{"text":"impl Freeze for Ident","synthetic":true,"types":[]},{"text":"impl Freeze for Literal","synthetic":true,"types":[]},{"text":"impl Freeze for TokenTree","synthetic":true,"types":[]},{"text":"impl Freeze for Delimiter","synthetic":true,"types":[]},{"text":"impl Freeze for Spacing","synthetic":true,"types":[]},{"text":"impl Freeze for IntoIter","synthetic":true,"types":[]}];
implementors["raw_window_handle"] = [{"text":"impl Freeze for RawWindowHandle","synthetic":true,"types":[]},{"text":"impl Freeze for XlibHandle","synthetic":true,"types":[]},{"text":"impl Freeze for XcbHandle","synthetic":true,"types":[]},{"text":"impl Freeze for WaylandHandle","synthetic":true,"types":[]}];
implementors["rayon"] = [{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for Chain&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Chunks&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Cloned&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Copied&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Empty&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Enumerate&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Freeze for Filter&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Freeze for FilterMap&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Freeze for FlatMap&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Flatten&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, ID, F&gt; Freeze for Fold&lt;I, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, F&gt; Freeze for FoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Freeze for Inspect&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Freeze for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Freeze for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as ParallelIterator&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for MaxLen&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for MinLen&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Freeze for Map&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, INIT, F&gt; Freeze for MapInit&lt;I, INIT, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;INIT: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T, F&gt; Freeze for MapWith&lt;I, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for MultiZip&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for PanicFuse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Iter&gt; Freeze for IterBridge&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RepeatN&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Rev&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Skip&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D, S&gt; Freeze for Split&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Take&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, ID, F&gt; Freeze for TryFold&lt;I, U, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, U, F&gt; Freeze for TryFoldWith&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Try&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Freeze for Update&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for WhileSome&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for Zip&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for ZipEq&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for StepBy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Iter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Freeze for Iter&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Freeze for Chunks&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Freeze for ChunksExact&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Freeze for Windows&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Freeze for IterMut&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Freeze for ChunksMut&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T&gt; Freeze for ChunksExactMut&lt;'data, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, T, P&gt; Freeze for Split&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, T, P&gt; Freeze for SplitMut&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Freeze for Chars&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Freeze for CharIndices&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Freeze for Bytes&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Freeze for EncodeUtf16&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Freeze for Split&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Freeze for SplitTerminator&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Freeze for Lines&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch&gt; Freeze for SplitWhitespace&lt;'ch&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Freeze for Matches&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ch, P&gt; Freeze for MatchIndices&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]}];
implementors["rayon_core"] = [{"text":"impl !Freeze for ThreadBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; !Freeze for Scope&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; !Freeze for ScopeFifo&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ThreadPool","synthetic":true,"types":[]},{"text":"impl Freeze for ThreadPoolBuildError","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for ThreadPoolBuilder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Configuration","synthetic":true,"types":[]},{"text":"impl Freeze for FnContext","synthetic":true,"types":[]}];
implementors["rusttype"] = [{"text":"impl Freeze for Curve","synthetic":true,"types":[]},{"text":"impl Freeze for Line","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Freeze for Point&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Freeze for Rect&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Freeze for Vector&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FontCollection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Font&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Codepoint","synthetic":true,"types":[]},{"text":"impl Freeze for GlyphId","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Glyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SharedGlyphData","synthetic":true,"types":[]},{"text":"impl Freeze for HMetrics","synthetic":true,"types":[]},{"text":"impl Freeze for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ScaledGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PositionedGlyph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Scale","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for IntoFontsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, I&gt; Freeze for GlyphIter&lt;'a, 'b, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Freeze for LayoutIter&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Contour","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SharedBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Segment","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["same_file"] = [{"text":"impl Freeze for Handle","synthetic":true,"types":[]}];
implementors["scoped_threadpool"] = [{"text":"impl !Freeze for Pool","synthetic":true,"types":[]},{"text":"impl&lt;'pool, 'scope&gt; Freeze for Scope&lt;'pool, 'scope&gt;","synthetic":true,"types":[]}];
implementors["scopeguard"] = [{"text":"impl&lt;T, F, S&gt; Freeze for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Always","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl Freeze for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for UnitDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for BoolDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I8Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I16Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for IsizeDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U8Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U16Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for UsizeDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for F32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for F64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for CharDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I128Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U128Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Freeze for StrDeserializer&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Freeze for BorrowedStrDeserializer&lt;'de, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for StringDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Freeze for CowStrDeserializer&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Freeze for BorrowedBytesDeserializer&lt;'de, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Freeze for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Freeze for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Freeze for Impossible&lt;Ok, Error&gt;","synthetic":true,"types":[]}];
implementors["shader_version"] = [{"text":"impl&lt;'a, V, S:&nbsp;?Sized&gt; Freeze for Shaders&lt;'a, V, S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ParseOpenGLError","synthetic":true,"types":[]},{"text":"impl Freeze for OpenGL","synthetic":true,"types":[]},{"text":"impl Freeze for ParseGLSLError","synthetic":true,"types":[]},{"text":"impl Freeze for GLSL","synthetic":true,"types":[]}];
implementors["shared_library"] = [{"text":"impl Freeze for LoadingError","synthetic":true,"types":[]},{"text":"impl Freeze for DynamicLibrary","synthetic":true,"types":[]},{"text":"impl Freeze for SpecialHandles","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T&gt; Freeze for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["smithay_client_toolkit"] = [{"text":"impl Freeze for Environment","synthetic":true,"types":[]},{"text":"impl Freeze for Shell","synthetic":true,"types":[]},{"text":"impl Freeze for DataDevice","synthetic":true,"types":[]},{"text":"impl Freeze for DataOffer","synthetic":true,"types":[]},{"text":"impl Freeze for ReadPipe","synthetic":true,"types":[]},{"text":"impl Freeze for DataSource","synthetic":true,"types":[]},{"text":"impl Freeze for WritePipe","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DndEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DataSourceEvent","synthetic":true,"types":[]},{"text":"impl Freeze for ModifiersState","synthetic":true,"types":[]},{"text":"impl Freeze for RMLVO","synthetic":true,"types":[]},{"text":"impl Freeze for KeyRepeatEvent","synthetic":true,"types":[]},{"text":"impl Freeze for KeyRepeatKind","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Mode","synthetic":true,"types":[]},{"text":"impl Freeze for OutputInfo","synthetic":true,"types":[]},{"text":"impl Freeze for OutputMgr","synthetic":true,"types":[]},{"text":"impl Freeze for ThemeManager","synthetic":true,"types":[]},{"text":"impl Freeze for ThemedPointer","synthetic":true,"types":[]},{"text":"impl Freeze for AutoThemer","synthetic":true,"types":[]},{"text":"impl Freeze for AutoPointer","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for DoubleMemPool","synthetic":true,"types":[]},{"text":"impl Freeze for MemPool","synthetic":true,"types":[]},{"text":"impl Freeze for BasicFrame","synthetic":true,"types":[]},{"text":"impl Freeze for ConceptFrame","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !Freeze for Window&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ButtonState","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for FrameRequest","synthetic":true,"types":[]}];
implementors["stb_truetype"] = [{"text":"impl&lt;Data&gt; Freeze for FontInfo&lt;Data&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Data: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Vertex","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Rect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for HMetrics","synthetic":true,"types":[]},{"text":"impl Freeze for VMetrics","synthetic":true,"types":[]},{"text":"impl&lt;'a, Data&gt; Freeze for FontNameIter&lt;'a, Data&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for VertexType","synthetic":true,"types":[]},{"text":"impl Freeze for PlatformId","synthetic":true,"types":[]},{"text":"impl Freeze for UnicodeEid","synthetic":true,"types":[]},{"text":"impl Freeze for MicrosoftEid","synthetic":true,"types":[]},{"text":"impl Freeze for MacEid","synthetic":true,"types":[]},{"text":"impl Freeze for MicrosoftLang","synthetic":true,"types":[]},{"text":"impl Freeze for MacLang","synthetic":true,"types":[]},{"text":"impl Freeze for PlatformEncodingLanguageId","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl Freeze for Attribute","synthetic":true,"types":[]},{"text":"impl Freeze for MetaList","synthetic":true,"types":[]},{"text":"impl Freeze for MetaNameValue","synthetic":true,"types":[]},{"text":"impl Freeze for Field","synthetic":true,"types":[]},{"text":"impl Freeze for FieldsNamed","synthetic":true,"types":[]},{"text":"impl Freeze for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl Freeze for Variant","synthetic":true,"types":[]},{"text":"impl Freeze for VisCrate","synthetic":true,"types":[]},{"text":"impl Freeze for VisPublic","synthetic":true,"types":[]},{"text":"impl Freeze for VisRestricted","synthetic":true,"types":[]},{"text":"impl Freeze for ExprArray","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAssign","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAsync","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAwait","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBinary","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBlock","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBox","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBreak","synthetic":true,"types":[]},{"text":"impl Freeze for ExprCall","synthetic":true,"types":[]},{"text":"impl Freeze for ExprCast","synthetic":true,"types":[]},{"text":"impl Freeze for ExprClosure","synthetic":true,"types":[]},{"text":"impl Freeze for ExprContinue","synthetic":true,"types":[]},{"text":"impl Freeze for ExprField","synthetic":true,"types":[]},{"text":"impl Freeze for ExprForLoop","synthetic":true,"types":[]},{"text":"impl Freeze for ExprGroup","synthetic":true,"types":[]},{"text":"impl Freeze for ExprIf","synthetic":true,"types":[]},{"text":"impl Freeze for ExprIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLet","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLit","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLoop","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMacro","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMatch","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl Freeze for ExprParen","synthetic":true,"types":[]},{"text":"impl Freeze for ExprPath","synthetic":true,"types":[]},{"text":"impl Freeze for ExprRange","synthetic":true,"types":[]},{"text":"impl Freeze for ExprReference","synthetic":true,"types":[]},{"text":"impl Freeze for ExprRepeat","synthetic":true,"types":[]},{"text":"impl Freeze for ExprReturn","synthetic":true,"types":[]},{"text":"impl Freeze for ExprStruct","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTry","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTuple","synthetic":true,"types":[]},{"text":"impl Freeze for ExprType","synthetic":true,"types":[]},{"text":"impl Freeze for ExprUnary","synthetic":true,"types":[]},{"text":"impl Freeze for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl Freeze for ExprWhile","synthetic":true,"types":[]},{"text":"impl Freeze for ExprYield","synthetic":true,"types":[]},{"text":"impl Freeze for Index","synthetic":true,"types":[]},{"text":"impl Freeze for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl Freeze for ConstParam","synthetic":true,"types":[]},{"text":"impl Freeze for Generics","synthetic":true,"types":[]},{"text":"impl Freeze for LifetimeDef","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateEq","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateType","synthetic":true,"types":[]},{"text":"impl Freeze for TraitBound","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParam","synthetic":true,"types":[]},{"text":"impl Freeze for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Lifetime","synthetic":true,"types":[]},{"text":"impl Freeze for LitBool","synthetic":true,"types":[]},{"text":"impl Freeze for LitByte","synthetic":true,"types":[]},{"text":"impl Freeze for LitByteStr","synthetic":true,"types":[]},{"text":"impl Freeze for LitChar","synthetic":true,"types":[]},{"text":"impl Freeze for LitFloat","synthetic":true,"types":[]},{"text":"impl Freeze for LitInt","synthetic":true,"types":[]},{"text":"impl Freeze for LitStr","synthetic":true,"types":[]},{"text":"impl Freeze for Macro","synthetic":true,"types":[]},{"text":"impl Freeze for DataEnum","synthetic":true,"types":[]},{"text":"impl Freeze for DataStruct","synthetic":true,"types":[]},{"text":"impl Freeze for DataUnion","synthetic":true,"types":[]},{"text":"impl Freeze for DeriveInput","synthetic":true,"types":[]},{"text":"impl Freeze for Abi","synthetic":true,"types":[]},{"text":"impl Freeze for BareFnArg","synthetic":true,"types":[]},{"text":"impl Freeze for TypeArray","synthetic":true,"types":[]},{"text":"impl Freeze for TypeBareFn","synthetic":true,"types":[]},{"text":"impl Freeze for TypeGroup","synthetic":true,"types":[]},{"text":"impl Freeze for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl Freeze for TypeInfer","synthetic":true,"types":[]},{"text":"impl Freeze for TypeMacro","synthetic":true,"types":[]},{"text":"impl Freeze for TypeNever","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParen","synthetic":true,"types":[]},{"text":"impl Freeze for TypePath","synthetic":true,"types":[]},{"text":"impl Freeze for TypePtr","synthetic":true,"types":[]},{"text":"impl Freeze for TypeReference","synthetic":true,"types":[]},{"text":"impl Freeze for TypeSlice","synthetic":true,"types":[]},{"text":"impl Freeze for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl Freeze for TypeTuple","synthetic":true,"types":[]},{"text":"impl Freeze for Variadic","synthetic":true,"types":[]},{"text":"impl Freeze for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl Freeze for Binding","synthetic":true,"types":[]},{"text":"impl Freeze for Constraint","synthetic":true,"types":[]},{"text":"impl Freeze for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl Freeze for Path","synthetic":true,"types":[]},{"text":"impl Freeze for PathSegment","synthetic":true,"types":[]},{"text":"impl Freeze for QSelf","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for AttrStyle","synthetic":true,"types":[]},{"text":"impl Freeze for Meta","synthetic":true,"types":[]},{"text":"impl Freeze for NestedMeta","synthetic":true,"types":[]},{"text":"impl Freeze for Fields","synthetic":true,"types":[]},{"text":"impl Freeze for Visibility","synthetic":true,"types":[]},{"text":"impl Freeze for Expr","synthetic":true,"types":[]},{"text":"impl Freeze for Member","synthetic":true,"types":[]},{"text":"impl Freeze for GenericParam","synthetic":true,"types":[]},{"text":"impl Freeze for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParamBound","synthetic":true,"types":[]},{"text":"impl Freeze for WherePredicate","synthetic":true,"types":[]},{"text":"impl Freeze for Lit","synthetic":true,"types":[]},{"text":"impl Freeze for StrStyle","synthetic":true,"types":[]},{"text":"impl Freeze for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl Freeze for Data","synthetic":true,"types":[]},{"text":"impl Freeze for BinOp","synthetic":true,"types":[]},{"text":"impl Freeze for UnOp","synthetic":true,"types":[]},{"text":"impl Freeze for ReturnType","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for GenericArgument","synthetic":true,"types":[]},{"text":"impl Freeze for PathArguments","synthetic":true,"types":[]},{"text":"impl Freeze for Underscore","synthetic":true,"types":[]},{"text":"impl Freeze for Abstract","synthetic":true,"types":[]},{"text":"impl Freeze for As","synthetic":true,"types":[]},{"text":"impl Freeze for Async","synthetic":true,"types":[]},{"text":"impl Freeze for Auto","synthetic":true,"types":[]},{"text":"impl Freeze for Await","synthetic":true,"types":[]},{"text":"impl Freeze for Become","synthetic":true,"types":[]},{"text":"impl Freeze for Box","synthetic":true,"types":[]},{"text":"impl Freeze for Break","synthetic":true,"types":[]},{"text":"impl Freeze for Const","synthetic":true,"types":[]},{"text":"impl Freeze for Continue","synthetic":true,"types":[]},{"text":"impl Freeze for Crate","synthetic":true,"types":[]},{"text":"impl Freeze for Default","synthetic":true,"types":[]},{"text":"impl Freeze for Do","synthetic":true,"types":[]},{"text":"impl Freeze for Dyn","synthetic":true,"types":[]},{"text":"impl Freeze for Else","synthetic":true,"types":[]},{"text":"impl Freeze for Enum","synthetic":true,"types":[]},{"text":"impl Freeze for Extern","synthetic":true,"types":[]},{"text":"impl Freeze for Final","synthetic":true,"types":[]},{"text":"impl Freeze for Fn","synthetic":true,"types":[]},{"text":"impl Freeze for For","synthetic":true,"types":[]},{"text":"impl Freeze for If","synthetic":true,"types":[]},{"text":"impl Freeze for Impl","synthetic":true,"types":[]},{"text":"impl Freeze for In","synthetic":true,"types":[]},{"text":"impl Freeze for Let","synthetic":true,"types":[]},{"text":"impl Freeze for Loop","synthetic":true,"types":[]},{"text":"impl Freeze for Macro","synthetic":true,"types":[]},{"text":"impl Freeze for Match","synthetic":true,"types":[]},{"text":"impl Freeze for Mod","synthetic":true,"types":[]},{"text":"impl Freeze for Move","synthetic":true,"types":[]},{"text":"impl Freeze for Mut","synthetic":true,"types":[]},{"text":"impl Freeze for Override","synthetic":true,"types":[]},{"text":"impl Freeze for Priv","synthetic":true,"types":[]},{"text":"impl Freeze for Pub","synthetic":true,"types":[]},{"text":"impl Freeze for Ref","synthetic":true,"types":[]},{"text":"impl Freeze for Return","synthetic":true,"types":[]},{"text":"impl Freeze for SelfType","synthetic":true,"types":[]},{"text":"impl Freeze for SelfValue","synthetic":true,"types":[]},{"text":"impl Freeze for Static","synthetic":true,"types":[]},{"text":"impl Freeze for Struct","synthetic":true,"types":[]},{"text":"impl Freeze for Super","synthetic":true,"types":[]},{"text":"impl Freeze for Trait","synthetic":true,"types":[]},{"text":"impl Freeze for Try","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for Typeof","synthetic":true,"types":[]},{"text":"impl Freeze for Union","synthetic":true,"types":[]},{"text":"impl Freeze for Unsafe","synthetic":true,"types":[]},{"text":"impl Freeze for Unsized","synthetic":true,"types":[]},{"text":"impl Freeze for Use","synthetic":true,"types":[]},{"text":"impl Freeze for Virtual","synthetic":true,"types":[]},{"text":"impl Freeze for Where","synthetic":true,"types":[]},{"text":"impl Freeze for While","synthetic":true,"types":[]},{"text":"impl Freeze for Yield","synthetic":true,"types":[]},{"text":"impl Freeze for Add","synthetic":true,"types":[]},{"text":"impl Freeze for AddEq","synthetic":true,"types":[]},{"text":"impl Freeze for And","synthetic":true,"types":[]},{"text":"impl Freeze for AndAnd","synthetic":true,"types":[]},{"text":"impl Freeze for AndEq","synthetic":true,"types":[]},{"text":"impl Freeze for At","synthetic":true,"types":[]},{"text":"impl Freeze for Bang","synthetic":true,"types":[]},{"text":"impl Freeze for Caret","synthetic":true,"types":[]},{"text":"impl Freeze for CaretEq","synthetic":true,"types":[]},{"text":"impl Freeze for Colon","synthetic":true,"types":[]},{"text":"impl Freeze for Colon2","synthetic":true,"types":[]},{"text":"impl Freeze for Comma","synthetic":true,"types":[]},{"text":"impl Freeze for Div","synthetic":true,"types":[]},{"text":"impl Freeze for DivEq","synthetic":true,"types":[]},{"text":"impl Freeze for Dollar","synthetic":true,"types":[]},{"text":"impl Freeze for Dot","synthetic":true,"types":[]},{"text":"impl Freeze for Dot2","synthetic":true,"types":[]},{"text":"impl Freeze for Dot3","synthetic":true,"types":[]},{"text":"impl Freeze for DotDotEq","synthetic":true,"types":[]},{"text":"impl Freeze for Eq","synthetic":true,"types":[]},{"text":"impl Freeze for EqEq","synthetic":true,"types":[]},{"text":"impl Freeze for Ge","synthetic":true,"types":[]},{"text":"impl Freeze for Gt","synthetic":true,"types":[]},{"text":"impl Freeze for Le","synthetic":true,"types":[]},{"text":"impl Freeze for Lt","synthetic":true,"types":[]},{"text":"impl Freeze for MulEq","synthetic":true,"types":[]},{"text":"impl Freeze for Ne","synthetic":true,"types":[]},{"text":"impl Freeze for Or","synthetic":true,"types":[]},{"text":"impl Freeze for OrEq","synthetic":true,"types":[]},{"text":"impl Freeze for OrOr","synthetic":true,"types":[]},{"text":"impl Freeze for Pound","synthetic":true,"types":[]},{"text":"impl Freeze for Question","synthetic":true,"types":[]},{"text":"impl Freeze for RArrow","synthetic":true,"types":[]},{"text":"impl Freeze for LArrow","synthetic":true,"types":[]},{"text":"impl Freeze for Rem","synthetic":true,"types":[]},{"text":"impl Freeze for RemEq","synthetic":true,"types":[]},{"text":"impl Freeze for FatArrow","synthetic":true,"types":[]},{"text":"impl Freeze for Semi","synthetic":true,"types":[]},{"text":"impl Freeze for Shl","synthetic":true,"types":[]},{"text":"impl Freeze for ShlEq","synthetic":true,"types":[]},{"text":"impl Freeze for Shr","synthetic":true,"types":[]},{"text":"impl Freeze for ShrEq","synthetic":true,"types":[]},{"text":"impl Freeze for Star","synthetic":true,"types":[]},{"text":"impl Freeze for Sub","synthetic":true,"types":[]},{"text":"impl Freeze for SubEq","synthetic":true,"types":[]},{"text":"impl Freeze for Tilde","synthetic":true,"types":[]},{"text":"impl Freeze for Brace","synthetic":true,"types":[]},{"text":"impl Freeze for Bracket","synthetic":true,"types":[]},{"text":"impl Freeze for Paren","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for Punctuated&lt;T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Freeze for Pairs&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Freeze for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; Freeze for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Nothing","synthetic":true,"types":[]}];
implementors["texture"] = [{"text":"impl Freeze for TextureSettings","synthetic":true,"types":[]},{"text":"impl Freeze for Format","synthetic":true,"types":[]},{"text":"impl Freeze for Filter","synthetic":true,"types":[]},{"text":"impl Freeze for Wrap","synthetic":true,"types":[]}];
implementors["tiff"] = [{"text":"impl Freeze for InflateError","synthetic":true,"types":[]},{"text":"impl Freeze for TiffError","synthetic":true,"types":[]},{"text":"impl Freeze for TiffFormatError","synthetic":true,"types":[]},{"text":"impl Freeze for TiffUnsupportedError","synthetic":true,"types":[]},{"text":"impl Freeze for ColorType","synthetic":true,"types":[]},{"text":"impl Freeze for Limits","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Decoder&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for DecodingResult","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DecodingBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Entry","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]},{"text":"impl Freeze for Rational","synthetic":true,"types":[]},{"text":"impl Freeze for SRational","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for TiffEncoder&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Freeze for DirectoryEncoder&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W, C&gt; Freeze for ImageEncoder&lt;'a, W, C&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Gray8","synthetic":true,"types":[]},{"text":"impl Freeze for Gray16","synthetic":true,"types":[]},{"text":"impl Freeze for Gray32","synthetic":true,"types":[]},{"text":"impl Freeze for Gray64","synthetic":true,"types":[]},{"text":"impl Freeze for RGB8","synthetic":true,"types":[]},{"text":"impl Freeze for RGB16","synthetic":true,"types":[]},{"text":"impl Freeze for RGB32","synthetic":true,"types":[]},{"text":"impl Freeze for RGB64","synthetic":true,"types":[]},{"text":"impl Freeze for RGBA8","synthetic":true,"types":[]},{"text":"impl Freeze for RGBA16","synthetic":true,"types":[]},{"text":"impl Freeze for RGBA32","synthetic":true,"types":[]},{"text":"impl Freeze for RGBA64","synthetic":true,"types":[]},{"text":"impl Freeze for CMYK8","synthetic":true,"types":[]},{"text":"impl Freeze for CMYK16","synthetic":true,"types":[]},{"text":"impl Freeze for CMYK32","synthetic":true,"types":[]},{"text":"impl Freeze for CMYK64","synthetic":true,"types":[]},{"text":"impl Freeze for Tag","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for CompressionMethod","synthetic":true,"types":[]},{"text":"impl Freeze for PhotometricInterpretation","synthetic":true,"types":[]},{"text":"impl Freeze for PlanarConfiguration","synthetic":true,"types":[]},{"text":"impl Freeze for Predictor","synthetic":true,"types":[]},{"text":"impl Freeze for ResolutionUnit","synthetic":true,"types":[]}];
implementors["viewport"] = [{"text":"impl Freeze for Viewport","synthetic":true,"types":[]}];
implementors["void"] = [{"text":"impl Freeze for Void","synthetic":true,"types":[]}];
implementors["walkdir"] = [{"text":"impl Freeze for DirEntry","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for WalkDir","synthetic":true,"types":[]},{"text":"impl Freeze for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Freeze for FilterEntry&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["wayland_client"] = [{"text":"impl Freeze for Display","synthetic":true,"types":[]},{"text":"impl Freeze for EventQueue","synthetic":true,"types":[]},{"text":"impl Freeze for QueueToken","synthetic":true,"types":[]},{"text":"impl Freeze for ReadEventsGuard","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalManager","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for NewProxy&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Proxy&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectError","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalError","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalEvent","synthetic":true,"types":[]},{"text":"impl Freeze for ProxyMap","synthetic":true,"types":[]},{"text":"impl Freeze for CursorTheme","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CursorImageBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for WlEglSurface","synthetic":true,"types":[]},{"text":"impl Freeze for WlDisplay","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlRegistry","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlCallback","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlCompositor","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlShmPool","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlShm","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Format","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlBuffer","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlDataOffer","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlDataSource","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlDataDevice","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for DndAction","synthetic":true,"types":[]},{"text":"impl Freeze for WlDataDeviceManager","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlShell","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for Resize","synthetic":true,"types":[]},{"text":"impl Freeze for Transient","synthetic":true,"types":[]},{"text":"impl Freeze for WlShellSurface","synthetic":true,"types":[]},{"text":"impl Freeze for FullscreenMethod","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlSurface","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for Capability","synthetic":true,"types":[]},{"text":"impl Freeze for WlSeat","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlPointer","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for ButtonState","synthetic":true,"types":[]},{"text":"impl Freeze for Axis","synthetic":true,"types":[]},{"text":"impl Freeze for AxisSource","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlKeyboard","synthetic":true,"types":[]},{"text":"impl Freeze for KeymapFormat","synthetic":true,"types":[]},{"text":"impl Freeze for KeyState","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlTouch","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for Mode","synthetic":true,"types":[]},{"text":"impl Freeze for WlOutput","synthetic":true,"types":[]},{"text":"impl Freeze for Subpixel","synthetic":true,"types":[]},{"text":"impl Freeze for Transform","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlRegion","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlSubcompositor","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WlSubsurface","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]}];
implementors["wayland_commons"] = [{"text":"impl Freeze for AnonymousObject","synthetic":true,"types":[]},{"text":"impl Freeze for NoMessage","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; Freeze for Object&lt;Meta&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Meta: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Meta&gt; Freeze for ObjectMap&lt;Meta&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Socket","synthetic":true,"types":[]},{"text":"impl Freeze for BufferedSocket","synthetic":true,"types":[]},{"text":"impl Freeze for UserData","synthetic":true,"types":[]},{"text":"impl !Freeze for UserDataMap","synthetic":true,"types":[]},{"text":"impl Freeze for MessageDesc","synthetic":true,"types":[]},{"text":"impl Freeze for Message","synthetic":true,"types":[]},{"text":"impl Freeze for ArgumentType","synthetic":true,"types":[]},{"text":"impl Freeze for Argument","synthetic":true,"types":[]},{"text":"impl Freeze for MessageWriteError","synthetic":true,"types":[]},{"text":"impl Freeze for MessageParseError","synthetic":true,"types":[]}];
implementors["wayland_protocols"] = [{"text":"impl Freeze for ZwpFullscreenShellV1","synthetic":true,"types":[]},{"text":"impl Freeze for Capability","synthetic":true,"types":[]},{"text":"impl Freeze for PresentMethod","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpFullscreenShellModeFeedbackV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpIdleInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpIdleInhibitorV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpInputMethodContextV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpInputMethodV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpInputPanelV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpInputPanelSurfaceV1","synthetic":true,"types":[]},{"text":"impl Freeze for Position","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpInputTimestampsManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpInputTimestampsV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpKeyboardShortcutsInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpKeyboardShortcutsInhibitorV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpLinuxDmabufV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpLinuxBufferParamsV1","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Flags","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpLinuxExplicitSynchronizationV1","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpLinuxSurfaceSynchronizationV1","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpLinuxBufferReleaseV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpPointerConstraintsV1","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Lifetime","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpLockedPointerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpConfinedPointerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpPointerGesturesV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpPointerGestureSwipeV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpPointerGesturePinchV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpPrimarySelectionDeviceManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpPrimarySelectionDeviceV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpPrimarySelectionOfferV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpPrimarySelectionSourceV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpRelativePointerManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpRelativePointerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTabletManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTabletSeatV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTabletToolV1","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for Capability","synthetic":true,"types":[]},{"text":"impl Freeze for ButtonState","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTabletV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTabletManagerV2","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTabletSeatV2","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTabletToolV2","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for Capability","synthetic":true,"types":[]},{"text":"impl Freeze for ButtonState","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTabletV2","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTabletPadRingV2","synthetic":true,"types":[]},{"text":"impl Freeze for Source","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTabletPadStripV2","synthetic":true,"types":[]},{"text":"impl Freeze for Source","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTabletPadGroupV2","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTabletPadV2","synthetic":true,"types":[]},{"text":"impl Freeze for ButtonState","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTextInputV1","synthetic":true,"types":[]},{"text":"impl Freeze for ContentHint","synthetic":true,"types":[]},{"text":"impl Freeze for ContentPurpose","synthetic":true,"types":[]},{"text":"impl Freeze for PreeditStyle","synthetic":true,"types":[]},{"text":"impl Freeze for TextDirection","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTextInputManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ContentHint","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTextInputV3","synthetic":true,"types":[]},{"text":"impl Freeze for ChangeCause","synthetic":true,"types":[]},{"text":"impl Freeze for ContentPurpose","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpTextInputManagerV3","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgDecorationManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgToplevelDecorationV1","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Mode","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgExporterV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgImporterV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgExportedV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgImportedV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgExporterV2","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgImporterV2","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgExportedV2","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgImportedV2","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgOutputManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgOutputV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for XdgShell","synthetic":true,"types":[]},{"text":"impl Freeze for Version","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for XdgSurface","synthetic":true,"types":[]},{"text":"impl Freeze for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Freeze for State","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for XdgPopup","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgShellV6","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for Anchor","synthetic":true,"types":[]},{"text":"impl Freeze for Gravity","synthetic":true,"types":[]},{"text":"impl Freeze for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgPositionerV6","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgSurfaceV6","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgToplevelV6","synthetic":true,"types":[]},{"text":"impl Freeze for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Freeze for State","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZxdgPopupV6","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpXwaylandKeyboardGrabManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwpXwaylandKeyboardGrabV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrDataControlManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrDataControlDeviceV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrDataControlSourceV1","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrDataControlOfferV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrExportDmabufManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrExportDmabufFrameV1","synthetic":true,"types":[]},{"text":"impl Freeze for Flags","synthetic":true,"types":[]},{"text":"impl Freeze for CancelReason","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrForeignToplevelManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrForeignToplevelHandleV1","synthetic":true,"types":[]},{"text":"impl Freeze for State","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrGammaControlManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrGammaControlV1","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrInputInhibitManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrInputInhibitorV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrLayerShellV1","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Layer","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for Anchor","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrLayerSurfaceV1","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrScreencopyManagerV1","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for Flags","synthetic":true,"types":[]},{"text":"impl Freeze for ZwlrScreencopyFrameV1","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WpPresentation","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WpPresentationFeedback","synthetic":true,"types":[]},{"text":"impl Freeze for Kind","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for XdgWmBase","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for ConstraintAdjustment","synthetic":true,"types":[]},{"text":"impl Freeze for XdgPositioner","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Anchor","synthetic":true,"types":[]},{"text":"impl Freeze for Gravity","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for XdgSurface","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for XdgToplevel","synthetic":true,"types":[]},{"text":"impl Freeze for ResizeEdge","synthetic":true,"types":[]},{"text":"impl Freeze for State","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for XdgPopup","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WpViewporter","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WpViewport","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Request","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]}];
implementors["wayland_sys"] = [{"text":"impl Freeze for wl_message","synthetic":true,"types":[]},{"text":"impl Freeze for wl_interface","synthetic":true,"types":[]},{"text":"impl Freeze for wl_list","synthetic":true,"types":[]},{"text":"impl Freeze for wl_array","synthetic":true,"types":[]},{"text":"impl Freeze for wl_argument","synthetic":true,"types":[]},{"text":"impl Freeze for WaylandClient","synthetic":true,"types":[]},{"text":"impl Freeze for WAYLAND_CLIENT_OPTION","synthetic":true,"types":[]},{"text":"impl Freeze for WAYLAND_CLIENT_HANDLE","synthetic":true,"types":[]},{"text":"impl Freeze for wl_proxy","synthetic":true,"types":[]},{"text":"impl Freeze for wl_display","synthetic":true,"types":[]},{"text":"impl Freeze for wl_event_queue","synthetic":true,"types":[]},{"text":"impl Freeze for WaylandEgl","synthetic":true,"types":[]},{"text":"impl Freeze for WAYLAND_EGL_OPTION","synthetic":true,"types":[]},{"text":"impl Freeze for WAYLAND_EGL_HANDLE","synthetic":true,"types":[]},{"text":"impl Freeze for wl_egl_window","synthetic":true,"types":[]},{"text":"impl Freeze for wl_cursor_image","synthetic":true,"types":[]},{"text":"impl Freeze for wl_cursor","synthetic":true,"types":[]},{"text":"impl Freeze for WaylandCursor","synthetic":true,"types":[]},{"text":"impl Freeze for WAYLAND_CURSOR_OPTION","synthetic":true,"types":[]},{"text":"impl Freeze for WAYLAND_CURSOR_HANDLE","synthetic":true,"types":[]},{"text":"impl Freeze for wl_cursor_theme","synthetic":true,"types":[]}];
implementors["window"] = [{"text":"impl Freeze for NoWindow","synthetic":true,"types":[]},{"text":"impl Freeze for Size","synthetic":true,"types":[]},{"text":"impl Freeze for Position","synthetic":true,"types":[]},{"text":"impl Freeze for WindowSettings","synthetic":true,"types":[]}];
implementors["winit"] = [{"text":"impl Freeze for KeyboardInput","synthetic":true,"types":[]},{"text":"impl Freeze for Touch","synthetic":true,"types":[]},{"text":"impl Freeze for ModifiersState","synthetic":true,"types":[]},{"text":"impl Freeze for AvailableMonitorsIter","synthetic":true,"types":[]},{"text":"impl Freeze for MonitorId","synthetic":true,"types":[]},{"text":"impl Freeze for Icon","synthetic":true,"types":[]},{"text":"impl Freeze for Window","synthetic":true,"types":[]},{"text":"impl Freeze for WindowId","synthetic":true,"types":[]},{"text":"impl Freeze for DeviceId","synthetic":true,"types":[]},{"text":"impl !Freeze for EventsLoop","synthetic":true,"types":[]},{"text":"impl Freeze for EventsLoopProxy","synthetic":true,"types":[]},{"text":"impl Freeze for EventsLoopClosed","synthetic":true,"types":[]},{"text":"impl Freeze for WindowBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for WindowAttributes","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for WindowEvent","synthetic":true,"types":[]},{"text":"impl Freeze for DeviceEvent","synthetic":true,"types":[]},{"text":"impl Freeze for TouchPhase","synthetic":true,"types":[]},{"text":"impl Freeze for ElementState","synthetic":true,"types":[]},{"text":"impl Freeze for MouseButton","synthetic":true,"types":[]},{"text":"impl Freeze for MouseScrollDelta","synthetic":true,"types":[]},{"text":"impl Freeze for VirtualKeyCode","synthetic":true,"types":[]},{"text":"impl Freeze for BadIcon","synthetic":true,"types":[]},{"text":"impl Freeze for ControlFlow","synthetic":true,"types":[]},{"text":"impl Freeze for CreationError","synthetic":true,"types":[]},{"text":"impl Freeze for MouseCursor","synthetic":true,"types":[]},{"text":"impl Freeze for LogicalPosition","synthetic":true,"types":[]},{"text":"impl Freeze for PhysicalPosition","synthetic":true,"types":[]},{"text":"impl Freeze for LogicalSize","synthetic":true,"types":[]},{"text":"impl Freeze for PhysicalSize","synthetic":true,"types":[]},{"text":"impl Freeze for XNotSupported","synthetic":true,"types":[]},{"text":"impl Freeze for WindowType","synthetic":true,"types":[]},{"text":"impl Freeze for WaylandTheme","synthetic":true,"types":[]}];
implementors["x11_dl"] = [{"text":"impl Freeze for OpenError","synthetic":true,"types":[]},{"text":"impl Freeze for OpenErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for Xlib","synthetic":true,"types":[]},{"text":"impl Freeze for _XcmsCCC","synthetic":true,"types":[]},{"text":"impl Freeze for XcmsColor","synthetic":true,"types":[]},{"text":"impl Freeze for _XcmsColorSpace","synthetic":true,"types":[]},{"text":"impl Freeze for _XcmsFunctionSet","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbAction","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbBounds","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbChanges","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbClientMapRec","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbColor","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbComponentList","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbComponentNames","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbControls","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbControlsChanges","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbControlsNotify","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbDeviceChanges","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbDeviceInfo","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbDeviceLedInfo","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbDoodad","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbExtensionDeviceNotify","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbGeometry","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbGeometrySizes","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbIndicatorMapRec","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbKey","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbKeyType","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbMapChanges","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbMods","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbNameChanges","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbNamesNotify","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbOutline","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbOverlay","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbOverlayKey","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbOverlayRow","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbProperty","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbRow","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbSection","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbServerMapRec","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbShape","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbSymInterpretRec","synthetic":true,"types":[]},{"text":"impl Freeze for XAnyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XButtonEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XCirculateEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XCirculateRequestEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XClientMessageEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XColormapEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XConfigureEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XConfigureRequestEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XCreateWindowEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XCrossingEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XDestroyWindowEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XErrorEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XExposeEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XFocusChangeEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XGraphicsExposeEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XGravityEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XKeyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XKeymapEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XMapEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XMappingEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XMapRequestEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XMotionEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XNoExposeEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XPropertyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XReparentEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XResizeRequestEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XSelectionClearEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XSelectionEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XSelectionRequestEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XUnmapEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XVisibilityEvent","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbCompatMapRec","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbDesc","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbIndicatorRec","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbKeyAliasRec","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbKeyNameRec","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbNamesRec","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbStateRec","synthetic":true,"types":[]},{"text":"impl Freeze for XkbAnyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XkbNewKeyboardNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XkbStateNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbControlsNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XkbIndicatorNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbNamesNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XkbCompatMapNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XkbBellNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XkbActionMessageEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XkbAccessXNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for _XkbExtensionDeviceNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XkbEvent","synthetic":true,"types":[]},{"text":"impl Freeze for Depth","synthetic":true,"types":[]},{"text":"impl Freeze for Screen","synthetic":true,"types":[]},{"text":"impl Freeze for ScreenFormat","synthetic":true,"types":[]},{"text":"impl Freeze for Visual","synthetic":true,"types":[]},{"text":"impl Freeze for XArc","synthetic":true,"types":[]},{"text":"impl Freeze for XChar2b","synthetic":true,"types":[]},{"text":"impl Freeze for XCharStruct","synthetic":true,"types":[]},{"text":"impl Freeze for XClassHint","synthetic":true,"types":[]},{"text":"impl Freeze for XColor","synthetic":true,"types":[]},{"text":"impl Freeze for XComposeStatus","synthetic":true,"types":[]},{"text":"impl Freeze for XExtCodes","synthetic":true,"types":[]},{"text":"impl Freeze for XExtData","synthetic":true,"types":[]},{"text":"impl Freeze for XFontProp","synthetic":true,"types":[]},{"text":"impl Freeze for XFontSetExtents","synthetic":true,"types":[]},{"text":"impl Freeze for XFontStruct","synthetic":true,"types":[]},{"text":"impl Freeze for XGCValues","synthetic":true,"types":[]},{"text":"impl Freeze for XGenericEventCookie","synthetic":true,"types":[]},{"text":"impl Freeze for XHostAddress","synthetic":true,"types":[]},{"text":"impl Freeze for XIconSize","synthetic":true,"types":[]},{"text":"impl Freeze for XImage","synthetic":true,"types":[]},{"text":"impl Freeze for XKeyboardControl","synthetic":true,"types":[]},{"text":"impl Freeze for XKeyboardState","synthetic":true,"types":[]},{"text":"impl Freeze for XmbTextItem","synthetic":true,"types":[]},{"text":"impl Freeze for XModifierKeymap","synthetic":true,"types":[]},{"text":"impl Freeze for XOMCharSetList","synthetic":true,"types":[]},{"text":"impl Freeze for XPixmapFormatValues","synthetic":true,"types":[]},{"text":"impl Freeze for XPoint","synthetic":true,"types":[]},{"text":"impl Freeze for XRectangle","synthetic":true,"types":[]},{"text":"impl Freeze for XrmOptionDescRec","synthetic":true,"types":[]},{"text":"impl Freeze for XrmValue","synthetic":true,"types":[]},{"text":"impl Freeze for XSegment","synthetic":true,"types":[]},{"text":"impl Freeze for XSetWindowAttributes","synthetic":true,"types":[]},{"text":"impl Freeze for XSizeHints","synthetic":true,"types":[]},{"text":"impl Freeze for XStandardColormap","synthetic":true,"types":[]},{"text":"impl Freeze for XTextItem","synthetic":true,"types":[]},{"text":"impl Freeze for XTextItem16","synthetic":true,"types":[]},{"text":"impl Freeze for XTextProperty","synthetic":true,"types":[]},{"text":"impl Freeze for XTimeCoord","synthetic":true,"types":[]},{"text":"impl Freeze for XVisualInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XwcTextItem","synthetic":true,"types":[]},{"text":"impl Freeze for XWindowAttributes","synthetic":true,"types":[]},{"text":"impl Freeze for XWindowChanges","synthetic":true,"types":[]},{"text":"impl Freeze for XWMHints","synthetic":true,"types":[]},{"text":"impl Freeze for XIMCallback","synthetic":true,"types":[]},{"text":"impl Freeze for XIMPreeditDrawCallbackStruct","synthetic":true,"types":[]},{"text":"impl Freeze for XIMPreeditCaretCallbackStruct","synthetic":true,"types":[]},{"text":"impl Freeze for XIMText","synthetic":true,"types":[]},{"text":"impl Freeze for XICCallback","synthetic":true,"types":[]},{"text":"impl Freeze for AspectRatio","synthetic":true,"types":[]},{"text":"impl Freeze for ClientMessageData","synthetic":true,"types":[]},{"text":"impl Freeze for ImageFns","synthetic":true,"types":[]},{"text":"impl Freeze for XEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XIMTextString","synthetic":true,"types":[]},{"text":"impl Freeze for _XDisplay","synthetic":true,"types":[]},{"text":"impl Freeze for xError","synthetic":true,"types":[]},{"text":"impl Freeze for xEvent","synthetic":true,"types":[]},{"text":"impl Freeze for _XGC","synthetic":true,"types":[]},{"text":"impl Freeze for _XIC","synthetic":true,"types":[]},{"text":"impl Freeze for _XIM","synthetic":true,"types":[]},{"text":"impl Freeze for _XRegion","synthetic":true,"types":[]},{"text":"impl Freeze for _XOC","synthetic":true,"types":[]},{"text":"impl Freeze for _XOM","synthetic":true,"types":[]},{"text":"impl Freeze for _XrmHashBucketRec","synthetic":true,"types":[]},{"text":"impl Freeze for XkbKbdDpyStateRec","synthetic":true,"types":[]},{"text":"impl Freeze for XIMCaretDirection","synthetic":true,"types":[]},{"text":"impl Freeze for XIMCaretStyle","synthetic":true,"types":[]},{"text":"impl Freeze for Xext","synthetic":true,"types":[]},{"text":"impl Freeze for Glx","synthetic":true,"types":[]},{"text":"impl Freeze for __GLXcontextRec","synthetic":true,"types":[]},{"text":"impl Freeze for __GLXFBConfigRec","synthetic":true,"types":[]},{"text":"impl Freeze for Xcursor","synthetic":true,"types":[]},{"text":"impl Freeze for _XcursorAnimate","synthetic":true,"types":[]},{"text":"impl Freeze for _XcursorChunkHeader","synthetic":true,"types":[]},{"text":"impl Freeze for _XcursorComment","synthetic":true,"types":[]},{"text":"impl Freeze for _XcursorComments","synthetic":true,"types":[]},{"text":"impl Freeze for _XcursorCursors","synthetic":true,"types":[]},{"text":"impl Freeze for _XcursorFile","synthetic":true,"types":[]},{"text":"impl Freeze for _XcursorFileHeader","synthetic":true,"types":[]},{"text":"impl Freeze for _XcursorFileToc","synthetic":true,"types":[]},{"text":"impl Freeze for _XcursorImage","synthetic":true,"types":[]},{"text":"impl Freeze for _XcursorImages","synthetic":true,"types":[]},{"text":"impl Freeze for Xf86vmode","synthetic":true,"types":[]},{"text":"impl Freeze for XF86VidModeGamma","synthetic":true,"types":[]},{"text":"impl Freeze for XF86VidModeModeInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XF86VidModeModeLine","synthetic":true,"types":[]},{"text":"impl Freeze for XF86VidModeMonitor","synthetic":true,"types":[]},{"text":"impl Freeze for XF86VidModeSyncRange","synthetic":true,"types":[]},{"text":"impl Freeze for XF86VidModeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for Xft","synthetic":true,"types":[]},{"text":"impl Freeze for XftFont","synthetic":true,"types":[]},{"text":"impl Freeze for XftColor","synthetic":true,"types":[]},{"text":"impl Freeze for XftCharSpec","synthetic":true,"types":[]},{"text":"impl Freeze for XftCharFontSpec","synthetic":true,"types":[]},{"text":"impl Freeze for XftFontSet","synthetic":true,"types":[]},{"text":"impl Freeze for XftGlyphSpec","synthetic":true,"types":[]},{"text":"impl Freeze for XftGlyphFontSpec","synthetic":true,"types":[]},{"text":"impl Freeze for FT_FaceRec","synthetic":true,"types":[]},{"text":"impl Freeze for FcCharSet","synthetic":true,"types":[]},{"text":"impl Freeze for FcPattern","synthetic":true,"types":[]},{"text":"impl Freeze for FcEndian","synthetic":true,"types":[]},{"text":"impl Freeze for FcResult","synthetic":true,"types":[]},{"text":"impl Freeze for XftFontInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XftDraw","synthetic":true,"types":[]},{"text":"impl Freeze for XftPattern","synthetic":true,"types":[]},{"text":"impl Freeze for Xlib","synthetic":true,"types":[]},{"text":"impl Freeze for XineramaScreenInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XPanoramiXInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XInput","synthetic":true,"types":[]},{"text":"impl Freeze for XDevice","synthetic":true,"types":[]},{"text":"impl Freeze for XDeviceControl","synthetic":true,"types":[]},{"text":"impl Freeze for XDeviceInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XDeviceState","synthetic":true,"types":[]},{"text":"impl Freeze for XDeviceTimeCoord","synthetic":true,"types":[]},{"text":"impl Freeze for XExtensionVersion","synthetic":true,"types":[]},{"text":"impl Freeze for XFeedbackControl","synthetic":true,"types":[]},{"text":"impl Freeze for XFeedbackState","synthetic":true,"types":[]},{"text":"impl Freeze for XInputClass","synthetic":true,"types":[]},{"text":"impl Freeze for XInputClassInfo","synthetic":true,"types":[]},{"text":"impl Freeze for _XAnyClassinfo","synthetic":true,"types":[]},{"text":"impl Freeze for XInput2","synthetic":true,"types":[]},{"text":"impl Freeze for XIAddMasterInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XIRemoveMasterInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XIAttachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XIDetachSlaveInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XIAnyHierarchyChangeInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XIModifierState","synthetic":true,"types":[]},{"text":"impl Freeze for XIButtonState","synthetic":true,"types":[]},{"text":"impl Freeze for XIValuatorState","synthetic":true,"types":[]},{"text":"impl Freeze for XIEventMask","synthetic":true,"types":[]},{"text":"impl Freeze for XIAnyClassInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XIButtonClassInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XIKeyClassInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XIValuatorClassInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XIScrollClassInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XITouchClassInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XIDeviceInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XIGrabModifiers","synthetic":true,"types":[]},{"text":"impl Freeze for XIBarrierReleasePointerInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XIEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XIHierarchyInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XIHierarchyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XIDeviceChangedEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XIDeviceEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XIRawEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XIEnterEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XIPropertyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XITouchOwnershipEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XIBarrierEvent","synthetic":true,"types":[]},{"text":"impl Freeze for Xmu","synthetic":true,"types":[]},{"text":"impl Freeze for _AtomRec","synthetic":true,"types":[]},{"text":"impl Freeze for _XmuArea","synthetic":true,"types":[]},{"text":"impl Freeze for _XmuDisplayQueue","synthetic":true,"types":[]},{"text":"impl Freeze for _XmuDisplayQueueEntry","synthetic":true,"types":[]},{"text":"impl Freeze for _XmuScanline","synthetic":true,"types":[]},{"text":"impl Freeze for _XmuSegment","synthetic":true,"types":[]},{"text":"impl Freeze for _XmuWidgetNode","synthetic":true,"types":[]},{"text":"impl Freeze for Xf86vmode","synthetic":true,"types":[]},{"text":"impl Freeze for XRecordClientInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XRecordExtRange","synthetic":true,"types":[]},{"text":"impl Freeze for XRecordInterceptData","synthetic":true,"types":[]},{"text":"impl Freeze for XRecordRange","synthetic":true,"types":[]},{"text":"impl Freeze for XRecordRange8","synthetic":true,"types":[]},{"text":"impl Freeze for XRecordRange16","synthetic":true,"types":[]},{"text":"impl Freeze for XRecordState","synthetic":true,"types":[]},{"text":"impl Freeze for Xrender","synthetic":true,"types":[]},{"text":"impl Freeze for _XAnimCursor","synthetic":true,"types":[]},{"text":"impl Freeze for _XCircle","synthetic":true,"types":[]},{"text":"impl Freeze for _XConicalGradient","synthetic":true,"types":[]},{"text":"impl Freeze for _XFilters","synthetic":true,"types":[]},{"text":"impl Freeze for _XGlyphElt8","synthetic":true,"types":[]},{"text":"impl Freeze for _XGlyphElt16","synthetic":true,"types":[]},{"text":"impl Freeze for _XGlyphElt32","synthetic":true,"types":[]},{"text":"impl Freeze for _XGlyphInfo","synthetic":true,"types":[]},{"text":"impl Freeze for _XIndexValue","synthetic":true,"types":[]},{"text":"impl Freeze for _XLinearGradient","synthetic":true,"types":[]},{"text":"impl Freeze for _XLineFixed","synthetic":true,"types":[]},{"text":"impl Freeze for _XPointDouble","synthetic":true,"types":[]},{"text":"impl Freeze for _XPointFixed","synthetic":true,"types":[]},{"text":"impl Freeze for _XRadialGradient","synthetic":true,"types":[]},{"text":"impl Freeze for XRenderColor","synthetic":true,"types":[]},{"text":"impl Freeze for XRenderDirectFormat","synthetic":true,"types":[]},{"text":"impl Freeze for XRenderPictFormat","synthetic":true,"types":[]},{"text":"impl Freeze for _XRenderPictureAttributes","synthetic":true,"types":[]},{"text":"impl Freeze for _XSpanFix","synthetic":true,"types":[]},{"text":"impl Freeze for _XTrap","synthetic":true,"types":[]},{"text":"impl Freeze for _XTrapezoid","synthetic":true,"types":[]},{"text":"impl Freeze for _XTriangle","synthetic":true,"types":[]},{"text":"impl Freeze for _XTransform","synthetic":true,"types":[]},{"text":"impl Freeze for Xss","synthetic":true,"types":[]},{"text":"impl Freeze for XScreenSaverInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XScreenSaverNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for Xt","synthetic":true,"types":[]},{"text":"impl Freeze for Arg","synthetic":true,"types":[]},{"text":"impl Freeze for SubstitutionRec","synthetic":true,"types":[]},{"text":"impl Freeze for _TranslationData","synthetic":true,"types":[]},{"text":"impl Freeze for _WidgetClassRec","synthetic":true,"types":[]},{"text":"impl Freeze for _WidgetRec","synthetic":true,"types":[]},{"text":"impl Freeze for _XtActionsRec","synthetic":true,"types":[]},{"text":"impl Freeze for _XtAppStruct","synthetic":true,"types":[]},{"text":"impl Freeze for _XtCallbackRec","synthetic":true,"types":[]},{"text":"impl Freeze for _XtCheckpointTokenRec","synthetic":true,"types":[]},{"text":"impl Freeze for XtConvertArgRec","synthetic":true,"types":[]},{"text":"impl Freeze for _XtResource","synthetic":true,"types":[]},{"text":"impl Freeze for XtWidgetGeometry","synthetic":true,"types":[]},{"text":"impl Freeze for Xf86vmode","synthetic":true,"types":[]},{"text":"impl Freeze for Xlib_xcb","synthetic":true,"types":[]},{"text":"impl Freeze for Xrandr","synthetic":true,"types":[]},{"text":"impl Freeze for XRRScreenSize","synthetic":true,"types":[]},{"text":"impl Freeze for XRRScreenConfiguration","synthetic":true,"types":[]},{"text":"impl Freeze for XRRModeInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XRRScreenResources","synthetic":true,"types":[]},{"text":"impl Freeze for XRROutputInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XRRPropertyInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XRRCrtcInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XRRCrtcGamma","synthetic":true,"types":[]},{"text":"impl Freeze for XRRCrtcTransformAttributes","synthetic":true,"types":[]},{"text":"impl Freeze for XRRPanning","synthetic":true,"types":[]},{"text":"impl Freeze for XRRProviderResources","synthetic":true,"types":[]},{"text":"impl Freeze for XRRProviderInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XRRMonitorInfo","synthetic":true,"types":[]},{"text":"impl Freeze for XRRScreenChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XRRNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XRROutputChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XRRCrtcChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XRROutputPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XRRProviderChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XRRProviderPropertyNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for XRRResourceChangeNotifyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for Xrandr_2_2_0","synthetic":true,"types":[]}];
implementors["xdg"] = [{"text":"impl Freeze for BaseDirectories","synthetic":true,"types":[]},{"text":"impl Freeze for BaseDirectoriesError","synthetic":true,"types":[]},{"text":"impl Freeze for FileFindIterator","synthetic":true,"types":[]}];
implementors["xml"] = [{"text":"impl Freeze for ParserConfig","synthetic":true,"types":[]},{"text":"impl Freeze for EmitterConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Freeze for ReprDisplay&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedAttribute","synthetic":true,"types":[]},{"text":"impl Freeze for TextPosition","synthetic":true,"types":[]},{"text":"impl Freeze for XmlVersion","synthetic":true,"types":[]},{"text":"impl Freeze for Namespace","synthetic":true,"types":[]},{"text":"impl Freeze for NamespaceStack","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for NamespaceStackMappings&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CheckedTarget&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for EventReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Events&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for XmlEvent","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for EventWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for EmitterError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for EndElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StartElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for XmlEvent&lt;'a&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()