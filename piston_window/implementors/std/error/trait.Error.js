(function() {var implementors = {};
implementors["crossbeam_channel"] = [{"text":"impl&lt;T:&nbsp;Send&gt; Error for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Error for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Error for SendTimeoutError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Error for RecvError","synthetic":false,"types":[]},{"text":"impl Error for TryRecvError","synthetic":false,"types":[]},{"text":"impl Error for RecvTimeoutError","synthetic":false,"types":[]},{"text":"impl Error for TrySelectError","synthetic":false,"types":[]},{"text":"impl Error for SelectTimeoutError","synthetic":false,"types":[]}];
implementors["gfx"] = [{"text":"impl&lt;S, D&gt; Error for CopyError&lt;S, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Debug + Display,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Debug + Display,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Any + Debug + Display&gt; Error for UpdateError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Debug + Display&gt; Error for PipelineStateError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Debug + Display&gt; Error for ElementError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Debug + Display&gt; Error for InitError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Error for ProgramError","synthetic":false,"types":[]}];
implementors["gfx_core"] = [{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for ResourceViewError","synthetic":false,"types":[]},{"text":"impl Error for TargetViewError","synthetic":false,"types":[]},{"text":"impl Error for CombinedError","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for CompatibilityError","synthetic":false,"types":[]},{"text":"impl Error for CreateShaderError","synthetic":false,"types":[]},{"text":"impl Error for CreateProgramError","synthetic":false,"types":[]},{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for LayerError","synthetic":false,"types":[]},{"text":"impl Error for SubmissionError","synthetic":false,"types":[]}];
implementors["gfx_device_gl"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["gfx_texture"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["gif"] = [{"text":"impl Error for DecodingFormatError","synthetic":false,"types":[]},{"text":"impl Error for DecodingError","synthetic":false,"types":[]},{"text":"impl Error for EncodingError","synthetic":false,"types":[]}];
implementors["glutin"] = [{"text":"impl Error for CreationError","synthetic":false,"types":[]},{"text":"impl Error for ContextError","synthetic":false,"types":[]}];
implementors["graphics_api_version"] = [{"text":"impl Error for UnsupportedGraphicsApiError","synthetic":false,"types":[]}];
implementors["image"] = [{"text":"impl Error for ImageError","synthetic":false,"types":[]},{"text":"impl Error for UnsupportedError","synthetic":false,"types":[]},{"text":"impl Error for ParameterError","synthetic":false,"types":[]},{"text":"impl Error for EncodingError","synthetic":false,"types":[]},{"text":"impl Error for DecodingError","synthetic":false,"types":[]},{"text":"impl Error for LimitError","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["jpeg_decoder"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["libloading"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl Error for Errno","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["png"] = [{"text":"impl Error for DecodingError","synthetic":false,"types":[]},{"text":"impl Error for EncodingError","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Error for LexError","synthetic":false,"types":[]}];
implementors["rayon_core"] = [{"text":"impl Error for ThreadPoolBuildError","synthetic":false,"types":[]}];
implementors["rusttype"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["shader_version"] = [{"text":"impl Error for ParseOpenGLError","synthetic":false,"types":[]},{"text":"impl Error for ParseGLSLError","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["tiff"] = [{"text":"impl Error for TiffError","synthetic":false,"types":[]}];
implementors["void"] = [{"text":"impl Error for Void","synthetic":false,"types":[]}];
implementors["walkdir"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["wayland_client"] = [{"text":"impl Error for ConnectError","synthetic":false,"types":[]},{"text":"impl Error for GlobalError","synthetic":false,"types":[]}];
implementors["wayland_commons"] = [{"text":"impl Error for MessageWriteError","synthetic":false,"types":[]},{"text":"impl Error for MessageParseError","synthetic":false,"types":[]}];
implementors["weezl"] = [{"text":"impl Error for LzwError","synthetic":false,"types":[]}];
implementors["winit"] = [{"text":"impl Error for BadIcon","synthetic":false,"types":[]},{"text":"impl Error for XNotSupported","synthetic":false,"types":[]},{"text":"impl Error for EventsLoopClosed","synthetic":false,"types":[]},{"text":"impl Error for CreationError","synthetic":false,"types":[]}];
implementors["x11_dl"] = [{"text":"impl Error for OpenError","synthetic":false,"types":[]}];
implementors["xdg"] = [{"text":"impl Error for BaseDirectoriesError","synthetic":false,"types":[]}];
implementors["xml"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for EmitterError","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()