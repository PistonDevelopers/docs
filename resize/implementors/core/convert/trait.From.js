(function() {var implementors = {};
implementors["rgb"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;[T; 3]&gt; for RGB&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;[T; 4]&gt; for RGBA&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;[T; 3]&gt; for BGR&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;[T; 4]&gt; for BGRA&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;(T, T, T)&gt; for RGB&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, A&gt; From&lt;(T, T, T, A)&gt; for RGBA&lt;T, A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;(T, T, T)&gt; for BGR&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, A&gt; From&lt;(T, T, T, A)&gt; for BGRA&lt;T, A&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGB&lt;u8&gt;&gt; for RGB&lt;i16&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGB&lt;u16&gt;&gt; for RGB&lt;i32&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGB&lt;u8&gt;&gt; for RGB&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGB&lt;u8&gt;&gt; for RGB&lt;f64&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGB&lt;u16&gt;&gt; for RGB&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGB&lt;u16&gt;&gt; for RGB&lt;f64&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGB&lt;i16&gt;&gt; for RGB&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGB&lt;i16&gt;&gt; for RGB&lt;f64&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGB&lt;i32&gt;&gt; for RGB&lt;f64&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGB&lt;f32&gt;&gt; for RGB&lt;f64&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGBA&lt;u16, u16&gt;&gt; for RGBA&lt;i32&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGBA&lt;u8, u8&gt;&gt; for RGBA&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGBA&lt;u8, u8&gt;&gt; for RGBA&lt;f64&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGBA&lt;u16, u16&gt;&gt; for RGBA&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGBA&lt;u16, u16&gt;&gt; for RGBA&lt;f64&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGBA&lt;i16, i16&gt;&gt; for RGBA&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGBA&lt;i16, i16&gt;&gt; for RGBA&lt;f64&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGBA&lt;i32, i32&gt;&gt; for RGBA&lt;f64&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;RGBA&lt;f32, f32&gt;&gt; for RGBA&lt;f64&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; From&lt;Gray&lt;T&gt;&gt; for RGB&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, A&gt; From&lt;GrayAlpha&lt;T, A&gt;&gt; for RGBA&lt;T, A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;RGB&lt;T&gt;&gt; for BGR&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;RGBA&lt;T, T&gt;&gt; for BGRA&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;BGR&lt;T&gt;&gt; for RGB&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;BGRA&lt;T, T&gt;&gt; for RGBA&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;BGR&lt;T&gt;&gt; for BGRA&lt;T, u8&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;BGR&lt;T&gt;&gt; for BGRA&lt;T, u16&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;RGB&lt;T&gt;&gt; for BGRA&lt;T, u8&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;RGB&lt;T&gt;&gt; for BGRA&lt;T, u16&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;BGR&lt;T&gt;&gt; for RGBA&lt;T, u8&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;BGR&lt;T&gt;&gt; for RGBA&lt;T, u16&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;RGB&lt;T&gt;&gt; for RGBA&lt;T, u8&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;RGB&lt;T&gt;&gt; for RGBA&lt;T, u16&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;T&gt; for Gray&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;Gray&lt;T&gt;&gt; for GrayAlpha&lt;T, u8&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; From&lt;Gray&lt;T&gt;&gt; for GrayAlpha&lt;T, u16&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()