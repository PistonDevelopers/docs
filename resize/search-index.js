var searchIndex = {};
searchIndex["resize"] = {"doc":"Simple resampling library in pure Rust.","items":[[3,"Filter","resize","Resampling filter.",null,null],[3,"Resizer","","Resampler with preallocated buffers and coeffecients for the given dimensions and filter type.",null,null],[4,"Type","","Resizing type to use.",null,null],[13,"Point","","Point resizing.",0,null],[13,"Triangle","","Triangle (bilinear) resizing.",0,null],[13,"Catrom","","Catmull-Rom (bicubic) resizing.",0,null],[13,"Mitchell","","Resize using Mitchell-Netravali filter.",0,null],[13,"Lanczos3","","Resize using Sinc-windowed Sinc with radius of 3.",0,null],[13,"Custom","","Resize with custom filter.",0,null],[5,"new","","Create a new resizer instance. Alias for `Resizer::new`.",null,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"pixel"},{"name":"type"}],"output":{"name":"resizer"}}],[5,"resize","","Resize image data to the new dimension in a single step.",null,null],[0,"Pixel","","Supported pixel formats.",null,null],[3,"Gray8","resize::Pixel","Grayscale, 8-bit.",null,null],[3,"Gray16","","Grayscale, 16-bit, native endian.",null,null],[3,"RGB24","","RGB, 8-bit per component.",null,null],[3,"RGB48","","RGB, 16-bit per component, native endian.",null,null],[3,"RGBA","","RGBA, 8-bit per component.",null,null],[3,"RGBA64","","RGBA, 16-bit per component, native endian.",null,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"gray8"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"gray16"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rgb24"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rgb48"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"rgba"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"rgba64"}}],[8,"PixelFormat","resize","See `Pixel`",null,null],[16,"Accumulator","","Array to hold temporary values.",7,null],[16,"Subpixel","","Type of a Subpixel of each pixel (8 or 16 bits).",7,null],[10,"new_accum","","New empty Accumulator.",7,null],[10,"into_subpixel","","Convert float to integer value in range appropriate for this pixel format.",7,null],[11,"get_size","","Size of one pixel in that format in bytes.",7,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get_ncomponents","","Return number of components of that format.",7,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"new","","Create a new filter.",8,{"inputs":[{"name":"box"},{"name":"f32"}],"output":{"name":"filter"}}],[11,"new_cubic","","Helper to create Cubic filter with custom B and C parameters.",8,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"filter"}}],[11,"new_lanczos","","Helper to create Lanczos filter with custom radius.",8,{"inputs":[{"name":"f32"}],"output":{"name":"filter"}}],[11,"new_accum","resize::Pixel","",1,null],[11,"into_subpixel","","",1,null],[11,"new_accum","","",2,null],[11,"into_subpixel","","",2,null],[11,"new_accum","","",3,null],[11,"into_subpixel","","",3,null],[11,"new_accum","","",5,null],[11,"into_subpixel","","",5,null],[11,"new_accum","","",4,null],[11,"into_subpixel","","",4,null],[11,"new_accum","","",6,null],[11,"into_subpixel","","",6,null],[11,"fmt","resize","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new resizer instance.",9,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"pixel"},{"name":"type"}],"output":{"name":"self"}}],[11,"resize","","Resize `src` image data into `dst`.",9,null],[11,"resize_stride","","Resize `src` image data into `dst`, skipping `stride` pixels each row.",9,null]],"paths":[[4,"Type"],[3,"Gray8"],[3,"Gray16"],[3,"RGB24"],[3,"RGB48"],[3,"RGBA"],[3,"RGBA64"],[8,"PixelFormat"],[3,"Filter"],[3,"Resizer"]]};
initSearch(searchIndex);
