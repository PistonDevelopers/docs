var searchIndex={};
searchIndex["resize"] = {"doc":"Simple resampling library in pure Rust.","i":[[3,"Filter","resize","Resampling filter.",null,null],[3,"Resizer","","Resampler with preallocated buffers and coeffecients for…",null,null],[4,"Type","","Resizing type to use.",null,null],[13,"Point","","Point resizing.",0,null],[13,"Triangle","","Triangle (bilinear) resizing.",0,null],[13,"Catrom","","Catmull-Rom (bicubic) resizing.",0,null],[13,"Mitchell","","Resize using Mitchell-Netravali filter.",0,null],[13,"Lanczos3","","Resize using Sinc-windowed Sinc with radius of 3.",0,null],[13,"Custom","","Resize with custom filter.",0,null],[5,"new","","Create a new resizer instance. Alias for `Resizer::new`.",null,[[["pixelformat",8],["type",4]],[["pixelformat",8],["resizer",3]]]],[5,"resize","","Resize image data to the new dimension in a single step.",null,[[["pixelformat",8],["type",4]]]],[0,"Pixel","","Supported pixel formats.",null,null],[3,"Gray8","resize::Pixel","Grayscale, 8-bit.",null,null],[3,"Gray16","","Grayscale, 16-bit, native endian.",null,null],[3,"RGB24","","RGB, 8-bit per component.",null,null],[3,"RGB48","","RGB, 16-bit per component, native endian.",null,null],[3,"RGBA","","RGBA, 8-bit per component.",null,null],[3,"RGBA64","","RGBA, 16-bit per component, native endian.",null,null],[8,"PixelFormat","resize","See `Pixel`",null,null],[16,"Accumulator","","Array to hold temporary values.",1,null],[16,"Subpixel","","Type of a Subpixel of each pixel (8 or 16 bits).",1,null],[10,"new_accum","","New empty Accumulator.",1,[[]]],[10,"into_subpixel","","Convert float to integer value in range appropriate for…",1,[[]]],[10,"from_subpixel","","Convert pixel component to float",1,[[]]],[11,"get_size","","Size of one pixel in that format in bytes.",1,[[]]],[11,"get_ncomponents","","Return number of components of that format.",1,[[]]],[11,"new","","Create a new filter.",2,[[["box",3],["fn",8]]]],[11,"new_cubic","","Helper to create Cubic filter with custom B and C…",2,[[]]],[11,"new_lanczos","","Helper to create Lanczos filter with custom radius.",2,[[]]],[11,"new","","Create a new resizer instance.",3,[[["type",4]]]],[11,"resize","","Resize `src` image data into `dst`.",3,[[]]],[11,"resize_stride","","Resize `src` image data into `dst`, skipping `stride`…",3,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","resize::Pixel","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"new_accum","","",4,[[]]],[11,"into_subpixel","","",4,[[]]],[11,"from_subpixel","","",4,[[]]],[11,"new_accum","","",5,[[]]],[11,"into_subpixel","","",5,[[]]],[11,"from_subpixel","","",5,[[]]],[11,"new_accum","","",6,[[]]],[11,"into_subpixel","","",6,[[]]],[11,"from_subpixel","","",6,[[]]],[11,"new_accum","","",8,[[]]],[11,"into_subpixel","","",8,[[]]],[11,"from_subpixel","","",8,[[]]],[11,"new_accum","","",7,[[]]],[11,"into_subpixel","","",7,[[]]],[11,"from_subpixel","","",7,[[]]],[11,"new_accum","","",9,[[]]],[11,"into_subpixel","","",9,[[]]],[11,"from_subpixel","","",9,[[]]],[11,"clone","","",4,[[],["gray8",3]]],[11,"clone","","",5,[[],["gray16",3]]],[11,"clone","","",6,[[],["rgb24",3]]],[11,"clone","","",7,[[],["rgb48",3]]],[11,"clone","","",8,[[],["rgba",3]]],[11,"clone","","",9,[[],["rgba64",3]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","resize","",3,[[["formatter",3]],["result",6]]]],"p":[[4,"Type"],[8,"PixelFormat"],[3,"Filter"],[3,"Resizer"],[3,"Gray8"],[3,"Gray16"],[3,"RGB24"],[3,"RGB48"],[3,"RGBA"],[3,"RGBA64"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);