var searchIndex = JSON.parse('{\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structure."],"i":[0],"f":[null],"p":[]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[null],"p":[]},\
"draw_state":{"doc":"Graphics state blocks for gfx-rs","t":[0,0,17,17,17,17,17,0,17,17,17,17,0,4,13,13,6,6,6,3,12,12,4,13,13,13,4,13,13,13,3,3,12,12,12,12,12,11,11,11,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,3,12,12,12,12,12,12,3,12,12,11,3,12,12,4,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,3,12,12,12,3,12,12,11,3,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,3,12,12,0,6,6,6,6,3,12,12,12,12,6,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["preset","blend","REPLACE","ADD","MULTIPLY","ALPHA","INVERT","depth","PASS_TEST","PASS_WRITE","LESS_EQUAL_TEST","LESS_EQUAL_WRITE","state","FrontFace","Clockwise","CounterClockwise","LineWidth","OffsetSlope","OffsetUnits","Offset","0","1","CullFace","Nothing","Front","Back","RasterMethod","Point","Line","Fill","MultiSample","Rasterizer","front_face","cull_face","method","offset","samples","new_fill","with_cull_back","with_offset","Comparison","Never","Less","LessEqual","Equal","GreaterEqual","Greater","NotEqual","Always","StencilOp","Keep","Zero","Replace","IncrementClamp","IncrementWrap","DecrementClamp","DecrementWrap","Invert","StencilSide","fun","mask_read","mask_write","op_fail","op_depth_fail","op_pass","Stencil","front","back","new","Depth","fun","write","Equation","Add","Sub","RevSub","Min","Max","BlendValue","SourceColor","SourceAlpha","DestColor","DestAlpha","ConstColor","ConstAlpha","Factor","Zero","One","SourceAlphaSaturated","ZeroPlus","OneMinus","BlendChannel","equation","source","destination","Blend","color","alpha","new","ColorMask","RED","GREEN","BLUE","ALPHA","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Color","mask","blend","RefValues","stencil","blend","target","Layer","Level","Depth","Stencil","Rect","x","y","w","h","ColorValue","Mirror","X","Y","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","extend","extend","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","ne","eq","eq","ne","eq","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","sub","sub_assign","sub_assign","not","not","bitand","bitand","bitor","bitor","bitxor","bitxor","bitand_assign","bitand_assign","bitor_assign","bitor_assign","bitxor_assign","bitxor_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","from_iter","from_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt"],"q":["draw_state","draw_state::preset","draw_state::preset::blend","","","","","draw_state::preset","draw_state::preset::depth","","","","draw_state","draw_state::state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","draw_state","draw_state::target","","","","","","","","","","","","","","","","","","","","","","","","","","","draw_state::statedraw_state::target","","","","","","","","","","","","","","","","","","draw_state::state","draw_state::target","draw_state::state","","","","","","","","","","","","","","","","","","","draw_state::target","","draw_state::state","","","","","","","","","","","","","","","","","","","","draw_state::target","draw_state::state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","draw_state::target","","","","draw_state::state","","","","","","","","","","","","","","","","","","","draw_state::target","","draw_state::state","","","","","","","","","","","","","","","","","","","draw_state::target","","draw_state::state","draw_state::target","draw_state::state","draw_state::target","draw_state::state","draw_state::target","draw_state::state","draw_state::target","draw_state::state","draw_state::target","draw_state::state","draw_state::target","draw_state::state","draw_state::target","draw_state::state","draw_state::target","draw_state::state","draw_state::target","draw_state::state","","","","","","","","","","","","","","","","","","draw_state::target","","draw_state::state","draw_state::target","draw_state::state","draw_state::target","draw_state::state","draw_state::target","draw_state::state","draw_state::target","draw_state::state","draw_state::target"],"d":["State presets","Blending preset modes.","When combining two fragments, choose the source value","When combining two fragments, add their values together, …","When combining two fragments, multiply their values …","When combining two fragments, add the value of the source …","When combining two fragments, subtract the destination …","Depth presets for depth tests.","When rendering a fragment, draw regardless of depth …","When rendering a fragment, draw regardless of depth …","“<=” comparison with read-only depth","When rendering a fragment, only draw when the fragment’…","Fixed-function hardware state.","The front face winding order of a set of vertices.","Clockwise winding order.","Counter-clockwise winding order.","Width of a line. Could be f32 if not for Hash deriving …","Slope depth offset factor Could be f32 if not for Hash …","Number of units to offset, where the unit is the minimal …","How to offset vertices in screen space, if at all.","","","Which face, if any, to cull.","","","","How to rasterize a primitive.","Rasterize as a point.","Rasterize as a line with the given width.","Rasterize as a face.","Multi-sampling rasterization mode","Primitive rasterization state. Note that GL allows …","Which vertex winding is considered to be the front face …","Which face should be culled.","How to rasterize this primitive.","Any polygon offset to apply.","Multi-sampling mode.","Create a new filling rasterizer.","Add back face culling.","Add polygon offset.","A pixel-wise comparison function.","<code>false</code>","<code>x < y</code>","<code>x <= y</code>","<code>x == y</code>","<code>x >= y</code>","<code>x > y</code>","<code>x != y</code>","<code>true</code>","Stencil mask operation.","Keep the current value in the stencil buffer (no change).","Set the value in the stencil buffer to zero.","Set the stencil buffer value to <code>value</code> from <code>StencilSide</code>","Increment the stencil buffer value, clamping to its …","Increment the stencil buffer value, wrapping around to 0 …","Decrement the stencil buffer value, clamping to its …","Decrement the stencil buffer value, wrapping around to …","Bitwise invert the current value in the stencil buffer.","Complete stencil state for a given side of a face.","Comparison function to use to determine if the stencil …","A mask that is ANDd with both the stencil buffer value …","A mask that is ANDd with the stencil value before writing …","What operation to do if the stencil test fails.","What operation to do if the stenil test passes but the …","What operation to do if both the depth and stencil test …","Complete stencil state, specifying how to handle the …","","","Create a new stencil state with a given function.","Depth test state.","Comparison function to use.","Specify whether to write to the depth buffer or not.","","Adds source and destination. Source and destination are …","Subtracts destination from source. Source and destination …","Subtracts source from destination. Source and destination …","Component-wise minimum value of source and destination. …","Component-wise maximum value of source and destination. …","","","","","","","","","","","","","","","","","","","","","Create a new blend state with a given equation.","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","The state of an active color render target","Color mask to use.","Optional blending.","The complete set of the rasterizer reference values. …","Stencil front and back values.","Constant blend color.","Render target specification.","A depth value, specifying which plane to select out of a …","Mipmap level to select in a texture.","A single depth value from a depth buffer.","A single value from a stencil stencstencil buffer.","A screen space rectangle","","","","","A color with floating-point components.","Mirroring flags, used for blitting","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …eturns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Adds the set of flags.","Adds the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,2,2,0,3,3,3,0,4,4,4,0,0,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,0,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,0,9,9,9,0,10,10,0,11,11,11,11,11,0,12,12,12,12,12,12,0,13,13,13,13,13,0,14,14,14,0,15,15,15,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,17,17,0,18,18,0,0,0,0,0,0,19,19,19,19,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,21,21,21,21,21,21,21,21,21,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,16,20,1,2,3,4,21,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,8,9,10,14,15,17,18,1,3,21,6,7,8,9,10,11,12,13,14,16,20,1,2,2,3,4,4,21,5,5,6,7,8,8,9,9,10,10,11,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,1,2,3,4,21,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,1,2,3,4,21,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,16,20,16,20,16,20,16,20,16,20,16,20,16,20,16,20,16,20,1,2,3,4,21,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,16,20,16,20,16,20,16,20,16,20],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["f32",15],["offsetunits",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["comparison",4],["stencil",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["factor",4],["equation",4]]],null,null,null,null,null,[[],["colormask",3]],[[],["colormask",3]],[[],["u8",15]],[[["u8",15]],[["colormask",3],["option",4]]],[[["u8",15]],["colormask",3]],[[["u8",15]],["colormask",3]],[[],["bool",15]],[[],["bool",15]],[[["colormask",3]],["bool",15]],[[["colormask",3]],["bool",15]],[[["colormask",3]]],[[["colormask",3]]],[[["colormask",3]]],[[["colormask",3],["bool",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mirror",3]],[[],["mirror",3]],[[],["u8",15]],[[["u8",15]],[["option",4],["mirror",3]]],[[["u8",15]],["mirror",3]],[[["u8",15]],["mirror",3]],[[],["bool",15]],[[],["bool",15]],[[["mirror",3]],["bool",15]],[[["mirror",3]],["bool",15]],[[["mirror",3]]],[[["mirror",3]]],[[["mirror",3]]],[[["bool",15],["mirror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["frontface",4]],[[],["offset",3]],[[],["cullface",4]],[[],["rastermethod",4]],[[],["multisample",3]],[[],["rasterizer",3]],[[],["comparison",4]],[[],["stencilop",4]],[[],["stencilside",3]],[[],["stencil",3]],[[],["depth",3]],[[],["equation",4]],[[],["blendvalue",4]],[[],["factor",4]],[[],["blendchannel",3]],[[],["blend",3]],[[],["colormask",3]],[[],["color",3]],[[],["refvalues",3]],[[],["rect",3]],[[],["mirror",3]],[[]],[[],["stencil",3]],[[]],[[]],[[],["blend",3]],[[]],[[]],[[["frontface",4]],["ordering",4]],[[["cullface",4]],["ordering",4]],[[["multisample",3]],["ordering",4]],[[["comparison",4]],["ordering",4]],[[["stencilop",4]],["ordering",4]],[[["stencilside",3]],["ordering",4]],[[["stencil",3]],["ordering",4]],[[["depth",3]],["ordering",4]],[[["equation",4]],["ordering",4]],[[["blendvalue",4]],["ordering",4]],[[["factor",4]],["ordering",4]],[[["blendchannel",3]],["ordering",4]],[[["colormask",3]],["ordering",4]],[[["mirror",3]],["ordering",4]],[[["frontface",4]],["bool",15]],[[["offset",3]],["bool",15]],[[["offset",3]],["bool",15]],[[["cullface",4]],["bool",15]],[[["rastermethod",4]],["bool",15]],[[["rastermethod",4]],["bool",15]],[[["multisample",3]],["bool",15]],[[["rasterizer",3]],["bool",15]],[[["rasterizer",3]],["bool",15]],[[["comparison",4]],["bool",15]],[[["stencilop",4]],["bool",15]],[[["stencilside",3]],["bool",15]],[[["stencilside",3]],["bool",15]],[[["stencil",3]],["bool",15]],[[["stencil",3]],["bool",15]],[[["depth",3]],["bool",15]],[[["depth",3]],["bool",15]],[[["equation",4]],["bool",15]],[[["blendvalue",4]],["bool",15]],[[["factor",4]],["bool",15]],[[["factor",4]],["bool",15]],[[["blendchannel",3]],["bool",15]],[[["blendchannel",3]],["bool",15]],[[["blend",3]],["bool",15]],[[["blend",3]],["bool",15]],[[["colormask",3]],["bool",15]],[[["colormask",3]],["bool",15]],[[["color",3]],["bool",15]],[[["color",3]],["bool",15]],[[["refvalues",3]],["bool",15]],[[["refvalues",3]],["bool",15]],[[["rect",3]],["bool",15]],[[["rect",3]],["bool",15]],[[["mirror",3]],["bool",15]],[[["mirror",3]],["bool",15]],[[["frontface",4]],[["ordering",4],["option",4]]],[[["offset",3]],[["ordering",4],["option",4]]],[[["cullface",4]],[["ordering",4],["option",4]]],[[["rastermethod",4]],[["ordering",4],["option",4]]],[[["multisample",3]],[["ordering",4],["option",4]]],[[["rasterizer",3]],[["ordering",4],["option",4]]],[[["comparison",4]],[["ordering",4],["option",4]]],[[["stencilop",4]],[["ordering",4],["option",4]]],[[["stencilside",3]],[["ordering",4],["option",4]]],[[["stencil",3]],[["ordering",4],["option",4]]],[[["depth",3]],[["ordering",4],["option",4]]],[[["equation",4]],[["ordering",4],["option",4]]],[[["blendvalue",4]],[["ordering",4],["option",4]]],[[["factor",4]],[["ordering",4],["option",4]]],[[["blendchannel",3]],[["ordering",4],["option",4]]],[[["blend",3]],[["ordering",4],["option",4]]],[[["colormask",3]],[["ordering",4],["option",4]]],[[["color",3]],[["ordering",4],["option",4]]],[[["refvalues",3]],[["ordering",4],["option",4]]],[[["rect",3]],[["ordering",4],["option",4]]],[[["mirror",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["colormask",3]],["colormask",3]],[[["mirror",3]],["mirror",3]],[[["colormask",3]]],[[["mirror",3]]],[[],["colormask",3]],[[],["mirror",3]],[[["colormask",3]],["colormask",3]],[[["mirror",3]],["mirror",3]],[[["colormask",3]],["colormask",3]],[[["mirror",3]],["mirror",3]],[[["colormask",3]],["colormask",3]],[[["mirror",3]],["mirror",3]],[[["colormask",3]]],[[["mirror",3]]],[[["colormask",3]]],[[["mirror",3]]],[[["colormask",3]]],[[["mirror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["colormask",3]],[[["intoiterator",8]],["mirror",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"Rasterizer"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"ColorMask"],[3,"Color"],[3,"RefValues"],[3,"Rect"],[3,"Mirror"],[3,"MultiSample"]]},\
"freetype":{"doc":"Rust wrapper around freetype 2 library","tn":["bitmap","PixelMode","None","Mono","Gray","Gray2","Gray4","Lcd","LcdV","Bgra","Bitmap","from_raw","buffer","width","rows","raw","pixel_mode","pitch","bitmap_glyph","BitmapGlyph","from_raw","left","top","bitmap","raw","error","FtResult","Error","Ok","CannotOpenResource","UnknownFileFormat","InvalidFileFormat","InvalidVersion","LowerModuleVersion","InvalidArgument","UnimplementedFeature","InvalidTable","InvalidOffset","ArrayTooLarge","MissingModule","MissingProperty","InvalidGlyphIndex","InvalidCharacterCode","InvalidGlyphFormat","CannotRenderGlyph","InvalidOutline","InvalidComposite","TooManyHints","InvalidPixelSize","InvalidHandle","InvalidLibraryHandle","InvalidDriverHandle","InvalidFaceHandle","InvalidSizeHandle","InvalidSlotHandle","InvalidCharMapHandle","InvalidCacheHandle","InvalidStreamHandle","TooManyDrivers","TooManyExtensions","OutOfMemory","UnlistedObject","CannotOpenStream","InvalidStreamSeek","InvalidStreamSkip","InvalidStreamRead","InvalidStreamOperation","InvalidFrameOperation","NestedFrameAccess","InvalidFrameRead","RasterUninitialized","RasterCorrupted","RasterOverflow","RasterNegativeHeight","TooManyCaches","InvalidOpcode","TooFewArguments","StackOverflow","CodeOverflow","BadArgument","DivideByZero","InvalidReference","DebugOpCode","ENDFInExecStream","NestedDEFS","InvalidCodeRange","ExecutionTooLong","TooManyFunctionDefs","TooManyInstructionDefs","TableMissing","HorizHeaderMissing","LocationsMissing","NameTableMissing","CMapTableMissing","HmtxTableMissing","PostTableMissing","InvalidHorizMetrics","InvalidCharMapFormat","InvalidPPem","InvalidVertMetrics","CouldNotFindContext","InvalidPostTableFormat","InvalidPostTable","Syntax","StackUnderflow","Ignore","NoUnicodeGlyphName","MissingStartfontField","MissingFontField","MissingSizeField","MissingFontboundingboxField","MissingCharsField","MissingStartcharField","MissingEncodingField","MissingBbxField","BbxTooBig","CorruptedFontHeader","CorruptedFontGlyphs","Max","UnexpectedPixelMode","InvalidPath","Unknown","face","KerningMode","KerningDefault","KerningUnfitted","KerningUnscaled","LoadFlag","DEFAULT","NO_SCALE","NO_HINTING","RENDER","NO_BITMAP","VERTICAL_LAYOUT","FORCE_AUTOHINT","CROP_BITMAP","PEDANTIC","IGNORE_GLOBAL_ADVANCE_WITH","NO_RECURSE","IGNORE_TRANSFORM","MONOCHROME","LINEAR_DESIGN","NO_AUTOHINT","TARGET_NORMAL","TARGET_LIGHT","TARGET_MONO","TARGET_LCD","TARGET_LCD_V","COLOR","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","StyleFlag","BOLD","ITALIC","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Face","from_raw","attach_file","reference","set_char_size","set_pixel_sizes","load_glyph","load_char","set_transform","get_char_index","get_kerning","glyph","has_horizontal","has_vertical","has_kerning","is_scalable","is_sfnt","is_fixed_width","has_fixed_sizes","has_glyph_names","is_cid_keyed","is_tricky","has_color","raw","raw_mut","ascender","descender","em_size","height","max_advance_width","max_advance_height","underline_position","underline_thickness","num_faces","family_name","style_name","style_flags","size_metrics","postscript_name","glyph","Glyph","from_raw","transform","get_cbox","to_bitmap","stroke","stroke_border","advance_x","advance_y","format","raw","glyph_slot","SubGlyphInfo","index","flags","arg1","arg2","transform","GlyphSlot","from_raw","render_glyph","get_subglyph_info","get_glyph","outline","bitmap","bitmap_left","bitmap_top","advance","linear_hori_advance","linear_vert_advance","metrics","raw","library","LcdFilter","LcdFilterNone","LcdFilterDefault","LcdFilterLight","LcdFilterLegacy","Library","init","new_face","new_stroker","new_memory_face","set_lcd_filter","raw","outline","Curve","Line","Bezier2","Bezier3","Outline","from_raw","points","tags","contours","contours_iter","CurveIterator","from_raw","start","ContourIterator","from_raw","render_mode","RenderMode","Normal","Light","Mono","Lcd","LcdV","Max","stroker","StrokerLineCap","Butt","Round","Square","StrokerLineJoin","Round","Bevel","MiterVariable","MiterFixed","Stroker","from_raw","set","raw","raw_mut","tt_os2","TrueTypeOS2Table","from_face","version","avg_char_width","us_weight_class","us_width_class","fs_type","y_subscript_x_size","y_subscript_y_size","y_subscript_x_offset","y_subscript_y_offset","y_superscript_x_size","y_superscript_y_size","y_superscript_x_offset","y_superscript_y_offset","y_strikeout_size","y_strikeout_position","s_family_class","fs_selection","s_typo_ascender","s_typo_descender","s_typo_line_gap","x_height","tt_postscript","TrueTypePostscriptTable","from_face","format_type","italic_angle","underline_position","underline_thickness","is_fixed_pitch","min_mem_type_42","max_mem_type_42","min_mem_type_1","max_mem_type_1","BBox","GlyphMetrics","Matrix","Vector","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","drop","drop","drop","drop","drop","from","extend","extend","next","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","cmp","cmp","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","sub","sub_assign","sub_assign","not","not","bitand","bitand","bitor","bitor","bitxor","bitxor","bitand_assign","bitand_assign","bitor_assign","bitor_assign","bitxor_assign","bitxor_assign","hash","hash","hash","hash","from_iter","from_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","description"],"q":["freetype","freetype::bitmap","","","","","","","","","","","","","","","","","freetype","freetype::bitmap_glyph","","","","","","freetype","freetype::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","freetype","freetype::face","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","freetype","freetype::glyph","","","","","","","","","","","freetype","freetype::glyph_slot","","","","","","","","","","","","","","","","","","","","freetype","freetype::library","","","","","","","","","","","","freetype","freetype::outline","","","","","","","","","","","","","","","freetype","freetype::render_mode","","","","","","","freetype","freetype::stroker","","","","","","","","","","","","","","freetype","freetype::tt_os2","","","","","","","","","","","","","","","","","","","","","","","freetype","freetype::tt_postscript","","","","","","","","","","","freetype","","","","freetype::bitmap","","","","","","","","","","","","","","","","freetype::bitmap_glyph","","","","","","","","","freetype::error","","","","","","","","","","freetype::face","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","freetype::glyph","","","","","","","","","freetype::glyph_slot","","","","","","","","","","","","","","","","","","freetype::library","","","","","","","","","","","","","","","","freetype::outline","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","freetype::render_mode","","","","","","","","","freetype::stroker","","","","","","","","","","","","","","","","","","","","","","","","","freetype::tt_os2","","","","","","","","","freetype::tt_postscript","","","","","","","","","freetype::bitmap_glyph","freetype::face","freetype::glyph","freetype::library","freetype::stroker","freetype::error","freetype::face","","freetype::outline","","freetype::bitmap","freetype::bitmap_glyph","freetype::error","freetype::face","","","","freetype::glyph","freetype::glyph_slot","","freetype::library","freetype::outline","freetype::render_mode","freetype::stroker","","freetype::tt_os2","freetype::tt_postscript","freetype::glyph_slot","freetype::face","","freetype::bitmap","freetype::error","freetype::face","","","","","","freetype::glyph_slot","","freetype::stroker","","freetype::face","","freetype::bitmap","freetype::error","freetype::face","","","freetype::stroker","","freetype::error","freetype::face","","","","","","","","","","","","","","","","","","","","","freetype::glyph_slot","freetype::face","","","","","","","","","","freetype::error"],"d":["","An enumeration type used to describe the format of pixels …","This value is reserved.","A monochrome bitmap, using 1 bit per pixel. Note that …","An 8-bit bitmap, generally used to represent anti-aliased …","A 2-bit per pixel bitmap, used to represent embedded …","A 4-bit per pixel bitmap, representing embedded …","An 8-bit bitmap, representing RGB or BGR decimated glyph …","An 8-bit bitmap, representing RGB or BGR decimated glyph …","An image with four 8-bit channels per pixel, representing …","","","A typeless pointer to the bitmap buffer. This value …","The number of pixels in bitmap row.","The number of bitmap rows.","","The pixel mode, i.e., how pixel bits are stored. See …","The pitch’s absolute value is the number of bytes taken …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a retrieved glyph from the library","Create a freetype-rs glyph object from c constituent parts","Transform a glyph image if its format is scalable.","Return a glyph’s ‘control box’. The control box …","Convert a given glyph object to a bitmap glyph object.","","","","","An enumeration type used to describe the format of a …","Get the underlying c glyph struct (The system actually …","","A description of a given subglyph returned by …","The glyph index of the subglyph.","The subglyph flags, see FT_SUBGLYPH_FLAG_XXX.","The subglyph’s first argument (if any).","The subglyph’s second argument (if any).","The subglyph transformation (if any).","A struct encapsulating the space for a glyph within a …","Create a <code>GlyphSlot</code> from its constituent C parts","Convert a given glyph image to a bitmap. It does so by …","Retrieve a description of a given subglyph. Only use it …","Returns a glyph object, that is similar to a <code>GlyphSlot</code> …","In freetype, the <code>Outline</code> object is a scalable glyph. This …","This field is used as a bitmap descriptor when the slot …","The bitmap’s left bearing expressed in integer pixels. …","The bitmap’s top bearing expressed in integer pixels. …","This shorthand is, depending on FT_LOAD_IGNORE_TRANSFORM, …","The advance width of the unhinted glyph. Its value is …","The advance height of the unhinted glyph. Its value is …","The metrics of the last loaded glyph in the slot. The …","Get a pointer to the underlying c struct","","","","","","","","This function is used to create a new FreeType library …","Open a font file using its pathname. <code>face_index</code> should be …","","Similar to <code>new_face</code>, but loads file data from a byte …","","Get the underlying library objecteturns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Adds the set of flags.","Adds the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,0,0,3,3,3,3,3,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,9,9,9,9,9,9,9,9,9,9,0,0,10,10,10,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,12,12,12,0,13,13,13,13,13,13,0,0,14,14,14,0,15,15,15,15,15,0,16,16,0,17,0,0,18,18,18,18,18,18,0,0,19,19,19,0,20,20,20,20,0,21,21,21,21,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,23,23,23,23,23,23,23,23,23,23,0,0,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,3,8,9,13,21,4,6,7,16,17,1,3,4,5,6,7,8,9,10,11,12,14,18,19,20,22,23,10,6,7,1,4,6,6,7,7,8,8,11,11,19,20,6,7,1,4,6,7,8,19,20,4,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,8,11,6,7,6,7,6,7,6,7,6,7,4],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["i32",15]],[[],["i32",15]],[[],["ft_bitmap",3]],[[],[["pixelmode",4],["ftresult",6]]],[[],["i32",15]],null,null,[[["ft_library",6],["ft_bitmapglyph",6]]],[[],["i32",15]],[[],["i32",15]],[[],["bitmap",3]],[[],["ft_bitmapglyphrec",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["loadflag",3]],[[],["loadflag",3]],[[],["i32",15]],[[["i32",15]],[["option",4],["loadflag",3]]],[[["i32",15]],["loadflag",3]],[[["i32",15]],["loadflag",3]],[[],["bool",15]],[[],["bool",15]],[[["loadflag",3]],["bool",15]],[[["loadflag",3]],["bool",15]],[[["loadflag",3]]],[[["loadflag",3]]],[[["loadflag",3]]],[[["bool",15],["loadflag",3]]],null,null,null,[[],["styleflag",3]],[[],["styleflag",3]],[[],["ft_long",6]],[[["ft_long",6]],[["option",4],["styleflag",3]]],[[["ft_long",6]],["styleflag",3]],[[["ft_long",6]],["styleflag",3]],[[],["bool",15]],[[],["bool",15]],[[["styleflag",3]],["bool",15]],[[["styleflag",3]],["bool",15]],[[["styleflag",3]]],[[["styleflag",3]]],[[["styleflag",3]]],[[["bool",15],["styleflag",3]]],null,[[["option",4],["ft_library",6],["ft_face",6],["rc",3]]],[[["str",15]],["ftresult",6]],[[],["ftresult",6]],[[["u32",15],["isize",15]],["ftresult",6]],[[["u32",15]],["ftresult",6]],[[["u32",15],["loadflag",3]],["ftresult",6]],[[["usize",15],["loadflag",3]],["ftresult",6]],[[["matrix",6],["vector",6]]],[[["usize",15]],["u32",15]],[[["u32",15],["kerningmode",4]],[["vector",6],["ftresult",6]]],[[],["glyphslot",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["ft_facerec",3]],[[],["ft_facerec",3]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],[["string",3],["option",4]]],[[],[["string",3],["option",4]]],[[],["styleflag",3]],[[],[["ft_size_metrics",3],["option",4]]],[[],[["string",3],["option",4]]],null,null,[[["ft_library",6],["ft_glyph",6]]],[[["vector",6],["matrix",6],["option",4],["option",4]],["ftresult",6]],[[["ft_glyph_bbox_mode",6]],["bbox",6]],[[["rendermode",4],["option",4],["vector",6]],[["bitmapglyph",3],["ftresult",6]]],[[["stroker",3]],[["ftresult",6],["glyph",3]]],[[["stroker",3],["bool",15]],[["ftresult",6],["glyph",3]]],[[],["isize",15]],[[],["isize",15]],[[],["ft_glyph_format",6]],[[],["ft_glyphrec",3]],null,null,null,null,null,null,null,null,[[["ft_library",6],["ft_glyphslot",6]]],[[["rendermode",4]],["ftresult",6]],[[["u32",15]],[["ftresult",6],["subglyphinfo",3]]],[[],[["ftresult",6],["glyph",3]]],[[],[["outline",3],["option",4]]],[[],["bitmap",3]],[[],["i32",15]],[[],["i32",15]],[[],["vector",6]],[[],["ft_fixed",6]],[[],["ft_fixed",6]],[[],["glyphmetrics",6]],[[],["ft_glyphslotrec",3]],null,null,null,null,null,null,null,[[],["ftresult",6]],[[["isize",15]],[["face",3],["ftresult",6]]],[[],[["stroker",3],["ftresult",6]]],[[["isize",15]],[["face",3],["ftresult",6]]],[[["lcdfilter",4]],["ftresult",6]],[[],["ft_library",6]],null,null,null,null,null,null,[[["ft_outline",3]]],[[]],[[]],[[]],[[],["contouriterator",3]],null,[[["ft_outline",3],["isize",15]]],[[],["vector",6]],null,[[["ft_outline",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ft_library",6],["ft_stroker",6]]],[[["ft_fixed",6],["strokerlinecap",4],["strokerlinejoin",4]]],[[],["ft_strokerrec",6]],[[],["ft_strokerrec",6]],null,null,[[["face",3]],["option",4]],[[],["ft_ushort",6]],[[],["ft_short",6]],[[],["ft_ushort",6]],[[],["ft_ushort",6]],[[],["ft_ushort",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_ushort",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_short",6]],null,null,[[["face",3]],["option",4]],[[],["ft_fixed",6]],[[],["ft_fixed",6]],[[],["ft_short",6]],[[],["ft_short",6]],[[],["ft_ulong",6]],[[],["ft_ulong",6]],[[],["ft_ulong",6]],[[],["ft_ulong",6]],[[],["ft_ulong",6]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["option",4]],[[],["option",4]],[[],["pixelmode",4]],[[]],[[],["error",4]],[[],["kerningmode",4]],[[],["loadflag",3]],[[],["styleflag",3]],[[]],[[]],[[],["subglyphinfo",3]],[[],["glyphslot",3]],[[],["lcdfilter",4]],[[],["curve",4]],[[],["rendermode",4]],[[],["strokerlinecap",4]],[[],["strokerlinejoin",4]],[[],["truetypeos2table",3]],[[],["truetypepostscripttable",3]],[[]],[[["loadflag",3]],["ordering",4]],[[["styleflag",3]],["ordering",4]],[[["pixelmode",4]],["bool",15]],[[["error",4]],["bool",15]],[[["loadflag",3]],["bool",15]],[[["loadflag",3]],["bool",15]],[[["styleflag",3]],["bool",15]],[[["styleflag",3]],["bool",15]],[[["face",3]],["bool",15]],[[["face",3]],["bool",15]],[[["glyphslot",3]],["bool",15]],[[["glyphslot",3]],["bool",15]],[[["strokerlinecap",4]],["bool",15]],[[["strokerlinejoin",4]],["bool",15]],[[["loadflag",3]],[["ordering",4],["option",4]]],[[["styleflag",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["loadflag",3]],["loadflag",3]],[[["styleflag",3]],["styleflag",3]],[[["loadflag",3]]],[[["styleflag",3]]],[[],["loadflag",3]],[[],["styleflag",3]],[[["loadflag",3]],["loadflag",3]],[[["styleflag",3]],["styleflag",3]],[[["loadflag",3]],["loadflag",3]],[[["styleflag",3]],["styleflag",3]],[[["loadflag",3]],["loadflag",3]],[[["styleflag",3]],["styleflag",3]],[[["loadflag",3]]],[[["styleflag",3]]],[[["loadflag",3]]],[[["styleflag",3]]],[[["loadflag",3]]],[[["styleflag",3]]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["loadflag",3]],[[["intoiterator",8]],["styleflag",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["str",15]]],"p":[[4,"PixelMode"],[3,"Bitmap"],[3,"BitmapGlyph"],[4,"Error"],[4,"KerningMode"],[3,"LoadFlag"],[3,"StyleFlag"],[3,"Face"],[3,"Glyph"],[3,"SubGlyphInfo"],[3,"GlyphSlot"],[4,"LcdFilter"],[3,"Library"],[4,"Curve"],[3,"Outline"],[3,"CurveIterator"],[3,"ContourIterator"],[4,"RenderMode"],[4,"StrokerLineCap"],[4,"StrokerLineJoin"],[3,"Stroker"],[3,"TrueTypeOS2Table"],[3,"TrueTypePostscriptTable"]]},\
"freetype_sys":{"doc":"","t":[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,10,3,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,3,12,12,12,12,12,12,12,12,3,12,12,3,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,3,12,12,12,6,17,17,17,17,17,17,17,17,6,6,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,6,17,17,17,17,17,17,6,17,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,17,17,17,17,17,17,6,17,17,17,6,17,17,17,17,17,6,17,17,17,17,17,6,17,17,17,6,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,3,12,12,3,12,12,12,3,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["FT_Get_Sfnt_Table","FT_Init_FreeType","FT_Done_FreeType","FT_Set_Default_Properties","FT_Property_Get","FT_Property_Set","FT_New_Library","FT_Done_Library","FT_Reference_Library","FT_Add_Default_Modules","FT_New_Face","FT_New_Memory_Face","FT_Open_Face","FT_Attach_File","FT_Attach_Stream","FT_Reference_Face","FT_Done_Face","FT_Select_Size","FT_Request_Size","FT_Set_Char_Size","FT_Set_Pixel_Sizes","FT_Library_SetLcdFilter","FT_Load_Glyph","FT_Load_Char","FT_Set_Transform","FT_Render_Glyph","FT_Get_Kerning","FT_Get_Track_Kerning","FT_Get_Glyph_Name","FT_Get_Postscript_Name","FT_Select_CharMap","FT_Set_Charmap","FT_Get_Charmap_Index","FT_Get_Char_Index","FT_Get_First_Char","FT_Get_Next_Char","FT_Get_Name_Index","FT_Get_SubGlyph_Info","FT_Get_FSType_Flags","FT_Get_Glyph","FT_Glyph_Copy","FT_Glyph_Transform","FT_Glyph_Get_CBox","FT_Glyph_To_Bitmap","FT_Done_Glyph","FT_Outline_GetInsideBorder","FT_Outline_GetOutsideBorder","FT_Glyph_Stroke","FT_Glyph_StrokeBorder","FT_Stroker_New","FT_Stroker_Set","FT_Stroker_Rewind","FT_Stroker_ParseOutline","FT_Stroker_Done","FT_Stroker_BeginSubPath","FT_Stroker_EndSubPath","FT_Stroker_LineTo","FT_Stroker_ConicTo","FT_Stroker_CubicTo","FT_Stroker_GetBorderCounts","FT_Stroker_ExportBorder","FT_Stroker_GetCounts","FT_Stroker_Export","FT_MulDiv","FT_MulFix","FT_DivFix","FT_RoundFix","FT_CeilFix","FT_FloorFix","FT_Outline_New","FT_Outline_New_Internal","FT_Outline_Done","FT_Outline_Done_Internal","FT_Outline_Copy","FT_Outline_Translate","FT_Outline_Transform","FT_Outline_Embolden","FT_Outline_EmboldenXY","FT_Outline_Reverse","FT_Outline_Check","FT_Outline_Get_CBox","FT_Outline_Get_BBox","FT_Outline_Get_Bitmap","FT_Outline_Render","FT_Outline_Decompose","FT_Outline_Get_Orientation","FT_GlyphSlot_Embolden","FT_GlyphSlot_Oblique","FT_Byte","FT_Bytes","FT_Char","FT_Int","FT_UInt","FT_Int16","FT_UInt16","FT_Int32","FT_UInt32","FT_Int64","FT_UInt64","FT_Short","FT_UShort","FT_Long","FT_ULong","FT_Bool","FT_Offset","FT_PtrDist","FT_String","FT_Tag","FT_Error","FT_Fixed","FT_Pointer","FT_Pos","FT_FWord","FT_UFWord","FT_F2Dot14","FT_F26Dot6","FT_Generic_Finalizer","FT_StreamDesc","FT_Stream_IoFunc","FT_Stream_CloseFunc","FT_Alloc_Func","FT_Free_Func","FT_Realloc_Func","FT_Outline_MoveToFunc","FT_Outline_LineToFunc","FT_Outline_ConicToFunc","FT_Outline_CubicToFunc","FT_SpanFunc","FT_Raster_BitTest_Func","FT_Raster_BitSet_Func","FTErrorMethods","succeeded","FT_Vector","x","y","FT_BBox","xMin","yMin","xMax","yMax","FT_Matrix","xx","xy","yx","yy","FT_UnitVector","x","y","FT_Bitmap","rows","width","pitch","buffer","num_grays","pixel_mode","palette_mode","palette","FT_Data","pointer","length","FT_Generic","data","finalizer","FT_Size_Metrics","x_ppem","y_ppem","x_scale","y_scale","ascender","descender","height","max_advance","FT_Outline","n_contours","n_points","points","tags","contours","flags","FT_Glyph_Metrics","width","height","horiBearingX","horiBearingY","horiAdvance","vertBearingX","vertBearingY","vertAdvance","FT_Parameter","tag","data","FT_Open_Args","flags","memory_base","memory_size","pathname","stream","driver","num_params","params","FT_Bitmap_Size","height","width","size","x_ppem","y_ppem","TT_OS2","version","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContext","TT_Postscript","formatType","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","FT_Span","x","len","coverage","enum_FT_Sfnt_Tag_","ft_sfnt_head","ft_sfnt_maxp","ft_sfnt_os2","ft_sfnt_hhea","ft_sfnt_vhea","ft_sfnt_post","ft_sfnt_pclt","ft_sfnt_max","FT_Sfnt_Tag","FT_Pixel_Mode","FT_PIXEL_MODE_NONE","FT_PIXEL_MODE_MONO","FT_PIXEL_MODE_GRAY","FT_PIXEL_MODE_GRAY2","FT_PIXEL_MODE_GRAY4","FT_PIXEL_MODE_LCD","FT_PIXEL_MODE_LCD_V","FT_PIXEL_MODE_BGRA","FT_PIXEL_MODE_MAX","FT_Glyph_Format","FT_GLYPH_FORMAT_NONE","FT_GLYPH_FORMAT_COMPOSITE","FT_GLYPH_FORMAT_BITMAP","FT_GLYPH_FORMAT_OUTLINE","FT_GLYPH_FORMAT_PLOTTER","FT_Render_Mode","FT_RENDER_MODE_NORMAL","FT_RENDER_MODE_LIGHT","FT_RENDER_MODE_MONO","FT_RENDER_MODE_LCD","FT_RENDER_MODE_LCD_V","FT_RENDER_MODE_MAX","FT_LcdFilter","FT_LCD_FILTER_NONE","FT_LCD_FILTER_DEFAULT","FT_LCD_FILTER_LIGHT","FT_LCD_FILTER_LEGACY1","FT_LCD_FILTER_LEGACY","FT_LCD_FILTER_MAX","FT_Encoding","FT_ENCODING_NONE","FT_ENCODING_MS_SYMBOL","FT_ENCODING_UNICODE","FT_ENCODING_SJIS","FT_ENCODING_GB2312","FT_ENCODING_BIG5","FT_ENCODING_WANSUNG","FT_ENCODING_JOHAB","FT_ENCODING_MS_SJIS","FT_ENCODING_MS_GB2312","FT_ENCODING_MS_BIG5","FT_ENCODING_MS_WANSUNG","FT_ENCODING_MS_JOHAB","FT_ENCODING_ADOBE_STANDARD","FT_ENCODING_ADOBE_EXPERT","FT_ENCODING_ADOBE_CUSTOM","FT_ENCODING_ADOBE_LATIN_1","FT_ENCODING_OLD_LATIN_2","FT_ENCODING_APPLE_ROMAN","FT_Size_Request_Type","FT_SIZE_REQUEST_TYPE_NOMINAL","FT_SIZE_REQUEST_TYPE_REAL_DIM","FT_SIZE_REQUEST_TYPE_BBOX","FT_SIZE_REQUEST_TYPE_CELL","FT_SIZE_REQUEST_TYPE_SCALES","FT_SIZE_REQUEST_TYPE_MAX","FT_Kerning_Mode","FT_KERNING_DEFAULT","FT_KERNING_UNFITTED","FT_KERNING_UNSCALED","FT_Glyph_BBox_Mode","FT_GLYPH_BBOX_UNSCALED","FT_GLYPH_BBOX_SUBPIXELS","FT_GLYPH_BBOX_GRIDFIT","FT_GLYPH_BBOX_TRUNCATE","FT_GLYPH_BBOX_PIXELS","FT_Stroker_LineJoin","FT_STROKER_LINEJOIN_ROUND","FT_STROKER_LINEJOIN_BEVEL","FT_STROKER_LINEJOIN_MITER_VARIABLE","FT_STROKER_LINEJOIN_MITER","FT_STROKER_LINEJOIN_MITER_FIXED","FT_Stroker_LineCap","FT_STROKER_LINECAP_BUTT","FT_STROKER_LINECAP_ROUND","FT_STROKER_LINECAP_SQUARE","FT_StrokerBorder","FT_STROKER_BORDER_LEFT","FT_STROKER_BORDER_RIGHT","FT_Orientation","FT_ORIENTATION_TRUETYPE","FT_ORIENTATION_POSTSCRIPT","FT_ORIENTATION_NONE","FT_ORIENTATION_FILL_RIGHT","FT_ORIENTATION_FILL_LEFT","FT_FACE_FLAG_SCALABLE","FT_FACE_FLAG_FIXED_SIZES","FT_FACE_FLAG_FIXED_WIDTH","FT_FACE_FLAG_SFNT","FT_FACE_FLAG_HORIZONTAL","FT_FACE_FLAG_VERTICAL","FT_FACE_FLAG_KERNING","FT_FACE_FLAG_FAST_GLYPHS","FT_FACE_FLAG_MULTIPLE_MASTERS","FT_FACE_FLAG_GLYPH_NAMES","FT_FACE_FLAG_EXTERNAL_STREAM","FT_FACE_FLAG_HINTER","FT_FACE_FLAG_CID_KEYED","FT_FACE_FLAG_TRICKY","FT_FACE_FLAG_COLOR","FT_STYLE_FLAG_ITALIC","FT_STYLE_FLAG_BOLD","FT_OPEN_MEMORY","FT_OPEN_STREAM","FT_OPEN_PATHNAME","FT_OPEN_DRIVER","FT_OPEN_PARAMS","FT_SUBGLYPH_FLAG_ARGS_ARE_WORDS","FT_SUBGLYPH_FLAG_ARGS_ARE_XY_VALUES","FT_SUBGLYPH_FLAG_ROUND_XY_TO_GRID","FT_SUBGLYPH_FLAG_SCALE","FT_SUBGLYPH_FLAG_XY_SCALE","FT_SUBGLYPH_FLAG_2X2","FT_SUBGLYPH_FLAG_USE_MY_METRICS","FT_LOAD_DEFAULT","FT_LOAD_NO_SCALE","FT_LOAD_NO_HINTING","FT_LOAD_RENDER","FT_LOAD_NO_BITMAP","FT_LOAD_VERTICAL_LAYOUT","FT_LOAD_FORCE_AUTOHINT","FT_LOAD_CROP_BITMAP","FT_LOAD_PEDANTIC","FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH","FT_LOAD_NO_RECURSE","FT_LOAD_IGNORE_TRANSFORM","FT_LOAD_MONOCHROME","FT_LOAD_LINEAR_DESIGN","FT_LOAD_NO_AUTOHINT","FT_LOAD_COLOR","FT_LOAD_TARGET_NORMAL","FT_LOAD_TARGET_LIGHT","FT_LOAD_TARGET_MONO","FT_LOAD_TARGET_LCD","FT_LOAD_TARGET_LCD_V","FT_FSTYPE_INSTALLABLE_EMBEDDING","FT_FSTYPE_RESTRICTED_LICENSE_EMBEDDING","FT_FSTYPE_PREVIEW_AND_PRINT_EMBEDDING","FT_FSTYPE_EDITABLE_EMBEDDING","FT_FSTYPE_NO_SUBSETTING","FT_FSTYPE_BITMAP_EMBEDDING_ONLY","FT_OUTLINE_NONE","FT_OUTLINE_OWNER","FT_OUTLINE_EVEN_ODD_FILL","FT_OUTLINE_REVERSE_FILL","FT_OUTLINE_IGNORE_DROPOUTS","FT_OUTLINE_SMART_DROPOUTS","FT_OUTLINE_INCLUDE_STUBS","FT_OUTLINE_HIGH_PRECISION","FT_OUTLINE_SINGLE_PASS","FT_Err_Ok","FT_Err_Cannot_Open_Resource","FT_Err_Unknown_File_Format","FT_Err_Invalid_File_Format","FT_Err_Invalid_Version","FT_Err_Lower_Module_Version","FT_Err_Invalid_Argument","FT_Err_Unimplemented_Feature","FT_Err_Invalid_Table","FT_Err_Invalid_Offset","FT_Err_Array_Too_Large","FT_Err_Missing_Module","FT_Err_Missing_Property","FT_Err_Invalid_Glyph_Index","FT_Err_Invalid_Character_Code","FT_Err_Invalid_Glyph_Format","FT_Err_Cannot_Render_Glyph","FT_Err_Invalid_Outline","FT_Err_Invalid_Composite","FT_Err_Too_Many_Hints","FT_Err_Invalid_Pixel_Size","FT_Err_Invalid_Handle","FT_Err_Invalid_Library_Handle","FT_Err_Invalid_Driver_Handle","FT_Err_Invalid_Face_Handle","FT_Err_Invalid_Size_Handle","FT_Err_Invalid_Slot_Handle","FT_Err_Invalid_CharMap_Handle","FT_Err_Invalid_Cache_Handle","FT_Err_Invalid_Stream_Handle","FT_Err_Too_Many_Drivers","FT_Err_Too_Many_Extensions","FT_Err_Out_Of_Memory","FT_Err_Unlisted_Object","FT_Err_Cannot_Open_Stream","FT_Err_Invalid_Stream_Seek","FT_Err_Invalid_Stream_Skip","FT_Err_Invalid_Stream_Read","FT_Err_Invalid_Stream_Operation","FT_Err_Invalid_Frame_Operation","FT_Err_Nested_Frame_Access","FT_Err_Invalid_Frame_Read","FT_Err_Raster_Uninitialized","FT_Err_Raster_Corrupted","FT_Err_Raster_Overflow","FT_Err_Raster_Negative_Height","FT_Err_Too_Many_Caches","FT_Err_Invalid_Opcode","FT_Err_Too_Few_Arguments","FT_Err_Stack_Overflow","FT_Err_Code_Overflow","FT_Err_Bad_Argument","FT_Err_Divide_By_Zero","FT_Err_Invalid_Reference","FT_Err_Debug_OpCode","FT_Err_ENDF_In_Exec_Stream","FT_Err_Nested_DEFS","FT_Err_Invalid_CodeRange","FT_Err_Execution_Too_Long","FT_Err_Too_Many_Function_Defs","FT_Err_Too_Many_Instruction_Defs","FT_Err_Table_Missing","FT_Err_Horiz_Header_Missing","FT_Err_Locations_Missing","FT_Err_Name_Table_Missing","FT_Err_CMap_Table_Missing","FT_Err_Hmtx_Table_Missing","FT_Err_Post_Table_Missing","FT_Err_Invalid_Horiz_Metrics","FT_Err_Invalid_CharMap_Format","FT_Err_Invalid_PPem","FT_Err_Invalid_Vert_Metrics","FT_Err_Could_Not_Find_Context","FT_Err_Invalid_Post_Table_Format","FT_Err_Invalid_Post_Table","FT_Err_Syntax_Error","FT_Err_Stack_Underflow","FT_Err_Ignore","FT_Err_No_Unicode_Glyph_Name","FT_Err_Missing_Startfont_Field","FT_Err_Missing_Font_Field","FT_Err_Missing_Size_Field","FT_Err_Missing_Fontboundingbox_Field","FT_Err_Missing_Chars_Field","FT_Err_Missing_Startchar_Field","FT_Err_Missing_Encoding_Field","FT_Err_Missing_Bbx_Field","FT_Err_Bbx_Too_Big","FT_Err_Corrupted_Font_Header","FT_Err_Corrupted_Font_Glyphs","FT_Err_Max","FT_Library","FT_Face","FT_Size","FT_GlyphSlot","FT_CharMap","FT_Module","FT_Driver","FT_Renderer","FT_Size_Internal","FT_SubGlyph","FT_Slot_Internal","FT_Size_Request","FT_Face_Internal","FT_Stream","FT_Memory","FT_ListNode","FT_Glyph","FT_BitmapGlyph","FT_OutlineGlyph","FT_Stroker","TT_OS2_Internal","TT_Postscript_Internal","FT_LibraryRec","FT_ModuleRec","FT_DriverRec","FT_RendererRec","FT_Size_InternalRec","FT_SubGlyphRec","FT_Slot_InternalRec","FT_Face_InternalRec","FT_StrokerRec","FT_CharMapRec","face","encoding","platform_id","encoding_id","FT_FaceRec","num_faces","face_index","face_flags","style_flags","num_glyphs","family_name","style_name","num_fixed_sizes","available_sizes","num_charmaps","charmaps","generic","bbox","units_per_EM","ascender","descender","height","max_advance_width","max_advance_height","underline_position","underline_thickness","glyph","size","charmap","driver","memory","stream","sizes_list","autohint","extensions","internal","FT_GlyphSlotRec","library","face","next","reserved","generic","metrics","linearHoriAdvance","linearVertAdvance","advance","format","bitmap","bitmap_left","bitmap_top","outline","num_subglyphs","subglyphs","control_data","control_len","lsb_delta","rsb_delta","other","internal","FT_SizeRec","face","generic","metrics","internal","FT_StreamRec","base","size","pos","descriptor","pathname","read","close","memory","cursor","limit","FT_MemoryRec","user","alloc","free","realloc","FT_ListRec","head","tail","FT_ListNodeRec","prev","next","data","FT_Size_RequestRec","size_request_type","width","height","horiResolution","vertResolution","FT_GlyphRec","library","clazz","format","advance","FT_BitmapGlyphRec","root","left","top","bitmap","FT_OutlineGlyphRec","root","outline","FT_Outline_Funcs","move_to","line_to","conic_to","cubic_to","shift","delta","FT_Raster_Params","target","source","flags","gray_spans","black_spans","bit_test","bit_set","user","clip_box","FT_HAS_HORIZONTAL","FT_HAS_VERTICAL","FT_HAS_KERNING","FT_IS_SCALABLE","FT_IS_SFNT","FT_IS_FIXED_WIDTH","FT_HAS_FIXED_SIZES","FT_HAS_GLYPH_NAMES","FT_HAS_MULTIPLE_MASTERS","FT_IS_CID_KEYED","FT_IS_TRICKY","FT_HAS_COLOR","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","succeeded","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash"],"q":["freetype_sysdi":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,2,0,3,3,3,3,0,4,4,4,4,0,5,5,0,6,6,6,6,6,6,6,6,0,7,7,0,8,8,0,9,9,9,9,9,9,9,9,0,10,10,10,10,10,10,0,11,11,11,11,11,11,11,11,0,12,12,0,13,13,13,13,13,13,13,13,0,14,14,14,14,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,16,16,16,16,16,16,16,16,16,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,21,21,21,21,0,22,22,22,22,22,22,22,22,22,22,0,23,23,23,23,0,24,24,0,25,25,25,0,26,26,26,26,26,0,27,27,27,27,0,28,28,28,28,0,29,29,0,30,30,30,30,30,30,0,31,31,31,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,22,22,22,22,22,22,22,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,32,2,3,4,5,9,11,12,14,15,16,17,18,24,26,30,2,3,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ft_face",6]],["bool",15]],[[["ft_face",6]],["bool",15]],[[["ft_face",6]],["bool",15]],[[["ft_face",6]],["bool",15]],[[["ft_face",6]],["bool",15]],[[["ft_face",6]],["bool",15]],[[["ft_face",6]],["bool",15]],[[["ft_face",6]],["bool",15]],[[["ft_face",6]],["bool",15]],[[["ft_face",6]],["bool",15]],[[["ft_face",6]],["bool",15]],[[["ft_face",6]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["ft_vector",3]],[[],["ft_bbox",3]],[[],["ft_matrix",3]],[[],["ft_unitvector",3]],[[],["ft_size_metrics",3]],[[],["ft_glyph_metrics",3]],[[],["ft_parameter",3]],[[],["ft_bitmap_size",3]],[[],["tt_os2",3]],[[],["tt_postscript",3]],[[],["ft_span",3]],[[],["ft_charmaprec",3]],[[],["ft_listrec",3]],[[],["ft_size_requestrec",3]],[[],["ft_outline_funcs",3]],[[],["ft_vector",3]],[[],["ft_bbox",3]],[[["ft_vector",3]],["bool",15]],[[["ft_vector",3]],["bool",15]],[[["ft_bbox",3]],["bool",15]],[[["ft_bbox",3]],["bool",15]],[[["ft_matrix",3]],["bool",15]],[[["ft_matrix",3]],["bool",15]],[[["ft_unitvector",3]],["bool",15]],[[["ft_unitvector",3]],["bool",15]],[[["ft_bitmap",3]],["bool",15]],[[["ft_bitmap",3]],["bool",15]],[[["ft_data",3]],["bool",15]],[[["ft_data",3]],["bool",15]],[[["ft_generic",3]],["bool",15]],[[["ft_generic",3]],["bool",15]],[[["ft_size_metrics",3]],["bool",15]],[[["ft_size_metrics",3]],["bool",15]],[[["ft_outline",3]],["bool",15]],[[["ft_outline",3]],["bool",15]],[[["ft_glyph_metrics",3]],["bool",15]],[[["ft_glyph_metrics",3]],["bool",15]],[[["ft_parameter",3]],["bool",15]],[[["ft_parameter",3]],["bool",15]],[[["ft_open_args",3]],["bool",15]],[[["ft_open_args",3]],["bool",15]],[[["ft_bitmap_size",3]],["bool",15]],[[["ft_bitmap_size",3]],["bool",15]],[[["tt_os2",3]],["bool",15]],[[["tt_os2",3]],["bool",15]],[[["tt_postscript",3]],["bool",15]],[[["tt_postscript",3]],["bool",15]],[[["ft_span",3]],["bool",15]],[[["ft_span",3]],["bool",15]],[[["ft_charmaprec",3]],["bool",15]],[[["ft_charmaprec",3]],["bool",15]],[[["ft_facerec",3]],["bool",15]],[[["ft_facerec",3]],["bool",15]],[[["ft_glyphslotrec",3]],["bool",15]],[[["ft_glyphslotrec",3]],["bool",15]],[[["ft_sizerec",3]],["bool",15]],[[["ft_sizerec",3]],["bool",15]],[[["ft_streamrec",3]],["bool",15]],[[["ft_streamrec",3]],["bool",15]],[[["ft_memoryrec",3]],["bool",15]],[[["ft_memoryrec",3]],["bool",15]],[[["ft_listrec",3]],["bool",15]],[[["ft_listrec",3]],["bool",15]],[[["ft_listnoderec",3]],["bool",15]],[[["ft_listnoderec",3]],["bool",15]],[[["ft_size_requestrec",3]],["bool",15]],[[["ft_size_requestrec",3]],["bool",15]],[[["ft_glyphrec",3]],["bool",15]],[[["ft_glyphrec",3]],["bool",15]],[[["ft_bitmapglyphrec",3]],["bool",15]],[[["ft_bitmapglyphrec",3]],["bool",15]],[[["ft_outlineglyphrec",3]],["bool",15]],[[["ft_outlineglyphrec",3]],["bool",15]],[[["ft_outline_funcs",3]],["bool",15]],[[["ft_outline_funcs",3]],["bool",15]],[[["ft_raster_params",3]],["bool",15]],[[["ft_raster_params",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[8,"FTErrorMethods"],[3,"FT_Vector"],[3,"FT_BBox"],[3,"FT_Matrix"],[3,"FT_UnitVector"],[3,"FT_Bitmap"],[3,"FT_Data"],[3,"FT_Generic"],[3,"FT_Size_Metrics"],[3,"FT_Outline"],[3,"FT_Glyph_Metrics"],[3,"FT_Parameter"],[3,"FT_Open_Args"],[3,"FT_Bitmap_Size"],[3,"TT_OS2"],[3,"TT_Postscript"],[3,"FT_Span"],[3,"FT_CharMapRec"],[3,"FT_FaceRec"],[3,"FT_GlyphSlotRec"],[3,"FT_SizeRec"],[3,"FT_StreamRec"],[3,"FT_MemoryRec"],[3,"FT_ListRec"],[3,"FT_ListNodeRec"],[3,"FT_Size_RequestRec"],[3,"FT_GlyphRec"],[3,"FT_BitmapGlyphRec"],[3,"FT_OutlineGlyphRec"],[3,"FT_Outline_Funcs"],[3,"FT_Raster_Params"],[6,"FT_Error"]]},\
"gfx":{"doc":"gfx","t":[0,8,16,16,10,10,10,10,10,10,8,10,10,10,11,11,10,10,10,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,6,3,12,12,6,6,6,8,10,3,8,16,10,4,4,6,6,3,3,3,3,3,0,3,3,3,3,3,0,3,3,3,3,3,3,3,3,0,3,12,12,12,11,11,3,12,12,12,12,12,12,12,12,12,12,12,3,3,12,12,12,12,12,12,12,12,12,11,11,4,13,13,12,12,12,13,12,12,12,4,13,13,13,13,13,13,13,8,16,10,8,16,10,3,11,11,11,8,16,10,10,11,11,11,11,11,11,11,11,11,11,8,16,10,0,0,6,4,13,13,4,13,13,4,13,13,4,13,13,4,13,13,4,13,13,13,13,13,3,12,12,4,13,13,13,13,13,4,13,13,13,4,13,13,13,13,13,17,6,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,8,10,8,10,3,3,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,12,12,3,4,13,13,13,4,13,13,13,3,6,8,10,3,8,10,4,13,13,13,13,13,13,0,0,0,17,17,17,17,17,0,17,17,17,17,0,4,13,13,6,6,6,3,12,12,4,13,13,13,4,13,13,13,3,3,12,12,12,12,12,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,3,12,12,12,12,12,12,3,12,12,3,12,12,4,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,3,12,12,12,3,12,12,3,3,12,12,3,12,12,6,6,6,6,3,12,12,12,12,6,3,8,16,16,10,10,10,10,10,10,4,13,13,13,13,13,13,13,13,13,13,8,16,16,16,16,16,16,16,16,16,16,16,16,4,13,6,6,6,4,13,13,13,13,3,3,3,3,3,0,3,4,13,13,13,13,3,12,12,12,12,12,4,13,13,13,0,4,13,13,13,13,13,13,4,4,4,4,4,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,13,13,13,13,13,3,12,12,12,12,3,12,12,8,16,10,8,8,8,8,8,8,16,10,8,8,8,8,16,16,16,11,8,8,8,8,8,8,8,3,12,3,12,3,12,3,12,3,12,6,6,6,6,6,6,6,6,6,6,6,6,6,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,4,13,13,3,3,0,4,13,13,13,13,3,3,8,5,0,17,3,4,13,13,13,13,13,13,13,13,4,13,13,6,6,6,6,6,4,13,13,13,4,13,13,13,13,13,4,13,13,13,13,13,13,17,4,13,13,13,13,13,13,13,4,13,13,3,12,12,12,12,12,12,12,12,6,6,3,12,12,12,12,4,13,13,13,13,3,3,12,3,12,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,3,3,12,12,12,6,6,8,10,10,10,11,11,10,10,10,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,3,12,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,6,4,13,12,12,13,12,12,13,12,12,12,13,13,6,3,4,13,12,12,13,12,12,13,4,13,13,13,3,12,12,12,12,12,8,10,4,13,13,13,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["traits","Device","Resources","CommandBuffer","get_capabilities","pin_submitted_resources","submit","fenced_submit","wait_fence","cleanup","Factory","get_capabilities","create_buffer_raw","create_buffer_immutable_raw","create_buffer_immutable","create_buffer","create_pipeline_state_raw","create_program","create_shader","create_shader_vertex","create_shader_hull","create_shader_domain","create_shader_geometry","create_shader_pixel","create_sampler","read_mapping","write_mapping","create_texture_raw","view_buffer_as_shader_resource_raw","view_buffer_as_unordered_access_raw","view_texture_as_shader_resource_raw","view_texture_as_unordered_access_raw","view_texture_as_render_target_raw","view_texture_as_depth_stencil_raw","create_texture","view_buffer_as_shader_resource","view_buffer_as_unordered_access","view_texture_as_shader_resource","view_texture_as_unordered_access","view_texture_as_render_target","view_texture_as_depth_stencil","view_texture_as_depth_stencil_trivial","create_texture_immutable_u8","create_texture_immutable","create_render_target","create_depth_stencil","create_depth_stencil_view_only","Pod","FactoryExt","create_vertex_buffer","create_index_buffer","create_vertex_buffer_with_slice","create_constant_buffer","create_upload_buffer","create_download_buffer","create_shader_set","create_shader_set_geometry","create_shader_set_tessellation","create_shader_set_tessellation_with_geometry","link_program","create_pipeline_state","create_pipeline_from_program","create_pipeline_simple","create_sampler_linear","create_vertex_buffer","create_index_buffer","create_vertex_buffer_with_slice","create_constant_buffer","create_upload_buffer","create_download_buffer","create_shader_set","create_shader_set_geometry","create_shader_set_tessellation","create_shader_set_tessellation_with_geometry","link_program","create_pipeline_state","create_pipeline_from_program","create_pipeline_simple","create_sampler_linear","pso","buffer","BufferIndex","Element","format","offset","ElemOffset","ElemStride","InstanceRate","Structure","query","VertexBufferCommon","ToInstanceRate","Init","get_rate","NonInstanced","Instanced","VertexBuffer","InstanceBuffer","RawVertexBuffer","ConstantBuffer","RawConstantBuffer","Global","RawGlobal","resource","ShaderResource","RawShaderResource","UnorderedAccess","Sampler","TextureSampler","target","RenderTarget","BlendTarget","RawRenderTarget","DepthTarget","StencilTarget","DepthStencilTarget","Scissor","BlendRef","bundle","Bundle","slice","pso","data","new","encode","Descriptor","primitive","rasterizer","scissor","vertex_buffers","attributes","constant_buffers","resource_views","unordered_views","samplers","color_targets","depth_stencil","AccessInfo","RawDataSet","vertex_buffers","constant_buffers","global_constants","resource_views","unordered_views","samplers","pixel_targets","ref_values","scissor","new","clear","ElementError","NotFound","Offset","name","shader_offset","code_offset","Format","name","shader_format","code_format","InitError","VertexImport","ConstantBuffer","GlobalConstant","ResourceView","UnorderedView","Sampler","PixelExport","PipelineInit","Meta","link_to","PipelineData","Meta","bake_to","PipelineState","new","get_handle","get_meta","DataLink","Init","new","is_active","link_vertex_buffer","link_input","link_constant_buffer","link_global_constant","link_output","link_depth_stencil","link_resource_view","link_unordered_view","link_sampler","link_scissor","DataBind","Data","bind_to","shade","core","Dimension","IsArray","Array","NoArray","IsComparison","Compare","NoCompare","IsMultiSample","MultiSample","NoMultiSample","IsRect","Rect","NoRect","MatrixFormat","ColumnMajor","RowMajor","TextureType","Buffer","D1","D2","D3","Cube","SamplerType","0","1","BaseType","I32","U32","F32","F64","Bool","ContainerType","Single","Vector","Matrix","Stage","Vertex","Hull","Domain","Geometry","Pixel","STAGES","Location","UniformValue","I32","U32","F32","I32Vector2","I32Vector3","I32Vector4","U32Vector2","U32Vector3","U32Vector4","F32Vector2","F32Vector3","F32Vector4","F32Matrix2","F32Matrix3","F32Matrix4","ConstFormat","BaseTyped","get_base_type","Formatted","get_format","Usage","AttributeVar","name","slot","base_type","container","ConstVar","name","location","count","base_type","container","ConstantBufferVar","name","slot","size","usage","elements","TextureVar","name","slot","base_type","ty","usage","UnorderedVar","name","slot","usage","SamplerVar","name","slot","ty","usage","OutputVar","name","slot","base_type","container","ProgramInfo","vertex_attributes","globals","constant_buffers","textures","unordereds","samplers","outputs","output_depth","knows_outputs","Program","CompatibilityError","ErrorArraySize","ErrorBaseType","ErrorContainer","CreateShaderError","ModelNotSupported","StageNotSupported","CompilationFailed","CreateProgramError","ConstFormat","Formatted","get_format","Usage","ToUniform","convert","ProgramError","Vertex","Hull","Domain","Geometry","Pixel","Link","macros","preset","blend","REPLACE","ADD","MULTIPLY","ALPHA","INVERT","depth","PASS_TEST","PASS_WRITE","LESS_EQUAL_TEST","LESS_EQUAL_WRITE","state","FrontFace","Clockwise","CounterClockwise","LineWidth","OffsetSlope","OffsetUnits","Offset","0","1","CullFace","Nothing","Front","Back","RasterMethod","Point","Line","Fill","MultiSample","Rasterizer","front_face","cull_face","method","offset","samples","Comparison","Never","Less","LessEqual","Equal","GreaterEqual","Greater","NotEqual","Always","StencilOp","Keep","Zero","Replace","IncrementClamp","IncrementWrap","DecrementClamp","DecrementWrap","Invert","StencilSide","fun","mask_read","mask_write","op_fail","op_depth_fail","op_pass","Stencil","front","back","Depth","fun","write","Equation","Add","Sub","RevSub","Min","Max","BlendValue","SourceColor","SourceAlpha","DestColor","DestAlpha","ConstColor","ConstAlpha","Factor","Zero","One","SourceAlphaSaturated","ZeroPlus","OneMinus","BlendChannel","equation","source","destination","Blend","color","alpha","ColorMask","Color","mask","blend","RefValues","stencil","blend","Layer","Level","Depth","Stencil","Rect","x","y","w","h","ColorValue","Mirror","Device","Resources","CommandBuffer","get_capabilities","pin_submitted_resources","submit","fenced_submit","wait_fence","cleanup","Primitive","PointList","LineList","LineStrip","TriangleList","TriangleStrip","LineListAdjacency","LineStripAdjacency","TriangleListAdjacency","TriangleStripAdjacency","PatchList","Resources","Buffer","Shader","Program","PipelineStateObject","Texture","ShaderResourceView","UnorderedAccessView","RenderTargetView","DepthStencilView","Sampler","Fence","Mapping","SubmissionError","AccessOverlap","SubmissionResult","VertexCount","InstanceCount","ShaderSet","Simple","Geometry","Tessellated","TessellatedGeometry","VertexShader","HullShader","DomainShader","GeometryShader","PixelShader","buffer","Raw","Role","Vertex","Index","Constant","Staging","Info","role","usage","bind","size","stride","CreationError","UnsupportedBind","Other","UnsupportedUsage","format","ChannelType","Int","Uint","Inorm","Unorm","Float","Srgb","Int","Uint","Inorm","Unorm","Float","Srgb","SurfaceType","R4_G4","R4_G4_B4_A4","R5_G5_B5_A1","R5_G6_B5","R8","R8_G8","R8_G8_B8_A8","R10_G10_B10_A2","R11_G11_B10","R16","R16_G16","R16_G16_B16","R16_G16_B16_A16","R32","R32_G32","R32_G32_B32","R32_G32_B32_A32","B8_G8_R8_A8","D16","D24","D24_S8","D32","BC1_R8_G8_B8","BC3_R8_G8_B8_A8","R4_G4","R4_G4_B4_A4","R5_G5_B5_A1","R5_G6_B5","R8","R8_G8","R8_G8_B8_A8","R10_G10_B10_A2","R11_G11_B10","R16","R16_G16","R16_G16_B16","R16_G16_B16_A16","R32","R32_G32","R32_G32_B32","R32_G32_B32_A32","B8_G8_R8_A8","D16","D24","D24_S8","D32","BC1_R8_G8_B8","BC3_R8_G8_B8_A8","ChannelSource","Zero","One","X","Y","Z","W","Swizzle","0","1","2","3","Format","0","1","SurfaceTyped","DataType","get_surface_type","BufferSurface","TextureSurface","RenderSurface","DepthSurface","StencilSurface","ChannelTyped","ShaderType","get_channel_type","TextureChannel","RenderChannel","BlendChannel","Formatted","Surface","Channel","View","get_format","BufferFormat","DepthFormat","StencilFormat","DepthStencilFormat","TextureFormat","RenderFormat","BlendFormat","U8Norm","0","I8Norm","0","U16Norm","0","I16Norm","0","F16","0","Vec1","Vec2","Vec3","Vec4","Rgba8","Srgba8","Rgb10a2F","Rgba16F","Rgba32F","Bgra8","Depth","DepthStencil","Depth32F","handle","RawBuffer","Buffer","Shader","Program","RawPipelineState","RawTexture","Texture","RawShaderResourceView","ShaderResourceView","RawUnorderedAccessView","UnorderedAccessView","RawRenderTargetView","RawDepthStencilView","RenderTargetView","DepthStencilView","Sampler","Fence","Manager","mapping","Error","InvalidAccess","AccessOverlap","Reader","Writer","memory","Usage","Data","Dynamic","Upload","Download","Access","Bind","Pod","cast_slice","texture","MAX_LEVEL","Raw","CreationError","Format","Kind","Samples","Size","Data","Usage","Mipmap","Level","LayerError","NotExpected","OutOfBounds","Size","Bits","NumSamples","NumFragments","Dimensions","AaMode","Single","Multi","Coverage","FilterMethod","Scale","Mipmap","Bilinear","Trilinear","Anisotropic","CubeFace","PosX","NegX","PosY","NegY","PosZ","NegZ","CUBE_FACES","Kind","D1","D1Array","D2","D2Array","D3","Cube","CubeArray","Mipmap","Provided","Allocated","ImageInfoCommon","xoffset","yoffset","zoffset","width","height","depth","format","mipmap","RawImageInfo","NewImageInfo","TextureCopyRegion","texture","kind","cube_face","info","WrapMode","Tile","Mirror","Clamp","Border","Lod","PackedColor","0","SamplerInfo","filter","wrap_mode","lod_bias","lod_range","comparison","border","Info","kind","levels","format","bind","usage","ResourceDesc","channel","layer","min","max","swizzle","RenderDesc","channel","level","layer","DepthStencilFlags","DepthStencilDesc","level","layer","flags","Layer","Level","Factory","get_capabilities","create_buffer_raw","create_buffer_immutable_raw","create_buffer_immutable","create_buffer","create_pipeline_state_raw","create_program","create_shader","create_shader_vertex","create_shader_hull","create_shader_domain","create_shader_geometry","create_shader_pixel","create_sampler","read_mapping","write_mapping","create_texture_raw","view_buffer_as_shader_resource_raw","view_buffer_as_unordered_access_raw","view_texture_as_shader_resource_raw","view_texture_as_unordered_access_raw","view_texture_as_render_target_raw","view_texture_as_depth_stencil_raw","create_texture","view_buffer_as_shader_resource","view_buffer_as_unordered_access","view_texture_as_shader_resource","view_texture_as_unordered_access","view_texture_as_render_target","view_texture_as_depth_stencil","view_texture_as_depth_stencil_trivial","create_texture_immutable_u8","create_texture_immutable","create_render_target","create_depth_stencil","create_depth_stencil_view_only","ResourceViewError","NoBindFlag","Channel","Layer","Unsupported","TargetViewError","NoBindFlag","Level","Layer","Channel","Unsupported","NotDetached","CombinedError","Texture","Resource","Target","CommandBuffer","reset","bind_pipeline_state","bind_vertex_buffers","bind_constant_buffers","bind_global_constant","bind_resource_views","bind_unordered_views","bind_samplers","bind_pixel_targets","bind_index","set_scissor","set_ref_values","copy_buffer","copy_buffer_to_texture","copy_texture_to_buffer","copy_texture_to_texture","update_buffer","update_texture","generate_mipmap","clear_color","clear_depth_stencil","call_draw","call_draw_indexed","InstanceParams","ProgramInfo","vertex_attributes","globals","constant_buffers","textures","unordereds","samplers","outputs","output_depth","knows_outputs","UniformValue","I32","U32","F32","I32Vector2","I32Vector3","I32Vector4","U32Vector2","U32Vector3","U32Vector4","F32Vector2","F32Vector3","F32Vector4","F32Matrix2","F32Matrix3","F32Matrix4","CopyBufferResult","CopyBufferTextureResult","CopyError","OutOfSrcBounds","size","copy_end","OutOfDstBounds","size","copy_end","Overlap","src_offset","dst_offset","size","NoSrcBindFlag","NoDstBindFlag","CopyTextureBufferResult","Encoder","UpdateError","OutOfBounds","target","source","UnitCountMismatch","target","slice","InvalidUsage","PipelineStateError","Program","DescriptorInit","DeviceCreate","Slice","start","end","base_vertex","instances","buffer","IntoIndexBuffer","into_index_buffer","IndexBuffer","Auto","Index16","Index32","gfx_pipeline_base","gfx_pipeline","gfx_vertex_struct","gfx_constant_struct","gfx_format","gfx_defines","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","bitxor_assign","bitxor_assign","not","not","sub","sub","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","extend","extend","fmt","fmt","default","default","default","default","default","default","default","eq","ne","eq","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","bitand","bitand","bitor","bitor","bitor_assign","bitor_assign","fmt","fmt","from_iter","from_iter","sub_assign","sub_assign","bitxor","bitxor","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","fmt","fmt","bitand_assign","bitand_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","get_channel_type","get_channel_type","get_channel_type","get_channel_type","get_channel_type","get_channel_type","sub","sub","sub","sub","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","description","description","description","description","cause","description","description","description","description","cause","description","description","cause","description","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","fmt","fmt","fmt","fmt","sub_assign","sub_assign","sub_assign","sub_assign","into","into","bitxor","bitxor","bitxor","bitxor","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","not","not","not","not","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","deref_mut","fmt","fmt","fmt","fmt","extend","extend","extend","extend","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","eq","ne","eq","eq","eq","ne","eq","eq","eq","eq","eq","ne","eq","eq","eq","ne","eq","eq","eq","ne","eq","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","bitand","bitand","bitand","bitand","deref","deref","deref","deref","deref","from_iter","from_iter","from_iter","from_iter","from","from","from","from","from","from","from","from","from","from","from","from","from","from","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","fmt","fmt","fmt","fmt","bitand_assign","bitand_assign","bitand_assign","bitand_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into_index_buffer","into_index_buffer","into_index_buffer","get_rate","get_rate","get_rate","new","is_active","link_vertex_buffer","link_input","new","is_active","link_vertex_buffer","link_input","new","is_active","link_constant_buffer","new","is_active","link_constant_buffer","new","is_active","link_global_constant","new","is_active","link_global_constant","new","is_active","link_resource_view","new","is_active","link_resource_view","new","is_active","link_unordered_view","new","is_active","link_sampler","new","is_active","link_resource_view","link_sampler","new","is_active","link_output","new","is_active","link_output","new","is_active","link_output","new","is_active","link_depth_stencil","new","is_active","link_depth_stencil","new","is_active","link_depth_stencil","new","is_active","link_scissor","new","is_active","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","bind_to","from","from","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","eq","ne","eq","eq","ne","eq","eq","ne","eq","eq","eq","eq","ne","eq","eq","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","description","description","description","cause","description","description","cause","description","cause","flush","flush_no_reset","fenced_flush_no_reset","reset","copy_buffer","copy_buffer_to_texture_raw","copy_texture_to_buffer_raw","copy_texture_to_texture_raw","update_buffer","update_constant_buffer","update_texture","clear","clear_depth","clear_stencil","clear_raw","clear_depth_raw","clear_stencil_raw","draw","generate_mipmap","generate_mipmap_raw","from_vertex_count","new_match_vertex_buffer","get_prim_count","split_at","new","new","clear","buffer_read","buffer_write","mapped_reads","mapped_writes","has_mapped_reads","has_mapped_writes","take_accesses","can_sample","VERTEX","GEOMETRY","PIXEL","HULL","DOMAIN","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","is_compatible","get_info","new_fill","with_cull_back","with_offset","new","new","RED","GREEN","BLUE","ALPHA","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","X","Y","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","get_usage","reference","reference","reference","reference","reference","get_info","is_mapped","get_total_bits","get_alpha_stencil_bits","new","cast2","cast3","cast4","cast_slice","cast2","cast3","cast4","cast_slice","cast2","cast3","cast4","cast_slice","cast2","cast3","cast4","cast_slice","cast2","cast3","cast4","cast_slice","get_info","len","get_info","raw_view","get_dimensions","get_texture","get_dimensions","get_texture","get_dimensions","get_dimensions","get_info","new","clear","extend","count","ref_buffer","ref_shader","ref_program","ref_pso","ref_texture","ref_srv","ref_uav","ref_rtv","ref_dsv","ref_sampler","ref_fence","READ","WRITE","RW","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","is_mutable","RENDER_TARGET","DEPTH_STENCIL","SHADER_RESOURCE","UNORDERED_ACCESS","TRANSFER_SRC","TRANSFER_DST","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","get_info","get_num_fragments","needs_resolve","get_dimensions","get_level_dimensions","get_num_levels","get_num_slices","is_cube","get_texel_count","convert","is_inside","get_byte_count","with_texture","new","to_image_info","to_raw_image_info","RO_DEPTH","RO_STENCIL","RO_DEPTH_STENCIL","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set"],"q":["gfx","gfx::traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx","gfx::pso","gfx::pso::buffer","","","","","","","","","","","","","","","","","","","","","","gfx::pso","gfx::pso::resource","","","","","gfx::pso","gfx::pso::target","","","","","","","","gfx::pso","gfx::pso::bundle","","","","","","gfx::pso","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::pso::ElementError","","","gfx::pso","gfx::pso::ElementError","","","gfx::pso","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx","gfx::shade","gfx::shade::core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::shade","","","","","","","","","","","","","gfx","","gfx::preset","gfx::preset::blend","","","","","gfx::preset","gfx::preset::depth","","","","gfx","gfx::state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::buffer","","","","","","","","","","","","","","","","gfx","gfx::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx","gfx::handle","","","","","","","","","","","","","","","","","","gfx","gfx::mapping","","","","","gfx","gfx::memory","","","","","","","","","gfx","gfx::texture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::CopyError","","gfx","gfx::CopyError","","gfx","gfx::CopyError","","","gfx","","","","","","gfx::UpdateError","","gfx","gfx::UpdateError","","gfx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::pso::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::pso::resource","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::pso::target","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::pso::bundle","","","","","","","gfx::pso","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::shade::core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx","","","","","","","","","gfx::shade","","","","","","","","","gfx::shade::core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx","","","","","","","","","gfx::shade::core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::shade","","","","","","","","","","gfx::stategfx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::formatgfx::handle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::mapping","","","","","","","","","","","","","","","","","","","","","","","","gfx::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::texturegfx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::state","","","","","","gfx","","gfx::state","","","","","","","","","","","","","","gfx","gfx::state","gfx","","gfx::state","","gfx","gfx::state","","","","","","","gfx","gfx::state","","","","","","","","gfx","gfx::state","","","","gfx","gfx::state","","gfx","gfx::state","","","","","","","","","","gfx","","gfx::state","","","","","","","","","","","","","","","","","","","","","","gfx","","gfx::state","","","","","","","","","","","gfx","gfx::state","","","gfx","gfx::state","","","","","","","","","","","","gfx","","gfx::state","gfx","gfx::state","","gfx","gfx::state","gfx","gfx::state","gfx","gfx::state","gfx","gfx::state","","","","","gfx","gfx::state","","","","","","","","gfx","gfx::state","gfx","gfx::state","gfx","gfx::state","","","","","","","","","","","","","","","","","gfx","gfx::state","gfx::format","","","","","","gfx::texture","gfx::memory","","gfx::shade","gfx::shade::core","gfx","gfx::buffer","gfx","gfx::handle","","gfx::format","","gfx::shade::core","gfx::texture","gfx::shade::core","gfx::handle","gfx::format","","gfx","gfx::texture","","gfx::format","","","gfx::shade::core","gfx::handle","gfx::format","gfx::handle","gfx::texture","gfx::handle","","gfx::texture","gfx::format","","gfx::shade::core","gfx::format","gfx::memory","gfx::shade::core","gfx::format","gfx::texture","gfx::handle","","gfx::shade::core","gfx::buffer","gfx::handle","gfx","gfx::texture","gfx","","gfx::shade::core","gfx::format","gfx::shade::core","gfx::texture","gfx::format","","","gfx::shade::core","gfx","gfx::handle","gfx::pso","gfx::format","","gfx::pso::buffer","gfx::format","gfx::texture","gfx::buffer","gfx::format","gfx::handle","gfx::shade::core","gfx::format","gfx::memory","gfx::format","gfx","gfx::handle","gfx::format","","","","gfx::mapping","gfx::shade::core","gfx::format","gfx::texture","gfx::shade::core","gfx","","gfx::texture","","gfx::shade::core","gfx","gfx::shade::core","gfx::format","gfx::shade::core","gfx::shade","gfx::handle","gfx::shade::core","gfx","gfx::buffer","gfx::texture","gfx::shade::core","gfx","gfx::shade::core","gfx::memory","gfx::texture","gfx::format","gfx::texture","gfx::handle","gfx::mapping","gfx::shade::core","gfx::format","gfx::handle","gfx::format","","","gfx::handle","gfx::format","","","gfx::texture","gfx::mapping","gfx::pso","gfx::format","","","gfx::texture","","gfx::shade::core","gfx::texture","gfx::format","gfx::handle","gfx::shade::core","gfx","gfx::shade::core","gfx","","gfx::shade::core","gfx::buffer","gfx::texture","gfx","","gfx::texture","gfx","","gfx::mapping","gfx::shade","gfx::memory","","gfx::texture","gfx::memory","","gfx::shade","gfx::texture","gfx::memory","","gfx::texture","gfx::shade","","gfx::memory","","gfx::texture","","","","gfx::memory","","gfx::shade","gfx::format","","","gfx::texture","gfx::format","gfx::texture","gfx::format","","gfx::texture","gfx::format","","","","gfx::texture","gfx::format","gfx::texture","","","gfx::format","","","gfx::texture","gfx","gfx::memory","gfx::texture","gfx::memory","gfx::format","","gfx::texture","","gfx::format","","","","","","gfx::texture","gfx::format","","","gfx::texture","gfx::format","gfx::texture","gfx::format","","gfx::texture","gfx::format","","gfx::memory","gfx::format","","","","gfx::texture","gfx::format","","","gfx::shade","gfx::format","","","gfx::texture","gfx::shade","gfx::memory","","","gfx::texture","gfx::shade","gfx::memory","gfx","gfx::shade::core","","gfx::mapping","gfx","","gfx::buffer","gfx::shade::core","gfx::texture","","gfx","gfx::texture","gfx::memory","","gfx::shade","gfx::mapping","gfx::texture","gfx::shade","gfx::memory","","gfx::texture","gfx::shade","gfx::memory","","gfx::buffer","gfx::format","gfx::texture","","gfx::memory","","gfx","","gfx::texture","","gfx::format","gfx::shade::core","gfx::pso","","gfx","","gfx::pso::buffer","","gfx::shade::core","","","","gfx::format","","gfx::handle","gfx::format","gfx::shade::core","","gfx::format","","","","","gfx::shade::core","gfx::handle","","","","gfx::buffer","","gfx::handle","","","","gfx::format","","","gfx::shade::core","","gfx::texture","","","","gfx::shade::core","gfx::handle","gfx","","gfx::format","gfx::shade::core","","gfx","","gfx::format","","","","gfx","","gfx::memory","gfx::format","","","gfx::shade::core","","gfx::buffer","gfx::shade::core","","gfx::handle","gfx::texture","","gfx::shade::core","","","gfx::texture","","gfx::handle","","gfx::format","","gfx::mapping","","gfx::shade::core","","gfx::handle","","gfx::texture","","","","gfx::format","","","","gfx::handle","gfx","","gfx::format","","gfx::shade::core","","gfx::format","gfx::shade::core","gfx::format","","gfx::texture","","gfx::format","","gfx::texture","","gfx","gfx::shade::core","gfx::texture","","gfx::format","","gfx::handle","","gfx::shade::core","","gfx::format","gfx::shade::core","","gfx::texture","gfx::shade","","gfx::format","","gfx::texture","gfx","","gfx::texture","gfx::format","gfx","","gfx::handle","","gfx::texture","","gfx","","gfx::format","gfx::buffer","","gfx::shade::core","","gfx::memory","","gfx::shade::core","gfx::format","gfx::texture","","gfx","","gfx::format","gfx::handle","gfx::format","gfx::handle","","gfx::pso","","gfx::format","gfx::handle","","gfx::texture","","gfx","","gfx::texture","gfx","","gfx::handle","","gfx::format","gfx::texture","","gfx::handle","gfx::format","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::texture","gfx::format","gfx::handle","","gfx::format","gfx::pso::buffer","gfx::buffer","gfx::format","gfx","gfx::format","gfx","gfx::texture","gfx::format","gfx::handle","gfx::format","gfx::texture","gfx::shade::core","gfx","gfx::texture","gfx::shade::core","gfx::pso","gfx::shade::core","gfx::format","","gfx::shade::core","gfx","gfx::memory","gfx::texture","gfx::handle","gfx::format","gfx::handle","gfx::buffer","gfx::shade::core","","gfx::buffer","gfx","gfx::texture","","gfx::handle","gfx::pso","gfx::format","","","","gfx","gfx::shade::core","gfx::format","gfx::texture","gfx::format","gfx::shade::core","gfx::format","gfx::handle","gfx","gfx::format","gfx::handle","gfx::texture","gfx::shade::core","gfx::texture","gfx::format","gfx::handle","gfx::texture","gfx::handle","gfx::mapping","gfx::shade::core","gfx","gfx::texture","gfx::handle","","gfx::shade::core","gfx::memory","gfx","gfx::format","gfx::texture","gfx","gfx::shade::core","","gfx::texture","gfx::format","gfx::handle","","gfx::format","gfx::texture","gfx::format","gfx","gfx::shade::core","gfx","gfx::format","","","","gfx::texture","gfx::handle","gfx::format","","gfx::shade::core","gfx::format","gfx::shade::core","","gfx::format","","gfx::handle","gfx::shade","gfx::format","gfx::shade::core","gfx::format","","gfx::shade::core","gfx::format","gfx::handle","gfx::format","gfx::texture","","gfx::format","gfx::shade::core","gfx::memory","gfx","gfx::format","","gfx::texture","gfx::memory","gfx::shade","gfx::memory","gfx::handle","","gfx::mapping","","gfx::handle","gfx::memory","gfx::texture","gfx::shade","gfx::memory","gfx::texture","gfx::shade::core","gfx","gfx::format","","","gfx::texture","gfx::format","gfx::texture","gfx::shade","gfx::texture","gfx","gfx::format","gfx","gfx::texture","gfx::format","gfx::texture","gfx::format","","gfx::shade","gfx::format","gfx::texture","","gfx::format","gfx::texture","gfx::format","gfx::memory","","gfx::format","","","","","","","","","","","","","","","gfx::texture","gfx::format","","gfx::texture","","gfx::format","gfx::texture","gfx::format","","","","","","","","gfx::texture","","gfx::format","gfx::memory","gfx::format","gfx::texture","gfx::format","","","","gfx::texture","gfx::format","","gfx::texture","gfx::memory","","gfx::shade","gfx::texture","gfx::memory","gfx::shade","gfx::memory","gfx::pso::buffer","gfx::format","gfx","gfx::format","","gfx::mapping","gfx::texture","gfx::shade::core","gfx::format","gfx::buffer","gfx::format","","gfx::shade::core","","gfx::texture","gfx::handle","gfx::buffer","gfx::shade::core","","gfx::handle","","","gfx::texture","gfx::format","","gfx::handle","gfx::format","gfx","gfx::shade::core","gfx","gfx::format","","","gfx::shade::core","gfx::texture","gfx::handle","gfx::texture","gfx::shade::core","gfx::format","","gfx::texture","gfx::shade::core","gfx::handle","gfx::memory","gfx::format","gfx::shade::core","gfx::format","","gfx::texture","gfx::handle","gfx::format","gfx::handle","gfx::texture","gfx","gfx::shade::core","gfx","gfx::pso","gfx::shade::core","gfx::memory","gfx::handle","gfx::buffer","gfx::format","","gfx::handle","gfx::texture","gfx::format","","gfx::shade::core","gfx::buffer","gfx::format","","","gfx::handle","gfx::format","gfx::shade::core","gfx::format","gfx::handle","gfx::format","gfx::shade","gfx::handle","gfx::texture","","gfx::format","gfx::handle","gfx::format","gfx::texture","gfx::format","gfx","gfx::texture","gfx::format","gfx::shade::core","","gfx::texture","gfx::format","gfx","gfx::shade::core","gfx::format","","gfx::texture","gfx::format","gfx::handle","gfx::texture","gfx::format","","","","gfx::memory","gfx::texture","","gfx","gfx::shade::core","gfx::handle","gfx","gfx::handle","","gfx","gfx::pso::buffer","","","","","","","","","","","","","","","","","","","","","","gfx::pso::resource","","","","","","","","","","","","","","","","gfx::pso::target","","","","","","","","","","","","","","","","","","","","","","","gfx::pso::buffer","","","","","","gfx::pso::resource","","","","","gfx::pso::target","","","","","","","","gfx","","","","","gfx::pso","","gfx","","","","","gfx::pso::buffer","","","","","","gfx::pso::resource","","","","","gfx::pso::target","","","","","","","","gfx::pso","","","","gfx::shade","gfx","","","","","","","","","","","gfx::pso::buffer","","","","","","","","","gfx::pso::resource","","","","","","","gfx::pso::target","","","","","","","","","","gfx::pso","","","","","","","","gfx::shade","","gfx","","","","","","gfx::pso::buffer","","","","","","gfx::pso::resource","","","","","gfx::pso::target","","","","","","","","gfx::pso","","","","gfx::shade","gfx","","","gfx::pso","","gfx::shade","gfx","","gfx::pso::buffer","","","","","","gfx::pso::resource","","","","","gfx::pso::target","","","","","","","","gfx::pso","gfx","","","","gfx::pso","","","gfx::shade","","gfx","","","","","","","","","","","","","","","","","","","","","","","","gfx::pso","","","","","","","","","","gfx::shade::core","gfx::shade","","","","","","","","","","","","","","","","","","","gfx::shade::core","","gfx::state","","","","","","","","","","","","","","","","","","","","","","","gfx","","","","","","","","","","","","","","","","","","","","","","gfx::buffer","","gfx::format","","","","","","","","","","","","","","","","","","","","","","","gfx::handle","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx::texture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["public re-exported traits","A <code>Device</code> is responsible for submitting <code>CommandBuffer</code>s to …","Associated <code>Resources</code> type.","Associated <code>CommandBuffer</code> type. Every <code>Device</code> type can only …","Returns the capabilities of this <code>Device</code>.","Pin everything from this handle manager to live for a …","Submits a <code>CommandBuffer</code> to the GPU for execution.","Submits a <code>CommandBuffer</code> to the GPU for execution. returns …","Stalls the current thread until the fence is satisfied","Cleanup unused resources. This should be called between …","Overview","Returns the capabilities of this <code>Factory</code>. This usually …","","","","","Creates a new <code>RawPipelineState</code>. To create a safely typed …","Creates a new shader <code>Program</code> for the supplied <code>ShaderSet</code>.","Compiles a shader source into a <code>Shader</code> object that can be …","Compiles a <code>VertexShader</code> from source.","Compiles a <code>HullShader</code> from source.","Compiles a <code>VertexShader</code> from source.","Compiles a <code>GeometryShader</code> from source.","Compiles a <code>PixelShader</code> from source. This is the same as …","","Acquire a mapping Reader","Acquire a mapping Writer","Create a new empty raw texture with no data. The channel …","","","","","","","","","","","","","","","","","","","","A trait for plain-old-data types.","This trait is responsible for creating and managing …","Creates an immutable vertex buffer from the supplied …","Creates an immutable index buffer from the supplied …","Creates an immutable vertex buffer from the supplied …","Creates a constant buffer for <code>num</code> identical elements of …","Creates an upload buffer for <code>num</code> elements of type <code>T</code>.","Creates a download buffer for <code>num</code> elements of type <code>T</code>.","Creates a <code>ShaderSet</code> from the supplied vertex and pixel …","Creates a <code>ShaderSet</code> from the supplied vertex, geometry, …","Creates a <code>ShaderSet</code> from the supplied vertex, hull, …","Creates a <code>ShaderSet</code> from the supplied vertex, hull, …","Creates a basic shader <code>Program</code> from the supplied vertex …","Similar to <code>create_pipeline_from_program(..)</code>, but takes a …","Creates a strongly typed <code>PipelineState</code> from its <code>Init</code> …","Creates a strongly typed <code>PipelineState</code> from its <code>Init</code> …","Create a linear sampler with clamping to border.","Creates an immutable vertex buffer from the supplied …","Creates an immutable index buffer from the supplied …","Creates an immutable vertex buffer from the supplied …","Creates a constant buffer for <code>num</code> identical elements of …","Creates an upload buffer for <code>num</code> elements of type <code>T</code>.","Creates a download buffer for <code>num</code> elements of type <code>T</code>.","Creates a <code>ShaderSet</code> from the supplied vertex and pixel …","Creates a <code>ShaderSet</code> from the supplied vertex, geometry, …","Creates a <code>ShaderSet</code> from the supplied vertex, hull, …","Creates a <code>ShaderSet</code> from the supplied vertex, hull, …","Creates a basic shader <code>Program</code> from the supplied vertex …","Similar to <code>create_pipeline_from_program(..)</code>, but takes a …","Creates a strongly typed <code>PipelineState</code> from its <code>Init</code> …","Creates a strongly typed <code>PipelineState</code> from its <code>Init</code> …","Create a linear sampler with clamping to border.","A typed high-level graphics pipeline interface.","Buffer components for a PSO.","Index of a vertex buffer.","A struct element descriptor.","Element format","Offset from the beginning of the container, in bytes","Offset of an attribute from the start of the buffer, in …","Offset between attribute values, in bytes","The number of instances between each subsequent attribute …","A trait to be implemented by any struct having the layout …","Get the layout of an element by name.","Service struct to simplify the implementations of …","Helper trait for <code>VertexBufferCommon</code> to support variable …","The associated init type for PSO component.","Get an actual instance rate value from the init.","Helper phantom type for per-vertex attributes.","Helper phantom type for per-instance attributes.","Vertex buffer component. Advanced per vertex.","Instance buffer component. Same as the vertex buffer but …","Raw vertex/instance buffer component. Can be used when …","Constant buffer component.","Raw constant buffer component.","Global (uniform) constant component. Describes a …","Raw global (uniform) constant component. Describes a …","Resource components for a PSO.","Shader resource component (SRV). Typically is a view into …","Raw (untyped) shader resource (SRV).","Unordered access component (UAV). A writable resource …","Sampler component.","A convenience type for a texture paired with a sampler. …","Render target components for a PSO.","Render target component. Typically points to a …","Render target component with active blending mode.","Raw (untyped) render target component with optional …","Depth target component.","Stencil target component.","Depth + stencil target component.","Scissor component. Sets up the scissor test for rendering.","Blend reference component. Sets up the reference color …","Combine slice data with pipeline state.","Slice-PSO bundle.","Slice","Pipeline state","Pipeline data","Create new Bundle","Draw bundle using encoder.","All the information surrounding a shader program that is …","Type of the primitive","Rasterizer setup","Enable scissor test","Vertex buffers","Vertex attributes","Constant buffers","Shader resource views","Unordered access views","Samplers","Render target views (RTV)","Depth stencil view (DSV)","Informations about what is accessed by a bunch of …","A complete set of raw data that needs to be specified at …","","","","","","","","","","Create an empty data set.","Clear all contained data.","Error matching an element inside the constant buffer.","Element not found.","Element offset mismatch.","Element name.","Element byte offset in the shader-side constant buffer.","Element byte offset in the code-side constant buffer.","Element format mismatch.","Element name.","Element format in the shader-side constant buffer.","Element format in the code-side constant buffer.","Failure to initilize the link between the shader and the …","Vertex attribute mismatch.","Constant buffer mismatch.","Global constant mismatch.","Shader resource view mismatch.","Unordered access view mismatch.","Sampler mismatch.","Pixel target mismatch.","A service trait implemented by the “init” structure …","The associated “meta” struct.","Attempt to map a PSO descriptor to a give shader program, …","a service trait implemented the “data” structure of …","The associated “meta” struct.","Dump all the contained data into the raw data set, given …","A strongly typed Pipleline State Object. See the module …","Create a new PSO from a raw handle and the “meta” …","Get a raw handle reference.","Get a “meta” struct reference. Can be used by the …","The “link” logic portion of a PSO component. Defines …","The assotiated “init” type - a member of the PSO “…","Create a new empty data link.","Check if this link is actually used by the shader.","Attempt to link with a vertex buffer containing multiple …","Attempt to link with a vertex attribute.","Attempt to link with a constant buffer.","Attempt to link with a global constant.","Attempt to link with an output render target (RTV).","Attempt to link with a depth-stencil target (DSV).","Attempt to link with a shader resource (SRV).","Attempt to link with an unordered access (UAV).","Attempt to link with a sampler.","Attempt to enable scissor test.","The “bind” logic portion of the PSO component. …","The associated “data” type - a member of the PSO “…","Dump the given data into the raw data set.","Shaders Shader parameter handling.","Shader handling.","Number of components in a container type …","Whether the sampler samples an array texture.","","","Whether the sampler compares the depth value upon …","","","Whether the sampler samples a multisample texture.","","","Whether the sampler samples a rectangle texture.","","","Whether the matrix is column or row major.","","","A type of the texture variable. This has to match the …","Sample from a buffer.","Sample from a 1D texture","Sample from a 2D texture","Sample from a 3D texture","Sample from a cubemap.","A type of the sampler variable.","","","Base type of this shader parameter.","","","","","","Number of components this parameter represents.","Scalar value","A vector with <code>Dimension</code> components.","A matrix.","Which program stage this shader represents.","","","","","","A constant static array of all shader stages.","Location of a parameter in the program.","A value that can be uploaded to the device as a uniform.","","","","","","","","","","","","","","","","Format of a shader constant.","A trait that statically links simple data types to base …","","A trait that statically links simple data types to …","Get the associated constant format.","Parameter usage flags.","Vertex information that a shader takes as input.","Name of this attribute.","Slot of the vertex attribute.","Type that this attribute is composed of.","“Scalarness” of this attribute.","A constant in the shader - a bit of data that doesn’t …","Name of this constant.","Location of this constant in the program. For constant …","Number of elements this constant represents.","Type that this constant is composed of","“Scalarness” of this constant.","A constant buffer.","Name of this constant buffer.","Slot of the constant buffer.","Size (in bytes) of this buffer’s data.","What program stage this buffer is used in.","List of individual elements in this buffer.","Texture shader parameter.","Name of this texture variable.","Slot of this texture variable.","Base type for the texture.","Type of this texture.","What program stage this texture is used in.","Unordered access shader parameter.","Name of this unordered variable.","Slot of this unordered variable.","What program stage this UAV is used in.","Sampler shader parameter.","Name of this sampler variable.","Slot of this sampler variable.","Type of this sampler.","What program stage this texture is used in.","Target output variable.","Name of this output variable.","Output color target index.","Type of the output component.","“Scalarness” of this output.","Metadata about a program.","Attributes in the program","Global constants in the program","Constant buffers in the program","Textures in the program","Unordered access resources in the program","Samplers in the program","Output targets in the program","A flag indicating that the pixel shader manually assigns …","A hacky flag to make sure the clients know we are unable …","A program","Error type for trying to store a UniformValue in a …","Array sizes differ between the value and the var (trying …","Base types differ between the value and the var (trying …","Container-ness differs between the value and the var …","An error type for creating shaders.","The device does not support the requested shader model.","The device does not support the shader stage.","The shader failed to compile.","An error type for creating programs.","Format of a shader constant.","A trait that statically links simple data types to …","Get the associated constant format.","Parameter usage flags.","","","Program linking error","Unable to compile the vertex shader","Unable to compile the hull shader","Unable to compile the domain shader","Unable to compile the geometry shader","Unable to compile the pixel shader","Unable to link","Convenience macros Various helper macros.","State presets","Blending preset modes.","When combining two fragments, choose the source value","When combining two fragments, add their values together, …","When combining two fragments, multiply their values …","When combining two fragments, add the value of the source …","When combining two fragments, subtract the destination …","Depth presets for depth tests.","When rendering a fragment, draw regardless of depth …","When rendering a fragment, draw regardless of depth …","“<=” comparison with read-only depth","When rendering a fragment, only draw when the fragment’…","Fixed-function hardware state.","The front face winding order of a set of vertices.","Clockwise winding order.","Counter-clockwise winding order.","Width of a line. Could be f32 if not for Hash deriving …","Slope depth offset factor Could be f32 if not for Hash …","Number of units to offset, where the unit is the minimal …","How to offset vertices in screen space, if at all.","","","Which face, if any, to cull.","","","","How to rasterize a primitive.","Rasterize as a point.","Rasterize as a line with the given width.","Rasterize as a face.","Multi-sampling rasterization mode","Primitive rasterization state. Note that GL allows …","Which vertex winding is considered to be the front face …","Which face should be culled.","How to rasterize this primitive.","Any polygon offset to apply.","Multi-sampling mode.","A pixel-wise comparison function.","<code>false</code>","<code>x < y</code>","<code>x <= y</code>","<code>x == y</code>","<code>x >= y</code>","<code>x > y</code>","<code>x != y</code>","<code>true</code>","Stencil mask operation.","Keep the current value in the stencil buffer (no change).","Set the value in the stencil buffer to zero.","Set the stencil buffer value to <code>value</code> from <code>StencilSide</code>","Increment the stencil buffer value, clamping to its …","Increment the stencil buffer value, wrapping around to 0 …","Decrement the stencil buffer value, clamping to its …","Decrement the stencil buffer value, wrapping around to …","Bitwise invert the current value in the stencil buffer.","Complete stencil state for a given side of a face.","Comparison function to use to determine if the stencil …","A mask that is ANDd with both the stencil buffer value …","A mask that is ANDd with the stencil value before writing …","What operation to do if the stencil test fails.","What operation to do if the stenil test passes but the …","What operation to do if both the depth and stencil test …","Complete stencil state, specifying how to handle the …","","","Depth test state.","Comparison function to use.","Specify whether to write to the depth buffer or not.","","Adds source and destination. Source and destination are …","Subtracts destination from source. Source and destination …","Subtracts source from destination. Source and destination …","Component-wise minimum value of source and destination. …","Component-wise maximum value of source and destination. …","","","","","","","","","","","","","","","","","","","","","","The state of an active color render target","Color mask to use.","Optional blending.","The complete set of the rasterizer reference values. …","Stencil front and back values.","Constant blend color.","A depth value, specifying which plane to select out of a …","Mipmap level to select in a texture.","A single depth value from a depth buffer.","A single value from a stencil stencstencil buffer.","A screen space rectangle","","","","","A color with floating-point components.","Mirroring flags, used for blitting","A <code>Device</code> is responsible for submitting <code>CommandBuffer</code>s to …","Associated <code>Resources</code> type.","Associated <code>CommandBuffer</code> type. Every <code>Device</code> type can only …","Returns the capabilities of this <code>Device</code>.","Pin everything from this handle manager to live for a …","Submits a <code>CommandBuffer</code> to the GPU for execution.","Submits a <code>CommandBuffer</code> to the GPU for execution. returns …","Stalls the current thread until the fence is satisfied","Cleanup unused resources. This should be called between …","Describes what geometric primitives are created from …","Each vertex represents a single point.","Each pair of vertices represent a single line segment. …","Every two consecutive vertices represent a single line …","Each triplet of vertices represent a single triangle. For …","Every three consecutive vertices represent a single …","Each quadtruplet of vertices represent a single line …","Every four consecutive vertices represent a single line …","Each sextuplet of vertices represent a single traingle …","Every even-numbered vertex (every other starting from the …","Patch list, used with shaders capable of producing …","Different types of a specific API.","","","","","","","","","","","","","","","","Draw vertex count.","Draw number of instances","A complete set of shaders to link a program. TODO: …","Simple program: Vs-Ps","Geometry shader programs: Vs-Gs-Ps","Tessellation programs: Vs-Hs-Ds-Ps","TessellatedGeometry programs: Vs-Hs-Ds-Hs-Ps","","","","","","Memory buffers","Untyped buffer","Role of the memory buffer.","Generic vertex buffer","Index buffer","Constant buffer","Staging buffer","An information block that is immutable and associated to …","Role","Usage hint","Bind flags","Size in bytes","Stride of a single element, in bytes. Only used for …","Error creating a buffer.","Some of the bind flags are not supported.","Unknown other error.","Usage mode is not supported","Universal format specification. Applicable to textures, …","Type of a surface channel. This is how we interpret the …","","","","","","","","","","","","","Type of the allocated texture surface. It is supposed to …","","","","","","","","","","","","","","","","","","","","","","","Block Compression 1 also known as DXT1, S3TC. See S3TC …","Block Compression 3 also known as DXT5, S3TC. See S3TC …","","","","","","","","","","","","","","","","","","","","","","","Block Compression 1 also known as DXT1, S3TC. See S3TC …","Block Compression 3 also known as DXT5, S3TC. See S3TC …","Source channel in a swizzle configuration. Some may …","","","","","","","Channel swizzle configuration for the resource views. …","","","","","Complete run-time surface format.","","","Compile-time surface type trait.","The corresponding data type to be passed from CPU.","Return the run-time value of the type.","An ability of a surface type to be used for vertex …","An ability of a surface type to be used for textures.","An ability of a surface type to be used for render …","An ability of a surface type to be used for depth targets.","An ability of a surface type to be used for stencil …","Compile-time channel type trait.","Shader-visible type that corresponds to this channel. For …","Return the run-time value of the type.","An ability of a channel type to be used for textures.","An ability of a channel type to be used for render …","An ability of a channel type to be used for blended …","Compile-time full format trait.","Associated surface type.","Associated channel type.","Shader view type of this format.","Return the run-time value of the type.","Ability to be used for vertex buffers.","Ability to be used for depth targets.","Ability to be used for vertex buffers.","Ability to be used for depth+stencil targets.","Ability to be used for textures.","Ability to be used for render targets.","Ability to be used for blended render targets.","","","","","","","","","","","Abstracted 1-element container for macro internal use","Abstracted 2-element container for macro internal use","Abstracted 3-element container for macro internal use","Abstracted 4-element container for macro internal use","Standard 8bits RGBA format.","Standard 8bit gamma transforming RGB format.","Standard HDR floating-point format with 10 bits for RGB …","Standard 16-bit floating-point RGBA format.","Standard 32-bit floating-point RGBA format.","Standard 8bits BGRA format.","Standard 24-bit depth format.","Standard 24-bit depth format with 8-bit stencil.","Standard 32-bit floating-point depth format.","Resource handles","Untyped buffer handle","Type-safe buffer handle","Shader Handle","Program Handle","Raw Pipeline State Handle","Raw texture handle","Typed texture object","Raw Shader Resource View Handle","Type-safe Shader Resource View Handle","Raw Unordered Access View Handle","Type-safe Unordered Access View Handle","Raw RTV","Raw DSV","Typed RTV","Typed DSV","Sampler Handle","Fence Handle","Stores reference-counted resources used in a command …","Memory mapping","Error accessing a mapping.","The requested mapping access did not match the expected …","The requested mapping access overlaps with another.","Mapping reader","Mapping writer. Currently is not possible to make …","Types to describe the properties of memory allocated for …","How this memory will be used regarding GPU-CPU data flow.","Full speed GPU access. Optimal for render targets and …","CPU to GPU data flow with update commands. Used for …","CPU to GPU data flow with mapping. Used for staging for …","GPU to CPU data flow with mapping. Used for staging for …","Flags providing information about the type of memory …","Flags providing information about the usage of a resource.","A trait for plain-old-data types.","Cast a slice from one POD type to another.","Texture creation and modification.","Maximum accessible mipmap level of a texture.","Untyped texture","Pure texture object creation error.","Failed to map a given format to the device.","The kind doesn’t support a particular operation.","Failed to map a given multisampled kind to the device.","Unsupported size in one of the dimensions.","The given data has a different size than the target …","The mentioned usage mode is not supported","The requested mipmap creation parameter is unsupported.","The requested mipmap level count does not match the …","An error associated with selected texture layer.","The source texture kind doesn’t support array slices.","Selected layer is outside of the provided range.","Dimension size","Number of bits per component","Number of MSAA samples","Number of EQAA fragments","Dimensions: width, height, depth, and samples.","Describes the configuration of samples inside each texel.","No additional sample information","MultiSampled Anti-Aliasing (MSAA)","Coverage Sampling Anti-Aliasing (CSAA/EQAA)","How to filter the texture when sampling. They correspond …","The dumbest filtering possible, nearest-neighbor …","Add simple mipmapping.","Sample multiple texels within a single mipmap level to …","Sample multiple texels across two mipmap levels to …","Anisotropic filtering with a given “max”, must be …","The face of a cube texture to do an operation on.","","","","","","","A constant array of cube faces in the order they map to …","Specifies the kind of a texture storage to be allocated.","A single row of texels.","An array of rows of texels. Equivalent to Texture2D …","A traditional 2D texture, with rows arranged contiguously.","An array of 2D textures. Equivalent to Texture3D except …","A volume texture, with each 2D layer arranged …","A set of 6 2D textures, one for each face of a cube.","An array of Cube textures.","The marker for the texture initializer to generate extra …","The mipmap data is provided as a part of bitmap data.","The mipmap data is not provided, but the memory for it …","Describes a subvolume of a texture, which image data can …","","","","","","","Format of each texel.","Which mipmap to select.","New raw image info based on the universal format spec.","New image info based on the universal format spec. The …","A texture region defined for copy operations","Raw texture","Texture kind","Optional cube face","Dimensions, offsets, and format","Specifies how texture coordinates outside the range <code>[0, 1]</code>…","Tile the texture. That is, sample the coordinate modulo …","Mirror the texture. Like tile, but uses abs(coord) before …","Clamp the texture to the value at <code>0.0</code> or <code>1.0</code> respectively.","Use border color.","A wrapper for the LOD level of a texture.","A wrapper for the 8bpp RGBA color, encoded as u32.","","Specifies how to sample from a texture.","Filter method to use.","Wrapping mode for each of the U, V, and W axis (S, T, and …","This bias is added to every computed mipmap level (N + …","This range is used to clamp LOD level used for sampling.","Comparison mode, used primary for a shadow map.","Border color is used when one of the wrap modes is set to …","Texture storage descriptor.","","","","","","Texture resource view descriptor.","","","","","","Texture render view descriptor.","","","","Depth-stencil read-only flags","Texture depth-stencil view descriptor.","","","","A depth value, specifying which plane to select out of a …","Mipmap level to select in a texture.","Overview","Returns the capabilities of this <code>Factory</code>. This usually …","","","","","Creates a new <code>RawPipelineState</code>. To create a safely typed …","Creates a new shader <code>Program</code> for the supplied <code>ShaderSet</code>.","Compiles a shader source into a <code>Shader</code> object that can be …","Compiles a <code>VertexShader</code> from source.","Compiles a <code>HullShader</code> from source.","Compiles a <code>VertexShader</code> from source.","Compiles a <code>GeometryShader</code> from source.","Compiles a <code>PixelShader</code> from source. This is the same as …","","Acquire a mapping Reader","Acquire a mapping Writer","Create a new empty raw texture with no data. The channel …","","","","","","","","","","","","","","","","","","","","Error creating either a ShaderResourceView, or …","The corresponding bind flag is not present in the texture.","Selected channel type is not supported for this texture.","Selected layer can not be viewed for this texture.","The backend was refused for some reason.","Error creating either a RenderTargetView, or …","The <code>RENDER_TARGET</code>/<code>DEPTH_STENCIL</code> flag is not present in …","Selected mip level doesn’t exist.","Selected array layer doesn’t exist.","Selected channel type is not supported for this texture.","The backend was refused for some reason.","The RTV cannot be changed due to the references to it …","An error from creating textures with views at the same …","Failed to create the raw texture.","Failed to create SRV or UAV.","Failed to create RTV or DSV.","An interface of the abstract command buffer. It collects …","Reset the command buffer contents, retain the allocated …","Bind a pipeline state object","Bind a complete set of vertex buffers","Bind a complete set of constant buffers","Bind a global constant","Bind a complete set of shader resource views","Bind a complete set of unordered access views","Bind a complete set of samplers","Bind a complete set of pixel targets, including multiple …","Bind an index buffer","Set scissor rectangle","Set reference values for the blending and stencil …","Copy part of a buffer to another","Copy part of a buffer to a texture","Copy part of a texture to a buffer","Copy part of one texture into another","Update a vertex/index/uniform buffer","Update a texture","","Clear color target","","Draw a primitive","Draw a primitive with index buffer","Optional instance parameters: (instance count, buffer …","Metadata about a program.","Attributes in the program","Global constants in the program","Constant buffers in the program","Textures in the program","Unordered access resources in the program","Samplers in the program","Output targets in the program","A flag indicating that the pixel shader manually assigns …","A hacky flag to make sure the clients know we are unable …","A value that can be uploaded to the device as a uniform.","","","","","","","","","","","","","","","","Result type returned when copying a buffer into another …","Result type returned when copying buffer data into a …","An error occuring in memory copies.","","","","","","","","","","","","","Result type returned when copying texture data into a …","Graphics Command Encoder","An error occuring in buffer/texture updates.","","","","","","","","Error creating a PipelineState","Shader program failed to link.","Unable to create PSO descriptor due to mismatched formats.","Device failed to create the handle give the descriptor.","A <code>Slice</code> dictates in which and in what order vertices get …","The start index of the index-buffer. Processing will …","The end index in the index-buffer. Processing will stop …","This is the index of the first vertex in the <code>VertexBuffer</code>…","Instancing configuration.","Represents the type of index-buffer used.","A helper trait to create <code>IndexBuffers</code> from different …","Turns self into an <code>IndexBuffer</code>.","Type of index-buffer used in a Slice.","Represents a hypothetical index-buffer from 0 to …","An index-buffer with unsigned 16 bit indices.","An index-buffer with unsigned 32 bit indices.","Defines a set of pipeline-associated structures.","Defines a set of pipeline-associated structures, and also …","Defines a structure that is used in a vertex buffer.","Defines a structure that is used in a constant buffer.","Defines a shorthand for a format.","Defines vertex, constant and pipeline formats in one …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the set of flags.","Toggles the set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","","","","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","","","","","","","","","","","","","","","","","Disables all flags disabled in the set.","Disables all flags disabled in the set.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","","","","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flagseturns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the setubmits the commands in this <code>Encoder</code>’s internal …","Like <code>flush</code> but keeps the encoded commands.","Like <code>flush_no_reset</code> but places a fence.","Resets the encoded commands.","Copy part of a buffer to another","Copy part of a buffer to a texture","Copy part of a texture to a buffer","Copy part of a texture to another texture","Update a buffer with a slice of data.","Update a buffer with a single structure.","Update the contents of a texture.","Clears the supplied <code>RenderTargetView</code> to the supplied …","Clear a depth view with a specified value.","Clear a stencil view with a specified value.","Clears the supplied <code>RawRenderTargetView</code> to the supplied …","Clear a raw depth view with a specified value.","Clear a raw stencil view with a specified value.","Draws a <code>slice::Slice</code> using a pipeline state object, and …","Generate a mipmap chain for the given resource view.","Untyped version of mipmap generation.","Creates a new <code>Slice</code> with a given vertex count.","Creates a new <code>Slice</code> to match the supplied vertex buffer, …","Calculates the number of primitives of the specified type …","Divides one slice into two at an index.","Create a new empty PSO descriptor.","Creates empty access informations","Clear access informations","Register a buffer read access","Register a buffer write access","Returns the mapped buffers that The GPU will read from","Returns the mapped buffers that The GPU will write to","Is there any mapped buffer reads ?","Is there any mapped buffer writes ?","Takes all the accesses necessary for submission","Check if this texture can be used with a sampler.","Used by the vertex shader","Used by the geometry shader","Used by the pixel shader","Used by the hull shader","Used by the pixel shader","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Whether a value is compatible with this variable. That …","Get program info","Create a new filling rasterizer.","Add back face culling.","Add polygon offset.","Create a new stencil state with a given function.","Create a new blend state with a given equation.","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Return the aggregated stage usage for the set.","","","","","","Get buffer info","Is this buffer mapped ?","Return the total number of bits for this format.","Return the number of bits allocated for alpha and stencil.","Create a new swizzle where each channel is unmapped.","Convert a 2-element slice.","Convert a 3-element slice.","Convert a 4-element slice.","Convert a generic slice by transmutation.","Convert a 2-element slice.","Convert a 3-element slice.","Convert a 4-element slice.","Convert a generic slice by transmutation.","Convert a 2-element slice.","Convert a 3-element slice.","Convert a 4-element slice.","Convert a generic slice by transmutation.","Convert a 2-element slice.","Convert a 3-element slice.","Convert a 4-element slice.","Convert a generic slice by transmutation.","Convert a 2-element slice.","Convert a 3-element slice.","Convert a 4-element slice.","Convert a generic slice by transmutation.","Get the associated information about the buffer","Get the number of elements in the buffer.","Get texture descriptor","Gets the raw view","Get target dimensions","Get the associated texture","Get target dimensions","Get the associated texture","Get target dimensions","Get target dimensions","Get sampler info","Create a new handle manager","Clear all references","Extend with all references of another handle manager","Count the total number of referenced resources","Reference a buffer","Reference a shader","Reference a program","Reference a pipeline state object","Reference a texture","Reference a shader resource view","Reference an unordered access view","Reference an RTV","Reference a DSV","Reference a sampler","Reference a fence","Read access","Write access","Full access","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Is this memory bound to be mutated ?","Can be rendered into.","Can serve as a depth/stencil target.","Can be bound to the shader for reading.","Can be bound to the shader for writing.","Can be transfered from.","Can be transfered into.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Get texture descriptor","Return the number of actual data fragments stored per …","Return true if the surface has to be resolved before …","Get texture dimensions, with 0 values where not …","Get the dimensionality of a particular mipmap level.","Count the number of mipmap levels.","Return the number of slices for an array, or None for …","Check if it’s one of the cube kinds.","Get the total number of texels.","Convert into a differently typed format.","Check if it fits inside given dimensions.","Get the total number of bytes.","Change the texture","Create a new sampler description with a given filter …","Get image info for a given mip.","Get the raw image info for a given mip and a channel type.","Depth is read-only in the view.","Stencil is read-only in the view.","Both depth and stencil are read-only.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …"],"i":[0,0,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,4,4,0,0,0,0,5,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,0,0,9,9,9,9,9,9,9,9,9,9,9,0,10,10,11,11,11,10,12,12,12,0,13,13,13,13,13,13,13,0,14,14,0,15,15,0,16,16,16,0,17,17,17,17,17,17,17,17,17,17,17,17,17,0,18,18,0,0,0,0,19,19,0,20,20,0,21,21,0,22,22,0,23,23,0,24,24,24,24,24,0,25,25,0,26,26,26,26,26,0,27,27,27,0,28,28,28,28,28,0,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,30,0,31,0,0,32,32,32,32,0,33,33,33,33,33,0,34,34,34,34,34,0,35,35,35,35,35,0,36,36,36,0,37,37,37,37,0,38,38,38,38,0,39,39,39,39,39,39,39,39,39,0,0,40,40,40,0,41,41,41,0,0,0,31,0,0,42,0,43,43,43,43,43,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,45,45,0,46,46,46,0,47,47,47,0,0,48,48,48,48,48,0,49,49,49,49,49,49,49,49,0,50,50,50,50,50,50,50,50,0,51,51,51,51,51,51,0,52,52,0,53,53,0,54,54,54,54,54,0,55,55,55,55,55,55,0,56,56,56,56,56,0,57,57,57,0,58,58,0,0,59,59,0,60,60,0,0,0,0,0,61,61,61,61,0,0,0,1,1,1,1,1,1,1,1,0,62,62,62,62,62,62,62,62,62,62,0,63,63,63,63,63,63,63,63,63,63,63,63,0,64,0,0,0,0,65,65,65,65,0,0,0,0,0,0,0,0,66,66,66,66,0,67,67,67,67,67,0,68,68,68,0,0,69,69,69,69,69,69,0,0,0,0,0,0,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,71,71,71,71,71,0,72,72,72,72,0,73,73,0,74,74,0,0,0,0,0,0,75,75,0,0,0,0,76,76,76,76,0,0,0,0,0,0,0,0,77,0,78,0,79,0,80,0,81,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,82,0,0,0,0,83,83,83,83,0,0,0,0,0,0,0,0,84,84,84,84,84,84,84,84,0,85,85,0,0,0,0,0,0,86,86,86,0,87,87,87,87,87,0,88,88,88,88,88,88,0,0,89,89,89,89,89,89,89,0,90,90,0,91,91,91,91,91,91,91,91,0,0,0,92,92,92,92,0,93,93,93,93,0,0,94,0,95,95,95,95,95,95,0,96,96,96,96,96,0,97,97,97,97,97,0,98,98,98,0,0,99,99,99,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,100,100,100,100,0,101,101,101,101,101,101,0,102,102,102,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,0,39,39,39,39,39,39,39,39,39,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,104,105,105,104,106,106,104,107,107,107,104,104,0,0,0,108,109,109,108,110,110,108,0,111,111,111,0,112,112,112,112,112,0,113,0,114,114,114,0,0,0,0,0,0,104,104,104,104,104,104,104,104,104,104,108,108,108,108,108,108,108,108,108,108,115,115,115,115,115,115,115,115,111,111,111,111,111,111,111,111,111,111,112,112,112,112,112,112,112,112,112,114,114,114,114,114,114,114,114,114,4,4,4,4,4,4,4,4,4,116,116,116,116,116,116,116,116,116,117,117,117,117,117,117,117,118,118,118,118,118,118,118,119,119,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,123,123,124,124,124,124,124,124,124,124,124,125,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,126,126,127,127,127,127,127,127,127,127,127,128,128,128,128,128,128,128,128,128,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,130,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,133,134,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,135,135,136,136,136,136,136,136,136,136,136,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,137,137,137,137,137,137,137,137,137,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,13,13,13,13,13,13,13,13,13,13,16,16,16,16,16,16,16,16,16,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,138,138,138,138,138,138,138,138,138,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,139,139,139,139,139,139,139,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,140,140,140,140,140,140,140,140,140,140,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,141,141,141,141,141,141,141,141,141,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,142,142,142,142,142,142,142,142,142,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,143,143,143,143,143,143,143,143,143,62,62,62,62,62,62,62,62,62,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,144,144,144,144,144,144,144,144,144,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,147,147,148,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,150,150,150,150,150,150,150,150,150,151,151,151,151,151,151,151,151,151,152,152,152,152,152,152,152,152,152,153,153,153,153,153,153,153,153,153,154,154,154,154,154,154,154,154,154,155,155,155,155,155,155,155,155,155,70,70,70,70,70,70,70,70,70,156,156,156,156,156,156,156,156,156,157,157,157,157,157,157,157,157,157,158,158,158,158,158,158,158,158,158,159,159,159,159,159,159,159,159,159,160,160,160,160,160,160,160,160,160,161,161,161,161,161,161,161,161,161,162,162,162,162,162,162,162,162,162,163,163,163,163,163,163,163,163,163,164,164,164,164,164,164,164,164,164,165,165,165,165,165,165,165,165,165,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,168,168,168,169,169,169,169,169,169,169,169,169,170,170,170,170,170,170,170,170,170,171,171,171,171,171,171,171,171,171,172,172,172,172,172,172,172,172,172,173,173,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,174,175,175,175,175,175,175,175,175,175,176,176,176,176,176,176,176,176,176,177,177,177,177,177,177,177,177,177,178,178,178,178,178,178,178,178,178,179,179,179,179,179,179,179,179,179,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,180,180,180,180,180,180,180,180,180,181,181,181,181,181,181,181,181,181,182,182,182,182,182,182,182,182,182,183,183,183,183,183,183,183,183,183,184,184,184,184,184,184,184,184,184,185,185,185,185,185,185,185,185,185,186,186,186,186,186,186,186,186,186,187,187,187,187,187,187,187,187,187,188,188,188,188,188,188,188,188,188,189,189,189,189,189,189,189,189,189,190,190,190,190,190,190,190,190,190,191,191,191,191,191,191,191,191,191,192,192,192,192,192,192,192,192,192,193,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,194,194,195,195,195,195,195,195,195,195,195,196,196,196,196,196,196,196,196,196,197,197,197,197,197,197,197,82,82,82,82,82,82,82,82,82,82,198,198,198,198,198,198,198,199,199,199,199,199,199,199,83,83,83,83,83,83,83,83,83,200,200,200,200,200,200,200,200,200,201,201,201,201,201,201,201,201,201,202,202,202,202,202,202,202,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,203,203,203,203,203,203,203,203,203,94,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,204,204,204,204,204,204,204,204,204,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,102,58,55,44,50,60,48,143,61,59,52,142,49,54,47,56,57,53,51,45,46,141,142,143,142,143,143,142,142,143,142,52,49,60,51,48,141,61,56,46,59,55,44,53,45,54,143,57,47,50,58,143,142,142,143,59,58,57,53,52,60,51,60,60,46,143,143,54,47,47,141,59,59,142,142,50,51,51,53,53,49,52,52,55,44,48,48,58,58,61,61,56,56,57,57,45,45,47,49,51,56,141,61,60,45,55,143,48,52,142,50,44,46,59,58,53,54,57,142,143,143,142,143,142,142,143,142,143,142,143,142,143,142,46,50,54,52,143,44,141,53,55,57,49,56,51,143,142,143,142,61,56,58,59,54,49,47,45,44,50,57,48,53,142,51,141,46,55,143,52,154,150,151,152,153,155,204,201,200,138,33,145,68,148,197,188,175,166,139,84,28,195,150,157,102,92,85,152,179,174,25,187,69,180,95,183,182,87,173,77,24,154,201,36,170,97,185,190,41,67,193,146,203,29,100,19,161,37,202,162,163,168,35,101,192,8,80,165,4,71,98,149,72,184,20,164,200,153,39,191,176,160,151,159,198,26,78,96,27,144,62,90,91,21,64,23,81,38,138,186,22,65,66,86,34,147,32,83,88,70,204,194,82,140,169,181,172,79,158,189,171,178,156,93,199,137,167,177,73,99,89,40,94,155,196,41,64,140,102,102,40,68,85,100,100,84,101,101,82,138,201,200,204,200,201,138,204,200,201,204,138,138,201,200,204,94,203,204,200,201,138,150,177,163,99,161,93,70,156,90,77,160,169,178,203,171,98,97,95,153,179,167,86,29,200,204,201,73,162,96,87,79,175,154,168,71,69,92,170,165,72,94,152,91,80,157,88,172,174,83,176,81,78,164,89,173,155,159,138,151,166,158,204,138,201,200,201,204,138,200,102,140,40,82,100,101,68,41,85,84,64,204,200,201,138,199,204,138,201,200,204,138,200,201,66,177,96,96,201,201,144,144,95,95,166,20,137,137,29,29,4,4,27,27,139,21,168,164,186,169,35,35,80,80,71,174,171,22,184,184,183,183,68,68,187,187,192,192,78,78,170,25,25,86,86,98,98,26,190,147,147,175,41,41,65,65,158,150,72,72,102,102,83,173,73,73,140,140,149,38,38,194,87,87,40,32,32,99,99,185,185,77,77,82,82,24,24,195,195,84,84,92,92,165,81,81,152,181,148,148,160,70,33,33,159,28,151,153,91,91,162,157,85,85,64,19,204,204,156,178,196,196,37,37,179,34,34,93,138,138,79,79,202,101,101,88,163,62,62,180,180,203,203,39,39,172,67,67,36,36,200,200,23,161,94,94,145,145,155,188,69,191,191,8,8,176,182,182,97,97,100,100,90,146,146,189,189,154,89,89,193,167,171,175,162,168,177,170,165,159,156,160,166,174,157,173,163,161,169,176,172,158,179,178,164,167,179,89,155,189,186,80,4,66,69,101,164,29,91,81,193,156,96,35,102,204,22,137,33,168,177,28,147,201,87,194,78,191,68,34,20,67,148,98,90,185,8,154,70,161,77,100,24,72,99,175,37,166,182,62,169,180,95,25,86,173,187,92,190,82,41,144,84,181,196,27,83,39,171,88,65,36,26,97,159,183,195,152,85,79,145,140,146,153,150,160,176,203,192,158,71,21,165,32,23,178,167,188,138,151,40,170,163,38,172,184,174,93,94,73,19,200,64,157,162,204,200,138,201,183,180,199,198,185,201,204,138,200,99,140,102,78,81,80,94,79,203,138,86,102,77,102,99,153,91,155,70,138,152,204,89,151,88,176,83,200,150,72,159,157,179,77,173,164,170,73,69,175,154,166,79,97,165,178,86,92,80,96,169,160,71,156,171,174,81,162,93,90,167,201,158,87,161,172,177,78,98,168,163,204,201,200,138,204,201,138,200,4,71,65,176,80,82,98,25,174,66,152,72,37,22,93,186,68,38,32,195,183,194,202,172,154,185,168,62,33,148,165,177,150,28,96,182,99,20,156,81,86,24,180,201,70,34,161,69,92,193,160,181,97,39,139,145,8,19,83,189,67,164,162,184,94,173,157,26,149,169,170,175,192,158,27,73,187,171,138,191,203,95,153,188,167,88,163,146,87,178,36,23,90,78,147,35,166,155,89,151,196,91,179,77,159,79,200,204,85,144,21,190,114,181,181,205,118,117,116,116,116,116,119,119,119,119,120,120,120,121,121,121,122,122,122,123,123,123,124,124,124,125,125,125,126,126,126,127,127,127,128,128,128,128,129,129,129,130,130,130,131,131,131,132,132,132,133,133,133,134,134,134,135,135,135,136,136,116,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,115,111,111,111,111,10,13,104,108,111,112,114,116,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,9,10,13,16,43,114,104,104,108,108,111,111,112,112,114,114,116,119,119,120,121,121,122,123,123,124,125,125,126,127,127,128,129,130,131,131,132,133,134,135,135,136,9,9,10,10,13,13,16,16,43,43,104,108,115,111,112,114,116,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,9,10,13,16,43,104,108,111,10,13,43,112,114,116,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,16,104,108,111,111,10,13,13,43,43,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,112,112,112,112,8,137,137,137,137,137,137,137,137,137,24,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,33,139,48,48,48,52,58,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,65,144,145,146,147,148,149,149,70,70,72,77,77,77,77,78,78,78,78,79,79,79,79,80,80,80,80,81,81,81,81,181,181,186,188,191,191,192,192,193,194,195,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,202,86,86,89,89,89,89,89,91,91,91,91,92,95,96,96,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204],"f":[null,null,null,null,[[],["capabilities",3]],[[["manager",3]]],[[["accessinfo",3]],[["result",4],["submissionerror",4]]],[[["fence",3],["accessinfo",3],["option",4]],[["result",4],["fence",3],["submissionerror",4]]],[[["fence",3]]],[[]],null,[[],["capabilities",3]],[[["info",3]],[["rawbuffer",3],["result",4],["creationerror",4]]],[[["usize",15],["role",4],["bind",3]],[["rawbuffer",3],["result",4],["creationerror",4]]],[[["role",4],["bind",3]],[["result",4],["buffer",3],["creationerror",4]]],[[["usize",15],["role",4],["bind",3],["usage",4]],[["result",4],["buffer",3],["creationerror",4]]],[[["descriptor",3],["program",3]],[["result",4],["rawpipelinestate",3],["creationerror",3]]],[[["shaderset",4]],[["result",4],["program",3],["createprogramerror",3]]],[[["stage",4]],[["createshadererror",4],["shader",3],["result",4]]],[[],[["vertexshader",3],["result",4],["createshadererror",4]]],[[],[["hullshader",3],["createshadererror",4],["result",4]]],[[],[["result",4],["domainshader",3],["createshadererror",4]]],[[],[["result",4],["createshadererror",4],["geometryshader",3]]],[[],[["createshadererror",4],["result",4],["pixelshader",3]]],[[["samplerinfo",3]],["sampler",3]],[[["buffer",3]],[["reader",3],["error",4],["result",4]]],[[["buffer",3]],[["result",4],["error",4],["writer",3]]],[[["option",4],["info",3],["option",4],["channeltype",4]],[["creationerror",4],["rawtexture",3],["result",4]]],[[["format",3],["rawbuffer",3]],[["rawshaderresourceview",3],["result",4],["resourceviewerror",4]]],[[["rawbuffer",3]],[["resourceviewerror",4],["result",4],["rawunorderedaccessview",3]]],[[["resourcedesc",3],["rawtexture",3]],[["rawshaderresourceview",3],["result",4],["resourceviewerror",4]]],[[["rawtexture",3]],[["resourceviewerror",4],["result",4],["rawunorderedaccessview",3]]],[[["rawtexture",3],["renderdesc",3]],[["result",4],["rawrendertargetview",3],["targetviewerror",4]]],[[["depthstencildesc",3],["rawtexture",3]],[["result",4],["targetviewerror",4],["rawdepthstencilview",3]]],[[["kind",4],["option",4],["bind",3],["u8",15],["channeltype",4],["usage",4]],[["result",4],["texture",3],["creationerror",4]]],[[["buffer",3]],[["resourceviewerror",4],["result",4],["shaderresourceview",3]]],[[["buffer",3]],[["unorderedaccessview",3],["result",4],["resourceviewerror",4]]],[[["swizzle",3],["texture",3]],[["result",4],["resourceviewerror",4],["shaderresourceview",3]]],[[["texture",3]],[["resourceviewerror",4],["result",4],["unorderedaccessview",3]]],[[["option",4],["texture",3],["u8",15],["u16",15]],[["result",4],["rendertargetview",3],["targetviewerror",4]]],[[["option",4],["texture",3],["u8",15],["u16",15],["depthstencilflags",3]],[["targetviewerror",4],["result",4],["depthstencilview",3]]],[[["texture",3]],[["targetviewerror",4],["result",4],["depthstencilview",3]]],[[["mipmap",4],["kind",4]],[["result",4],["combinederror",4]]],[[["mipmap",4],["kind",4]],[["result",4],["combinederror",4]]],[[["u16",15]],[["result",4],["combinederror",4]]],[[["u16",15]],[["result",4],["combinederror",4]]],[[["u16",15]],[["combinederror",4],["result",4],["depthstencilview",3]]],null,null,[[],["buffer",3]],[[],["indexbuffer",4]],[[]],[[["usize",15]],["buffer",3]],[[["usize",15]],[["buffer",3],["creationerror",4],["result",4]]],[[["usize",15]],[["buffer",3],["creationerror",4],["result",4]]],[[],[["result",4],["programerror",4],["shaderset",4]]],[[],[["result",4],["programerror",4],["shaderset",4]]],[[],[["result",4],["programerror",4],["shaderset",4]]],[[],[["result",4],["programerror",4],["shaderset",4]]],[[],[["program",3],["programerror",4],["result",4]]],[[["pipelineinit",8],["rasterizer",3],["primitive",4],["shaderset",4]],[["pipelinestate",3],["pipelinestateerror",4],["result",4]]],[[["pipelineinit",8],["program",3],["rasterizer",3],["primitive",4]],[["pipelinestate",3],["pipelinestateerror",4],["result",4]]],[[["pipelineinit",8]],[["pipelinestate",3],["pipelinestateerror",4],["result",4]]],[[],["sampler",3]],[[],["buffer",3]],[[],["indexbuffer",4]],[[]],[[["usize",15]],["buffer",3]],[[["usize",15]],[["buffer",3],["creationerror",4],["result",4]]],[[["usize",15]],[["buffer",3],["creationerror",4],["result",4]]],[[],[["result",4],["programerror",4],["shaderset",4]]],[[],[["result",4],["programerror",4],["shaderset",4]]],[[],[["result",4],["programerror",4],["shaderset",4]]],[[],[["result",4],["programerror",4],["shaderset",4]]],[[],[["program",3],["programerror",4],["result",4]]],[[["pipelineinit",8],["rasterizer",3],["primitive",4],["shaderset",4]],[["pipelinestate",3],["pipelinestateerror",4],["result",4]]],[[["pipelineinit",8],["program",3],["rasterizer",3],["primitive",4]],[["pipelinestate",3],["pipelinestateerror",4],["result",4]]],[[["pipelineinit",8]],[["pipelinestate",3],["pipelinestateerror",4],["result",4]]],[[],["sampler",3]],null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["option",4],["element",3]]],null,null,null,[[],["instancerate",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["slice",3],["pipelinestate",3]]],[[["encoder",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["rawdataset",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["programinfo",3],["descriptor",3]],[["result",4],["initerror",4]]],null,null,[[["rawdataset",3],["accessinfo",3],["manager",3]]],null,[[["primitive",4],["rawpipelinestate",3]],["pipelinestate",3]],[[],["rawpipelinestate",3]],[[]],null,null,[[]],[[],["bool",15]],[[["bufferindex",6]],[["option",4],["vertexbufferdesc",3]]],[[["attributevar",3]],[["option",4],["result",4]]],[[["constantbuffervar",3]],[["option",4],["result",4]]],[[["constvar",3]],[["result",4],["option",4]]],[[["outputvar",3]],[["option",4],["result",4]]],[[],[["option",4],["depthstencildesc",6]]],[[["texturevar",3]],[["result",4],["option",4]]],[[["unorderedvar",3]],[["option",4],["result",4]]],[[["samplervar",3]],[["option",4],["samplerdesc",6]]],[[],["bool",15]],null,null,[[["rawdataset",3],["accessinfo",3],["manager",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["basetype",4]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,[[],["uniformvalue",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["capabilities",3]],[[["manager",3]]],[[["accessinfo",3]],[["result",4],["submissionerror",4]]],[[["fence",3],["accessinfo",3],["option",4]],[["result",4],["fence",3],["submissionerror",4]]],[[["fence",3]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["surfacetype",4]],null,null,null,null,null,null,null,[[],["channeltype",4]],null,null,null,null,null,null,null,[[],["format",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["capabilities",3]],[[["info",3]],[["rawbuffer",3],["result",4],["creationerror",4]]],[[["usize",15],["role",4],["bind",3]],[["rawbuffer",3],["result",4],["creationerror",4]]],[[["role",4],["bind",3]],[["result",4],["buffer",3],["creationerror",4]]],[[["usize",15],["role",4],["bind",3],["usage",4]],[["result",4],["buffer",3],["creationerror",4]]],[[["descriptor",3],["program",3]],[["result",4],["rawpipelinestate",3],["creationerror",3]]],[[["shaderset",4]],[["result",4],["program",3],["createprogramerror",3]]],[[["stage",4]],[["createshadererror",4],["shader",3],["result",4]]],[[],[["vertexshader",3],["result",4],["createshadererror",4]]],[[],[["hullshader",3],["createshadererror",4],["result",4]]],[[],[["result",4],["domainshader",3],["createshadererror",4]]],[[],[["result",4],["createshadererror",4],["geometryshader",3]]],[[],[["createshadererror",4],["result",4],["pixelshader",3]]],[[["samplerinfo",3]],["sampler",3]],[[["buffer",3]],[["reader",3],["error",4],["result",4]]],[[["buffer",3]],[["result",4],["error",4],["writer",3]]],[[["option",4],["info",3],["option",4],["channeltype",4]],[["creationerror",4],["rawtexture",3],["result",4]]],[[["format",3],["rawbuffer",3]],[["rawshaderresourceview",3],["result",4],["resourceviewerror",4]]],[[["rawbuffer",3]],[["resourceviewerror",4],["result",4],["rawunorderedaccessview",3]]],[[["resourcedesc",3],["rawtexture",3]],[["rawshaderresourceview",3],["result",4],["resourceviewerror",4]]],[[["rawtexture",3]],[["resourceviewerror",4],["result",4],["rawunorderedaccessview",3]]],[[["rawtexture",3],["renderdesc",3]],[["result",4],["rawrendertargetview",3],["targetviewerror",4]]],[[["depthstencildesc",3],["rawtexture",3]],[["result",4],["targetviewerror",4],["rawdepthstencilview",3]]],[[["kind",4],["option",4],["bind",3],["u8",15],["channeltype",4],["usage",4]],[["result",4],["texture",3],["creationerror",4]]],[[["buffer",3]],[["resourceviewerror",4],["result",4],["shaderresourceview",3]]],[[["buffer",3]],[["unorderedaccessview",3],["result",4],["resourceviewerror",4]]],[[["swizzle",3],["texture",3]],[["result",4],["resourceviewerror",4],["shaderresourceview",3]]],[[["texture",3]],[["resourceviewerror",4],["result",4],["unorderedaccessview",3]]],[[["option",4],["texture",3],["u8",15],["u16",15]],[["result",4],["rendertargetview",3],["targetviewerror",4]]],[[["option",4],["texture",3],["u8",15],["u16",15],["depthstencilflags",3]],[["targetviewerror",4],["result",4],["depthstencilview",3]]],[[["texture",3]],[["targetviewerror",4],["result",4],["depthstencilview",3]]],[[["mipmap",4],["kind",4]],[["result",4],["combinederror",4]]],[[["mipmap",4],["kind",4]],[["result",4],["combinederror",4]]],[[["u16",15]],[["result",4],["combinederror",4]]],[[["u16",15]],[["result",4],["combinederror",4]]],[[["u16",15]],[["combinederror",4],["result",4],["depthstencilview",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["vertexbufferset",3]]],[[]],[[["usize",15],["uniformvalue",4]]],[[]],[[]],[[]],[[["pixeltargetset",3]]],[[["indextype",4]]],[[["rect",3]]],[[["refvalues",3]]],[[["usize",15]]],[[["usize",15],["texturecopyregion",3]]],[[["usize",15],["texturecopyregion",3]]],[[["texturecopyregion",3]]],[[["usize",15]]],[[["texturecopyregion",3]]],[[]],[[["clearcolor",4]]],[[["option",4],["f32",15],["u8",15],["option",4]]],[[["u32",15],["option",4]]],[[["u32",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["indexbuffer",4]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["blend",3]],[["ordering",4],["option",4]]],[[["blendvalue",4]],[["ordering",4],["option",4]]],[[["frontface",4]],[["ordering",4],["option",4]]],[[["stencilop",4]],[["ordering",4],["option",4]]],[[["refvalues",3]],[["ordering",4],["option",4]]],[[["rasterizer",3]],[["ordering",4],["option",4]]],[[["mirror",3]],[["ordering",4],["option",4]]],[[["rect",3]],[["ordering",4],["option",4]]],[[["color",3]],[["ordering",4],["option",4]]],[[["stencil",3]],[["ordering",4],["option",4]]],[[["colormask",3]],[["ordering",4],["option",4]]],[[["comparison",4]],[["ordering",4],["option",4]]],[[["equation",4]],[["ordering",4],["option",4]]],[[["rastermethod",4]],[["ordering",4],["option",4]]],[[["factor",4]],[["ordering",4],["option",4]]],[[["blendchannel",3]],[["ordering",4],["option",4]]],[[["depth",3]],[["ordering",4],["option",4]]],[[["stencilside",3]],[["ordering",4],["option",4]]],[[["offset",3]],[["ordering",4],["option",4]]],[[["cullface",4]],[["ordering",4],["option",4]]],[[["multisample",3]],[["ordering",4],["option",4]]],[[["colormask",3]]],[[["mirror",3]]],[[],["colormask",3]],[[],["mirror",3]],[[["mirror",3]],["mirror",3]],[[["colormask",3]],["colormask",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["color",3]],[[],["blend",3]],[[],["blendchannel",3]],[[],["depth",3]],[[],["stencil",3]],[[],["refvalues",3]],[[],["stencilside",3]],[[["refvalues",3]],["bool",15]],[[["refvalues",3]],["bool",15]],[[["cullface",4]],["bool",15]],[[["mirror",3]],["bool",15]],[[["mirror",3]],["bool",15]],[[["equation",4]],["bool",15]],[[["rastermethod",4]],["bool",15]],[[["rastermethod",4]],["bool",15]],[[["multisample",3]],["bool",15]],[[["color",3]],["bool",15]],[[["color",3]],["bool",15]],[[["colormask",3]],["bool",15]],[[["colormask",3]],["bool",15]],[[["stencilop",4]],["bool",15]],[[["stencilside",3]],["bool",15]],[[["stencilside",3]],["bool",15]],[[["depth",3]],["bool",15]],[[["depth",3]],["bool",15]],[[["comparison",4]],["bool",15]],[[["stencil",3]],["bool",15]],[[["stencil",3]],["bool",15]],[[["blendvalue",4]],["bool",15]],[[["frontface",4]],["bool",15]],[[["rasterizer",3]],["bool",15]],[[["rasterizer",3]],["bool",15]],[[["blend",3]],["bool",15]],[[["blend",3]],["bool",15]],[[["rect",3]],["bool",15]],[[["rect",3]],["bool",15]],[[["factor",4]],["bool",15]],[[["factor",4]],["bool",15]],[[["blendchannel",3]],["bool",15]],[[["blendchannel",3]],["bool",15]],[[["offset",3]],["bool",15]],[[["offset",3]],["bool",15]],[[],["rastermethod",4]],[[],["comparison",4]],[[],["stencilside",3]],[[],["factor",4]],[[],["multisample",3]],[[],["rect",3]],[[],["refvalues",3]],[[],["offset",3]],[[],["blendvalue",4]],[[],["mirror",3]],[[],["rasterizer",3]],[[],["stencil",3]],[[],["colormask",3]],[[],["stencilop",4]],[[],["frontface",4]],[[],["cullface",4]],[[],["color",3]],[[],["blend",3]],[[],["depth",3]],[[],["equation",4]],[[],["blendchannel",3]],[[["colormask",3]],["colormask",3]],[[["mirror",3]],["mirror",3]],[[["mirror",3]],["mirror",3]],[[["colormask",3]],["colormask",3]],[[["mirror",3]]],[[["colormask",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["colormask",3]],[[],["mirror",3]],[[["colormask",3]]],[[["mirror",3]]],[[["colormask",3]],["colormask",3]],[[["mirror",3]],["mirror",3]],[[["colormask",3]],["ordering",4]],[[["cullface",4]],["ordering",4]],[[["stencilop",4]],["ordering",4]],[[["equation",4]],["ordering",4]],[[["stencil",3]],["ordering",4]],[[["mirror",3]],["ordering",4]],[[["frontface",4]],["ordering",4]],[[["multisample",3]],["ordering",4]],[[["depth",3]],["ordering",4]],[[["blendvalue",4]],["ordering",4]],[[["blendchannel",3]],["ordering",4]],[[["comparison",4]],["ordering",4]],[[["factor",4]],["ordering",4]],[[["stencilside",3]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["mirror",3]]],[[["colormask",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[["depthstencilflags",3]],["depthstencilflags",3]],[[["bind",3]],["bind",3]],[[["access",3]],["access",3]],[[["usage",3]],["usage",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],[["error",8],["option",4]]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],[["error",8],["option",4]]],[[],["str",15]],[[],["str",15]],[[],[["error",8],["option",4]]],[[],["str",15]],[[["usage",3]],["usage",3]],[[["bind",3]],["bind",3]],[[["access",3]],["access",3]],[[["depthstencilflags",3]],["depthstencilflags",3]],[[["access",3]]],[[["bind",3]]],[[["usage",3]]],[[["depthstencilflags",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["usage",3]]],[[["bind",3]]],[[["access",3]]],[[["depthstencilflags",3]]],[[]],[[],["f32",15]],[[["depthstencilflags",3]],["depthstencilflags",3]],[[["access",3]],["access",3]],[[["bind",3]],["bind",3]],[[["usage",3]],["usage",3]],[[["int",4]],[["ordering",4],["option",4]]],[[["d32",4]],[["ordering",4],["option",4]]],[[["r10_g10_b10_a2",4]],[["ordering",4],["option",4]]],[[["depthstencildesc",3]],[["ordering",4],["option",4]]],[[["r8_g8",4]],[["ordering",4],["option",4]]],[[["wrapmode",4]],[["ordering",4],["option",4]]],[[["surfacetype",4]],[["ordering",4],["option",4]]],[[["r4_g4",4]],[["ordering",4],["option",4]]],[[["mipmap",4]],[["ordering",4],["option",4]]],[[["u8norm",3]],[["ordering",4],["option",4]]],[[["r8",4]],[["ordering",4],["option",4]]],[[["r32",4]],[["ordering",4],["option",4]]],[[["bc1_r8_g8_b8",4]],[["ordering",4],["option",4]]],[[["lod",3]],[["ordering",4],["option",4]]],[[["r32_g32_b32",4]],[["ordering",4],["option",4]]],[[["renderdesc",3]],[["ordering",4],["option",4]]],[[["resourcedesc",3]],[["ordering",4],["option",4]]],[[["samplerinfo",3]],[["ordering",4],["option",4]]],[[["unorm",4]],[["ordering",4],["option",4]]],[[["bc3_r8_g8_b8_a8",4]],[["ordering",4],["option",4]]],[[["r16_g16_b16",4]],[["ordering",4],["option",4]]],[[["aamode",4]],[["ordering",4],["option",4]]],[[["uniformvalue",4]],[["ordering",4],["option",4]]],[[["access",3]],[["ordering",4],["option",4]]],[[["depthstencilflags",3]],[["ordering",4],["option",4]]],[[["bind",3]],[["ordering",4],["option",4]]],[[["format",3]],[["ordering",4],["option",4]]],[[["r8_g8_b8_a8",4]],[["ordering",4],["option",4]]],[[["info",3]],[["ordering",4],["option",4]]],[[["filtermethod",4]],[["ordering",4],["option",4]]],[[["u16norm",3]],[["ordering",4],["option",4]]],[[["d24",4]],[["ordering",4],["option",4]]],[[["float",4]],[["ordering",4],["option",4]]],[[["r16_g16_b16_a16",4]],[["ordering",4],["option",4]]],[[["channelsource",4]],[["ordering",4],["option",4]]],[[["channeltype",4]],[["ordering",4],["option",4]]],[[["texturecopyregion",3]],[["ordering",4],["option",4]]],[[["r32_g32",4]],[["ordering",4],["option",4]]],[[["r16",4]],[["ordering",4],["option",4]]],[[["swizzle",3]],[["ordering",4],["option",4]]],[[["packedcolor",3]],[["ordering",4],["option",4]]],[[["inorm",4]],[["ordering",4],["option",4]]],[[["imageinfocommon",3]],[["ordering",4],["option",4]]],[[["i16norm",3]],[["ordering",4],["option",4]]],[[["r4_g4_b4_a4",4]],[["ordering",4],["option",4]]],[[["cubeface",4]],[["ordering",4],["option",4]]],[[["r32_g32_b32_a32",4]],[["ordering",4],["option",4]]],[[["d16",4]],[["ordering",4],["option",4]]],[[["usage",4]],[["ordering",4],["option",4]]],[[["d24_s8",4]],[["ordering",4],["option",4]]],[[["f16",3]],[["ordering",4],["option",4]]],[[["i8norm",3]],[["ordering",4],["option",4]]],[[["r11_g11_b10",4]],[["ordering",4],["option",4]]],[[["kind",4]],[["ordering",4],["option",4]]],[[["b8_g8_r8_a8",4]],[["ordering",4],["option",4]]],[[["srgb",4]],[["ordering",4],["option",4]]],[[["r5_g6_b5",4]],[["ordering",4],["option",4]]],[[["usage",3]],[["ordering",4],["option",4]]],[[["uint",4]],[["ordering",4],["option",4]]],[[["r16_g16",4]],[["ordering",4],["option",4]]],[[["r5_g5_b5_a1",4]],[["ordering",4],["option",4]]],[[["depthstencilflags",3]]],[[["usage",3]]],[[["bind",3]]],[[["access",3]]],[[],["bind",3]],[[],["depthstencilflags",3]],[[],["usage",3]],[[],["access",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[]],[[]],[[["role",4]],["bool",15]],[[["d32",4]],["bool",15]],[[["info",3]],["bool",15]],[[["info",3]],["bool",15]],[[["bind",3]],["bool",15]],[[["bind",3]],["bool",15]],[[["vertexshader",3]],["bool",15]],[[["vertexshader",3]],["bool",15]],[[["samplerinfo",3]],["bool",15]],[[["samplerinfo",3]],["bool",15]],[[["r16_g16",4]],["bool",15]],[[["iscomparison",4]],["bool",15]],[[["accessinfo",3]],["bool",15]],[[["accessinfo",3]],["bool",15]],[[["uniformvalue",4]],["bool",15]],[[["uniformvalue",4]],["bool",15]],[[["element",3]],["bool",15]],[[["element",3]],["bool",15]],[[["containertype",4]],["bool",15]],[[["containertype",4]],["bool",15]],[[["program",3]],["bool",15]],[[["ismultisample",4]],["bool",15]],[[["r16_g16_b16_a16",4]],["bool",15]],[[["r11_g11_b10",4]],["bool",15]],[[["texture",3]],["bool",15]],[[["r32",4]],["bool",15]],[[["texturevar",3]],["bool",15]],[[["texturevar",3]],["bool",15]],[[["i16norm",3]],["bool",15]],[[["i16norm",3]],["bool",15]],[[["channelsource",4]],["bool",15]],[[["d16",4]],["bool",15]],[[["r32_g32_b32",4]],["bool",15]],[[["isrect",4]],["bool",15]],[[["rawpipelinestate",3]],["bool",15]],[[["rawpipelinestate",3]],["bool",15]],[[["program",3]],["bool",15]],[[["program",3]],["bool",15]],[[["creationerror",4]],["bool",15]],[[["creationerror",4]],["bool",15]],[[["rawshaderresourceview",3]],["bool",15]],[[["rawshaderresourceview",3]],["bool",15]],[[["rawdepthstencilview",3]],["bool",15]],[[["rawdepthstencilview",3]],["bool",15]],[[["i8norm",3]],["bool",15]],[[["i8norm",3]],["bool",15]],[[["r32_g32",4]],["bool",15]],[[["samplertype",3]],["bool",15]],[[["samplertype",3]],["bool",15]],[[["aamode",4]],["bool",15]],[[["aamode",4]],["bool",15]],[[["renderdesc",3]],["bool",15]],[[["renderdesc",3]],["bool",15]],[[["basetype",4]],["bool",15]],[[["unorderedaccessview",3]],["bool",15]],[[["geometryshader",3]],["bool",15]],[[["geometryshader",3]],["bool",15]],[[["d24",4]],["bool",15]],[[["createshadererror",4]],["bool",15]],[[["createshadererror",4]],["bool",15]],[[["shaderset",4]],["bool",15]],[[["shaderset",4]],["bool",15]],[[["r5_g5_b5_a1",4]],["bool",15]],[[["int",4]],["bool",15]],[[["swizzle",3]],["bool",15]],[[["swizzle",3]],["bool",15]],[[["combinederror",4]],["bool",15]],[[["combinederror",4]],["bool",15]],[[["usage",4]],["bool",15]],[[["b8_g8_r8_a8",4]],["bool",15]],[[["format",3]],["bool",15]],[[["format",3]],["bool",15]],[[["createprogramerror",3]],["bool",15]],[[["createprogramerror",3]],["bool",15]],[[["raw",3]],["bool",15]],[[["outputvar",3]],["bool",15]],[[["outputvar",3]],["bool",15]],[[["depthstencilview",3]],["bool",15]],[[["filtermethod",4]],["bool",15]],[[["filtermethod",4]],["bool",15]],[[["compatibilityerror",4]],["bool",15]],[[["attributevar",3]],["bool",15]],[[["attributevar",3]],["bool",15]],[[["depthstencildesc",3]],["bool",15]],[[["depthstencildesc",3]],["bool",15]],[[["rawtexture",3]],["bool",15]],[[["rawtexture",3]],["bool",15]],[[["u8norm",3]],["bool",15]],[[["u8norm",3]],["bool",15]],[[["error",4]],["bool",15]],[[["error",4]],["bool",15]],[[["texturetype",4]],["bool",15]],[[["texturetype",4]],["bool",15]],[[["sampler",3]],["bool",15]],[[["sampler",3]],["bool",15]],[[["creationerror",4]],["bool",15]],[[["creationerror",4]],["bool",15]],[[["texturecopyregion",3]],["bool",15]],[[["texturecopyregion",3]],["bool",15]],[[["r16",4]],["bool",15]],[[["f16",3]],["bool",15]],[[["f16",3]],["bool",15]],[[["inorm",4]],["bool",15]],[[["buffer",3]],["bool",15]],[[["pixelshader",3]],["bool",15]],[[["pixelshader",3]],["bool",15]],[[["r8",4]],["bool",15]],[[["surfacetype",4]],["bool",15]],[[["constvar",3]],["bool",15]],[[["constvar",3]],["bool",15]],[[["r5_g6_b5",4]],["bool",15]],[[["stage",4]],["bool",15]],[[["uint",4]],["bool",15]],[[["unorm",4]],["bool",15]],[[["imageinfocommon",3]],["bool",15]],[[["imageinfocommon",3]],["bool",15]],[[["r8_g8_b8_a8",4]],["bool",15]],[[["r4_g4_b4_a4",4]],["bool",15]],[[["layererror",4]],["bool",15]],[[["layererror",4]],["bool",15]],[[["submissionerror",4]],["bool",15]],[[["isarray",4]],["bool",15]],[[["depthstencilflags",3]],["bool",15]],[[["depthstencilflags",3]],["bool",15]],[[["r4_g4",4]],["bool",15]],[[["bc1_r8_g8_b8",4]],["bool",15]],[[["fence",3]],["bool",15]],[[["fence",3]],["bool",15]],[[["samplervar",3]],["bool",15]],[[["samplervar",3]],["bool",15]],[[["bc3_r8_g8_b8_a8",4]],["bool",15]],[[["constantbuffervar",3]],["bool",15]],[[["constantbuffervar",3]],["bool",15]],[[["wrapmode",4]],["bool",15]],[[["usage",3]],["bool",15]],[[["usage",3]],["bool",15]],[[["u16norm",3]],["bool",15]],[[["u16norm",3]],["bool",15]],[[["raw",3]],["bool",15]],[[["targetviewerror",4]],["bool",15]],[[["targetviewerror",4]],["bool",15]],[[["cubeface",4]],["bool",15]],[[["r10_g10_b10_a2",4]],["bool",15]],[[["primitive",4]],["bool",15]],[[["primitive",4]],["bool",15]],[[["rawbuffer",3]],["bool",15]],[[["rawbuffer",3]],["bool",15]],[[["lod",3]],["bool",15]],[[["lod",3]],["bool",15]],[[["programinfo",3]],["bool",15]],[[["programinfo",3]],["bool",15]],[[["r32_g32_b32_a32",4]],["bool",15]],[[["info",3]],["bool",15]],[[["info",3]],["bool",15]],[[["unorderedvar",3]],["bool",15]],[[["unorderedvar",3]],["bool",15]],[[["access",3]],["bool",15]],[[["access",3]],["bool",15]],[[["matrixformat",4]],["bool",15]],[[["r8_g8",4]],["bool",15]],[[["packedcolor",3]],["bool",15]],[[["packedcolor",3]],["bool",15]],[[["hullshader",3]],["bool",15]],[[["hullshader",3]],["bool",15]],[[["srgb",4]],["bool",15]],[[["shaderresourceview",3]],["bool",15]],[[["channeltype",4]],["bool",15]],[[["rawrendertargetview",3]],["bool",15]],[[["rawrendertargetview",3]],["bool",15]],[[["descriptor",3]],["bool",15]],[[["descriptor",3]],["bool",15]],[[["d24_s8",4]],["bool",15]],[[["shader",3]],["bool",15]],[[["shader",3]],["bool",15]],[[["resourcedesc",3]],["bool",15]],[[["resourcedesc",3]],["bool",15]],[[["resourceviewerror",4]],["bool",15]],[[["resourceviewerror",4]],["bool",15]],[[["mipmap",4]],["bool",15]],[[["domainshader",3]],["bool",15]],[[["domainshader",3]],["bool",15]],[[["rawunorderedaccessview",3]],["bool",15]],[[["rawunorderedaccessview",3]],["bool",15]],[[["float",4]],["bool",15]],[[["kind",4]],["bool",15]],[[["kind",4]],["bool",15]],[[["rendertargetview",3]],["bool",15]],[[["r16_g16_b16",4]],["bool",15]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["bc3_r8_g8_b8_a8",4]],[[],["kind",4]],[[],["srgb",4]],[[],["rawunorderedaccessview",3]],[[],["texture",3]],[[],["i16norm",3]],[[],["element",3]],[[],["role",4]],[[],["channeltype",4]],[[],["targetviewerror",4]],[[],["r11_g11_b10",4]],[[],["uniformvalue",4]],[[],["imageinfocommon",3]],[[],["f16",3]],[[],["rendertargetview",3]],[[],["r4_g4",4]],[[],["info",3]],[[],["texturevar",3]],[[],["combinederror",4]],[[],["depthstencilflags",3]],[[],["isrect",4]],[[],["accessinfo",3]],[[],["constvar",3]],[[],["r16_g16_b16_a16",4]],[[],["d32",4]],[[],["stage",4]],[[],["geometryshader",3]],[[],["bind",3]],[[],["filtermethod",4]],[[],["depthstencilview",3]],[[],["i8norm",3]],[[],["rawrendertargetview",3]],[[],["creationerror",4]],[[],["constantbuffervar",3]],[[],["iscomparison",4]],[[],["info",3]],[[],["pixelshader",3]],[[],["renderdesc",3]],[[],["mipmap",4]],[[],["rawtexture",3]],[[],["descriptor",3]],[[],["float",4]],[[],["surfacetype",4]],[[],["r8_g8",4]],[[],["u8norm",3]],[[],["resourceviewerror",4]],[[],["texturetype",4]],[[],["swizzle",3]],[[],["depthstencildesc",3]],[[],["d24",4]],[[],["samplervar",3]],[[],["r16_g16",4]],[[],["shader",3]],[[],["primitive",4]],[[],["r32",4]],[[],["rawbuffer",3]],[[],["samplerinfo",3]],[[],["samplertype",3]],[[],["aamode",4]],[[],["b8_g8_r8_a8",4]],[[],["rawshaderresourceview",3]],[[],["texturecopyregion",3]],[[],["unorderedaccessview",3]],[[],["error",4]],[[],["createshadererror",4]],[[],["vertexshader",3]],[[],["creationerror",4]],[[],["buffer",3]],[[],["fence",3]],[[],["containertype",4]],[[],["usage",4]],[[],["programinfo",3]],[[],["r32_g32_b32",4]],[[],["cubeface",4]],[[],["shaderset",4]],[[],["unorderedvar",3]],[[],["basetype",4]],[[],["resourcedesc",3]],[[],["r5_g6_b5",4]],[[],["program",3]],[[],["sampler",3]],[[],["inorm",4]],[[],["layererror",4]],[[],["u16norm",3]],[[],["hullshader",3]],[[],["createprogramerror",3]],[[],["domainshader",3]],[[],["unorm",4]],[[],["int",4]],[[],["r8",4]],[[],["d24_s8",4]],[[],["lod",3]],[[],["rawdepthstencilview",3]],[[],["r5_g5_b5_a1",4]],[[],["channelsource",4]],[[],["ismultisample",4]],[[],["r16",4]],[[],["attributevar",3]],[[],["matrixformat",4]],[[],["bc1_r8_g8_b8",4]],[[],["r16_g16_b16",4]],[[],["shaderresourceview",3]],[[],["usage",3]],[[],["uint",4]],[[],["compatibilityerror",4]],[[],["r32_g32",4]],[[],["r10_g10_b10_a2",4]],[[],["outputvar",3]],[[],["r32_g32_b32_a32",4]],[[],["rawpipelinestate",3]],[[],["d16",4]],[[],["wrapmode",4]],[[],["packedcolor",3]],[[],["format",3]],[[],["isarray",4]],[[],["access",3]],[[],["submissionerror",4]],[[],["r4_g4_b4_a4",4]],[[],["r8_g8_b8_a8",4]],[[["depthstencilflags",3]],["depthstencilflags",3]],[[["access",3]],["access",3]],[[["usage",3]],["usage",3]],[[["bind",3]],["bind",3]],[[]],[[]],[[]],[[]],[[]],[[],["bind",3]],[[],["depthstencilflags",3]],[[],["usage",3]],[[],["access",3]],[[["renderdesc",3]],["depthstencildesc",3]],[[],["createprogramerror",3]],[[["targetviewerror",4]],["combinederror",4]],[[["i8",15]],["i8norm",3]],[[["u16",15]],["f16",3]],[[["i16",15]],["i16norm",3]],[[],["packedcolor",3]],[[["u16",15]],["u16norm",3]],[[["f32",15]],["lod",3]],[[["stage",4]],["usage",3]],[[["u8",15]],["aamode",4]],[[["resourceviewerror",4]],["combinederror",4]],[[["u8",15]],["u8norm",3]],[[["creationerror",4]],["combinederror",4]],[[["depthstencildesc",3]],["ordering",4]],[[["unorm",4]],["ordering",4]],[[["imageinfocommon",3]],["ordering",4]],[[["srgb",4]],["ordering",4]],[[["surfacetype",4]],["ordering",4]],[[["usage",3]],["ordering",4]],[[["inorm",4]],["ordering",4]],[[["depthstencilflags",3]],["ordering",4]],[[["kind",4]],["ordering",4]],[[["uint",4]],["ordering",4]],[[["cubeface",4]],["ordering",4]],[[["d24_s8",4]],["ordering",4]],[[["usage",4]],["ordering",4]],[[["access",3]],["ordering",4]],[[["int",4]],["ordering",4]],[[["swizzle",3]],["ordering",4]],[[["r5_g6_b5",4]],["ordering",4]],[[["r4_g4_b4_a4",4]],["ordering",4]],[[["bc3_r8_g8_b8_a8",4]],["ordering",4]],[[["u8norm",3]],["ordering",4]],[[["b8_g8_r8_a8",4]],["ordering",4]],[[["r11_g11_b10",4]],["ordering",4]],[[["r32_g32",4]],["ordering",4]],[[["format",3]],["ordering",4]],[[["channeltype",4]],["ordering",4]],[[["d24",4]],["ordering",4]],[[["float",4]],["ordering",4]],[[["r16_g16",4]],["ordering",4]],[[["u16norm",3]],["ordering",4]],[[["resourcedesc",3]],["ordering",4]],[[["r16",4]],["ordering",4]],[[["bc1_r8_g8_b8",4]],["ordering",4]],[[["aamode",4]],["ordering",4]],[[["texturecopyregion",3]],["ordering",4]],[[["i16norm",3]],["ordering",4]],[[["info",3]],["ordering",4]],[[["r32",4]],["ordering",4]],[[["r8",4]],["ordering",4]],[[["channelsource",4]],["ordering",4]],[[["r4_g4",4]],["ordering",4]],[[["r32_g32_b32",4]],["ordering",4]],[[["d16",4]],["ordering",4]],[[["f16",3]],["ordering",4]],[[["r8_g8_b8_a8",4]],["ordering",4]],[[["wrapmode",4]],["ordering",4]],[[["mipmap",4]],["ordering",4]],[[["r16_g16_b16",4]],["ordering",4]],[[["bind",3]],["ordering",4]],[[["r5_g5_b5_a1",4]],["ordering",4]],[[["filtermethod",4]],["ordering",4]],[[["r8_g8",4]],["ordering",4]],[[["r32_g32_b32_a32",4]],["ordering",4]],[[["d32",4]],["ordering",4]],[[["i8norm",3]],["ordering",4]],[[["renderdesc",3]],["ordering",4]],[[["r16_g16_b16_a16",4]],["ordering",4]],[[["r10_g10_b10_a2",4]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["depthstencilflags",3]]],[[["bind",3]]],[[["usage",3]]],[[["accessindexbuffer",4]],[[],["indexbuffer",4]],[[],["indexbuffer",4]],[[],["instancerate",6]],[[],["instancerate",6]],[[],["instancerate",6]],[[]],[[],["bool",15]],[[["bufferindex",6]],[["vertexbufferdesc",3],["option",4]]],[[["attributevar",3]],[["option",4],["result",4]]],[[]],[[],["bool",15]],[[["bufferindex",6]],[["vertexbufferdesc",3],["option",4]]],[[["attributevar",3]],[["option",4],["result",4]]],[[]],[[],["bool",15]],[[["constantbuffervar",3]],[["option",4],["result",4]]],[[]],[[],["bool",15]],[[["constantbuffervar",3]],[["option",4],["result",4]]],[[]],[[],["bool",15]],[[["constvar",3]],[["option",4],["result",4]]],[[]],[[],["bool",15]],[[["constvar",3]],[["option",4],["result",4]]],[[]],[[],["bool",15]],[[["texturevar",3]],[["result",4],["option",4]]],[[]],[[],["bool",15]],[[["texturevar",3]],[["result",4],["option",4]]],[[]],[[],["bool",15]],[[["unorderedvar",3]],[["option",4],["result",4]]],[[]],[[],["bool",15]],[[["samplervar",3]],[["samplerdesc",6],["option",4]]],[[]],[[],["bool",15]],[[["texturevar",3]],[["result",4],["option",4]]],[[["samplervar",3]],[["samplerdesc",6],["option",4]]],[[]],[[],["bool",15]],[[["outputvar",3]],[["result",4],["option",4]]],[[]],[[],["bool",15]],[[["outputvar",3]],[["result",4],["option",4]]],[[]],[[],["bool",15]],[[["outputvar",3]],[["result",4],["option",4]]],[[]],[[],["bool",15]],[[],[["option",4],["depthstencildesc",6]]],[[]],[[],["bool",15]],[[],[["option",4],["depthstencildesc",6]]],[[]],[[],["bool",15]],[[],[["option",4],["depthstencildesc",6]]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["bool",15]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[["rawdataset",3],["manager",3],["accessinfo",3]]],[[],["encoder",3]],[[["pipelinestateerror",4],["str",15]],[["pipelinestateerror",4],["string",3]]],[[["programerror",4]]],[[["initerror",4]]],[[["creationerror",3]]],[[["elementerror",4],["str",15]],[["elementerror",4],["string",3]]],[[["initerror",4],["str",15]],[["initerror",4],["string",3]]],[[],["copyerror",4]],[[],["updateerror",4]],[[],["pipelinestateerror",4]],[[],["slice",3]],[[],["indexbuffer",4]],[[]],[[],["rawvertexbuffer",3]],[[]],[[],["rawconstantbuffer",3]],[[]],[[],["rawglobal",3]],[[]],[[],["rawshaderresource",3]],[[]],[[],["sampler",3]],[[]],[[]],[[]],[[],["rawrendertarget",3]],[[]],[[]],[[]],[[],["scissor",3]],[[],["blendref",3]],[[],["rawdataset",3]],[[],["elementerror",4]],[[],["initerror",4]],[[],["pipelinestate",3]],[[],["programerror",4]],[[]],[[["copyerror",4]],["bool",15]],[[["copyerror",4]],["bool",15]],[[["updateerror",4]],["bool",15]],[[["updateerror",4]],["bool",15]],[[["pipelinestateerror",4]],["bool",15]],[[["pipelinestateerror",4]],["bool",15]],[[["slice",3]],["bool",15]],[[["slice",3]],["bool",15]],[[["indexbuffer",4]],["bool",15]],[[["indexbuffer",4]],["bool",15]],[[],["bool",15]],[[["rawvertexbuffer",3]],["bool",15]],[[["rawvertexbuffer",3]],["bool",15]],[[],["bool",15]],[[["rawconstantbuffer",3]],["bool",15]],[[["rawconstantbuffer",3]],["bool",15]],[[],["bool",15]],[[["rawglobal",3]],["bool",15]],[[["rawglobal",3]],["bool",15]],[[],["bool",15]],[[["rawshaderresource",3]],["bool",15]],[[["rawshaderresource",3]],["bool",15]],[[],["bool",15]],[[["sampler",3]],["bool",15]],[[["sampler",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["rawrendertarget",3]],["bool",15]],[[["rawrendertarget",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["scissor",3]],["bool",15]],[[["scissor",3]],["bool",15]],[[["blendref",3]],["bool",15]],[[["rawdataset",3]],["bool",15]],[[["rawdataset",3]],["bool",15]],[[["elementerror",4]],["bool",15]],[[["elementerror",4]],["bool",15]],[[["initerror",4]],["bool",15]],[[["initerror",4]],["bool",15]],[[["pipelinestate",3]],["bool",15]],[[["pipelinestate",3]],["bool",15]],[[["programerror",4]],["bool",15]],[[["programerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],[["error",8],["option",4]]],[[],["str",15]],[[],["str",15]],[[],[["error",8],["option",4]]],[[],["str",15]],[[],[["error",8],["option",4]]],[[]],[[],["submissionresult",6]],[[["option",4],["fence",3]],[["submissionresult",6],["fence",3]]],[[]],[[["buffer",3],["usize",15]],["copybufferresult",6]],[[["usize",15],["option",4],["rawtexture",3],["rawbuffer",3],["cubeface",4],["rawimageinfo",6]],["copybuffertextureresult",6]],[[["usize",15],["option",4],["rawtexture",3],["cubeface",4],["rawimageinfo",6],["rawbuffer",3]],["copytexturebufferresult",6]],[[["option",4],["rawtexture",3],["cubeface",4],["rawimageinfo",6]],[["result",4],["copyerror",4]]],[[["buffer",3],["usize",15]],[["updateerror",4],["result",4]]],[[["buffer",3]]],[[["option",4],["texture",3],["cubeface",4],["newimageinfo",6]],[["result",4],["updateerror",4]]],[[["rendertargetview",3]]],[[["depth",6],["depthstencilview",3]]],[[["stencil",6],["depthstencilview",3]]],[[["clearcolor",4],["rawrendertargetview",3]]],[[["depth",6],["rawdepthstencilview",3]]],[[["rawdepthstencilview",3],["stencil",6]]],[[["slice",3],["pipelinestate",3]]],[[["shaderresourceview",3]]],[[["rawshaderresourceview",3]]],[[["vertexcount",6]]],[[["buffer",3]]],[[["primitive",4]],["u32",15]],[[["vertexcount",6]]],[[["primitive",4],["rasterizer",3]],["descriptor",3]],[[],["accessinfo",3]],[[]],[[["rawbuffer",3]]],[[["rawbuffer",3]]],[[],[["rawbuffer",3],["iter",3]]],[[],[["rawbuffer",3],["iter",3]]],[[],["bool",15]],[[],["bool",15]],[[],[["accessguard",3],["result",4],["submissionerror",4]]],[[],["bool",15]],null,null,null,null,null,[[],["usage",3]],[[],["usage",3]],[[],["u8",15]],[[["u8",15]],[["option",4],["usage",3]]],[[["u8",15]],["usage",3]],[[["u8",15]],["usage",3]],[[],["bool",15]],[[],["bool",15]],[[["usage",3]],["bool",15]],[[["usage",3]],["bool",15]],[[["usage",3]]],[[["usage",3]]],[[["usage",3]]],[[["usage",3],["bool",15]]],[[["uniformvalue",4]],[["compatibilityerror",4],["result",4]]],[[],["programinfo",3]],[[],["rasterizer",3]],[[],["rasterizer",3]],[[["f32",15],["i32",15]],["rasterizer",3]],[[["comparison",4],["u8",15]],["stencil",3]],[[["equation",4],["factor",4]],["blend",3]],null,null,null,null,[[],["colormask",3]],[[],["colormask",3]],[[],["u8",15]],[[["u8",15]],[["option",4],["colormask",3]]],[[["u8",15]],["colormask",3]],[[["u8",15]],["colormask",3]],[[],["bool",15]],[[],["bool",15]],[[["colormask",3]],["bool",15]],[[["colormask",3]],["bool",15]],[[["colormask",3]]],[[["colormask",3]]],[[["colormask",3]]],[[["bool",15],["colormask",3]]],null,null,[[],["mirror",3]],[[],["mirror",3]],[[],["u8",15]],[[["u8",15]],[["option",4],["mirror",3]]],[[["u8",15]],["mirror",3]],[[["u8",15]],["mirror",3]],[[],["bool",15]],[[],["bool",15]],[[["mirror",3]],["bool",15]],[[["mirror",3]],["bool",15]],[[["mirror",3]]],[[["mirror",3]]],[[["mirror",3]]],[[["mirror",3],["bool",15]]],[[],["usage",3]],[[["manager",3]]],[[["manager",3]]],[[["manager",3]]],[[["manager",3]]],[[["manager",3]]],[[],["info",3]],[[],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],["swizzle",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["info",3]],[[],["usize",15]],[[],["info",3]],[[]],[[]],[[],["rawtexture",3]],[[]],[[],["rawtexture",3]],[[]],[[]],[[],["samplerinfo",3]],[[],["manager",3]],[[]],[[["manager",3]]],[[],["usize",15]],[[["rawbuffer",3]]],[[["shader",3]]],[[["program",3]]],[[["rawpipelinestate",3]]],[[["rawtexture",3]]],[[["rawshaderresourceview",3]]],[[["rawunorderedaccessview",3]]],[[["rawrendertargetview",3]]],[[["rawdepthstencilview",3]]],[[["sampler",3]]],[[["fence",3]]],null,null,null,[[],["access",3]],[[],["access",3]],[[],["u8",15]],[[["u8",15]],[["access",3],["option",4]]],[[["u8",15]],["access",3]],[[["u8",15]],["access",3]],[[],["bool",15]],[[],["bool",15]],[[["access",3]],["bool",15]],[[["access",3]],["bool",15]],[[["access",3]]],[[["access",3]]],[[["access",3]]],[[["bool",15],["access",3]]],[[],["bool",15]],null,null,null,null,null,null,[[],["bind",3]],[[],["bind",3]],[[],["u8",15]],[[["u8",15]],[["option",4],["bind",3]]],[[["u8",15]],["bind",3]],[[["u8",15]],["bind",3]],[[],["bool",15]],[[],["bool",15]],[[["bind",3]],["bool",15]],[[["bind",3]],["bool",15]],[[["bind",3]]],[[["bind",3]]],[[["bind",3]]],[[["bool",15],["bind",3]]],[[],["info",3]],[[],["u8",15]],[[],["bool",15]],[[]],[[["u8",15]]],[[],["u8",15]],[[],[["option",4],["u16",15]]],[[],["bool",15]],[[],["usize",15]],[[],["imageinfocommon",3]],[[],["bool",15]],[[],["usize",15]],[[],["texturecopyregion",3]],[[["filtermethod",4],["wrapmode",4]],["samplerinfo",3]],[[["u8",15]],["imageinfocommon",3]],[[["channeltype",4],["u8",15]],[["format",3],["imageinfocommon",3]]],null,null,null,[[],["depthstencilflags",3]],[[],["depthstencilflags",3]],[[],["u8",15]],[[["u8",15]],[["option",4],["depthstencilflags",3]]],[[["u8",15]],["depthstencilflags",3]],[[["u8",15]],["depthstencilflags",3]],[[],["bool",15]],[[],["bool",15]],[[["depthstencilflags",3]],["bool",15]],[[["depthstencilflags",3]],["bool",15]],[[["depthstencilflags",3]]],[[["depthstencilflags",3]]],[[["depthstencilflags",3]]],[[["bool",15],["depthstencilflags",3]]]],"p":[[8,"Device"],[8,"Factory"],[8,"FactoryExt"],[3,"Element"],[8,"Structure"],[8,"ToInstanceRate"],[3,"Bundle"],[3,"Descriptor"],[3,"RawDataSet"],[4,"ElementError"],[13,"Offset"],[13,"Format"],[4,"InitError"],[8,"PipelineInit"],[8,"PipelineData"],[3,"PipelineState"],[8,"DataLink"],[8,"DataBind"],[4,"IsArray"],[4,"IsComparison"],[4,"IsMultiSample"],[4,"IsRect"],[4,"MatrixFormat"],[4,"TextureType"],[3,"SamplerType"],[4,"BaseType"],[4,"ContainerType"],[4,"Stage"],[4,"UniformValue"],[8,"BaseTyped"],[8,"Formatted"],[3,"AttributeVar"],[3,"ConstVar"],[3,"ConstantBufferVar"],[3,"TextureVar"],[3,"UnorderedVar"],[3,"SamplerVar"],[3,"OutputVar"],[3,"ProgramInfo"],[4,"CompatibilityError"],[4,"CreateShaderError"],[8,"ToUniform"],[4,"ProgramError"],[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"Rasterizer"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"Color"],[3,"RefValues"],[3,"Rect"],[4,"Primitive"],[8,"Resources"],[4,"SubmissionError"],[4,"ShaderSet"],[4,"Role"],[3,"Info"],[4,"CreationError"],[4,"ChannelType"],[4,"SurfaceType"],[4,"ChannelSource"],[3,"Swizzle"],[3,"Format"],[8,"SurfaceTyped"],[8,"ChannelTyped"],[8,"Formatted"],[3,"U8Norm"],[3,"I8Norm"],[3,"U16Norm"],[3,"I16Norm"],[3,"F16"],[4,"Error"],[4,"Usage"],[4,"CreationError"],[4,"LayerError"],[4,"AaMode"],[4,"FilterMethod"],[4,"CubeFace"],[4,"Kind"],[4,"Mipmap"],[3,"ImageInfoCommon"],[3,"TextureCopyRegion"],[4,"WrapMode"],[3,"PackedColor"],[3,"SamplerInfo"],[3,"Info"],[3,"ResourceDesc"],[3,"RenderDesc"],[3,"DepthStencilDesc"],[4,"ResourceViewError"],[4,"TargetViewError"],[4,"CombinedError"],[8,"CommandBuffer"],[4,"CopyError"],[13,"OutOfSrcBounds"],[13,"OutOfDstBounds"],[13,"Overlap"],[4,"UpdateError"],[13,"OutOfBounds"],[13,"UnitCountMismatch"],[4,"PipelineStateError"],[3,"Slice"],[8,"IntoIndexBuffer"],[4,"IndexBuffer"],[3,"Encoder"],[3,"VertexBufferCommon"],[4,"NonInstanced"],[4,"Instanced"],[3,"RawVertexBuffer"],[3,"ConstantBuffer"],[3,"RawConstantBuffer"],[3,"Global"],[3,"RawGlobal"],[3,"ShaderResource"],[3,"RawShaderResource"],[3,"UnorderedAccess"],[3,"Sampler"],[3,"TextureSampler"],[3,"RenderTarget"],[3,"BlendTarget"],[3,"RawRenderTarget"],[3,"DepthTarget"],[3,"StencilTarget"],[3,"DepthStencilTarget"],[3,"Scissor"],[3,"BlendRef"],[3,"AccessInfo"],[3,"Usage"],[3,"Program"],[3,"CreateProgramError"],[3,"MultiSample"],[3,"ColorMask"],[3,"Mirror"],[3,"VertexShader"],[3,"HullShader"],[3,"DomainShader"],[3,"GeometryShader"],[3,"PixelShader"],[3,"Raw"],[4,"Int"],[4,"Uint"],[4,"Inorm"],[4,"Unorm"],[4,"Float"],[4,"Srgb"],[4,"R4_G4"],[4,"R4_G4_B4_A4"],[4,"R5_G5_B5_A1"],[4,"R5_G6_B5"],[4,"R8"],[4,"R8_G8"],[4,"R8_G8_B8_A8"],[4,"R10_G10_B10_A2"],[4,"R11_G11_B10"],[4,"R16"],[4,"R16_G16"],[4,"R16_G16_B16"],[4,"R16_G16_B16_A16"],[4,"R32"],[4,"R32_G32"],[4,"R32_G32_B32"],[4,"R32_G32_B32_A32"],[4,"B8_G8_R8_A8"],[4,"D16"],[4,"D24"],[4,"D24_S8"],[4,"D32"],[4,"BC1_R8_G8_B8"],[4,"BC3_R8_G8_B8_A8"],[3,"RawBuffer"],[3,"Buffer"],[3,"Shader"],[3,"Program"],[3,"RawPipelineState"],[3,"RawTexture"],[3,"Texture"],[3,"RawShaderResourceView"],[3,"ShaderResourceView"],[3,"RawUnorderedAccessView"],[3,"UnorderedAccessView"],[3,"RawRenderTargetView"],[3,"RawDepthStencilView"],[3,"RenderTargetView"],[3,"DepthStencilView"],[3,"Sampler"],[3,"Fence"],[3,"Manager"],[3,"Reader"],[3,"Writer"],[3,"Access"],[3,"Bind"],[3,"Raw"],[3,"Lod"],[3,"DepthStencilFlags"],[6,"InstanceRate"]]},\
"gfx_core":{"doc":"Low-level graphics abstraction for Rust. Mostly operates …","t":[0,3,11,11,4,13,13,13,13,3,12,12,12,12,12,4,13,13,13,0,4,13,13,13,6,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,11,11,11,11,11,11,11,11,11,6,3,11,11,11,3,3,0,3,4,3,3,11,3,0,4,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,8,10,10,10,11,11,10,10,10,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,0,4,13,13,13,13,13,13,4,4,4,4,4,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,13,13,13,13,13,3,12,12,12,12,11,3,12,12,8,16,10,8,8,8,8,8,8,16,10,8,8,8,8,16,16,16,11,8,8,8,8,8,8,8,3,12,11,11,11,11,3,12,11,11,11,11,3,12,11,11,11,11,3,12,11,11,11,11,3,12,11,11,11,11,6,6,6,6,6,6,6,6,6,6,6,6,6,0,3,3,11,11,3,3,3,3,3,11,3,3,11,3,3,3,11,11,3,11,11,3,11,3,11,3,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,4,13,13,3,3,0,4,13,13,13,13,3,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,5,0,17,6,3,3,12,12,12,3,12,12,12,6,6,6,6,3,12,12,3,12,12,6,6,6,6,6,6,6,3,12,12,12,12,12,12,12,12,12,12,12,11,3,12,11,3,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,11,11,11,11,0,6,4,13,13,4,13,13,4,13,13,4,13,13,4,13,13,4,13,13,13,13,13,11,3,12,12,4,13,13,13,13,13,4,13,13,13,4,13,13,13,13,13,17,6,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,8,10,8,10,3,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,12,12,3,11,4,13,13,13,11,4,13,13,13,3,0,6,6,17,3,11,4,13,13,13,13,13,13,13,13,4,13,13,6,6,6,6,6,4,13,13,13,11,11,4,13,13,13,13,13,4,13,13,13,13,13,13,17,4,13,13,13,13,13,13,13,11,11,11,11,11,4,13,13,3,12,12,12,12,12,12,12,12,6,6,11,11,11,11,11,3,12,12,12,12,11,4,13,13,13,13,3,3,12,3,12,12,12,12,12,12,11,3,12,12,12,12,12,11,11,3,12,12,12,12,12,3,12,12,12,3,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,0,4,13,13,6,6,6,3,12,12,4,13,13,13,4,13,13,13,3,3,12,12,12,12,12,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,3,12,12,12,12,12,12,3,12,12,3,12,12,4,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,3,12,12,12,3,12,12,3,3,12,12,3,12,12,0,6,6,6,6,3,12,12,12,12,6,3,17,17,17,17,17,17,6,6,6,6,6,6,6,6,6,3,11,3,11,3,11,3,11,3,11,4,13,13,13,13,11,3,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,13,13,13,13,4,13,13,8,16,16,16,16,16,16,16,16,16,16,16,16,4,13,6,8,16,16,10,10,10,10,10,10,8,16,16,16,10,10,10,10,3,12,12,12,12,8,16,10,10,8,8,16,16,16,10,10,3,8,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["buffer","Raw","get_info","is_mapped","Role","Vertex","Index","Constant","Staging","Info","role","usage","bind","size","stride","CreationError","UnsupportedBind","Other","UnsupportedUsage","command","ClearColor","Float","Int","Uint","InstanceParams","Buffer","reset","bind_pipeline_state","bind_vertex_buffers","bind_constant_buffers","bind_global_constant","bind_resource_views","bind_unordered_views","bind_samplers","bind_pixel_targets","bind_index","set_scissor","set_ref_values","copy_buffer","copy_buffer_to_texture","copy_texture_to_buffer","copy_texture_to_texture","update_buffer","update_texture","generate_mipmap","clear_color","clear_depth_stencil","call_draw","call_draw_indexed","AccessInfo","new","clear","buffer_read","buffer_write","mapped_reads","mapped_writes","has_mapped_reads","has_mapped_writes","take_accesses","AccessInfoBuffers","AccessGuard","access_mapped_reads","access_mapped_writes","access_mapped","AccessGuardBuffers","AccessGuardBuffersChain","dummy","DummyDevice","DummyResources","DummyFence","DummyMapping","new","DummyCommandBuffer","factory","ResourceViewError","NoBindFlag","Channel","Layer","Unsupported","TargetViewError","NoBindFlag","Level","Layer","Channel","Unsupported","NotDetached","CombinedError","Texture","Resource","Target","Factory","get_capabilities","create_buffer_raw","create_buffer_immutable_raw","create_buffer_immutable","create_buffer","create_pipeline_state_raw","create_program","create_shader","create_shader_vertex","create_shader_hull","create_shader_domain","create_shader_geometry","create_shader_pixel","create_sampler","read_mapping","write_mapping","create_texture_raw","view_buffer_as_shader_resource_raw","view_buffer_as_unordered_access_raw","view_texture_as_shader_resource_raw","view_texture_as_unordered_access_raw","view_texture_as_render_target_raw","view_texture_as_depth_stencil_raw","create_texture","view_buffer_as_shader_resource","view_buffer_as_unordered_access","view_texture_as_shader_resource","view_texture_as_unordered_access","view_texture_as_render_target","view_texture_as_depth_stencil","view_texture_as_depth_stencil_trivial","create_texture_immutable_u8","create_texture_immutable","create_render_target","create_depth_stencil","create_depth_stencil_view_only","format","ChannelType","Int","Uint","Inorm","Unorm","Float","Srgb","Int","Uint","Inorm","Unorm","Float","Srgb","SurfaceType","R4_G4","R4_G4_B4_A4","R5_G5_B5_A1","R5_G6_B5","R8","R8_G8","R8_G8_B8_A8","R10_G10_B10_A2","R11_G11_B10","R16","R16_G16","R16_G16_B16","R16_G16_B16_A16","R32","R32_G32","R32_G32_B32","R32_G32_B32_A32","B8_G8_R8_A8","D16","D24","D24_S8","D32","BC1_R8_G8_B8","BC3_R8_G8_B8_A8","get_total_bits","get_alpha_stencil_bits","R4_G4","R4_G4_B4_A4","R5_G5_B5_A1","R5_G6_B5","R8","R8_G8","R8_G8_B8_A8","R10_G10_B10_A2","R11_G11_B10","R16","R16_G16","R16_G16_B16","R16_G16_B16_A16","R32","R32_G32","R32_G32_B32","R32_G32_B32_A32","B8_G8_R8_A8","D16","D24","D24_S8","D32","BC1_R8_G8_B8","BC3_R8_G8_B8_A8","ChannelSource","Zero","One","X","Y","Z","W","Swizzle","0","1","2","3","new","Format","0","1","SurfaceTyped","DataType","get_surface_type","BufferSurface","TextureSurface","RenderSurface","DepthSurface","StencilSurface","ChannelTyped","ShaderType","get_channel_type","TextureChannel","RenderChannel","BlendChannel","Formatted","Surface","Channel","View","get_format","BufferFormat","DepthFormat","StencilFormat","DepthStencilFormat","TextureFormat","RenderFormat","BlendFormat","U8Norm","0","cast2","cast3","cast4","cast_slice","I8Norm","0","cast2","cast3","cast4","cast_slice","U16Norm","0","cast2","cast3","cast4","cast_slice","I16Norm","0","cast2","cast3","cast4","cast_slice","F16","0","cast2","cast3","cast4","cast_slice","Vec1","Vec2","Vec3","Vec4","Rgba8","Srgba8","Rgb10a2F","Rgba16F","Rgba32F","Bgra8","Depth","DepthStencil","Depth32F","handle","RawBuffer","Buffer","get_info","len","Shader","Program","RawPipelineState","RawTexture","Texture","get_info","RawShaderResourceView","ShaderResourceView","raw_view","RawUnorderedAccessView","UnorderedAccessView","RawRenderTargetView","get_dimensions","get_texture","RawDepthStencilView","get_dimensions","get_texture","RenderTargetView","get_dimensions","DepthStencilView","get_dimensions","Sampler","get_info","Fence","Manager","new","clear","extend","count","ref_buffer","ref_shader","ref_program","ref_pso","ref_texture","ref_srv","ref_uav","ref_rtv","ref_dsv","ref_sampler","ref_fence","mapping","Error","InvalidAccess","AccessOverlap","Reader","Writer","memory","Usage","Data","Dynamic","Upload","Download","Access","READ","WRITE","RW","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Bind","RENDER_TARGET","DEPTH_STENCIL","SHADER_RESOURCE","UNORDERED_ACCESS","TRANSFER_SRC","TRANSFER_DST","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","is_mutable","Pod","cast_slice","pso","MAX_VERTEX_BUFFERS","BufferOffset","CreationError","ColorInfo","mask","color","alpha","DepthStencilInfo","depth","front","back","BufferIndex","ElemOffset","ElemStride","InstanceRate","Element","format","offset","VertexBufferDesc","stride","rate","AttributeDesc","ConstantBufferDesc","ResourceViewDesc","UnorderedViewDesc","SamplerDesc","ColorTargetDesc","DepthStencilDesc","Descriptor","primitive","rasterizer","scissor","vertex_buffers","attributes","constant_buffers","resource_views","unordered_views","samplers","color_targets","depth_stencil","new","VertexBufferSet","0","new","ConstantBufferParam","0","1","2","ResourceViewParam","0","1","2","UnorderedViewParam","0","1","2","SamplerParam","0","1","2","PixelTargetSet","colors","depth","stencil","dimensions","new","add_color","add_depth_stencil","get_view","shade","Dimension","IsArray","Array","NoArray","IsComparison","Compare","NoCompare","IsMultiSample","MultiSample","NoMultiSample","IsRect","Rect","NoRect","MatrixFormat","ColumnMajor","RowMajor","TextureType","Buffer","D1","D2","D3","Cube","can_sample","SamplerType","0","1","BaseType","I32","U32","F32","F64","Bool","ContainerType","Single","Vector","Matrix","Stage","Vertex","Hull","Domain","Geometry","Pixel","STAGES","Location","UniformValue","I32","U32","F32","I32Vector2","I32Vector3","I32Vector4","U32Vector2","U32Vector3","U32Vector4","F32Vector2","F32Vector3","F32Vector4","F32Matrix2","F32Matrix3","F32Matrix4","ConstFormat","BaseTyped","get_base_type","Formatted","get_format","Usage","VERTEX","GEOMETRY","PIXEL","HULL","DOMAIN","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","AttributeVar","name","slot","base_type","container","ConstVar","name","location","count","base_type","container","ConstantBufferVar","name","slot","size","usage","elements","TextureVar","name","slot","base_type","ty","usage","UnorderedVar","name","slot","usage","SamplerVar","name","slot","ty","usage","OutputVar","name","slot","base_type","container","ProgramInfo","vertex_attributes","globals","constant_buffers","textures","unordereds","samplers","outputs","output_depth","knows_outputs","Program","get_info","CompatibilityError","ErrorArraySize","ErrorBaseType","ErrorContainer","is_compatible","CreateShaderError","ModelNotSupported","StageNotSupported","CompilationFailed","CreateProgramError","texture","Layer","Level","MAX_LEVEL","Raw","get_info","CreationError","Format","Kind","Samples","Size","Data","Usage","Mipmap","Level","LayerError","NotExpected","OutOfBounds","Size","Bits","NumSamples","NumFragments","Dimensions","AaMode","Single","Multi","Coverage","get_num_fragments","needs_resolve","FilterMethod","Scale","Mipmap","Bilinear","Trilinear","Anisotropic","CubeFace","PosX","NegX","PosY","NegY","PosZ","NegZ","CUBE_FACES","Kind","D1","D1Array","D2","D2Array","D3","Cube","CubeArray","get_dimensions","get_level_dimensions","get_num_levels","get_num_slices","is_cube","Mipmap","Provided","Allocated","ImageInfoCommon","xoffset","yoffset","zoffset","width","height","depth","format","mipmap","RawImageInfo","NewImageInfo","get_texel_count","convert","is_inside","get_byte_count","get_byte_count","TextureCopyRegion","texture","kind","cube_face","info","with_texture","WrapMode","Tile","Mirror","Clamp","Border","Lod","PackedColor","0","SamplerInfo","filter","wrap_mode","lod_bias","lod_range","comparison","border","new","Info","kind","levels","format","bind","usage","to_image_info","to_raw_image_info","ResourceDesc","channel","layer","min","max","swizzle","RenderDesc","channel","level","layer","DepthStencilFlags","RO_DEPTH","RO_STENCIL","RO_DEPTH_STENCIL","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","DepthStencilDesc","level","layer","flags","state","FrontFace","Clockwise","CounterClockwise","LineWidth","OffsetSlope","OffsetUnits","Offset","0","1","CullFace","Nothing","Front","Back","RasterMethod","Point","Line","Fill","MultiSample","Rasterizer","front_face","cull_face","method","offset","samples","Comparison","Never","Less","LessEqual","Equal","GreaterEqual","Greater","NotEqual","Always","StencilOp","Keep","Zero","Replace","IncrementClamp","IncrementWrap","DecrementClamp","DecrementWrap","Invert","StencilSide","fun","mask_read","mask_write","op_fail","op_depth_fail","op_pass","Stencil","front","back","Depth","fun","write","Equation","Add","Sub","RevSub","Min","Max","BlendValue","SourceColor","SourceAlpha","DestColor","DestAlpha","ConstColor","ConstAlpha","Factor","Zero","One","SourceAlphaSaturated","ZeroPlus","OneMinus","BlendChannel","equation","source","destination","Blend","color","alpha","ColorMask","Color","mask","blend","RefValues","stencil","blend","target","Layer","Level","Depth","Stencil","Rect","x","y","w","h","ColorValue","Mirror","MAX_VERTEX_ATTRIBUTES","MAX_COLOR_TARGETS","MAX_CONSTANT_BUFFERS","MAX_RESOURCE_VIEWS","MAX_UNORDERED_VIEWS","MAX_SAMPLERS","VertexCount","InstanceCount","PatchSize","AttributeSlot","ConstantBufferSlot","ResourceViewSlot","UnorderedViewSlot","ColorSlot","SamplerSlot","VertexShader","reference","HullShader","reference","DomainShader","reference","GeometryShader","reference","PixelShader","reference","ShaderSet","Simple","Geometry","Tessellated","TessellatedGeometry","get_usage","Capabilities","max_vertex_count","max_index_count","max_texture_size","max_patch_size","instance_base_supported","instance_call_supported","instance_rate_supported","vertex_base_supported","srgb_color_supported","constant_buffer_supported","unordered_access_view_supported","separate_blending_slots_supported","copy_buffer_supported","Primitive","PointList","LineList","LineStrip","TriangleList","TriangleStrip","LineListAdjacency","LineStripAdjacency","TriangleListAdjacency","TriangleStripAdjacency","PatchList","IndexType","U16","U32","Resources","Buffer","Shader","Program","PipelineStateObject","Texture","ShaderResourceView","UnorderedAccessView","RenderTargetView","DepthStencilView","Sampler","Fence","Mapping","SubmissionError","AccessOverlap","SubmissionResult","Device","Resources","CommandBuffer","get_capabilities","pin_submitted_resources","submit","fenced_submit","wait_fence","cleanup","Adapter","CommandQueue","Device","QueueFamily","enumerate_adapters","open","get_info","get_queue_families","AdapterInfo","name","vendor","device","software_rendering","QueueFamily","Surface","supports_present","num_queues","CommandQueue","Surface","CommandQueue","SwapChain","Window","from_window","build_swapchain","Frame","SwapChain","acquire_frame","present","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","bitxor_assign","bitxor_assign","not","not","sub","sub","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","extend","extend","fmt","fmt","default","default","default","default","default","default","default","eq","ne","eq","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","bitand","bitand","bitor","bitor","bitor_assign","bitor_assign","fmt","fmt","from_iter","from_iter","sub_assign","sub_assign","bitxor","bitxor","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","fmt","fmt","bitand_assign","bitand_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","reset","bind_pipeline_state","bind_vertex_buffers","bind_constant_buffers","bind_global_constant","bind_resource_views","bind_unordered_views","bind_samplers","bind_pixel_targets","bind_index","set_scissor","set_ref_values","copy_buffer","copy_buffer_to_texture","copy_texture_to_buffer","copy_texture_to_texture","update_buffer","update_texture","generate_mipmap","clear_color","clear_depth_stencil","call_draw","call_draw_indexed","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_surface_type","get_channel_type","get_channel_type","get_channel_type","get_channel_type","get_channel_type","get_channel_type","get_capabilities","pin_submitted_resources","submit","fenced_submit","wait_fence","cleanup","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","extend","extend","extend","extend","next","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","deref","deref","deref","deref","deref","deref","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","not","not","not","not","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","from_iter","from_iter","from_iter","from_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","description","description","cause","description","cause","description","cause","description","description","description","description","description","description","description","description","new_fill","with_cull_back","with_offset","new","new","RED","GREEN","BLUE","ALPHA","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","X","Y","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set"],"q":["gfx_core","gfx_core::buffer","","","","","","","","","","","","","","","","","","gfx_core","gfx_core::command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core","gfx_core::dummy","","","","","","gfx_core","gfx_core::factory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core","gfx_core::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core","gfx_core::handle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core","gfx_core::mapping","","","","","gfx_core","gfx_core::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core","gfx_core::pso","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core","gfx_core::shade","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core","gfx_core::texture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core","gfx_core::state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core","gfx_core::target","","","","","","","","","","","gfx_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::dummy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::factory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::handle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::mapping","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::pso","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::shadegfx_core::texturegfx_core::stategfx_core::target","","","","","","","","","","","","","","","","","","gfx_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::state","","","","","","gfx_core::target","","gfx_core::state","","","","","","","","","","","","","","gfx_core::target","gfx_core::state","gfx_core::target","","gfx_core::state","","gfx_core::target","gfx_core::state","","","","","","","gfx_core::target","gfx_core::state","","","","","","","","gfx_core::target","gfx_core::state","","","","gfx_core::target","gfx_core::state","","gfx_core::target","gfx_core::state","","","","","","","","","","gfx_core::target","","gfx_core::state","","","","","","","","","","","","","","","","","","","","","","gfx_core::target","","gfx_core::state","","","","","","","","","","","gfx_core::target","gfx_core::state","","","gfx_core::target","gfx_core::state","","","","","","","","","","","","gfx_core::target","","gfx_core::state","gfx_core::target","gfx_core::state","","gfx_core::target","gfx_core::state","gfx_core::target","gfx_core::state","gfx_core::target","gfx_core::state","gfx_core::target","gfx_core::state","","","","","gfx_core::target","gfx_core::state","","","","","","","","gfx_core::target","gfx_core::state","gfx_core::target","gfx_core::state","gfx_core::target","gfx_core::state","","","","","","","","","","","","","","","","","gfx_core::target","gfx_core::state","gfx_core::dummy","","","","","","","","","","","","","","","","","","","","","","","gfx_core::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::dummy","","","","","","gfx_core::command","","","","","","","","","","","","","gfx_core::factory","","","gfx_core::format","","","","","gfx_core::pso","","","","","gfx_core::shade","","gfx_core::texture","","","","","","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::command","","gfx_core::buffer","","","gfx_core::command","","gfx_core::dummy","","","gfx_core::factory","","","gfx_core::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::handle","","","","","","","","","","","","","","","","","gfx_core::mapping","gfx_core::memory","","","gfx_core::pso","","","","","","","","","","","","gfx_core::shade","","","","","","","","","","","","","","","","","","","","","","","gfx_core::texture","","","","","","","","","","","","","","","","","","gfx_core","","","","","","","","","","","","gfx_core::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::memory","","","gfx_core::shade","gfx_core::texture","","","","","","","","","","","","","gfx_core","gfx_core::buffer","","","","","","gfx_core::command","","","","gfx_core::dummy","","","gfx_core::factory","","","","","","gfx_core::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::handle","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::mapping","","gfx_core::memory","","","","","gfx_core::pso","","","","","","","","","","","","","","","","","","","","","","","gfx_core::shade","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::texture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core","","","","","","","","","","","","","","","","","","","","gfx_core::command","gfx_core::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::memory","","","gfx_core::shade","","gfx_core::texture","","","","","","","","","","","","","","","","gfx_core","gfx_core::command","gfx_core::handle","","","gfx_core::mapping","","","gfx_core::buffer","","","","gfx_core::command","","","","","gfx_core::dummy","","","gfx_core::factory","","","gfx_core::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::handle","","","","","","","","","","","","","","","","","","gfx_core::mapping","","","gfx_core::memory","","","gfx_core::pso","","","","","","","","","","","","gfx_core::shade","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::texture","","","","","","","","","","","","","","","","","","","gfx_core","","","","","","","","","","","","gfx_core::buffer","gfx_core::factory","","","gfx_core::mapping","gfx_core::pso","gfx_core::shade","","","gfx_core::texture","","gfx_core","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::buffer","","","","gfx_core::dummy","","","gfx_core::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gfx_core::handle","","","","","","","","","","","","","","","","","gfx_core::mapping","gfx_core::memory","","","gfx_core::pso","","","","","","","","","","","gfx_core::shade","","","","","","","","","","","","","","","","","","","","gfx_core::texture","","","","","","","","","","","","","","","","","","gfx_core","","","","","","","","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::memory","","gfx_core::shade","gfx_core::texture","gfx_core::buffer","gfx_core::factory","","","","","","gfx_core::mapping","gfx_core::pso","gfx_core::shade","","","gfx_core::texture","","gfx_core","gfx_core::state","","","","","","","","","","","","","","","","","","","","","","","gfx_core::target","","","","","","","","","","","","","","",""],"d":["Memory buffers","Untyped buffer","Get buffer info","Is this buffer mapped ?","Role of the memory buffer.","Generic vertex buffer","Index buffer","Constant buffer","Staging buffer","An information block that is immutable and associated to …","Role","Usage hint","Bind flags","Size in bytes","Stride of a single element, in bytes. Only used for …","Error creating a buffer.","Some of the bind flags are not supported.","Unknown other error.","Usage mode is not supported","Command Buffer device interface","A universal clear color supporting integet formats as …","Standard floating-point vec4 color","Integer vector to clear ivec4 targets.","Unsigned int vector to clear uvec4 targets.","Optional instance parameters: (instance count, buffer …","An interface of the abstract command buffer. It collects …","Reset the command buffer contents, retain the allocated …","Bind a pipeline state object","Bind a complete set of vertex buffers","Bind a complete set of constant buffers","Bind a global constant","Bind a complete set of shader resource views","Bind a complete set of unordered access views","Bind a complete set of samplers","Bind a complete set of pixel targets, including multiple …","Bind an index buffer","Set scissor rectangle","Set reference values for the blending and stencil …","Copy part of a buffer to another","Copy part of a buffer to a texture","Copy part of a texture to a buffer","Copy part of one texture into another","Update a vertex/index/uniform buffer","Update a texture","","Clear color target","","Draw a primitive","Draw a primitive with index buffer","Informations about what is accessed by a bunch of …","Creates empty access informations","Clear access informations","Register a buffer read access","Register a buffer write access","Returns the mapped buffers that The GPU will read from","Returns the mapped buffers that The GPU will write to","Is there any mapped buffer reads ?","Is there any mapped buffer writes ?","Takes all the accesses necessary for submission","","","Returns the mapped buffers that The GPU will read from, …","Returns the mapped buffers that The GPU will write to, …","","","","Dummy backend implementation to test the code for compile …","Dummy device which does minimal work, just to allow …","Dummy resources phantom type","Dummy fence that does nothing.","Dummy mapping which will crash on use.","Create a new dummy device","Dummy command buffer, which ignores all the calls.","Resource factory","Error creating either a ShaderResourceView, or …","The corresponding bind flag is not present in the texture.","Selected channel type is not supported for this texture.","Selected layer can not be viewed for this texture.","The backend was refused for some reason.","Error creating either a RenderTargetView, or …","The <code>RENDER_TARGET</code>/<code>DEPTH_STENCIL</code> flag is not present in …","Selected mip level doesn’t exist.","Selected array layer doesn’t exist.","Selected channel type is not supported for this texture.","The backend was refused for some reason.","The RTV cannot be changed due to the references to it …","An error from creating textures with views at the same …","Failed to create the raw texture.","Failed to create SRV or UAV.","Failed to create RTV or DSV.","Overview","Returns the capabilities of this <code>Factory</code>. This usually …","","","","","Creates a new <code>RawPipelineState</code>. To create a safely typed …","Creates a new shader <code>Program</code> for the supplied <code>ShaderSet</code>.","Compiles a shader source into a <code>Shader</code> object that can be …","Compiles a <code>VertexShader</code> from source.","Compiles a <code>HullShader</code> from source.","Compiles a <code>VertexShader</code> from source.","Compiles a <code>GeometryShader</code> from source.","Compiles a <code>PixelShader</code> from source. This is the same as …","","Acquire a mapping Reader","Acquire a mapping Writer","Create a new empty raw texture with no data. The channel …","","","","","","","","","","","","","","","","","","","","Universal format specification. Applicable to textures, …","Type of a surface channel. This is how we interpret the …","","","","","","","","","","","","","Type of the allocated texture surface. It is supposed to …","","","","","","","","","","","","","","","","","","","","","","","Block Compression 1 also known as DXT1, S3TC. See S3TC …","Block Compression 3 also known as DXT5, S3TC. See S3TC …","Return the total number of bits for this format.","Return the number of bits allocated for alpha and stencil.","","","","","","","","","","","","","","","","","","","","","","","Block Compression 1 also known as DXT1, S3TC. See S3TC …","Block Compression 3 also known as DXT5, S3TC. See S3TC …","Source channel in a swizzle configuration. Some may …","","","","","","","Channel swizzle configuration for the resource views. …","","","","","Create a new swizzle where each channel is unmapped.","Complete run-time surface format.","","","Compile-time surface type trait.","The corresponding data type to be passed from CPU.","Return the run-time value of the type.","An ability of a surface type to be used for vertex …","An ability of a surface type to be used for textures.","An ability of a surface type to be used for render …","An ability of a surface type to be used for depth targets.","An ability of a surface type to be used for stencil …","Compile-time channel type trait.","Shader-visible type that corresponds to this channel. For …","Return the run-time value of the type.","An ability of a channel type to be used for textures.","An ability of a channel type to be used for render …","An ability of a channel type to be used for blended …","Compile-time full format trait.","Associated surface type.","Associated channel type.","Shader view type of this format.","Return the run-time value of the type.","Ability to be used for vertex buffers.","Ability to be used for depth targets.","Ability to be used for vertex buffers.","Ability to be used for depth+stencil targets.","Ability to be used for textures.","Ability to be used for render targets.","Ability to be used for blended render targets.","","","Convert a 2-element slice.","Convert a 3-element slice.","Convert a 4-element slice.","Convert a generic slice by transmutation.","","","Convert a 2-element slice.","Convert a 3-element slice.","Convert a 4-element slice.","Convert a generic slice by transmutation.","","","Convert a 2-element slice.","Convert a 3-element slice.","Convert a 4-element slice.","Convert a generic slice by transmutation.","","","Convert a 2-element slice.","Convert a 3-element slice.","Convert a 4-element slice.","Convert a generic slice by transmutation.","","","Convert a 2-element slice.","Convert a 3-element slice.","Convert a 4-element slice.","Convert a generic slice by transmutation.","Abstracted 1-element container for macro internal use","Abstracted 2-element container for macro internal use","Abstracted 3-element container for macro internal use","Abstracted 4-element container for macro internal use","Standard 8bits RGBA format.","Standard 8bit gamma transforming RGB format.","Standard HDR floating-point format with 10 bits for RGB …","Standard 16-bit floating-point RGBA format.","Standard 32-bit floating-point RGBA format.","Standard 8bits BGRA format.","Standard 24-bit depth format.","Standard 24-bit depth format with 8-bit stencil.","Standard 32-bit floating-point depth format.","Resource handles","Untyped buffer handle","Type-safe buffer handle","Get the associated information about the buffer","Get the number of elements in the buffer.","Shader Handle","Program Handle","Raw Pipeline State Handle","Raw texture handle","Typed texture object","Get texture descriptor","Raw Shader Resource View Handle","Type-safe Shader Resource View Handle","Gets the raw view","Raw Unordered Access View Handle","Type-safe Unordered Access View Handle","Raw RTV","Get target dimensions","Get the associated texture","Raw DSV","Get target dimensions","Get the associated texture","Typed RTV","Get target dimensions","Typed DSV","Get target dimensions","Sampler Handle","Get sampler info","Fence Handle","Stores reference-counted resources used in a command …","Create a new handle manager","Clear all references","Extend with all references of another handle manager","Count the total number of referenced resources","Reference a buffer","Reference a shader","Reference a program","Reference a pipeline state object","Reference a texture","Reference a shader resource view","Reference an unordered access view","Reference an RTV","Reference a DSV","Reference a sampler","Reference a fence","Memory mapping","Error accessing a mapping.","The requested mapping access did not match the expected …","The requested mapping access overlaps with another.","Mapping reader","Mapping writer. Currently is not possible to make …","Types to describe the properties of memory allocated for …","How this memory will be used regarding GPU-CPU data flow.","Full speed GPU access. Optimal for render targets and …","CPU to GPU data flow with update commands. Used for …","CPU to GPU data flow with mapping. Used for staging for …","GPU to CPU data flow with mapping. Used for staging for …","Flags providing information about the type of memory …","Read access","Write access","Full access","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Flags providing information about the usage of a resource.","Can be rendered into.","Can serve as a depth/stencil target.","Can be bound to the shader for reading.","Can be bound to the shader for writing.","Can be transfered from.","Can be transfered into.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Is this memory bound to be mutated ?","A trait for plain-old-data types.","Cast a slice from one POD type to another.","Raw Pipeline State Objects","Maximum number of vertex buffers used in a PSO definition.","An offset inside a vertex buffer, in bytes.","Error types happening upon PSO creation on the device …","Color output configuration of the PSO.","Color channel mask","Optional color blending","Optional alpha blending","Depth and stencil state of the PSO.","Optional depth test configuration","Optional stencil test on the front faces","Optional stencil test on the back faces","Index of a vertex buffer.","Offset of an attribute from the start of the buffer, in …","Offset between attribute values, in bytes","The number of instances between each subsequent attribute …","A struct element descriptor.","Element format","Offset from the beginning of the container, in bytes","Vertex buffer descriptor","Total container size, in bytes","Rate of the input for the given buffer","PSO vertex attribute descriptor","PSO constant buffer descriptor","PSO shader resource view descriptor","PSO unordered access view descriptor","PSO sampler descriptor","PSO color target descriptor","PSO depth-stencil target descriptor","All the information surrounding a shader program that is …","Type of the primitive","Rasterizer setup","Enable scissor test","Vertex buffers","Vertex attributes","Constant buffers","Shader resource views","Unordered access views","Samplers","Render target views (RTV)","Depth stencil view (DSV)","Create a new empty PSO descriptor.","A complete set of vertex buffers to be used for vertex …","Array of buffer handles with offsets in them","Create an empty set","A constant buffer run-time parameter for PSO.","","","","A shader resource view (SRV) run-time parameter for PSO.","","","","An unordered access view (UAV) run-time parameter for PSO.","","","","A sampler run-time parameter for PSO.","","","","A complete set of render targets to be used for pixel …","Array of color target views","Depth target view","Stencil target view","Rendering dimensions","Create an empty set","Add a color view to the specified slot","Add a depth or stencil view to the specified slot","Get the rendering view (returns values > 0)","Shader handling.","Number of components in a container type …","Whether the sampler samples an array texture.","","","Whether the sampler compares the depth value upon …","","","Whether the sampler samples a multisample texture.","","","Whether the sampler samples a rectangle texture.","","","Whether the matrix is column or row major.","","","A type of the texture variable. This has to match the …","Sample from a buffer.","Sample from a 1D texture","Sample from a 2D texture","Sample from a 3D texture","Sample from a cubemap.","Check if this texture can be used with a sampler.","A type of the sampler variable.","","","Base type of this shader parameter.","","","","","","Number of components this parameter represents.","Scalar value","A vector with <code>Dimension</code> components.","A matrix.","Which program stage this shader represents.","","","","","","A constant static array of all shader stages.","Location of a parameter in the program.","A value that can be uploaded to the device as a uniform.","","","","","","","","","","","","","","","","Format of a shader constant.","A trait that statically links simple data types to base …","","A trait that statically links simple data types to …","Get the associated constant format.","Parameter usage flags.","Used by the vertex shader","Used by the geometry shader","Used by the pixel shader","Used by the hull shader","Used by the pixel shader","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Vertex information that a shader takes as input.","Name of this attribute.","Slot of the vertex attribute.","Type that this attribute is composed of.","“Scalarness” of this attribute.","A constant in the shader - a bit of data that doesn’t …","Name of this constant.","Location of this constant in the program. For constant …","Number of elements this constant represents.","Type that this constant is composed of","“Scalarness” of this constant.","A constant buffer.","Name of this constant buffer.","Slot of the constant buffer.","Size (in bytes) of this buffer’s data.","What program stage this buffer is used in.","List of individual elements in this buffer.","Texture shader parameter.","Name of this texture variable.","Slot of this texture variable.","Base type for the texture.","Type of this texture.","What program stage this texture is used in.","Unordered access shader parameter.","Name of this unordered variable.","Slot of this unordered variable.","What program stage this UAV is used in.","Sampler shader parameter.","Name of this sampler variable.","Slot of this sampler variable.","Type of this sampler.","What program stage this texture is used in.","Target output variable.","Name of this output variable.","Output color target index.","Type of the output component.","“Scalarness” of this output.","Metadata about a program.","Attributes in the program","Global constants in the program","Constant buffers in the program","Textures in the program","Unordered access resources in the program","Samplers in the program","Output targets in the program","A flag indicating that the pixel shader manually assigns …","A hacky flag to make sure the clients know we are unable …","A program","Get program info","Error type for trying to store a UniformValue in a …","Array sizes differ between the value and the var (trying …","Base types differ between the value and the var (trying …","Container-ness differs between the value and the var …","Whether a value is compatible with this variable. That …","An error type for creating shaders.","The device does not support the requested shader model.","The device does not support the shader stage.","The shader failed to compile.","An error type for creating programs.","Texture creation and modification.","A depth value, specifying which plane to select out of a …","Mipmap level to select in a texture.","Maximum accessible mipmap level of a texture.","Untyped texture","Get texture descriptor","Pure texture object creation error.","Failed to map a given format to the device.","The kind doesn’t support a particular operation.","Failed to map a given multisampled kind to the device.","Unsupported size in one of the dimensions.","The given data has a different size than the target …","The mentioned usage mode is not supported","The requested mipmap creation parameter is unsupported.","The requested mipmap level count does not match the …","An error associated with selected texture layer.","The source texture kind doesn’t support array slices.","Selected layer is outside of the provided range.","Dimension size","Number of bits per component","Number of MSAA samples","Number of EQAA fragments","Dimensions: width, height, depth, and samples.","Describes the configuration of samples inside each texel.","No additional sample information","MultiSampled Anti-Aliasing (MSAA)","Coverage Sampling Anti-Aliasing (CSAA/EQAA)","Return the number of actual data fragments stored per …","Return true if the surface has to be resolved before …","How to filter the texture when sampling. They correspond …","The dumbest filtering possible, nearest-neighbor …","Add simple mipmapping.","Sample multiple texels within a single mipmap level to …","Sample multiple texels across two mipmap levels to …","Anisotropic filtering with a given “max”, must be …","The face of a cube texture to do an operation on.","","","","","","","A constant array of cube faces in the order they map to …","Specifies the kind of a texture storage to be allocated.","A single row of texels.","An array of rows of texels. Equivalent to Texture2D …","A traditional 2D texture, with rows arranged contiguously.","An array of 2D textures. Equivalent to Texture3D except …","A volume texture, with each 2D layer arranged …","A set of 6 2D textures, one for each face of a cube.","An array of Cube textures.","Get texture dimensions, with 0 values where not …","Get the dimensionality of a particular mipmap level.","Count the number of mipmap levels.","Return the number of slices for an array, or None for …","Check if it’s one of the cube kinds.","The marker for the texture initializer to generate extra …","The mipmap data is provided as a part of bitmap data.","The mipmap data is not provided, but the memory for it …","Describes a subvolume of a texture, which image data can …","","","","","","","Format of each texel.","Which mipmap to select.","New raw image info based on the universal format spec.","New image info based on the universal format spec. The …","Get the total number of texels.","Convert into a differently typed format.","Check if it fits inside given dimensions.","Get the total number of bytes.","Get the total number of bytes.","A texture region defined for copy operations","Raw texture","Texture kind","Optional cube face","Dimensions, offsets, and format","Change the texture","Specifies how texture coordinates outside the range <code>[0, 1]</code>…","Tile the texture. That is, sample the coordinate modulo …","Mirror the texture. Like tile, but uses abs(coord) before …","Clamp the texture to the value at <code>0.0</code> or <code>1.0</code> respectively.","Use border color.","A wrapper for the LOD level of a texture.","A wrapper for the 8bpp RGBA color, encoded as u32.","","Specifies how to sample from a texture.","Filter method to use.","Wrapping mode for each of the U, V, and W axis (S, T, and …","This bias is added to every computed mipmap level (N + …","This range is used to clamp LOD level used for sampling.","Comparison mode, used primary for a shadow map.","Border color is used when one of the wrap modes is set to …","Create a new sampler description with a given filter …","Texture storage descriptor.","","","","","","Get image info for a given mip.","Get the raw image info for a given mip and a channel type.","Texture resource view descriptor.","","","","","","Texture render view descriptor.","","","","Depth-stencil read-only flags","Depth is read-only in the view.","Stencil is read-only in the view.","Both depth and stencil are read-only.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Texture depth-stencil view descriptor.","","","","Fixed-function hardware state.","The front face winding order of a set of vertices.","Clockwise winding order.","Counter-clockwise winding order.","Width of a line. Could be f32 if not for Hash deriving …","Slope depth offset factor Could be f32 if not for Hash …","Number of units to offset, where the unit is the minimal …","How to offset vertices in screen space, if at all.","","","Which face, if any, to cull.","","","","How to rasterize a primitive.","Rasterize as a point.","Rasterize as a line with the given width.","Rasterize as a face.","Multi-sampling rasterization mode","Primitive rasterization state. Note that GL allows …","Which vertex winding is considered to be the front face …","Which face should be culled.","How to rasterize this primitive.","Any polygon offset to apply.","Multi-sampling mode.","A pixel-wise comparison function.","<code>false</code>","<code>x < y</code>","<code>x <= y</code>","<code>x == y</code>","<code>x >= y</code>","<code>x > y</code>","<code>x != y</code>","<code>true</code>","Stencil mask operation.","Keep the current value in the stencil buffer (no change).","Set the value in the stencil buffer to zero.","Set the stencil buffer value to <code>value</code> from <code>StencilSide</code>","Increment the stencil buffer value, clamping to its …","Increment the stencil buffer value, wrapping around to 0 …","Decrement the stencil buffer value, clamping to its …","Decrement the stencil buffer value, wrapping around to …","Bitwise invert the current value in the stencil buffer.","Complete stencil state for a given side of a face.","Comparison function to use to determine if the stencil …","A mask that is ANDd with both the stencil buffer value …","A mask that is ANDd with the stencil value before writing …","What operation to do if the stencil test fails.","What operation to do if the stenil test passes but the …","What operation to do if both the depth and stencil test …","Complete stencil state, specifying how to handle the …","","","Depth test state.","Comparison function to use.","Specify whether to write to the depth buffer or not.","","Adds source and destination. Source and destination are …","Subtracts destination from source. Source and destination …","Subtracts source from destination. Source and destination …","Component-wise minimum value of source and destination. …","Component-wise maximum value of source and destination. …","","","","","","","","","","","","","","","","","","","","","","The state of an active color render target","Color mask to use.","Optional blending.","The complete set of the rasterizer reference values. …","Stencil front and back values.","Constant blend color.","Render target specification.","A depth value, specifying which plane to select out of a …","Mipmap level to select in a texture.","A single depth value from a depth buffer.","A single value from a stencil stencstencil buffer.","A screen space rectangle","","","","","A color with floating-point components.","Mirroring flags, used for blitting","Compile-time maximum number of vertex attributes.","Compile-time maximum number of color targets.","Compile-time maximum number of constant buffers.","Compile-time maximum number of shader resource views …","Compile-time maximum number of unordered access views …","Compile-time maximum number of samplers.","Draw vertex count.","Draw number of instances","Number of vertices in a patch","Slot for an attribute.","Slot for a constant buffer object.","Slot for a shader resource view.","Slot for an unordered access object.","Slot for an active color buffer.","Slot for a sampler.","","","","","","","","","","","A complete set of shaders to link a program. TODO: …","Simple program: Vs-Ps","Geometry shader programs: Vs-Gs-Ps","Tessellation programs: Vs-Hs-Ds-Ps","TessellatedGeometry programs: Vs-Hs-Ds-Hs-Ps","Return the aggregated stage usage for the set.","Features that the device supports.","","","","","","","","","","","","","","Describes what geometric primitives are created from …","Each vertex represents a single point.","Each pair of vertices represent a single line segment. …","Every two consecutive vertices represent a single line …","Each triplet of vertices represent a single triangle. For …","Every three consecutive vertices represent a single …","Each quadtruplet of vertices represent a single line …","Every four consecutive vertices represent a single line …","Each sextuplet of vertices represent a single traingle …","Every even-numbered vertex (every other starting from the …","Patch list, used with shaders capable of producing …","A type of each index value in the slice’s index buffer","","","Different types of a specific API.","","","","","","","","","","","","","","","","A <code>Device</code> is responsible for submitting <code>CommandBuffer</code>s to …","Associated <code>Resources</code> type.","Associated <code>CommandBuffer</code> type. Every <code>Device</code> type can only …","Returns the capabilities of this <code>Device</code>.","Pin everything from this handle manager to live for a …","Submits a <code>CommandBuffer</code> to the GPU for execution.","Submits a <code>CommandBuffer</code> to the GPU for execution. returns …","Stalls the current thread until the fence is satisfied","Cleanup unused resources. This should be called between …","Represents a physical or virtual device, which is capable …","Associated <code>CommandQueue</code> type.","Associated <code>Device</code> type.","Associated <code>QueueFamily</code> type.","Enumerate all available adapters supporting this backend","Create a new device and command queues.","Get the <code>AdapterInfo</code> for this adapater.","Return the supported queue families for this adapter.","Information about a backend adapater.","Adapter name","Vendor PCI id of the adapter","PCI id of the adapter","The device is based on a software rasterizer","<code>QueueFamily</code> denotes a group of command queues provided by …","Associated <code>Surface</code> type.","Check if the queue family supports presentation to a …","Return the number of available queues of this family","Dummy trait for command queues. CommandBuffers will be …","A <code>Surface</code> abstracts the surface of a native window, which …","Associated <code>CommandQueue</code> type.","Associated <code>SwapChain</code> type.","Associated native <code>Window</code> type.","Create a new surface from a native window.","Create a new swapchain from the current surface with an …","Handle to a backbuffer of the swapchain.","The <code>SwapChain</code> is the backend representation of the …","Acquire a new frame for rendering. This needs to be …","Present one acquired frame in FIFO orderoggles the set of flags.","Toggles the set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","","","","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","","","","","","","","","","","","","","","","","Disables all flags disabled in the set.","Disables all flags disabled in the seteturns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new filling rasterizer.","Add back face culling.","Add polygon offset.","Create a new stencil state with a given function.","Create a new blend state with a given equation.","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …"],"i":[0,0,1,1,0,2,2,2,2,0,3,3,3,3,3,0,4,4,4,0,0,5,5,5,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,7,7,7,7,7,7,7,7,0,0,8,8,8,0,0,0,0,0,0,0,9,0,0,0,10,10,10,10,0,11,11,11,11,11,11,0,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,0,17,17,17,17,17,0,18,18,0,19,19,0,0,0,0,0,0,20,20,0,0,0,0,21,21,21,21,0,0,0,0,0,0,0,0,22,22,22,22,22,0,23,23,23,23,23,0,24,24,24,24,24,0,25,25,25,25,25,0,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,27,0,0,0,0,0,28,0,0,29,0,0,0,30,30,0,31,31,0,32,0,33,0,34,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,36,36,0,0,0,0,37,37,37,37,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,0,40,40,40,0,41,41,41,0,0,0,0,0,42,42,0,43,43,0,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,0,45,45,0,46,46,46,0,47,47,47,0,48,48,48,0,49,49,49,0,50,50,50,50,50,50,50,50,0,0,0,51,51,0,52,52,0,53,53,0,54,54,0,55,55,0,56,56,56,56,56,56,0,57,57,0,58,58,58,58,58,0,59,59,59,0,60,60,60,60,60,0,0,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,0,62,0,63,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,65,65,65,65,0,66,66,66,66,66,0,67,67,67,67,67,0,68,68,68,68,68,0,69,69,69,0,70,70,70,70,0,71,71,71,71,0,72,72,72,72,72,72,72,72,72,0,73,0,74,74,74,66,0,75,75,75,0,0,0,0,0,0,76,0,77,77,77,77,77,77,77,77,0,78,78,0,0,0,0,0,0,79,79,79,79,79,0,80,80,80,80,80,0,81,81,81,81,81,81,0,0,82,82,82,82,82,82,82,82,82,82,82,82,0,83,83,0,84,84,84,84,84,84,84,84,0,0,84,84,84,84,85,0,86,86,86,86,86,0,87,87,87,87,0,0,88,0,89,89,89,89,89,89,89,0,90,90,90,90,90,90,90,0,91,91,91,91,91,0,92,92,92,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,94,94,94,0,0,95,95,0,0,0,0,96,96,0,97,97,97,0,98,98,98,0,0,99,99,99,99,99,0,100,100,100,100,100,100,100,100,0,101,101,101,101,101,101,101,101,0,102,102,102,102,102,102,0,103,103,0,104,104,0,105,105,105,105,105,0,106,106,106,106,106,106,0,107,107,107,107,107,0,108,108,108,0,109,109,0,0,110,110,0,111,111,0,0,0,0,0,0,112,112,112,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,113,0,114,0,115,0,116,0,117,0,118,118,118,118,118,0,119,119,119,119,119,119,119,119,119,119,119,119,119,0,120,120,120,120,120,120,120,120,120,120,0,121,121,0,122,122,122,122,122,122,122,122,122,122,122,122,0,123,0,0,124,124,124,124,124,124,124,124,0,125,125,125,125,125,125,125,0,126,126,126,126,0,127,127,127,0,0,128,128,128,128,128,0,0,129,129,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,130,130,130,130,130,130,130,130,131,131,131,131,131,131,131,131,9,9,9,9,9,9,9,132,132,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,133,134,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,14,14,14,14,14,14,14,14,14,136,136,136,136,136,136,136,136,136,137,137,137,137,137,137,137,137,137,138,138,138,138,138,138,138,138,138,139,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,141,15,15,15,15,15,15,15,15,15,142,142,142,142,142,142,142,142,142,143,143,143,143,143,143,143,143,143,144,144,144,144,144,144,144,144,144,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,147,147,148,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,149,149,150,150,150,150,150,150,150,150,150,151,151,151,151,151,151,151,151,151,152,152,152,152,152,152,152,152,152,153,153,153,153,153,153,153,153,153,154,154,154,154,154,154,154,154,154,155,155,155,155,155,155,155,155,155,156,156,156,156,156,156,156,156,156,157,157,157,157,157,157,157,157,157,158,158,158,158,158,158,158,158,158,159,159,159,159,159,159,159,159,159,160,160,160,160,160,160,160,160,160,161,161,161,161,161,161,161,161,161,162,162,162,162,162,162,162,162,162,163,163,163,163,163,163,163,163,163,164,164,164,164,164,164,164,164,164,165,165,165,165,165,165,165,165,165,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,166,166,166,166,166,166,166,166,166,27,27,27,27,27,27,27,27,27,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,168,168,168,169,169,169,169,169,169,169,169,169,170,170,170,170,170,170,170,170,170,28,28,28,28,28,28,28,28,28,171,171,171,171,171,171,171,171,171,29,29,29,29,29,29,29,29,29,172,172,172,172,172,172,172,172,172,173,173,173,173,173,173,173,173,173,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,174,174,174,174,174,174,174,174,174,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,175,175,175,175,175,175,175,176,176,176,176,176,176,176,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,177,177,177,177,177,177,177,177,177,177,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,178,178,178,178,178,178,178,178,178,178,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,179,179,179,179,179,179,179,179,179,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,180,180,180,180,180,180,180,180,180,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,107,107,107,107,107,107,107,107,107,108,108,108,108,108,108,108,108,108,109,109,109,109,109,109,109,109,109,181,181,181,181,181,181,181,181,181,110,110,110,110,110,110,110,110,110,111,111,111,111,111,111,111,111,111,112,112,112,112,112,112,112,112,112,182,182,182,182,182,182,182,182,182,113,113,113,113,113,113,113,113,113,114,114,114,114,114,114,114,114,114,115,115,115,115,115,115,115,115,115,116,116,116,116,116,116,116,116,116,117,117,117,117,117,117,117,117,117,118,118,118,118,118,118,118,118,118,119,119,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,121,121,123,123,123,123,123,123,123,123,123,123,126,126,126,126,126,126,126,126,126,183,183,183,183,183,183,183,183,183,109,106,95,101,111,99,182,112,110,103,181,100,105,98,107,108,104,102,96,97,180,181,182,181,182,182,181,181,182,181,103,100,111,102,99,180,112,107,97,110,106,95,104,96,105,182,108,98,101,109,182,181,181,182,110,109,108,104,103,111,102,111,111,97,182,182,105,98,98,180,110,110,181,181,101,102,102,104,104,100,103,103,106,95,99,99,109,109,112,112,107,107,108,108,96,96,98,100,102,107,180,112,111,96,106,182,99,103,181,101,95,97,110,109,104,105,108,181,182,182,181,182,181,181,182,181,182,181,182,181,182,181,97,101,105,103,182,95,180,104,106,108,100,107,102,182,181,182,181,112,107,109,110,105,100,98,96,95,101,108,99,104,181,102,180,97,106,182,103,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,136,137,138,139,140,141,9,9,9,9,9,9,8,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,22,23,24,25,26,40,40,41,41,41,64,178,79,179,88,94,179,88,38,39,64,93,130,131,2,3,4,5,7,132,133,134,10,11,12,14,136,137,138,139,140,141,15,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,16,17,18,22,23,24,25,26,166,27,167,168,169,170,28,171,29,172,173,30,31,32,33,34,174,36,37,38,39,177,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,74,75,178,77,78,79,80,81,82,83,84,86,87,179,88,89,90,91,92,93,94,113,114,115,116,117,118,119,120,121,123,126,183,14,136,137,138,139,140,141,15,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,16,17,18,22,23,24,25,26,37,38,39,64,79,80,81,82,83,84,86,87,90,91,92,93,94,121,1,2,3,3,4,4,5,5,7,7,132,133,134,10,10,11,11,12,12,14,136,137,138,139,140,141,15,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,16,17,17,18,18,22,22,23,23,24,24,25,25,26,26,166,166,27,167,167,168,168,169,169,170,170,28,171,171,29,172,172,173,30,30,31,31,32,33,34,34,174,174,36,36,37,38,38,39,39,177,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,52,53,54,55,56,56,57,57,58,59,59,60,61,61,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,74,75,75,178,178,76,77,77,78,78,79,79,80,80,81,82,82,83,84,84,86,86,87,179,179,88,88,89,89,90,90,91,91,92,92,93,93,94,94,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,123,126,126,5,14,136,137,138,139,140,141,15,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,16,17,18,22,23,24,25,26,37,38,39,61,64,79,80,81,82,83,84,86,87,179,88,89,90,91,92,93,94,121,8,166,168,170,175,176,176,1,2,3,4,5,7,8,130,131,132,133,134,10,11,12,14,136,137,138,139,140,141,15,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,16,17,18,22,23,24,25,26,166,27,167,168,169,170,28,171,29,172,173,30,31,32,33,34,174,35,36,175,176,37,38,39,177,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,178,76,77,78,79,80,81,82,83,84,86,87,179,88,89,90,91,92,93,94,113,114,115,116,117,118,119,120,121,123,126,183,4,10,11,12,36,177,74,75,178,77,78,123,38,39,64,93,38,39,64,93,38,39,64,93,38,39,64,93,38,39,64,93,38,39,64,93,38,39,64,93,38,39,64,93,38,39,64,93,1,2,3,4,132,133,134,14,136,137,138,139,140,141,15,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,16,17,18,22,23,24,25,26,166,27,167,168,169,170,28,171,29,172,173,30,31,32,33,34,174,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,76,78,79,80,81,82,83,84,86,87,179,88,89,90,91,92,93,94,113,114,115,116,117,118,120,121,38,39,64,93,38,39,64,93,38,39,64,93,38,39,64,93,38,39,64,93,4,10,10,11,11,12,12,36,177,74,75,178,77,78,123,99,99,99,103,109,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182],"f":[null,null,[[],["info",3]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["vertexbufferset",3]]],[[]],[[["uniformvalue",4],["location",6]]],[[]],[[]],[[]],[[["pixeltargetset",3]]],[[["indextype",4]]],[[["rect",3]]],[[["refvalues",3]]],[[["usize",15]]],[[["usize",15],["texturecopyregion",3]]],[[["usize",15],["texturecopyregion",3]]],[[["texturecopyregion",3]]],[[["usize",15]]],[[["texturecopyregion",3]]],[[]],[[["clearcolor",4]]],[[["depth",6],["stencil",6],["option",4],["option",4]]],[[["vertexcount",6],["option",4],["instanceparams",6]]],[[["vertexcount",6],["option",4],["instanceparams",6]]],null,[[]],[[]],[[["rawbuffer",3]]],[[["rawbuffer",3]]],[[],["accessinfobuffers",6]],[[],["accessinfobuffers",6]],[[],["bool",15]],[[],["bool",15]],[[],[["accessguard",3],["submissionresult",6]]],null,null,[[],["accessguardbuffers",3]],[[],["accessguardbuffers",3]],[[],["accessguardbufferschain",3]],null,null,null,null,null,null,null,[[],["dummydevice",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["capabilities",3]],[[["info",3]],[["result",4],["rawbuffer",3],["creationerror",4]]],[[["usize",15],["role",4],["bind",3]],[["result",4],["rawbuffer",3],["creationerror",4]]],[[["role",4],["bind",3]],[["buffer",3],["result",4],["creationerror",4]]],[[["usize",15],["role",4],["bind",3],["usage",4]],[["buffer",3],["result",4],["creationerror",4]]],[[["descriptor",3],["program",3]],[["creationerror",3],["rawpipelinestate",3],["result",4]]],[[["shaderset",4]],[["result",4],["program",3],["createprogramerror",3]]],[[["stage",4]],[["result",4],["shader",3],["createshadererror",4]]],[[],[["createshadererror",4],["result",4],["vertexshader",3]]],[[],[["createshadererror",4],["result",4],["hullshader",3]]],[[],[["result",4],["createshadererror",4],["domainshader",3]]],[[],[["result",4],["geometryshader",3],["createshadererror",4]]],[[],[["result",4],["pixelshader",3],["createshadererror",4]]],[[["samplerinfo",3]],["sampler",3]],[[["buffer",3]],[["result",4],["reader",3],["error",4]]],[[["buffer",3]],[["error",4],["writer",3],["result",4]]],[[["option",4],["option",4],["info",3],["channeltype",4]],[["creationerror",4],["result",4],["rawtexture",3]]],[[["rawbuffer",3],["format",3]],[["rawshaderresourceview",3],["resourceviewerror",4],["result",4]]],[[["rawbuffer",3]],[["rawunorderedaccessview",3],["result",4],["resourceviewerror",4]]],[[["rawtexture",3],["resourcedesc",3]],[["rawshaderresourceview",3],["resourceviewerror",4],["result",4]]],[[["rawtexture",3]],[["rawunorderedaccessview",3],["result",4],["resourceviewerror",4]]],[[["renderdesc",3],["rawtexture",3]],[["rawrendertargetview",3],["targetviewerror",4],["result",4]]],[[["rawtexture",3],["depthstencildesc",3]],[["result",4],["rawdepthstencilview",3],["targetviewerror",4]]],[[["usage",4],["level",6],["option",4],["bind",3],["channeltype",4],["kind",4]],[["creationerror",4],["result",4],["texture",3]]],[[["buffer",3]],[["shaderresourceview",3],["result",4],["resourceviewerror",4]]],[[["buffer",3]],[["result",4],["resourceviewerror",4],["unorderedaccessview",3]]],[[["texture",3],["swizzle",3]],[["result",4],["shaderresourceview",3],["resourceviewerror",4]]],[[["texture",3]],[["resourceviewerror",4],["unorderedaccessview",3],["result",4]]],[[["level",6],["texture",3],["option",4],["layer",6]],[["result",4],["rendertargetview",3],["targetviewerror",4]]],[[["level",6],["depthstencilflags",3],["texture",3],["option",4],["layer",6]],[["result",4],["depthstencilview",3],["targetviewerror",4]]],[[["texture",3]],[["result",4],["depthstencilview",3],["targetviewerror",4]]],[[["mipmap",4],["kind",4]],[["result",4],["combinederror",4]]],[[["mipmap",4],["kind",4]],[["result",4],["combinederror",4]]],[[["size",6]],[["combinederror",4],["result",4]]],[[["size",6]],[["combinederror",4],["result",4]]],[[["size",6]],[["combinederror",4],["depthstencilview",3],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u8",15]],[[],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["swizzle",3]],null,null,null,null,null,[[],["surfacetype",4]],null,null,null,null,null,null,null,[[],["channeltype",4]],null,null,null,null,null,null,null,[[],["format",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["info",3]],[[],["usize",15]],null,null,null,null,null,[[],["info",3]],null,null,[[]],null,null,null,[[],["dimensions",6]],[[],["rawtexture",3]],null,[[],["dimensions",6]],[[],["rawtexture",3]],null,[[],["dimensions",6]],null,[[],["dimensions",6]],null,[[],["samplerinfo",3]],null,null,[[],["manager",3]],[[]],[[["manager",3]]],[[],["usize",15]],[[["rawbuffer",3]]],[[["shader",3]]],[[["program",3]]],[[["rawpipelinestate",3]]],[[["rawtexture",3]]],[[["rawshaderresourceview",3]]],[[["rawunorderedaccessview",3]]],[[["rawrendertargetview",3]]],[[["rawdepthstencilview",3]]],[[["sampler",3]]],[[["fence",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["access",3]],[[],["access",3]],[[],["u8",15]],[[["u8",15]],[["option",4],["access",3]]],[[["u8",15]],["access",3]],[[["u8",15]],["access",3]],[[],["bool",15]],[[],["bool",15]],[[["access",3]],["bool",15]],[[["access",3]],["bool",15]],[[["access",3]]],[[["access",3]]],[[["access",3]]],[[["bool",15],["access",3]]],null,null,null,null,null,null,null,[[],["bind",3]],[[],["bind",3]],[[],["u8",15]],[[["u8",15]],[["bind",3],["option",4]]],[[["u8",15]],["bind",3]],[[["u8",15]],["bind",3]],[[],["bool",15]],[[],["bool",15]],[[["bind",3]],["bool",15]],[[["bind",3]],["bool",15]],[[["bind",3]]],[[["bind",3]]],[[["bind",3]]],[[["bool",15],["bind",3]]],[[],["bool",15]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["primitive",4],["rasterizer",3]],["descriptor",3]],null,null,[[],["vertexbufferset",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["colorslot",6],["dimensions",6]]],[[["bool",15],["dimensions",6]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["basetype",4]],null,[[],["constformat",6]],null,null,null,null,null,null,[[],["usage",3]],[[],["usage",3]],[[],["u8",15]],[[["u8",15]],[["option",4],["usage",3]]],[[["u8",15]],["usage",3]],[[["u8",15]],["usage",3]],[[],["bool",15]],[[],["bool",15]],[[["usage",3]],["bool",15]],[[["usage",3]],["bool",15]],[[["usage",3]]],[[["usage",3]]],[[["usage",3]]],[[["bool",15],["usage",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["programinfo",3]],null,null,null,null,[[["uniformvalue",4]],[["result",4],["compatibilityerror",4]]],null,null,null,null,null,null,null,null,null,null,[[],["info",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["numfragments",6]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["dimensions",6]],[[["level",6]],["dimensions",6]],[[],["level",6]],[[],[["option",4],["layer",6]]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],[[],["imageinfocommon",3]],[[["dimensions",6]],["bool",15]],[[],["usize",15]],[[],["usize",15]],null,null,null,null,null,[[],["texturecopyregion",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["filtermethod",4],["wrapmode",4]],["samplerinfo",3]],null,null,null,null,null,null,[[["level",6]],["newimageinfo",6]],[[["level",6],["channeltype",4]],["rawimageinfo",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["depthstencilflags",3]],[[],["depthstencilflags",3]],[[],["u8",15]],[[["u8",15]],[["depthstencilflags",3],["option",4]]],[[["u8",15]],["depthstencilflags",3]],[[["u8",15]],["depthstencilflags",3]],[[],["bool",15]],[[],["bool",15]],[[["depthstencilflags",3]],["bool",15]],[[["depthstencilflags",3]],["bool",15]],[[["depthstencilflags",3]]],[[["depthstencilflags",3]]],[[["depthstencilflags",3]]],[[["bool",15],["depthstencilflags",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["manager",3]]],null,[[["manager",3]]],null,[[["manager",3]]],null,[[["manager",3]]],null,[[["manager",3]]],null,null,null,null,null,[[],["usage",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["capabilities",3]],[[["manager",3]]],[[["accessinfo",3]],["submissionresult",6]],[[["fence",3],["option",4],["accessinfo",3]],[["fence",3],["submissionresult",6]]],[[["fence",3]]],[[]],null,null,null,null,[[],["vec",3]],[[]],[[],["adapterinfo",3]],[[]],null,null,null,null,null,null,null,[[],["bool",15]],[[],["u32",15]],null,null,null,null,null,[[]],[[]],null,null,[[],["frame",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["blend",3]],[["ordering",4],["option",4]]],[[["blendvalue",4]],[["ordering",4],["option",4]]],[[["frontface",4]],[["ordering",4],["option",4]]],[[["stencilop",4]],[["ordering",4],["option",4]]],[[["refvalues",3]],[["ordering",4],["option",4]]],[[["rasterizer",3]],[["ordering",4],["option",4]]],[[["mirror",3]],[["ordering",4],["option",4]]],[[["rect",3]],[["ordering",4],["option",4]]],[[["color",3]],[["ordering",4],["option",4]]],[[["stencil",3]],[["ordering",4],["option",4]]],[[["colormask",3]],[["ordering",4],["option",4]]],[[["comparison",4]],[["ordering",4],["option",4]]],[[["equation",4]],[["ordering",4],["option",4]]],[[["rastermethod",4]],[["ordering",4],["option",4]]],[[["factor",4]],[["ordering",4],["option",4]]],[[["blendchannel",3]],[["ordering",4],["option",4]]],[[["depth",3]],[["ordering",4],["option",4]]],[[["stencilside",3]],[["ordering",4],["option",4]]],[[["offset",3]],[["ordering",4],["option",4]]],[[["cullface",4]],[["ordering",4],["option",4]]],[[["multisample",3]],[["ordering",4],["option",4]]],[[["colormask",3]]],[[["mirror",3]]],[[],["colormask",3]],[[],["mirror",3]],[[["mirror",3]],["mirror",3]],[[["colormask",3]],["colormask",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["color",3]],[[],["blend",3]],[[],["blendchannel",3]],[[],["depth",3]],[[],["stencil",3]],[[],["refvalues",3]],[[],["stencilside",3]],[[["refvalues",3]],["bool",15]],[[["refvalues",3]],["bool",15]],[[["cullface",4]],["bool",15]],[[["mirror",3]],["bool",15]],[[["mirror",3]],["bool",15]],[[["equation",4]],["bool",15]],[[["rastermethod",4]],["bool",15]],[[["rastermethod",4]],["bool",15]],[[["multisample",3]],["bool",15]],[[["color",3]],["bool",15]],[[["color",3]],["bool",15]],[[["colormask",3]],["bool",15]],[[["colormask",3]],["bool",15]],[[["stencilop",4]],["bool",15]],[[["stencilside",3]],["bool",15]],[[["stencilside",3]],["bool",15]],[[["depth",3]],["bool",15]],[[["depth",3]],["bool",15]],[[["comparison",4]],["bool",15]],[[["stencil",3]],["bool",15]],[[["stencil",3]],["bool",15]],[[["blendvalue",4]],["bool",15]],[[["frontface",4]],["bool",15]],[[["rasterizer",3]],["bool",15]],[[["rasterizer",3]],["bool",15]],[[["blend",3]],["bool",15]],[[["blend",3]],["bool",15]],[[["rect",3]],["bool",15]],[[["rect",3]],["bool",15]],[[["factor",4]],["bool",15]],[[["factor",4]],["bool",15]],[[["blendchannel",3]],["bool",15]],[[["blendchannel",3]],["bool",15]],[[["offset",3]],["bool",15]],[[["offset",3]],["bool",15]],[[],["rastermethod",4]],[[],["comparison",4]],[[],["stencilside",3]],[[],["factor",4]],[[],["multisample",3]],[[],["rect",3]],[[],["refvalues",3]],[[],["offset",3]],[[],["blendvalue",4]],[[],["mirror",3]],[[],["rasterizer",3]],[[],["stencil",3]],[[],["colormask",3]],[[],["stencilop",4]],[[],["frontface",4]],[[],["cullface",4]],[[],["color",3]],[[],["blend",3]],[[],["depth",3]],[[],["equation",4]],[[],["blendchannel",3]],[[["colormask",3]],["colormask",3]],[[["mirror",3]],["mirror",3]],[[["mirror",3]],["mirror",3]],[[["colormask",3]],["colormask",3]],[[["mirror",3]]],[[["colormask",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["colormask",3]],[[],["mirror",3]],[[["colormask",3]]],[[["mirror",3]]],[[["colormask",3]],["colormask",3]],[[["mirror",3]],["mirror",3]],[[["colormask",3]],["ordering",4]],[[["cullface",4]],["ordering",4]],[[["stencilop",4]],["ordering",4]],[[["equation",4]],["ordering",4]],[[["stencil",3]],["ordering",4]],[[["mirror",3]],["ordering",4]],[[["frontface",4]],["ordering",4]],[[["multisample",3]],["ordering",4]],[[["depth",3]],["ordering",4]],[[["blendvalue",4]],["ordering",4]],[[["blendchannel",3]],["ordering",4]],[[["comparison",4]],["ordering",4]],[[["factor",4]],["ordering",4]],[[["stencilside",3]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["mirror",3]]],[[["colormask",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vertexbufferset",3],["dummyresources",4]]],[[]],[[["uniformvalue",4],["location",6]]],[[]],[[]],[[]],[[["pixeltargetset",3],["dummyresources",4]]],[[["indextype",4]]],[[["rect",3]]],[[["refvalues",3]]],[[["usize",15]]],[[["usize",15],["texturecopyregion",3]]],[[["usize",15],["texturecopyregion",3]]],[[["texturecopyregion",3]]],[[["usize",15]]],[[["texturecopyregion",3]]],[[]],[[["clearcolor",4]]],[[["depth",6],["stencil",6],["option",4],["option",4]]],[[["vertexcount",6],["option",4],["instanceparams",6]]],[[["vertexcount",6],["option",4],["instanceparams",6]]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["surfacetype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["channeltype",4]],[[],["capabilities",3]],[[["manager",3]]],[[["dummycommandbuffer",3],["accessinfo",3]],["submissionresult",6]],[[["option",4],["accessinfo",3],["fence",3]],[["fence",3],["submissionresult",6]]],[[["fence",3]]],[[]],[[]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[],["clearcolor",4]],[[["f32",15]]],[[["i32",15]]],[[["u32",15]]],[[["creationerror",4]],["combinederror",4]],[[["resourceviewerror",4]],["combinederror",4]],[[["targetviewerror",4]],["combinederror",4]],[[["u8",15]],["u8norm",3]],[[["i8",15]],["i8norm",3]],[[["u16",15]],["u16norm",3]],[[["i16",15]],["i16norm",3]],[[["u16",15]],["f16",3]],[[["colormask",3]]],[[["blend",3]]],[[["depth",3]],["depthstencilinfo",3]],[[["stencil",3]],["depthstencilinfo",3]],[[],["depthstencilinfo",3]],[[["stage",4]]],[[],["createprogramerror",3]],[[["numsamples",6]],["aamode",4]],[[["f32",15]],["lod",3]],[[],["packedcolor",3]],[[["renderdesc",3]],["depthstencildesc",3]],[[],["f32",15]],[[]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["option",4]],[[],["option",4]],[[],["role",4]],[[],["info",3]],[[],["creationerror",4]],[[],["clearcolor",4]],[[],["accessinfo",3]],[[],["dummyresources",4]],[[],["dummyfence",3]],[[],["dummymapping",3]],[[],["resourceviewerror",4]],[[],["targetviewerror",4]],[[],["combinederror",4]],[[],["channeltype",4]],[[],["int",4]],[[],["uint",4]],[[],["inorm",4]],[[],["unorm",4]],[[],["float",4]],[[],["srgb",4]],[[],["surfacetype",4]],[[],["r4_g4",4]],[[],["r4_g4_b4_a4",4]],[[],["r5_g5_b5_a1",4]],[[],["r5_g6_b5",4]],[[],["r8",4]],[[],["r8_g8",4]],[[],["r8_g8_b8_a8",4]],[[],["r10_g10_b10_a2",4]],[[],["r11_g11_b10",4]],[[],["r16",4]],[[],["r16_g16",4]],[[],["r16_g16_b16",4]],[[],["r16_g16_b16_a16",4]],[[],["r32",4]],[[],["r32_g32",4]],[[],["r32_g32_b32",4]],[[],["r32_g32_b32_a32",4]],[[],["b8_g8_r8_a8",4]],[[],["d16",4]],[[],["d24",4]],[[],["d24_s8",4]],[[],["d32",4]],[[],["bc1_r8_g8_b8",4]],[[],["bc3_r8_g8_b8_a8",4]],[[],["channelsource",4]],[[],["swizzle",3]],[[],["format",3]],[[],["u8norm",3]],[[],["i8norm",3]],[[],["u16norm",3]],[[],["i16norm",3]],[[],["f16",3]],[[],["rawbuffer",3]],[[]],[[],["shader",3]],[[],["program",3]],[[],["rawpipelinestate",3]],[[],["rawtexture",3]],[[]],[[],["rawshaderresourceview",3]],[[]],[[],["rawunorderedaccessview",3]],[[]],[[],["rawrendertargetview",3]],[[],["rawdepthstencilview",3]],[[]],[[]],[[],["sampler",3]],[[],["fence",3]],[[],["error",4]],[[],["usage",4]],[[],["access",3]],[[],["bind",3]],[[],["creationerror",3]],[[],["colorinfo",3]],[[],["depthstencilinfo",3]],[[],["element",3]],[[],["vertexbufferdesc",3]],[[],["descriptor",3]],[[],["vertexbufferset",3]],[[],["constantbufferparam",3]],[[],["resourceviewparam",3]],[[],["unorderedviewparam",3]],[[],["samplerparam",3]],[[],["pixeltargetset",3]],[[],["isarray",4]],[[],["iscomparison",4]],[[],["ismultisample",4]],[[],["isrect",4]],[[],["matrixformat",4]],[[],["texturetype",4]],[[],["samplertype",3]],[[],["basetype",4]],[[],["containertype",4]],[[],["stage",4]],[[],["uniformvalue",4]],[[],["usage",3]],[[],["attributevar",3]],[[],["constvar",3]],[[],["constantbuffervar",3]],[[],["texturevar",3]],[[],["unorderedvar",3]],[[],["samplervar",3]],[[],["outputvar",3]],[[],["programinfo",3]],[[],["compatibilityerror",4]],[[],["createshadererror",4]],[[],["createprogramerror",3]],[[],["creationerror",4]],[[],["layererror",4]],[[],["aamode",4]],[[],["filtermethod",4]],[[],["cubeface",4]],[[],["kind",4]],[[],["mipmap",4]],[[],["imageinfocommon",3]],[[],["texturecopyregion",3]],[[],["wrapmode",4]],[[],["lod",3]],[[],["packedcolor",3]],[[],["samplerinfo",3]],[[],["info",3]],[[],["resourcedesc",3]],[[],["renderdesc",3]],[[],["depthstencilflags",3]],[[],["depthstencildesc",3]],[[],["vertexshader",3]],[[],["hullshader",3]],[[],["domainshader",3]],[[],["geometryshader",3]],[[],["pixelshader",3]],[[],["shaderset",4]],[[],["capabilities",3]],[[],["primitive",4]],[[],["indextype",4]],[[],["submissionerror",4]],[[],["adapterinfo",3]],[[],["frame",3]],[[["channeltype",4]],["ordering",4]],[[["int",4]],["ordering",4]],[[["uint",4]],["ordering",4]],[[["inorm",4]],["ordering",4]],[[["unorm",4]],["ordering",4]],[[["float",4]],["ordering",4]],[[["srgb",4]],["ordering",4]],[[["surfacetype",4]],["ordering",4]],[[["r4_g4",4]],["ordering",4]],[[["r4_g4_b4_a4",4]],["ordering",4]],[[["r5_g5_b5_a1",4]],["ordering",4]],[[["r5_g6_b5",4]],["ordering",4]],[[["r8",4]],["ordering",4]],[[["r8_g8",4]],["ordering",4]],[[["r8_g8_b8_a8",4]],["ordering",4]],[[["r10_g10_b10_a2",4]],["ordering",4]],[[["r11_g11_b10",4]],["ordering",4]],[[["r16",4]],["ordering",4]],[[["r16_g16",4]],["ordering",4]],[[["r16_g16_b16",4]],["ordering",4]],[[["r16_g16_b16_a16",4]],["ordering",4]],[[["r32",4]],["ordering",4]],[[["r32_g32",4]],["ordering",4]],[[["r32_g32_b32",4]],["ordering",4]],[[["r32_g32_b32_a32",4]],["ordering",4]],[[["b8_g8_r8_a8",4]],["ordering",4]],[[["d16",4]],["ordering",4]],[[["d24",4]],["ordering",4]],[[["d24_s8",4]],["ordering",4]],[[["d32",4]],["ordering",4]],[[["bc1_r8_g8_b8",4]],["ordering",4]],[[["bc3_r8_g8_b8_a8",4]],["ordering",4]],[[["channelsource",4]],["ordering",4]],[[["swizzle",3]],["ordering",4]],[[["format",3]],["ordering",4]],[[["u8norm",3]],["ordering",4]],[[["i8norm",3]],["ordering",4]],[[["u16norm",3]],["ordering",4]],[[["i16norm",3]],["ordering",4]],[[["f16",3]],["ordering",4]],[[["usage",4]],["ordering",4]],[[["access",3]],["ordering",4]],[[["bind",3]],["ordering",4]],[[["usage",3]],["ordering",4]],[[["aamode",4]],["ordering",4]],[[["filtermethod",4]],["ordering",4]],[[["cubeface",4]],["ordering",4]],[[["kind",4]],["ordering",4]],[[["mipmap",4]],["ordering",4]],[[["imageinfocommon",3]],["ordering",4]],[[["texturecopyregion",3]],["ordering",4]],[[["wrapmode",4]],["ordering",4]],[[["info",3]],["ordering",4]],[[["resourcedesc",3]],["ordering",4]],[[["renderdesc",3]],["ordering",4]],[[["depthstencilflags",3]],["ordering",4]],[[["depthstencildesc",3]],["ordering",4]],[[["indextype",4]],["ordering",4]],[[],["bool",15]],[[["role",4]],["bool",15]],[[["info",3]],["bool",15]],[[["info",3]],["bool",15]],[[["creationerror",4]],["bool",15]],[[["creationerror",4]],["bool",15]],[[["clearcolor",4]],["bool",15]],[[["clearcolor",4]],["bool",15]],[[["accessinfo",3]],["bool",15]],[[["accessinfo",3]],["bool",15]],[[["dummyresources",4]],["bool",15]],[[["dummyfence",3]],["bool",15]],[[["dummymapping",3]],["bool",15]],[[["resourceviewerror",4]],["bool",15]],[[["resourceviewerror",4]],["bool",15]],[[["targetviewerror",4]],["bool",15]],[[["targetviewerror",4]],["bool",15]],[[["combinederror",4]],["bool",15]],[[["combinederror",4]],["bool",15]],[[["channeltype",4]],["bool",15]],[[["int",4]],["bool",15]],[[["uint",4]],["bool",15]],[[["inorm",4]],["bool",15]],[[["unorm",4]],["bool",15]],[[["float",4]],["bool",15]],[[["srgb",4]],["bool",15]],[[["surfacetype",4]],["bool",15]],[[["r4_g4",4]],["bool",15]],[[["r4_g4_b4_a4",4]],["bool",15]],[[["r5_g5_b5_a1",4]],["bool",15]],[[["r5_g6_b5",4]],["bool",15]],[[["r8",4]],["bool",15]],[[["r8_g8",4]],["bool",15]],[[["r8_g8_b8_a8",4]],["bool",15]],[[["r10_g10_b10_a2",4]],["bool",15]],[[["r11_g11_b10",4]],["bool",15]],[[["r16",4]],["bool",15]],[[["r16_g16",4]],["bool",15]],[[["r16_g16_b16",4]],["bool",15]],[[["r16_g16_b16_a16",4]],["bool",15]],[[["r32",4]],["bool",15]],[[["r32_g32",4]],["bool",15]],[[["r32_g32_b32",4]],["bool",15]],[[["r32_g32_b32_a32",4]],["bool",15]],[[["b8_g8_r8_a8",4]],["bool",15]],[[["d16",4]],["bool",15]],[[["d24",4]],["bool",15]],[[["d24_s8",4]],["bool",15]],[[["d32",4]],["bool",15]],[[["bc1_r8_g8_b8",4]],["bool",15]],[[["bc3_r8_g8_b8_a8",4]],["bool",15]],[[["channelsource",4]],["bool",15]],[[["swizzle",3]],["bool",15]],[[["swizzle",3]],["bool",15]],[[["format",3]],["bool",15]],[[["format",3]],["bool",15]],[[["u8norm",3]],["bool",15]],[[["u8norm",3]],["bool",15]],[[["i8norm",3]],["bool",15]],[[["i8norm",3]],["bool",15]],[[["u16norm",3]],["bool",15]],[[["u16norm",3]],["bool",15]],[[["i16norm",3]],["bool",15]],[[["i16norm",3]],["bool",15]],[[["f16",3]],["bool",15]],[[["f16",3]],["bool",15]],[[["rawbuffer",3]],["bool",15]],[[["rawbuffer",3]],["bool",15]],[[],["bool",15]],[[["shader",3]],["bool",15]],[[["shader",3]],["bool",15]],[[["program",3]],["bool",15]],[[["program",3]],["bool",15]],[[["rawpipelinestate",3]],["bool",15]],[[["rawpipelinestate",3]],["bool",15]],[[["rawtexture",3]],["bool",15]],[[["rawtexture",3]],["bool",15]],[[],["bool",15]],[[["rawshaderresourceview",3]],["bool",15]],[[["rawshaderresourceview",3]],["bool",15]],[[],["bool",15]],[[["rawunorderedaccessview",3]],["bool",15]],[[["rawunorderedaccessview",3]],["bool",15]],[[],["bool",15]],[[["rawrendertargetview",3]],["bool",15]],[[["rawrendertargetview",3]],["bool",15]],[[["rawdepthstencilview",3]],["bool",15]],[[["rawdepthstencilview",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["sampler",3]],["bool",15]],[[["sampler",3]],["bool",15]],[[["fence",3]],["bool",15]],[[["fence",3]],["bool",15]],[[["error",4]],["bool",15]],[[["error",4]],["bool",15]],[[["usage",4]],["bool",15]],[[["access",3]],["bool",15]],[[["access",3]],["bool",15]],[[["bind",3]],["bool",15]],[[["bind",3]],["bool",15]],[[["creationerror",3]],["bool",15]],[[["colorinfo",3]],["bool",15]],[[["colorinfo",3]],["bool",15]],[[["depthstencilinfo",3]],["bool",15]],[[["depthstencilinfo",3]],["bool",15]],[[["element",3]],["bool",15]],[[["element",3]],["bool",15]],[[["vertexbufferdesc",3]],["bool",15]],[[["vertexbufferdesc",3]],["bool",15]],[[["descriptor",3]],["bool",15]],[[["descriptor",3]],["bool",15]],[[["vertexbufferset",3]],["bool",15]],[[["vertexbufferset",3]],["bool",15]],[[["constantbufferparam",3]],["bool",15]],[[["constantbufferparam",3]],["bool",15]],[[["resourceviewparam",3]],["bool",15]],[[["resourceviewparam",3]],["bool",15]],[[["unorderedviewparam",3]],["bool",15]],[[["unorderedviewparam",3]],["bool",15]],[[["samplerparam",3]],["bool",15]],[[["samplerparam",3]],["bool",15]],[[["pixeltargetset",3]],["bool",15]],[[["pixeltargetset",3]],["bool",15]],[[["isarray",4]],["bool",15]],[[["iscomparison",4]],["bool",15]],[[["ismultisample",4]],["bool",15]],[[["isrect",4]],["bool",15]],[[["matrixformat",4]],["bool",15]],[[["texturetype",4]],["bool",15]],[[["texturetype",4]],["bool",15]],[[["samplertype",3]],["bool",15]],[[["samplertype",3]],["bool",15]],[[["basetype",4]],["bool",15]],[[["containertype",4]],["bool",15]],[[["containertype",4]],["bool",15]],[[["stage",4]],["bool",15]],[[["uniformvalue",4]],["bool",15]],[[["uniformvalue",4]],["bool",15]],[[["usage",3]],["bool",15]],[[["usage",3]],["bool",15]],[[["attributevar",3]],["bool",15]],[[["attributevar",3]],["bool",15]],[[["constvar",3]],["bool",15]],[[["constvar",3]],["bool",15]],[[["constantbuffervar",3]],["bool",15]],[[["constantbuffervar",3]],["bool",15]],[[["texturevar",3]],["bool",15]],[[["texturevar",3]],["bool",15]],[[["unorderedvar",3]],["bool",15]],[[["unorderedvar",3]],["bool",15]],[[["samplervar",3]],["bool",15]],[[["samplervar",3]],["bool",15]],[[["outputvar",3]],["bool",15]],[[["outputvar",3]],["bool",15]],[[["programinfo",3]],["bool",15]],[[["programinfo",3]],["bool",15]],[[["program",3]],["bool",15]],[[["compatibilityerror",4]],["bool",15]],[[["createshadererror",4]],["bool",15]],[[["createshadererror",4]],["bool",15]],[[["createprogramerror",3]],["bool",15]],[[["createprogramerror",3]],["bool",15]],[[],["bool",15]],[[["creationerror",4]],["bool",15]],[[["creationerror",4]],["bool",15]],[[["layererror",4]],["bool",15]],[[["layererror",4]],["bool",15]],[[["aamode",4]],["bool",15]],[[["aamode",4]],["bool",15]],[[["filtermethod",4]],["bool",15]],[[["filtermethod",4]],["bool",15]],[[["cubeface",4]],["bool",15]],[[["kind",4]],["bool",15]],[[["kind",4]],["bool",15]],[[["mipmap",4]],["bool",15]],[[["imageinfocommon",3]],["bool",15]],[[["imageinfocommon",3]],["bool",15]],[[["texturecopyregion",3]],["bool",15]],[[["texturecopyregion",3]],["bool",15]],[[["wrapmode",4]],["bool",15]],[[["lod",3]],["bool",15]],[[["lod",3]],["bool",15]],[[["packedcolor",3]],["bool",15]],[[["packedcolor",3]],["bool",15]],[[["samplerinfo",3]],["bool",15]],[[["samplerinfo",3]],["bool",15]],[[["info",3]],["bool",15]],[[["info",3]],["bool",15]],[[["resourcedesc",3]],["bool",15]],[[["resourcedesc",3]],["bool",15]],[[["renderdesc",3]],["bool",15]],[[["renderdesc",3]],["bool",15]],[[["depthstencilflags",3]],["bool",15]],[[["depthstencilflags",3]],["bool",15]],[[["depthstencildesc",3]],["bool",15]],[[["depthstencildesc",3]],["bool",15]],[[["vertexshader",3]],["bool",15]],[[["vertexshader",3]],["bool",15]],[[["hullshader",3]],["bool",15]],[[["hullshader",3]],["bool",15]],[[["domainshader",3]],["bool",15]],[[["domainshader",3]],["bool",15]],[[["geometryshader",3]],["bool",15]],[[["geometryshader",3]],["bool",15]],[[["pixelshader",3]],["bool",15]],[[["pixelshader",3]],["bool",15]],[[["shaderset",4]],["bool",15]],[[["shaderset",4]],["bool",15]],[[["capabilities",3]],["bool",15]],[[["capabilities",3]],["bool",15]],[[["primitive",4]],["bool",15]],[[["primitive",4]],["bool",15]],[[["indextype",4]],["bool",15]],[[["submissionerror",4]],["bool",15]],[[["adapterinfo",3]],["bool",15]],[[["adapterinfo",3]],["bool",15]],[[["clearcolor",4]],[["ordering",4],["option",4]]],[[["channeltype",4]],[["ordering",4],["option",4]]],[[["int",4]],[["ordering",4],["option",4]]],[[["uint",4]],[["ordering",4],["option",4]]],[[["inorm",4]],[["ordering",4],["option",4]]],[[["unorm",4]],[["ordering",4],["option",4]]],[[["float",4]],[["ordering",4],["option",4]]],[[["srgb",4]],[["ordering",4],["option",4]]],[[["surfacetype",4]],[["ordering",4],["option",4]]],[[["r4_g4",4]],[["ordering",4],["option",4]]],[[["r4_g4_b4_a4",4]],[["ordering",4],["option",4]]],[[["r5_g5_b5_a1",4]],[["ordering",4],["option",4]]],[[["r5_g6_b5",4]],[["ordering",4],["option",4]]],[[["r8",4]],[["ordering",4],["option",4]]],[[["r8_g8",4]],[["ordering",4],["option",4]]],[[["r8_g8_b8_a8",4]],[["ordering",4],["option",4]]],[[["r10_g10_b10_a2",4]],[["ordering",4],["option",4]]],[[["r11_g11_b10",4]],[["ordering",4],["option",4]]],[[["r16",4]],[["ordering",4],["option",4]]],[[["r16_g16",4]],[["ordering",4],["option",4]]],[[["r16_g16_b16",4]],[["ordering",4],["option",4]]],[[["r16_g16_b16_a16",4]],[["ordering",4],["option",4]]],[[["r32",4]],[["ordering",4],["option",4]]],[[["r32_g32",4]],[["ordering",4],["option",4]]],[[["r32_g32_b32",4]],[["ordering",4],["option",4]]],[[["r32_g32_b32_a32",4]],[["ordering",4],["option",4]]],[[["b8_g8_r8_a8",4]],[["ordering",4],["option",4]]],[[["d16",4]],[["ordering",4],["option",4]]],[[["d24",4]],[["ordering",4],["option",4]]],[[["d24_s8",4]],[["ordering",4],["option",4]]],[[["d32",4]],[["ordering",4],["option",4]]],[[["bc1_r8_g8_b8",4]],[["ordering",4],["option",4]]],[[["bc3_r8_g8_b8_a8",4]],[["ordering",4],["option",4]]],[[["channelsource",4]],[["ordering",4],["option",4]]],[[["swizzle",3]],[["ordering",4],["option",4]]],[[["format",3]],[["ordering",4],["option",4]]],[[["u8norm",3]],[["ordering",4],["option",4]]],[[["i8norm",3]],[["ordering",4],["option",4]]],[[["u16norm",3]],[["ordering",4],["option",4]]],[[["i16norm",3]],[["ordering",4],["option",4]]],[[["f16",3]],[["ordering",4],["option",4]]],[[["usage",4]],[["ordering",4],["option",4]]],[[["access",3]],[["ordering",4],["option",4]]],[[["bind",3]],[["ordering",4],["option",4]]],[[["uniformvalue",4]],[["ordering",4],["option",4]]],[[["usage",3]],[["ordering",4],["option",4]]],[[["aamode",4]],[["ordering",4],["option",4]]],[[["filtermethod",4]],[["ordering",4],["option",4]]],[[["cubeface",4]],[["ordering",4],["option",4]]],[[["kind",4]],[["ordering",4],["option",4]]],[[["mipmap",4]],[["ordering",4],["option",4]]],[[["imageinfocommon",3]],[["ordering",4],["option",4]]],[[["texturecopyregion",3]],[["ordering",4],["option",4]]],[[["wrapmode",4]],[["ordering",4],["option",4]]],[[["lod",3]],[["ordering",4],["option",4]]],[[["packedcolor",3]],[["ordering",4],["option",4]]],[[["samplerinfo",3]],[["ordering",4],["option",4]]],[[["info",3]],[["ordering",4],["option",4]]],[[["resourcedesc",3]],[["ordering",4],["option",4]]],[[["renderdesc",3]],[["ordering",4],["option",4]]],[[["depthstencilflags",3]],[["ordering",4],["option",4]]],[[["depthstencildesc",3]],[["ordering",4],["option",4]]],[[["indextype",4]],[["ordering",4],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["access",3]],["access",3]],[[["bind",3]],["bind",3]],[[["usage",3]],["usage",3]],[[["depthstencilflags",3]],["depthstencilflags",3]],[[["access",3]]],[[["bind",3]]],[[["usage",3]]],[[["depthstencilflags",3]]],[[],["access",3]],[[],["bind",3]],[[],["usage",3]],[[],["depthstencilflags",3]],[[["access",3]],["access",3]],[[["bind",3]],["bind",3]],[[["usage",3]],["usage",3]],[[["depthstencilflags",3]],["depthstencilflags",3]],[[["access",3]],["access",3]],[[["bind",3]],["bind",3]],[[["usage",3]],["usage",3]],[[["depthstencilflags",3]],["depthstencilflags",3]],[[["access",3]],["access",3]],[[["bind",3]],["bind",3]],[[["usage",3]],["usage",3]],[[["depthstencilflags",3]],["depthstencilflags",3]],[[["access",3]]],[[["bind",3]]],[[["usage",3]]],[[["depthstencilflags",3]]],[[["access",3]]],[[["bind",3]]],[[["usage",3]]],[[["depthstencilflags",3]]],[[["access",3]]],[[["bind",3]]],[[["usage",3]]],[[["depthstencilflagsintoiterator",8]],["access",3]],[[["intoiterator",8]],["bind",3]],[[["intoiterator",8]],["usage",3]],[[["intoiterator",8]],["depthstencilflags",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["str",15]],[[],["str",15]],[[],[["error",8],["option",4]]],[[],["str",15]],[[],[["error",8],["option",4]]],[[],["str",15]],[[],[["error",8],["option",4]]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["rasterizer",3]],[[],["rasterizer",3]],[[["f32",15],["i32",15]],["rasterizer",3]],[[["u8",15],["comparison",4]],["stencil",3]],[[["equation",4],["factor",4]],["blend",3]],null,null,null,null,[[],["colormask",3]],[[],["colormask",3]],[[],["u8",15]],[[["u8",15]],[["colormask",3],["option",4]]],[[["u8",15]],["colormask",3]],[[["u8",15]],["colormask",3]],[[],["bool",15]],[[],["bool",15]],[[["colormask",3]],["bool",15]],[[["colormask",3]],["bool",15]],[[["colormask",3]]],[[["colormask",3]]],[[["colormask",3]]],[[["bool",15],["colormask",3]]],null,null,[[],["mirror",3]],[[],["mirror",3]],[[],["u8",15]],[[["u8",15]],[["option",4],["mirror",3]]],[[["u8",15]],["mirror",3]],[[["u8",15]],["mirror",3]],[[],["bool",15]],[[],["bool",15]],[[["mirror",3]],["bool",15]],[[["mirror",3]],["bool",15]],[[["mirror",3]]],[[["mirror",3]]],[[["mirror",3]]],[[["bool",15],["mirror",3]]]],"p":[[3,"Raw"],[4,"Role"],[3,"Info"],[4,"CreationError"],[4,"ClearColor"],[8,"Buffer"],[3,"AccessInfo"],[3,"AccessGuard"],[3,"DummyDevice"],[4,"ResourceViewError"],[4,"TargetViewError"],[4,"CombinedError"],[8,"Factory"],[4,"ChannelType"],[4,"SurfaceType"],[4,"ChannelSource"],[3,"Swizzle"],[3,"Format"],[8,"SurfaceTyped"],[8,"ChannelTyped"],[8,"Formatted"],[3,"U8Norm"],[3,"I8Norm"],[3,"U16Norm"],[3,"I16Norm"],[3,"F16"],[3,"Buffer"],[3,"Texture"],[3,"ShaderResourceView"],[3,"RawRenderTargetView"],[3,"RawDepthStencilView"],[3,"RenderTargetView"],[3,"DepthStencilView"],[3,"Sampler"],[3,"Manager"],[4,"Error"],[4,"Usage"],[3,"Access"],[3,"Bind"],[3,"ColorInfo"],[3,"DepthStencilInfo"],[3,"Element"],[3,"VertexBufferDesc"],[3,"Descriptor"],[3,"VertexBufferSet"],[3,"ConstantBufferParam"],[3,"ResourceViewParam"],[3,"UnorderedViewParam"],[3,"SamplerParam"],[3,"PixelTargetSet"],[4,"IsArray"],[4,"IsComparison"],[4,"IsMultiSample"],[4,"IsRect"],[4,"MatrixFormat"],[4,"TextureType"],[3,"SamplerType"],[4,"BaseType"],[4,"ContainerType"],[4,"Stage"],[4,"UniformValue"],[8,"BaseTyped"],[8,"Formatted"],[3,"Usage"],[3,"AttributeVar"],[3,"ConstVar"],[3,"ConstantBufferVar"],[3,"TextureVar"],[3,"UnorderedVar"],[3,"SamplerVar"],[3,"OutputVar"],[3,"ProgramInfo"],[3,"Program"],[4,"CompatibilityError"],[4,"CreateShaderError"],[3,"Raw"],[4,"CreationError"],[4,"LayerError"],[4,"AaMode"],[4,"FilterMethod"],[4,"CubeFace"],[4,"Kind"],[4,"Mipmap"],[3,"ImageInfoCommon"],[6,"RawImageInfo"],[3,"TextureCopyRegion"],[4,"WrapMode"],[3,"PackedColor"],[3,"SamplerInfo"],[3,"Info"],[3,"ResourceDesc"],[3,"RenderDesc"],[3,"DepthStencilFlags"],[3,"DepthStencilDesc"],[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"Rasterizer"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"Color"],[3,"RefValues"],[3,"Rect"],[3,"VertexShader"],[3,"HullShader"],[3,"DomainShader"],[3,"GeometryShader"],[3,"PixelShader"],[4,"ShaderSet"],[3,"Capabilities"],[4,"Primitive"],[4,"IndexType"],[8,"Resources"],[4,"SubmissionError"],[8,"Device"],[8,"Adapter"],[3,"AdapterInfo"],[8,"QueueFamily"],[8,"Surface"],[8,"SwapChain"],[3,"AccessGuardBuffers"],[3,"AccessGuardBuffersChain"],[4,"DummyResources"],[3,"DummyFence"],[3,"DummyMapping"],[3,"DummyCommandBuffer"],[4,"Int"],[4,"Uint"],[4,"Inorm"],[4,"Unorm"],[4,"Float"],[4,"Srgb"],[4,"R4_G4"],[4,"R4_G4_B4_A4"],[4,"R5_G5_B5_A1"],[4,"R5_G6_B5"],[4,"R8"],[4,"R8_G8"],[4,"R8_G8_B8_A8"],[4,"R10_G10_B10_A2"],[4,"R11_G11_B10"],[4,"R16"],[4,"R16_G16"],[4,"R16_G16_B16"],[4,"R16_G16_B16_A16"],[4,"R32"],[4,"R32_G32"],[4,"R32_G32_B32"],[4,"R32_G32_B32_A32"],[4,"B8_G8_R8_A8"],[4,"D16"],[4,"D24"],[4,"D24_S8"],[4,"D32"],[4,"BC1_R8_G8_B8"],[4,"BC3_R8_G8_B8_A8"],[3,"RawBuffer"],[3,"Shader"],[3,"Program"],[3,"RawPipelineState"],[3,"RawTexture"],[3,"RawShaderResourceView"],[3,"RawUnorderedAccessView"],[3,"UnorderedAccessView"],[3,"Fence"],[3,"Reader"],[3,"Writer"],[3,"CreationError"],[3,"CreateProgramError"],[3,"Lod"],[3,"MultiSample"],[3,"ColorMask"],[3,"Mirror"],[3,"Frame"]]},\
"gfx_text":{"doc":"A library for drawing text for gfx-rs graphics API. Uses …","t":[4,13,13,13,4,13,13,13,13,13,4,13,13,13,4,13,13,13,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["FontError","NoFont","EmptyFont","FreetypeError","Error","FontError","PipelineError","ProgramError","CombinedError","UpdateError","HorizontalAnchor","Left","Center","Right","VerticalAnchor","Top","Center","Bottom","Renderer","RendererBuilder","new","new","with_size","with_font","with_font_data","with_outline","with_buffer_size","with_chars","build","unwrap","add","add_anchored","add_at","draw","draw_at","measure","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","from","from","from","from","from","eq","eq","fmt","fmt"],"q":["gfx_text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents possible errors which may occur during the …","No font was specified","Character set is empty","FreeType library error","General error type returned by the library. Wraps all …","Font loading error","Pipeline creation/update error","Program shader error.","An error occuring during creation of texture or resource …","An error occuring in buffer/texture updates","An anchor aligns text horizontally to its given x …","Anchor the left edge of the text","Anchor the horizontal mid-point of the text","Anchor the right edge of the text","An anchor aligns text vertically to its given y position.","Anchor the top edge of the text","Anchor the vertical mid-point of the text","Anchor the bottom edge of the text","Text renderer.","Text renderer builder. Allows to set rendering options …","Create a new text renderer builder. Alias for …","Create a new text renderer builder.","Specify custom size.","Specify custom font by path.","Pass raw font data.","Specify outline width and color. <strong>Not implemented yet.</strong>","Specify custom initial buffer size.","Make available only provided characters in font texture …","Build a new text renderer instance using current settings.","Just an alias for <code>builder.build().unwrap()</code>.","Add some text to the current draw scene relative to the …","Add text to the draw scene by anchoring an edge or …","Add some text to the draw scene using absolute world …","Draw the current scene and clear state.","Draw using provided projection matrix.","Get the bounding box size of a string as rendered by this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,0,2,2,2,2,2,0,3,3,3,0,4,4,4,0,0,0,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,6,6,6,6,6,6,6,5,5,5,5,5,5,5,1,2,2,2,2,2,3,4,1,2],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["factory",8],["resources",8]],[["factory",8],["rendererbuilder",3],["resources",8]]],[[]],[[["u8",15]]],[[["str",15]]],[[]],[[["u8",15]]],[[["usize",15]]],[[]],[[],[["error",4],["renderer",3],["result",4]]],[[],["renderer",3]],[[["str",15]]],[[["verticalanchor",4],["horizontalanchor",4],["str",15]]],[[["str",15]]],[[["encoder",3],["rendertargetview",3]],[["result",4],["error",4]]],[[["encoder",3],["rendertargetview",3]],[["result",4],["error",4]]],[[["str",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["freetypeerror",4]],["fonterror",4]],[[["fonterror",4]],["error",4]],[[["pipelinestateerror",4],["string",3]],["error",4]],[[["programerror",4]],["error",4]],[[["combinederror",4]],["error",4]],[[["updateerror",4],["usize",15]],["error",4]],[[["horizontalanchor",4]],["bool",15]],[[["verticalanchor",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[4,"FontError"],[4,"Error"],[4,"HorizontalAnchor"],[4,"VerticalAnchor"],[3,"RendererBuilder"],[3,"Renderer"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","tn":["isalnum","isalpha","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","isblank","tolower","toupper","qsort","bsearch","fopen","freopen","fmemopen","open_memstream","fflush","fclose","remove","rename","tmpfile","setvbuf","setbuf","getchar","putchar","fgetc","fgets","fputc","fputs","puts","ungetc","fread","fwrite","fseek","ftell","rewind","fgetpos","fsetpos","feof","ferror","clearerr","perror","atoi","strtod","strtol","strtoul","calloc","malloc","realloc","free","abort","exit","_exit","atexit","system","getenv","strcpy","strncpy","strcat","strncat","strcmp","strncmp","strcoll","strchr","strrchr","strspn","strcspn","strdup","strndup","strpbrk","strstr","strcasecmp","strncasecmp","strlen","strnlen","strerror","strtok","strxfrm","strsignal","wcslen","wcstombs","memchr","wmemchr","memcmp","memcpy","memmove","memset","getpwnam","getpwuid","fprintf","printf","snprintf","sprintf","fscanf","scanf","sscanf","getchar_unlocked","putchar_unlocked","socket","connect","listen","accept","getpeername","getsockname","setsockopt","socketpair","sendto","shutdown","chmod","fchmod","fstat","mkdir","stat","pclose","fdopen","fileno","open","creat","fcntl","opendir","readdir","closedir","rewinddir","fchmodat","fchown","fchownat","fstatat","linkat","renameat","symlinkat","unlinkat","access","alarm","chdir","fchdir","chown","lchown","close","dup","dup2","execl","execle","execlp","execv","execve","execvp","fork","fpathconf","getcwd","getegid","geteuid","getgid","getgroups","getlogin","getopt","getpgid","getpgrp","getpid","getppid","getuid","isatty","link","lseek","pathconf","pipe","posix_memalign","read","rmdir","seteuid","setegid","setgid","setpgid","setsid","setuid","sleep","nanosleep","tcgetpgrp","tcsetpgrp","ttyname","ttyname_r","unlink","wait","waitpid","write","pread","pwrite","umask","utime","kill","killpg","mlock","munlock","mlockall","munlockall","mmap","munmap","if_nametoindex","if_indextoname","lstat","fsync","setenv","unsetenv","symlink","ftruncate","signal","getrusage","realpath","flock","times","pthread_self","pthread_join","pthread_exit","pthread_attr_init","pthread_attr_destroy","pthread_attr_setstacksize","pthread_attr_setdetachstate","pthread_detach","sched_yield","pthread_key_create","pthread_key_delete","pthread_getspecific","pthread_setspecific","pthread_mutex_init","pthread_mutex_destroy","pthread_mutex_lock","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_init","pthread_mutexattr_destroy","pthread_mutexattr_settype","pthread_cond_init","pthread_cond_wait","pthread_cond_timedwait","pthread_cond_signal","pthread_cond_broadcast","pthread_cond_destroy","pthread_condattr_init","pthread_condattr_destroy","pthread_rwlock_init","pthread_rwlock_destroy","pthread_rwlock_rdlock","pthread_rwlock_tryrdlock","pthread_rwlock_wrlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlockattr_init","pthread_rwlockattr_destroy","getsockopt","raise","sigaction","utimes","dlopen","dlerror","dlsym","dlclose","dladdr","getaddrinfo","freeaddrinfo","gai_strerror","res_init","gmtime_r","localtime_r","mktime","time","gmtime","localtime","difftime","timegm","mknod","gethostname","endservent","getservbyname","getservbyport","getservent","setservent","getprotobyname","getprotobynumber","chroot","usleep","send","recv","putenv","poll","select","setlocale","localeconv","sem_wait","sem_trywait","sem_post","statvfs","fstatvfs","readlink","sigemptyset","sigaddset","sigfillset","sigdelset","sigismember","sigprocmask","sigpending","sysconf","mkfifo","pselect","fseeko","ftello","tcdrain","cfgetispeed","cfgetospeed","cfsetispeed","cfsetospeed","tcgetattr","tcsetattr","tcflow","tcflush","tcgetsid","tcsendbreak","mkstemp","mkdtemp","tmpnam","openlog","closelog","setlogmask","syslog","nice","grantpt","posix_openpt","ptsname","unlockpt","strcasestr","getline","lockf","open_wmemstream","getsid","truncate","pause","readlinkat","mkdirat","openat","fdopendir","readdir_r","cfmakeraw","cfsetspeed","sem_destroy","sem_init","fdatasync","mincore","clock_getres","clock_gettime","clock_settime","clock_getcpuclockid","dirfd","pthread_getattr_np","pthread_attr_getstack","memalign","setgroups","pipe2","statfs","statfs64","fstatfs","fstatfs64","statvfs64","fstatvfs64","memrchr","posix_fadvise","posix_fadvise64","futimens","utimensat","duplocale","freelocale","newlocale","uselocale","creat64","fstat64","fstatat64","ftruncate64","lseek64","lstat64","mmap64","open64","openat64","pread64","readdir64","readdir64_r","stat64","truncate64","mknodat","pthread_condattr_getclock","pthread_condattr_setclock","pthread_condattr_setpshared","pthread_mutexattr_setpshared","pthread_rwlockattr_getpshared","pthread_rwlockattr_setpshared","ptsname_r","clearenv","waitid","setreuid","setregid","getresuid","getresgid","acct","brk","sbrk","vfork","setresgid","setresuid","wait4","login_tty","execvpe","fexecve","getifaddrs","freeifaddrs","bind","writev","readv","sendmsg","recvmsg","uname","preadv64","pwrite64","pwritev64","forkpty","openpty","aio_read","aio_write","aio_fsync","aio_error","aio_return","aio_suspend","aio_cancel","lio_listio","pwritev","preadv","getnameinfo","getloadavg","process_vm_readv","process_vm_writev","futimes","strerror_r","abs","atof","labs","rand","srand","lutimes","setpwent","endpwent","getpwent","setgrent","endgrent","getgrent","setspent","endspent","getspent","getspnam","getspnam_r","shm_open","shmget","shmat","shmdt","shmctl","ftok","semget","semop","semctl","msgctl","msgget","msgrcv","msgsnd","mprotect","__errno_location","fopen64","freopen64","tmpfile64","fgetpos64","fsetpos64","fseeko64","ftello64","fallocate","fallocate64","posix_fallocate","posix_fallocate64","readahead","getxattr","lgetxattr","fgetxattr","setxattr","lsetxattr","fsetxattr","listxattr","llistxattr","flistxattr","removexattr","lremovexattr","fremovexattr","signalfd","timerfd_create","timerfd_gettime","timerfd_settime","quotactl","mq_open","mq_close","mq_unlink","mq_receive","mq_timedreceive","mq_send","mq_timedsend","mq_getattr","mq_setattr","epoll_pwait","dup3","mkostemp","mkostemps","sigtimedwait","sigwaitinfo","nl_langinfo_l","accept4","pthread_setschedprio","reboot","setfsgid","setfsuid","mkfifoat","if_nameindex","if_freenameindex","sync_file_range","mremap","glob","globfree","posix_madvise","shm_unlink","seekdir","telldir","madvise","msync","remap_file_pages","recvfrom","mkstemps","nl_langinfo","getdomainname","setdomainname","vhangup","sync","syscall","sched_getaffinity","sched_setaffinity","epoll_create","epoll_create1","epoll_wait","epoll_ctl","pthread_getschedparam","unshare","umount","sched_get_priority_max","tee","settimeofday","splice","eventfd","sched_rr_get_interval","sem_timedwait","sem_getvalue","sched_setparam","setns","swapoff","vmsplice","mount","personality","prctl","sched_getparam","ppoll","pthread_mutex_timedlock","clone","sched_getscheduler","clock_nanosleep","pthread_attr_getguardsize","sethostname","sched_get_priority_min","pthread_condattr_getpshared","sysinfo","umount2","pthread_setschedparam","swapon","sched_setscheduler","sendfile","sendfile64","sigsuspend","getgrgid_r","sigaltstack","sem_close","getdtablesize","getgrnam_r","initgroups","pthread_sigmask","sem_open","getgrnam","pthread_cancel","pthread_kill","sem_unlink","daemon","getpwnam_r","getpwuid_r","sigwait","pthread_atfork","getgrgid","getgrouplist","pthread_mutexattr_getpshared","popen","faccessat","pthread_create","dl_iterate_phdr","setmntent","getmntent","addmntent","endmntent","hasmntopt","posix_spawn","posix_spawnp","posix_spawnattr_init","posix_spawnattr_destroy","posix_spawnattr_getsigdefault","posix_spawnattr_setsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_setsigmask","posix_spawnattr_getflags","posix_spawnattr_setflags","posix_spawnattr_getpgroup","posix_spawnattr_setpgroup","posix_spawnattr_getschedpolicy","posix_spawnattr_setschedpolicy","posix_spawnattr_getschedparam","posix_spawnattr_setschedparam","posix_spawn_file_actions_init","posix_spawn_file_actions_destroy","posix_spawn_file_actions_addopen","posix_spawn_file_actions_addclose","posix_spawn_file_actions_adddup2","fread_unlocked","inotify_rm_watch","inotify_init","inotify_init1","inotify_add_watch","fanotify_init","regcomp","regexec","regerror","regfree","iconv_open","iconv","iconv_close","gettid","fgetspent_r","sgetspent_r","getspent_r","qsort_r","sendmmsg","recvmmsg","getrlimit64","setrlimit64","getrlimit","setrlimit","prlimit","prlimit64","utmpname","utmpxname","getutxent","getutxid","getutxline","pututxline","setutxent","endutxent","getpt","mallopt","gettimeofday","statx","getrandom","memmem","getauxval","adjtimex","ntp_adjtime","ntp_gettime","copy_file_range","fanotify_mark","preadv2","pwritev2","ioctl","backtrace","glob64","globfree64","ptrace","pthread_attr_getaffinity_np","pthread_attr_setaffinity_np","getpriority","setpriority","pthread_getaffinity_np","pthread_setaffinity_np","pthread_rwlockattr_getkind_np","pthread_rwlockattr_setkind_np","sched_getcpu","mallinfo","malloc_usable_size","getpwent_r","getgrent_r","pthread_getname_np","pthread_setname_np","dlmopen","dlinfo","getcontext","setcontext","makecontext","swapcontext","iopl","ioperm","sysctl","int8_t","int16_t","int32_t","int64_t","uint8_t","uint16_t","uint32_t","uint64_t","c_schar","c_uchar","c_short","c_ushort","c_int","c_uint","c_float","c_double","c_longlong","c_ulonglong","intmax_t","uintmax_t","size_t","ptrdiff_t","intptr_t","uintptr_t","ssize_t","pid_t","uid_t","gid_t","in_addr_t","in_port_t","sighandler_t","cc_t","DIR","locale_t","group","gr_name","gr_passwd","gr_gid","gr_mem","utimbuf","actime","modtime","timeval","tv_sec","tv_usec","timespec","tv_sec","tv_nsec","rlimit","rlim_cur","rlim_max","rusage","ru_utime","ru_stime","ru_maxrss","ru_ixrss","ru_idrss","ru_isrss","ru_minflt","ru_majflt","ru_nswap","ru_inblock","ru_oublock","ru_msgsnd","ru_msgrcv","ru_nsignals","ru_nvcsw","ru_nivcsw","ipv6_mreq","ipv6mr_multiaddr","ipv6mr_interface","hostent","h_name","h_aliases","h_addrtype","h_length","h_addr_list","iovec","iov_base","iov_len","pollfd","fd","events","revents","winsize","ws_row","ws_col","ws_xpixel","ws_ypixel","linger","l_onoff","l_linger","sigval","sival_ptr","itimerval","it_interval","it_value","tms","tms_utime","tms_stime","tms_cutime","tms_cstime","servent","s_name","s_aliases","s_port","s_proto","protoent","p_name","p_aliases","p_proto","INT_MIN","INT_MAX","SIG_DFL","SIG_IGN","SIG_ERR","DT_UNKNOWN","DT_FIFO","DT_CHR","DT_DIR","DT_BLK","DT_REG","DT_LNK","DT_SOCK","FD_CLOEXEC","USRQUOTA","GRPQUOTA","SIGIOT","S_ISUID","S_ISGID","S_ISVTX","IF_NAMESIZE","IFNAMSIZ","LOG_EMERG","LOG_ALERT","LOG_CRIT","LOG_ERR","LOG_WARNING","LOG_NOTICE","LOG_INFO","LOG_DEBUG","LOG_KERN","LOG_USER","LOG_MAIL","LOG_DAEMON","LOG_AUTH","LOG_SYSLOG","LOG_LPR","LOG_NEWS","LOG_UUCP","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_PID","LOG_CONS","LOG_ODELAY","LOG_NDELAY","LOG_NOWAIT","LOG_PRIMASK","LOG_FACMASK","PRIO_MIN","PRIO_MAX","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_TCP","IPPROTO_UDP","IPPROTO_IP","IPPROTO_IPV6","INADDR_LOOPBACK","INADDR_ANY","INADDR_BROADCAST","INADDR_NONE","ARPOP_REQUEST","ARPOP_REPLY","ATF_COM","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","FILE","fpos_t","sa_family_t","speed_t","tcflag_t","clockid_t","key_t","id_t","timezone","in_addr","s_addr","ip_mreq","imr_multiaddr","imr_interface","ip_mreq_source","imr_multiaddr","imr_interface","imr_sourceaddr","sockaddr","sa_family","sa_data","sockaddr_in","sin_family","sin_port","sin_addr","sin_zero","sockaddr_in6","sin6_family","sin6_port","sin6_flowinfo","sin6_addr","sin6_scope_id","addrinfo","ai_flags","ai_family","ai_socktype","ai_protocol","ai_addrlen","ai_addr","ai_canonname","ai_next","sockaddr_ll","sll_family","sll_protocol","sll_ifindex","sll_hatype","sll_pkttype","sll_halen","sll_addr","fd_set","tm","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","tm_zone","sched_param","sched_priority","Dl_info","dli_fname","dli_fbase","dli_sname","dli_saddr","lconv","decimal_point","thousands_sep","grouping","int_curr_symbol","currency_symbol","mon_decimal_point","mon_thousands_sep","mon_grouping","positive_sign","negative_sign","int_frac_digits","frac_digits","p_cs_precedes","p_sep_by_space","n_cs_precedes","n_sep_by_space","p_sign_posn","n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_n_cs_precedes","int_n_sep_by_space","int_p_sign_posn","int_n_sign_posn","in_pktinfo","ipi_ifindex","ipi_spec_dst","ipi_addr","ifaddrs","ifa_next","ifa_name","ifa_flags","ifa_addr","ifa_netmask","ifa_ifu","ifa_data","in6_rtmsg","arpreq","arp_pa","arp_ha","arp_flags","arp_netmask","arp_dev","arpreq_old","arp_pa","arp_ha","arp_flags","arp_netmask","arphdr","ar_hrd","ar_pro","ar_hln","ar_pln","ar_op","mmsghdr","msg_hdr","msg_len","epoll_event","events","u64","sockaddr_un","sun_family","sun_path","sockaddr_storage","ss_family","utsname","sysname","nodename","release","version","machine","domainname","sigevent","sigev_value","sigev_signo","sigev_notify","sigev_notify_thread_id","EXIT_FAILURE","EXIT_SUCCESS","RAND_MAX","EOF","SEEK_SET","SEEK_CUR","SEEK_END","_IOFBF","_IONBF","_IOLBF","F_DUPFD","F_GETFD","F_SETFD","F_GETFL","F_SETFL","F_SETLEASE","F_GETLEASE","F_NOTIFY","F_CANCELLK","F_DUPFD_CLOEXEC","F_SETPIPE_SZ","F_GETPIPE_SZ","F_ADD_SEALS","F_GET_SEALS","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_GROW","F_SEAL_WRITE","SIGTRAP","PTHREAD_CREATE_JOINABLE","PTHREAD_CREATE_DETACHED","CLOCK_REALTIME","CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_THREAD_CPUTIME_ID","CLOCK_MONOTONIC_RAW","CLOCK_REALTIME_COARSE","CLOCK_MONOTONIC_COARSE","CLOCK_BOOTTIME","CLOCK_REALTIME_ALARM","CLOCK_BOOTTIME_ALARM","CLOCK_TAI","TIMER_ABSTIME","RUSAGE_SELF","O_RDONLY","O_WRONLY","O_RDWR","SOCK_CLOEXEC","S_IFIFO","S_IFCHR","S_IFBLK","S_IFDIR","S_IFREG","S_IFLNK","S_IFSOCK","S_IFMT","S_IRWXU","S_IXUSR","S_IWUSR","S_IRUSR","S_IRWXG","S_IXGRP","S_IWGRP","S_IRGRP","S_IRWXO","S_IXOTH","S_IWOTH","S_IROTH","F_OK","R_OK","W_OK","X_OK","STDIN_FILENO","STDOUT_FILENO","STDERR_FILENO","SIGHUP","SIGINT","SIGQUIT","SIGILL","SIGABRT","SIGFPE","SIGKILL","SIGSEGV","SIGPIPE","SIGALRM","SIGTERM","PROT_NONE","PROT_READ","PROT_WRITE","PROT_EXEC","LC_CTYPE","LC_NUMERIC","LC_TIME","LC_COLLATE","LC_MONETARY","LC_MESSAGES","LC_ALL","LC_CTYPE_MASK","LC_NUMERIC_MASK","LC_TIME_MASK","LC_COLLATE_MASK","LC_MONETARY_MASK","LC_MESSAGES_MASK","MAP_FILE","MAP_SHARED","MAP_PRIVATE","MAP_FIXED","MAP_FAILED","MS_ASYNC","MS_INVALIDATE","MS_SYNC","MS_RDONLY","MS_NOSUID","MS_NODEV","MS_NOEXEC","MS_SYNCHRONOUS","MS_REMOUNT","MS_MANDLOCK","MS_DIRSYNC","MS_NOATIME","MS_NODIRATIME","MS_BIND","MS_MOVE","MS_REC","MS_SILENT","MS_POSIXACL","MS_UNBINDABLE","MS_PRIVATE","MS_SLAVE","MS_SHARED","MS_RELATIME","MS_KERNMOUNT","MS_I_VERSION","MS_STRICTATIME","MS_ACTIVE","MS_MGC_VAL","MS_MGC_MSK","SCM_RIGHTS","SCM_CREDENTIALS","PROT_GROWSDOWN","PROT_GROWSUP","MAP_TYPE","MADV_NORMAL","MADV_RANDOM","MADV_SEQUENTIAL","MADV_WILLNEED","MADV_DONTNEED","MADV_FREE","MADV_REMOVE","MADV_DONTFORK","MADV_DOFORK","MADV_MERGEABLE","MADV_UNMERGEABLE","MADV_HUGEPAGE","MADV_NOHUGEPAGE","MADV_DONTDUMP","MADV_DODUMP","MADV_HWPOISON","IFF_UP","IFF_BROADCAST","IFF_DEBUG","IFF_LOOPBACK","IFF_POINTOPOINT","IFF_NOTRAILERS","IFF_RUNNING","IFF_NOARP","IFF_PROMISC","IFF_ALLMULTI","IFF_MASTER","IFF_SLAVE","IFF_MULTICAST","IFF_PORTSEL","IFF_AUTOMEDIA","IFF_DYNAMIC","SOL_IP","SOL_TCP","SOL_UDP","SOL_IPV6","SOL_ICMPV6","SOL_RAW","SOL_DECNET","SOL_X25","SOL_PACKET","SOL_ATM","SOL_AAL","SOL_IRDA","SOL_NETBEUI","SOL_LLC","SOL_DCCP","SOL_NETLINK","SOL_TIPC","SOL_BLUETOOTH","SOL_ALG","AF_UNSPEC","AF_UNIX","AF_LOCAL","AF_INET","AF_AX25","AF_IPX","AF_APPLETALK","AF_NETROM","AF_BRIDGE","AF_ATMPVC","AF_X25","AF_INET6","AF_ROSE","AF_DECnet","AF_NETBEUI","AF_SECURITY","AF_KEY","AF_NETLINK","AF_ROUTE","AF_PACKET","AF_ASH","AF_ECONET","AF_ATMSVC","AF_RDS","AF_SNA","AF_IRDA","AF_PPPOX","AF_WANPIPE","AF_LLC","AF_CAN","AF_TIPC","AF_BLUETOOTH","AF_IUCV","AF_RXRPC","AF_ISDN","AF_PHONET","AF_IEEE802154","AF_CAIF","AF_ALG","PF_UNSPEC","PF_UNIX","PF_LOCAL","PF_INET","PF_AX25","PF_IPX","PF_APPLETALK","PF_NETROM","PF_BRIDGE","PF_ATMPVC","PF_X25","PF_INET6","PF_ROSE","PF_DECnet","PF_NETBEUI","PF_SECURITY","PF_KEY","PF_NETLINK","PF_ROUTE","PF_PACKET","PF_ASH","PF_ECONET","PF_ATMSVC","PF_RDS","PF_SNA","PF_IRDA","PF_PPPOX","PF_WANPIPE","PF_LLC","PF_CAN","PF_TIPC","PF_BLUETOOTH","PF_IUCV","PF_RXRPC","PF_ISDN","PF_PHONET","PF_IEEE802154","PF_CAIF","PF_ALG","SOMAXCONN","MSG_OOB","MSG_PEEK","MSG_DONTROUTE","MSG_CTRUNC","MSG_TRUNC","MSG_DONTWAIT","MSG_EOR","MSG_WAITALL","MSG_FIN","MSG_SYN","MSG_CONFIRM","MSG_RST","MSG_ERRQUEUE","MSG_NOSIGNAL","MSG_MORE","MSG_WAITFORONE","MSG_FASTOPEN","MSG_CMSG_CLOEXEC","SCM_TIMESTAMP","SOCK_RAW","SOCK_RDM","IP_TOS","IP_TTL","IP_HDRINCL","IP_OPTIONS","IP_ROUTER_ALERT","IP_RECVOPTS","IP_RETOPTS","IP_PKTINFO","IP_PKTOPTIONS","IP_MTU_DISCOVER","IP_RECVERR","IP_RECVTTL","IP_RECVTOS","IP_MTU","IP_FREEBIND","IP_IPSEC_POLICY","IP_XFRM_POLICY","IP_PASSSEC","IP_TRANSPARENT","IP_ORIGDSTADDR","IP_RECVORIGDSTADDR","IP_MINTTL","IP_NODEFRAG","IP_CHECKSUM","IP_BIND_ADDRESS_NO_PORT","IP_MULTICAST_IF","IP_MULTICAST_TTL","IP_MULTICAST_LOOP","IP_ADD_MEMBERSHIP","IP_DROP_MEMBERSHIP","IP_UNBLOCK_SOURCE","IP_BLOCK_SOURCE","IP_ADD_SOURCE_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_MSFILTER","IP_MULTICAST_ALL","IP_UNICAST_IF","IP_DEFAULT_MULTICAST_TTL","IP_DEFAULT_MULTICAST_LOOP","IP_PMTUDISC_DONT","IP_PMTUDISC_WANT","IP_PMTUDISC_DO","IP_PMTUDISC_PROBE","IP_PMTUDISC_INTERFACE","IP_PMTUDISC_OMIT","IPPROTO_HOPOPTS","IPPROTO_IGMP","IPPROTO_IPIP","IPPROTO_EGP","IPPROTO_PUP","IPPROTO_IDP","IPPROTO_TP","IPPROTO_DCCP","IPPROTO_ROUTING","IPPROTO_FRAGMENT","IPPROTO_RSVP","IPPROTO_GRE","IPPROTO_ESP","IPPROTO_AH","IPPROTO_NONE","IPPROTO_DSTOPTS","IPPROTO_MTP","IPPROTO_ENCAP","IPPROTO_PIM","IPPROTO_COMP","IPPROTO_SCTP","IPPROTO_MH","IPPROTO_UDPLITE","IPPROTO_RAW","MCAST_EXCLUDE","MCAST_INCLUDE","MCAST_JOIN_GROUP","MCAST_BLOCK_SOURCE","MCAST_UNBLOCK_SOURCE","MCAST_LEAVE_GROUP","MCAST_JOIN_SOURCE_GROUP","MCAST_LEAVE_SOURCE_GROUP","MCAST_MSFILTER","IPV6_ADDRFORM","IPV6_2292PKTINFO","IPV6_2292HOPOPTS","IPV6_2292DSTOPTS","IPV6_2292RTHDR","IPV6_2292PKTOPTIONS","IPV6_CHECKSUM","IPV6_2292HOPLIMIT","IPV6_NEXTHOP","IPV6_AUTHHDR","IPV6_UNICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_LOOP","IPV6_ADD_MEMBERSHIP","IPV6_DROP_MEMBERSHIP","IPV6_ROUTER_ALERT","IPV6_MTU_DISCOVER","IPV6_MTU","IPV6_RECVERR","IPV6_V6ONLY","IPV6_JOIN_ANYCAST","IPV6_LEAVE_ANYCAST","IPV6_IPSEC_POLICY","IPV6_XFRM_POLICY","IPV6_RECVPKTINFO","IPV6_PKTINFO","IPV6_RECVHOPLIMIT","IPV6_HOPLIMIT","IPV6_RECVHOPOPTS","IPV6_HOPOPTS","IPV6_RTHDRDSTOPTS","IPV6_RECVRTHDR","IPV6_RTHDR","IPV6_RECVDSTOPTS","IPV6_DSTOPTS","IPV6_RECVPATHMTU","IPV6_PATHMTU","IPV6_DONTFRAG","IPV6_RECVTCLASS","IPV6_TCLASS","IPV6_AUTOFLOWLABEL","IPV6_ADDR_PREFERENCES","IPV6_MINHOPCOUNT","IPV6_ORIGDSTADDR","IPV6_RECVORIGDSTADDR","IPV6_TRANSPARENT","IPV6_UNICAST_IF","IPV6_PREFER_SRC_TMP","IPV6_PREFER_SRC_PUBLIC","IPV6_PREFER_SRC_PUBTMP_DEFAULT","IPV6_PREFER_SRC_COA","IPV6_PREFER_SRC_HOME","IPV6_PREFER_SRC_CGA","IPV6_PREFER_SRC_NONCGA","IPV6_PMTUDISC_DONT","IPV6_PMTUDISC_WANT","IPV6_PMTUDISC_DO","IPV6_PMTUDISC_PROBE","TCP_NODELAY","TCP_MAXSEG","TCP_CORK","TCP_KEEPIDLE","TCP_KEEPINTVL","TCP_KEEPCNT","TCP_SYNCNT","TCP_LINGER2","TCP_DEFER_ACCEPT","TCP_WINDOW_CLAMP","TCP_INFO","TCP_QUICKACK","TCP_CONGESTION","SO_DEBUG","SHUT_RD","SHUT_WR","SHUT_RDWR","LOCK_SH","LOCK_EX","LOCK_NB","LOCK_UN","SS_ONSTACK","SS_DISABLE","PATH_MAX","UIO_MAXIOV","FD_SETSIZE","EPOLLIN","EPOLLPRI","EPOLLOUT","EPOLLRDNORM","EPOLLRDBAND","EPOLLWRNORM","EPOLLWRBAND","EPOLLMSG","EPOLLERR","EPOLLHUP","EPOLLET","EPOLL_CTL_ADD","EPOLL_CTL_MOD","EPOLL_CTL_DEL","MNT_DETACH","MNT_EXPIRE","Q_GETFMT","Q_GETINFO","Q_SETINFO","QIF_BLIMITS","QIF_SPACE","QIF_ILIMITS","QIF_INODES","QIF_BTIME","QIF_ITIME","QIF_LIMITS","QIF_USAGE","QIF_TIMES","QIF_ALL","MNT_FORCE","Q_SYNC","Q_QUOTAON","Q_QUOTAOFF","Q_GETQUOTA","Q_SETQUOTA","TCIOFF","TCION","TCOOFF","TCOON","TCIFLUSH","TCOFLUSH","TCIOFLUSH","NL0","NL1","TAB0","CR0","FF0","BS0","VT0","VERASE","VKILL","VINTR","VQUIT","VLNEXT","IGNBRK","BRKINT","IGNPAR","PARMRK","INPCK","ISTRIP","INLCR","IGNCR","ICRNL","IXANY","IMAXBEL","OPOST","CS5","CRTSCTS","ECHO","OCRNL","ONOCR","ONLRET","OFILL","OFDEL","CLONE_VM","CLONE_FS","CLONE_FILES","CLONE_SIGHAND","CLONE_PTRACE","CLONE_VFORK","CLONE_PARENT","CLONE_THREAD","CLONE_NEWNS","CLONE_SYSVSEM","CLONE_SETTLS","CLONE_PARENT_SETTID","CLONE_CHILD_CLEARTID","CLONE_DETACHED","CLONE_UNTRACED","CLONE_CHILD_SETTID","CLONE_NEWUTS","CLONE_NEWIPC","CLONE_NEWUSER","CLONE_NEWPID","CLONE_NEWNET","CLONE_IO","WNOHANG","WUNTRACED","WSTOPPED","WEXITED","WCONTINUED","WNOWAIT","MMAP_PAGE_ZERO","ADDR_LIMIT_32BIT","SHORT_INODE","WHOLE_SECONDS","STICKY_TIMEOUTS","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEFORK","PTRACE_O_TRACEVFORK","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEVFORKDONE","PTRACE_O_TRACEEXIT","PTRACE_O_TRACESECCOMP","PTRACE_EVENT_FORK","PTRACE_EVENT_VFORK","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_VFORK_DONE","PTRACE_EVENT_EXIT","PTRACE_EVENT_SECCOMP","__WNOTHREAD","__WALL","__WCLONE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SPLICE_F_MORE","SPLICE_F_GIFT","RTLD_LOCAL","RTLD_LAZY","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","AT_FDCWD","AT_SYMLINK_NOFOLLOW","AT_REMOVEDIR","AT_SYMLINK_FOLLOW","AT_NO_AUTOMOUNT","AT_EMPTY_PATH","LOG_CRON","LOG_AUTHPRIV","LOG_FTP","LOG_PERROR","PIPE_BUF","SI_LOAD_SHIFT","CLD_EXITED","CLD_KILLED","CLD_DUMPED","CLD_TRAPPED","CLD_STOPPED","CLD_CONTINUED","SIGEV_SIGNAL","SIGEV_NONE","SIGEV_THREAD","P_ALL","P_PID","P_PGID","P_PIDFD","UTIME_OMIT","UTIME_NOW","POLLIN","POLLPRI","POLLOUT","POLLERR","POLLHUP","POLLNVAL","POLLRDNORM","POLLRDBAND","IPTOS_LOWDELAY","IPTOS_THROUGHPUT","IPTOS_RELIABILITY","IPTOS_MINCOST","IPTOS_PREC_NETCONTROL","IPTOS_PREC_INTERNETCONTROL","IPTOS_PREC_CRITIC_ECP","IPTOS_PREC_FLASHOVERRIDE","IPTOS_PREC_FLASH","IPTOS_PREC_IMMEDIATE","IPTOS_PREC_PRIORITY","IPTOS_PREC_ROUTINE","IPTOS_ECN_MASK","IPTOS_ECN_ECT1","IPTOS_ECN_ECT0","IPTOS_ECN_CE","IPOPT_COPY","IPOPT_CLASS_MASK","IPOPT_NUMBER_MASK","IPOPT_CONTROL","IPOPT_RESERVED1","IPOPT_MEASUREMENT","IPOPT_RESERVED2","IPOPT_END","IPOPT_NOOP","IPOPT_SEC","IPOPT_LSRR","IPOPT_TIMESTAMP","IPOPT_RR","IPOPT_SID","IPOPT_SSRR","IPOPT_RA","IPVERSION","MAXTTL","IPDEFTTL","IPOPT_OPTVAL","IPOPT_OLEN","IPOPT_OFFSET","IPOPT_MINOFF","MAX_IPOPTLEN","IPOPT_NOP","IPOPT_EOL","IPOPT_TS","IPOPT_TS_TSONLY","IPOPT_TS_TSANDADDR","IPOPT_TS_PRESPEC","ARPOP_RREQUEST","ARPOP_RREPLY","ARPOP_InREQUEST","ARPOP_InREPLY","ARPOP_NAK","ATF_NETMASK","ATF_DONTPUB","ARPHRD_NETROM","ARPHRD_ETHER","ARPHRD_EETHER","ARPHRD_AX25","ARPHRD_PRONET","ARPHRD_CHAOS","ARPHRD_IEEE802","ARPHRD_ARCNET","ARPHRD_APPLETLK","ARPHRD_DLCI","ARPHRD_ATM","ARPHRD_METRICOM","ARPHRD_IEEE1394","ARPHRD_EUI64","ARPHRD_INFINIBAND","ARPHRD_SLIP","ARPHRD_CSLIP","ARPHRD_SLIP6","ARPHRD_CSLIP6","ARPHRD_RSRVD","ARPHRD_ADAPT","ARPHRD_ROSE","ARPHRD_X25","ARPHRD_HWX25","ARPHRD_PPP","ARPHRD_CISCO","ARPHRD_HDLC","ARPHRD_LAPB","ARPHRD_DDCMP","ARPHRD_RAWHDLC","ARPHRD_TUNNEL","ARPHRD_TUNNEL6","ARPHRD_FRAD","ARPHRD_SKIP","ARPHRD_LOOPBACK","ARPHRD_LOCALTLK","ARPHRD_FDDI","ARPHRD_BIF","ARPHRD_SIT","ARPHRD_IPDDP","ARPHRD_IPGRE","ARPHRD_PIMREG","ARPHRD_HIPPI","ARPHRD_ASH","ARPHRD_ECONET","ARPHRD_IRDA","ARPHRD_FCPP","ARPHRD_FCAL","ARPHRD_FCPL","ARPHRD_FCFABRIC","ARPHRD_IEEE802_TR","ARPHRD_IEEE80211","ARPHRD_IEEE80211_PRISM","ARPHRD_IEEE80211_RADIOTAP","ARPHRD_IEEE802154","ARPHRD_VOID","ARPHRD_NONE","IPPROTO_BEETPH","IPPROTO_MPLS","IPV6_HDRINCL","IPV6_PMTUDISC_INTERFACE","IPV6_PMTUDISC_OMIT","CLONE_NEWCGROUP","ADDR_NO_RANDOMIZE","ADDR_COMPAT_LAYOUT","READ_IMPLIES_EXEC","ADDR_LIMIT_3GB","PTRACE_O_EXITKILL","PTRACE_O_SUSPEND_SECCOMP","PTRACE_O_MASK","CMSG_FIRSTHDR","CMSG_DATA","CMSG_SPACE","CMSG_LEN","FD_CLR","FD_ISSET","FD_SET","FD_ZERO","WIFSTOPPED","WSTOPSIG","WIFCONTINUED","WIFSIGNALED","WTERMSIG","WIFEXITED","WEXITSTATUS","WCOREDUMP","W_EXITCODE","W_STOPCODE","QCMD","IPOPT_COPIED","IPOPT_CLASS","IPOPT_NUMBER","IPTOS_ECN","useconds_t","dev_t","socklen_t","mode_t","ino64_t","off64_t","blkcnt64_t","rlim64_t","mqd_t","nfds_t","nl_item","idtype_t","loff_t","pthread_key_t","__u8","__u16","__s16","__u32","__s32","Elf32_Half","Elf32_Word","Elf32_Off","Elf32_Addr","Elf64_Half","Elf64_Word","Elf64_Off","Elf64_Addr","Elf64_Xword","Elf64_Sxword","Elf32_Section","Elf64_Section","canid_t","can_err_mask_t","iconv_t","fpos64_t","rlimit64","rlim_cur","rlim_max","glob_t","gl_pathc","gl_pathv","gl_offs","gl_flags","passwd","pw_name","pw_passwd","pw_uid","pw_gid","pw_gecos","pw_dir","pw_shell","spwd","sp_namp","sp_pwdp","sp_lstchg","sp_min","sp_max","sp_warn","sp_inact","sp_expire","sp_flag","dqblk","dqb_bhardlimit","dqb_bsoftlimit","dqb_curspace","dqb_ihardlimit","dqb_isoftlimit","dqb_curinodes","dqb_btime","dqb_itime","dqb_valid","signalfd_siginfo","ssi_signo","ssi_errno","ssi_code","ssi_pid","ssi_uid","ssi_fd","ssi_tid","ssi_band","ssi_overrun","ssi_trapno","ssi_status","ssi_int","ssi_ptr","ssi_utime","ssi_stime","ssi_addr","ssi_addr_lsb","ssi_syscall","ssi_call_addr","ssi_arch","itimerspec","it_interval","it_value","fsid_t","packet_mreq","mr_ifindex","mr_type","mr_alen","mr_address","cpu_set_t","if_nameindex","if_index","if_name","msginfo","msgpool","msgmap","msgmax","msgmnb","msgmni","msgssz","msgtql","msgseg","sembuf","sem_num","sem_op","sem_flg","input_event","time","type_","code","value","input_id","bustype","vendor","product","version","input_absinfo","value","minimum","maximum","fuzz","flat","resolution","input_keymap_entry","flags","len","index","keycode","scancode","input_mask","type_","codes_size","codes_ptr","ff_replay","length","delay","ff_trigger","button","interval","ff_envelope","attack_length","attack_level","fade_length","fade_level","ff_constant_effect","level","envelope","ff_ramp_effect","start_level","end_level","envelope","ff_condition_effect","right_saturation","left_saturation","right_coeff","left_coeff","deadband","center","ff_periodic_effect","waveform","period","magnitude","offset","phase","envelope","custom_len","custom_data","ff_rumble_effect","strong_magnitude","weak_magnitude","ff_effect","type_","id","direction","trigger","replay","u","dl_phdr_info","dlpi_addr","dlpi_name","dlpi_phdr","dlpi_phnum","dlpi_adds","dlpi_subs","dlpi_tls_modid","dlpi_tls_data","Elf32_Ehdr","e_ident","e_type","e_machine","e_version","e_entry","e_phoff","e_shoff","e_flags","e_ehsize","e_phentsize","e_phnum","e_shentsize","e_shnum","e_shstrndx","Elf64_Ehdr","e_ident","e_type","e_machine","e_version","e_entry","e_phoff","e_shoff","e_flags","e_ehsize","e_phentsize","e_phnum","e_shentsize","e_shnum","e_shstrndx","Elf32_Sym","st_name","st_value","st_size","st_info","st_other","st_shndx","Elf64_Sym","st_name","st_info","st_other","st_shndx","st_value","st_size","Elf32_Phdr","p_type","p_offset","p_vaddr","p_paddr","p_filesz","p_memsz","p_flags","p_align","Elf64_Phdr","p_type","p_flags","p_offset","p_vaddr","p_paddr","p_filesz","p_memsz","p_align","Elf32_Shdr","sh_name","sh_type","sh_flags","sh_addr","sh_offset","sh_size","sh_link","sh_info","sh_addralign","sh_entsize","Elf64_Shdr","sh_name","sh_type","sh_flags","sh_addr","sh_offset","sh_size","sh_link","sh_info","sh_addralign","sh_entsize","ucred","pid","uid","gid","mntent","mnt_fsname","mnt_dir","mnt_type","mnt_opts","mnt_freq","mnt_passno","posix_spawn_file_actions_t","posix_spawnattr_t","genlmsghdr","cmd","version","reserved","in6_pktinfo","ipi6_addr","ipi6_ifindex","arpd_request","req","ip","dev","stamp","updated","ha","inotify_event","wd","mask","cookie","len","fanotify_response","fd","response","sockaddr_vm","svm_family","svm_reserved1","svm_port","svm_cid","svm_zero","regmatch_t","rm_so","rm_eo","sock_extended_err","ee_errno","ee_origin","ee_type","ee_code","ee_pad","ee_info","ee_data","__c_anonymous_sockaddr_can_tp","rx_id","tx_id","__c_anonymous_sockaddr_can_j1939","name","pgn","addr","can_filter","can_id","can_mask","sockaddr_nl","nl_family","nl_pid","nl_groups","dirent","d_ino","d_off","d_reclen","d_type","d_name","dirent64","d_ino","d_off","d_reclen","d_type","d_name","sockaddr_alg","salg_family","salg_type","salg_feat","salg_mask","salg_name","af_alg_iv","ivlen","iv","mq_attr","mq_flags","mq_maxmsg","mq_msgsize","mq_curmsgs","__c_anonymous_sockaddr_can_can_addr","tp","j1939","sockaddr_can","can_family","can_ifindex","can_addr","ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","ABMON_1","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ABMON_10","ABMON_11","ABMON_12","MON_1","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MON_10","MON_11","MON_12","AM_STR","PM_STR","D_T_FMT","D_FMT","T_FMT","T_FMT_AMPM","ERA","ERA_D_FMT","ALT_DIGITS","ERA_D_T_FMT","ERA_T_FMT","CODESET","CRNCYSTR","RADIXCHAR","THOUSEP","YESEXPR","NOEXPR","YESSTR","NOSTR","RUSAGE_CHILDREN","L_tmpnam","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_CHOWN_RESTRICTED","_PC_NO_TRUNC","_PC_VDISABLE","_PC_SYNC_IO","_PC_ASYNC_IO","_PC_PRIO_IO","_PC_SOCK_MAXBUF","_PC_FILESIZEBITS","_PC_REC_INCR_XFER_SIZE","_PC_REC_MAX_XFER_SIZE","_PC_REC_MIN_XFER_SIZE","_PC_REC_XFER_ALIGN","_PC_ALLOC_SIZE_MIN","_PC_SYMLINK_MAX","_PC_2_SYMLINKS","MS_NOUSER","_SC_ARG_MAX","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_NGROUPS_MAX","_SC_OPEN_MAX","_SC_STREAM_MAX","_SC_TZNAME_MAX","_SC_JOB_CONTROL","_SC_SAVED_IDS","_SC_REALTIME_SIGNALS","_SC_PRIORITY_SCHEDULING","_SC_TIMERS","_SC_ASYNCHRONOUS_IO","_SC_PRIORITIZED_IO","_SC_SYNCHRONIZED_IO","_SC_FSYNC","_SC_MAPPED_FILES","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_SEMAPHORES","_SC_SHARED_MEMORY_OBJECTS","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_DELAYTIMER_MAX","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_VERSION","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_RTSIG_MAX","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SIGQUEUE_MAX","_SC_TIMER_MAX","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_COLL_WEIGHTS_MAX","_SC_EXPR_NEST_MAX","_SC_LINE_MAX","_SC_RE_DUP_MAX","_SC_2_VERSION","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_SW_DEV","_SC_2_LOCALEDEF","_SC_UIO_MAXIOV","_SC_IOV_MAX","_SC_THREADS","_SC_THREAD_SAFE_FUNCTIONS","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_LOGIN_NAME_MAX","_SC_TTY_NAME_MAX","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_PHYS_PAGES","_SC_AVPHYS_PAGES","_SC_ATEXIT_MAX","_SC_PASS_MAX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_UNIX","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_SHM","_SC_2_CHAR_TERM","_SC_2_UPE","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","_SC_NZERO","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_ADVISORY_INFO","_SC_BARRIERS","_SC_CLOCK_SELECTION","_SC_CPUTIME","_SC_THREAD_CPUTIME","_SC_MONOTONIC_CLOCK","_SC_READER_WRITER_LOCKS","_SC_SPIN_LOCKS","_SC_REGEXP","_SC_SHELL","_SC_SPAWN","_SC_SPORADIC_SERVER","_SC_THREAD_SPORADIC_SERVER","_SC_TIMEOUTS","_SC_TYPED_MEMORY_OBJECTS","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_SYMLOOP_MAX","_SC_STREAMS","_SC_2_PBS_CHECKPOINT","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_HOST_NAME_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_IPV6","_SC_RAW_SOCKETS","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_SS_REPL_MAX","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_XOPEN_STREAMS","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","RLIM_SAVED_MAX","RLIM_SAVED_CUR","GLOB_ERR","GLOB_MARK","GLOB_NOSORT","GLOB_DOOFFS","GLOB_NOCHECK","GLOB_APPEND","GLOB_NOESCAPE","GLOB_NOSPACE","GLOB_ABORTED","GLOB_NOMATCH","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","S_IEXEC","S_IWRITE","S_IREAD","F_LOCK","F_TEST","F_TLOCK","F_ULOCK","F_SEAL_FUTURE_WRITE","IFF_LOWER_UP","IFF_DORMANT","IFF_ECHO","IFA_UNSPEC","IFA_ADDRESS","IFA_LOCAL","IFA_LABEL","IFA_BROADCAST","IFA_ANYCAST","IFA_CACHEINFO","IFA_MULTICAST","IFA_F_SECONDARY","IFA_F_TEMPORARY","IFA_F_NODAD","IFA_F_OPTIMISTIC","IFA_F_DADFAILED","IFA_F_HOMEADDRESS","IFA_F_DEPRECATED","IFA_F_TENTATIVE","IFA_F_PERMANENT","IFLA_UNSPEC","IFLA_ADDRESS","IFLA_BROADCAST","IFLA_IFNAME","IFLA_MTU","IFLA_LINK","IFLA_QDISC","IFLA_STATS","IFLA_COST","IFLA_PRIORITY","IFLA_MASTER","IFLA_WIRELESS","IFLA_PROTINFO","IFLA_TXQLEN","IFLA_MAP","IFLA_WEIGHT","IFLA_OPERSTATE","IFLA_LINKMODE","IFLA_LINKINFO","IFLA_NET_NS_PID","IFLA_IFALIAS","IFLA_NUM_VF","IFLA_VFINFO_LIST","IFLA_STATS64","IFLA_VF_PORTS","IFLA_PORT_SELF","IFLA_AF_SPEC","IFLA_GROUP","IFLA_NET_NS_FD","IFLA_EXT_MASK","IFLA_PROMISCUITY","IFLA_NUM_TX_QUEUES","IFLA_NUM_RX_QUEUES","IFLA_CARRIER","IFLA_PHYS_PORT_ID","IFLA_CARRIER_CHANGES","IFLA_PHYS_SWITCH_ID","IFLA_LINK_NETNSID","IFLA_PHYS_PORT_NAME","IFLA_PROTO_DOWN","IFLA_GSO_MAX_SEGS","IFLA_GSO_MAX_SIZE","IFLA_PAD","IFLA_XDP","IFLA_EVENT","IFLA_NEW_NETNSID","IFLA_IF_NETNSID","IFLA_TARGET_NETNSID","IFLA_CARRIER_UP_COUNT","IFLA_CARRIER_DOWN_COUNT","IFLA_NEW_IFINDEX","IFLA_MIN_MTU","IFLA_MAX_MTU","IFLA_PROP_LIST","IFLA_ALT_IFNAME","IFLA_PERM_ADDRESS","IFLA_PROTO_DOWN_REASON","IFLA_INFO_UNSPEC","IFLA_INFO_KIND","IFLA_INFO_DATA","IFLA_INFO_XSTATS","IFLA_INFO_SLAVE_KIND","IFLA_INFO_SLAVE_DATA","IFF_TUN","IFF_TAP","IFF_NO_PI","TUN_READQ_SIZE","TUN_TUN_DEV","TUN_TAP_DEV","TUN_TYPE_MASK","IFF_ONE_QUEUE","IFF_VNET_HDR","IFF_TUN_EXCL","IFF_MULTI_QUEUE","IFF_ATTACH_QUEUE","IFF_DETACH_QUEUE","IFF_PERSIST","IFF_NOFILTER","SEEK_DATA","SEEK_HOLE","ST_RDONLY","ST_NOSUID","ST_NODEV","ST_NOEXEC","ST_SYNCHRONOUS","ST_MANDLOCK","ST_WRITE","ST_APPEND","ST_IMMUTABLE","ST_NOATIME","ST_NODIRATIME","RTLD_NEXT","RTLD_DEFAULT","RTLD_NODELETE","RTLD_NOW","AT_EACCESS","TCP_MD5SIG","PTHREAD_MUTEX_INITIALIZER","PTHREAD_COND_INITIALIZER","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_DEFAULT","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","__SIZEOF_PTHREAD_COND_T","RENAME_NOREPLACE","RENAME_EXCHANGE","RENAME_WHITEOUT","SCHED_OTHER","SCHED_FIFO","SCHED_RR","SCHED_BATCH","SCHED_IDLE","SCHED_RESET_ON_FORK","IPPROTO_MPTCP","IPPROTO_MAX","IPC_PRIVATE","IPC_CREAT","IPC_EXCL","IPC_NOWAIT","IPC_RMID","IPC_SET","IPC_STAT","IPC_INFO","MSG_STAT","MSG_INFO","MSG_NOERROR","MSG_EXCEPT","SHM_R","SHM_W","SHM_RDONLY","SHM_RND","SHM_REMAP","SHM_LOCK","SHM_UNLOCK","SHM_HUGETLB","SHM_NORESERVE","EPOLLRDHUP","EPOLLEXCLUSIVE","EPOLLWAKEUP","EPOLLONESHOT","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","EFD_SEMAPHORE","LOG_NFACILITIES","SEM_FAILED","RB_AUTOBOOT","RB_HALT_SYSTEM","RB_ENABLE_CAD","RB_DISABLE_CAD","RB_POWER_OFF","RB_SW_SUSPEND","RB_KEXEC","AI_PASSIVE","AI_CANONNAME","AI_NUMERICHOST","AI_V4MAPPED","AI_ALL","AI_ADDRCONFIG","AI_NUMERICSERV","EAI_BADFLAGS","EAI_NONAME","EAI_AGAIN","EAI_FAIL","EAI_NODATA","EAI_FAMILY","EAI_SOCKTYPE","EAI_SERVICE","EAI_MEMORY","EAI_SYSTEM","EAI_OVERFLOW","NI_NUMERICHOST","NI_NUMERICSERV","NI_NOFQDN","NI_NAMEREQD","NI_DGRAM","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYNC_FILE_RANGE_WAIT_AFTER","AIO_CANCELED","AIO_NOTCANCELED","AIO_ALLDONE","LIO_READ","LIO_WRITE","LIO_NOP","LIO_WAIT","LIO_NOWAIT","RUSAGE_THREAD","TCP_ULP","MSG_COPY","SHM_EXEC","IPV6_MULTICAST_ALL","IPV6_ROUTER_ALERT_ISOLATE","PACKET_MR_UNICAST","PTRACE_EVENT_STOP","UDP_SEGMENT","UDP_GRO","MREMAP_MAYMOVE","MREMAP_FIXED","PR_SET_PDEATHSIG","PR_GET_PDEATHSIG","PR_GET_DUMPABLE","PR_SET_DUMPABLE","PR_GET_UNALIGN","PR_SET_UNALIGN","PR_UNALIGN_NOPRINT","PR_UNALIGN_SIGBUS","PR_GET_KEEPCAPS","PR_SET_KEEPCAPS","PR_GET_FPEMU","PR_SET_FPEMU","PR_FPEMU_NOPRINT","PR_FPEMU_SIGFPE","PR_GET_FPEXC","PR_SET_FPEXC","PR_FP_EXC_SW_ENABLE","PR_FP_EXC_DIV","PR_FP_EXC_OVF","PR_FP_EXC_UND","PR_FP_EXC_RES","PR_FP_EXC_INV","PR_FP_EXC_DISABLED","PR_FP_EXC_NONRECOV","PR_FP_EXC_ASYNC","PR_FP_EXC_PRECISE","PR_GET_TIMING","PR_SET_TIMING","PR_TIMING_STATISTICAL","PR_TIMING_TIMESTAMP","PR_SET_NAME","PR_GET_NAME","PR_GET_ENDIAN","PR_SET_ENDIAN","PR_ENDIAN_BIG","PR_ENDIAN_LITTLE","PR_ENDIAN_PPC_LITTLE","PR_GET_SECCOMP","PR_SET_SECCOMP","PR_CAPBSET_READ","PR_CAPBSET_DROP","PR_GET_TSC","PR_SET_TSC","PR_TSC_ENABLE","PR_TSC_SIGSEGV","PR_GET_SECUREBITS","PR_SET_SECUREBITS","PR_SET_TIMERSLACK","PR_GET_TIMERSLACK","PR_TASK_PERF_EVENTS_DISABLE","PR_TASK_PERF_EVENTS_ENABLE","PR_MCE_KILL","PR_MCE_KILL_CLEAR","PR_MCE_KILL_SET","PR_MCE_KILL_LATE","PR_MCE_KILL_EARLY","PR_MCE_KILL_DEFAULT","PR_MCE_KILL_GET","PR_SET_MM","PR_SET_MM_START_CODE","PR_SET_MM_END_CODE","PR_SET_MM_START_DATA","PR_SET_MM_END_DATA","PR_SET_MM_START_STACK","PR_SET_MM_START_BRK","PR_SET_MM_BRK","PR_SET_MM_ARG_START","PR_SET_MM_ARG_END","PR_SET_MM_ENV_START","PR_SET_MM_ENV_END","PR_SET_MM_AUXV","PR_SET_MM_EXE_FILE","PR_SET_MM_MAP","PR_SET_MM_MAP_SIZE","PR_SET_PTRACER","PR_SET_CHILD_SUBREAPER","PR_GET_CHILD_SUBREAPER","PR_SET_NO_NEW_PRIVS","PR_GET_NO_NEW_PRIVS","PR_GET_TID_ADDRESS","PR_SET_THP_DISABLE","PR_GET_THP_DISABLE","PR_MPX_ENABLE_MANAGEMENT","PR_MPX_DISABLE_MANAGEMENT","PR_SET_FP_MODE","PR_GET_FP_MODE","PR_FP_MODE_FR","PR_FP_MODE_FRE","PR_CAP_AMBIENT","PR_CAP_AMBIENT_IS_SET","PR_CAP_AMBIENT_RAISE","PR_CAP_AMBIENT_LOWER","PR_CAP_AMBIENT_CLEAR_ALL","GRND_NONBLOCK","GRND_RANDOM","SECCOMP_MODE_DISABLED","SECCOMP_MODE_STRICT","SECCOMP_MODE_FILTER","ITIMER_REAL","ITIMER_VIRTUAL","ITIMER_PROF","TFD_CLOEXEC","TFD_NONBLOCK","TFD_TIMER_ABSTIME","XATTR_CREATE","XATTR_REPLACE","_POSIX_VDISABLE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_ZERO_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_UNSHARE_RANGE","ENOATTR","SO_ORIGINAL_DST","IP_RECVFRAGSIZE","IPV6_FLOWINFO","IPV6_FLOWLABEL_MGR","IPV6_FLOWINFO_SEND","IPV6_RECVFRAGSIZE","IPV6_FREEBIND","IPV6_FLOWINFO_FLOWLABEL","IPV6_FLOWINFO_PRIORITY","IPV6_RTHDR_LOOSE","IPV6_RTHDR_STRICT","IUTF8","CMSPAR","MFD_CLOEXEC","MFD_ALLOW_SEALING","MFD_HUGETLB","PT_NULL","PT_LOAD","PT_DYNAMIC","PT_INTERP","PT_NOTE","PT_SHLIB","PT_PHDR","PT_TLS","PT_NUM","PT_LOOS","PT_GNU_EH_FRAME","PT_GNU_STACK","PT_GNU_RELRO","ETH_ALEN","ETH_HLEN","ETH_ZLEN","ETH_DATA_LEN","ETH_FRAME_LEN","ETH_FCS_LEN","ETH_P_LOOP","ETH_P_PUP","ETH_P_PUPAT","ETH_P_IP","ETH_P_X25","ETH_P_ARP","ETH_P_BPQ","ETH_P_IEEEPUP","ETH_P_IEEEPUPAT","ETH_P_BATMAN","ETH_P_DEC","ETH_P_DNA_DL","ETH_P_DNA_RC","ETH_P_DNA_RT","ETH_P_LAT","ETH_P_DIAG","ETH_P_CUST","ETH_P_SCA","ETH_P_TEB","ETH_P_RARP","ETH_P_ATALK","ETH_P_AARP","ETH_P_8021Q","ETH_P_IPX","ETH_P_IPV6","ETH_P_PAUSE","ETH_P_SLOW","ETH_P_WCCP","ETH_P_MPLS_UC","ETH_P_MPLS_MC","ETH_P_ATMMPOA","ETH_P_PPP_DISC","ETH_P_PPP_SES","ETH_P_LINK_CTL","ETH_P_ATMFATE","ETH_P_PAE","ETH_P_AOE","ETH_P_8021AD","ETH_P_802_EX1","ETH_P_TIPC","ETH_P_MACSEC","ETH_P_8021AH","ETH_P_MVRP","ETH_P_1588","ETH_P_PRP","ETH_P_FCOE","ETH_P_TDLS","ETH_P_FIP","ETH_P_80221","ETH_P_LOOPBACK","ETH_P_QINQ1","ETH_P_QINQ2","ETH_P_QINQ3","ETH_P_EDSA","ETH_P_AF_IUCV","ETH_P_802_3_MIN","ETH_P_802_3","ETH_P_AX25","ETH_P_ALL","ETH_P_802_2","ETH_P_SNAP","ETH_P_DDCMP","ETH_P_WAN_PPP","ETH_P_PPP_MP","ETH_P_LOCALTALK","ETH_P_CANFD","ETH_P_PPPTALK","ETH_P_TR_802_2","ETH_P_MOBITEX","ETH_P_CONTROL","ETH_P_IRDA","ETH_P_ECONET","ETH_P_HDLC","ETH_P_ARCNET","ETH_P_DSA","ETH_P_TRAILER","ETH_P_PHONET","ETH_P_IEEE802154","ETH_P_CAIF","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_SETSCHEDPARAM","POSIX_SPAWN_SETSCHEDULER","NLMSG_NOOP","NLMSG_ERROR","NLMSG_DONE","NLMSG_OVERRUN","NLMSG_MIN_TYPE","NFNLGRP_NONE","NFNLGRP_CONNTRACK_NEW","NFNLGRP_CONNTRACK_UPDATE","NFNLGRP_CONNTRACK_DESTROY","NFNLGRP_CONNTRACK_EXP_NEW","NFNLGRP_CONNTRACK_EXP_UPDATE","NFNLGRP_CONNTRACK_EXP_DESTROY","NFNLGRP_NFTABLES","NFNLGRP_ACCT_QUOTA","NFNETLINK_V0","NFNL_SUBSYS_NONE","NFNL_SUBSYS_CTNETLINK","NFNL_SUBSYS_CTNETLINK_EXP","NFNL_SUBSYS_QUEUE","NFNL_SUBSYS_ULOG","NFNL_SUBSYS_OSF","NFNL_SUBSYS_IPSET","NFNL_SUBSYS_ACCT","NFNL_SUBSYS_CTNETLINK_TIMEOUT","NFNL_SUBSYS_CTHELPER","NFNL_SUBSYS_NFTABLES","NFNL_SUBSYS_NFT_COMPAT","NFNL_SUBSYS_COUNT","NFNL_MSG_BATCH_BEGIN","NFNL_MSG_BATCH_END","NFULNL_MSG_PACKET","NFULNL_MSG_CONFIG","NFULA_UNSPEC","NFULA_PACKET_HDR","NFULA_MARK","NFULA_TIMESTAMP","NFULA_IFINDEX_INDEV","NFULA_IFINDEX_OUTDEV","NFULA_IFINDEX_PHYSINDEV","NFULA_IFINDEX_PHYSOUTDEV","NFULA_HWADDR","NFULA_PAYLOAD","NFULA_PREFIX","NFULA_UID","NFULA_SEQ","NFULA_SEQ_GLOBAL","NFULA_GID","NFULA_HWTYPE","NFULA_HWHEADER","NFULA_HWLEN","NFULA_CT","NFULA_CT_INFO","NFULNL_CFG_CMD_NONE","NFULNL_CFG_CMD_BIND","NFULNL_CFG_CMD_UNBIND","NFULNL_CFG_CMD_PF_BIND","NFULNL_CFG_CMD_PF_UNBIND","NFULA_CFG_UNSPEC","NFULA_CFG_CMD","NFULA_CFG_MODE","NFULA_CFG_NLBUFSIZ","NFULA_CFG_TIMEOUT","NFULA_CFG_QTHRESH","NFULA_CFG_FLAGS","NFULNL_COPY_NONE","NFULNL_COPY_META","NFULNL_COPY_PACKET","NFULNL_CFG_F_SEQ","NFULNL_CFG_F_SEQ_GLOBAL","NFULNL_CFG_F_CONNTRACK","NFQNL_MSG_PACKET","NFQNL_MSG_VERDICT","NFQNL_MSG_CONFIG","NFQNL_MSG_VERDICT_BATCH","NFQA_UNSPEC","NFQA_PACKET_HDR","NFQA_VERDICT_HDR","NFQA_MARK","NFQA_TIMESTAMP","NFQA_IFINDEX_INDEV","NFQA_IFINDEX_OUTDEV","NFQA_IFINDEX_PHYSINDEV","NFQA_IFINDEX_PHYSOUTDEV","NFQA_HWADDR","NFQA_PAYLOAD","NFQA_CT","NFQA_CT_INFO","NFQA_CAP_LEN","NFQA_SKB_INFO","NFQA_EXP","NFQA_UID","NFQA_GID","NFQA_SECCTX","NFQNL_CFG_CMD_NONE","NFQNL_CFG_CMD_BIND","NFQNL_CFG_CMD_UNBIND","NFQNL_CFG_CMD_PF_BIND","NFQNL_CFG_CMD_PF_UNBIND","NFQNL_COPY_NONE","NFQNL_COPY_META","NFQNL_COPY_PACKET","NFQA_CFG_UNSPEC","NFQA_CFG_CMD","NFQA_CFG_PARAMS","NFQA_CFG_QUEUE_MAXLEN","NFQA_CFG_MASK","NFQA_CFG_FLAGS","NFQA_CFG_F_FAIL_OPEN","NFQA_CFG_F_CONNTRACK","NFQA_CFG_F_GSO","NFQA_CFG_F_UID_GID","NFQA_CFG_F_SECCTX","NFQA_CFG_F_MAX","NFQA_SKB_CSUMNOTREADY","NFQA_SKB_GSO","NFQA_SKB_CSUM_NOTVERIFIED","GENL_NAMSIZ","GENL_MIN_ID","GENL_MAX_ID","GENL_ADMIN_PERM","GENL_CMD_CAP_DO","GENL_CMD_CAP_DUMP","GENL_CMD_CAP_HASPOL","GENL_ID_CTRL","CTRL_CMD_UNSPEC","CTRL_CMD_NEWFAMILY","CTRL_CMD_DELFAMILY","CTRL_CMD_GETFAMILY","CTRL_CMD_NEWOPS","CTRL_CMD_DELOPS","CTRL_CMD_GETOPS","CTRL_CMD_NEWMCAST_GRP","CTRL_CMD_DELMCAST_GRP","CTRL_CMD_GETMCAST_GRP","CTRL_ATTR_UNSPEC","CTRL_ATTR_FAMILY_ID","CTRL_ATTR_FAMILY_NAME","CTRL_ATTR_VERSION","CTRL_ATTR_HDRSIZE","CTRL_ATTR_MAXATTR","CTRL_ATTR_OPS","CTRL_ATTR_MCAST_GROUPS","CTRL_ATTR_OP_UNSPEC","CTRL_ATTR_OP_ID","CTRL_ATTR_OP_FLAGS","CTRL_ATTR_MCAST_GRP_UNSPEC","CTRL_ATTR_MCAST_GRP_NAME","CTRL_ATTR_MCAST_GRP_ID","PACKET_ADD_MEMBERSHIP","PACKET_DROP_MEMBERSHIP","PACKET_MR_MULTICAST","PACKET_MR_PROMISC","PACKET_MR_ALLMULTI","NF_DROP","NF_ACCEPT","NF_STOLEN","NF_QUEUE","NF_REPEAT","NF_STOP","NF_MAX_VERDICT","NF_VERDICT_MASK","NF_VERDICT_FLAG_QUEUE_BYPASS","NF_VERDICT_QMASK","NF_VERDICT_QBITS","NF_VERDICT_BITS","NF_INET_PRE_ROUTING","NF_INET_LOCAL_IN","NF_INET_FORWARD","NF_INET_LOCAL_OUT","NF_INET_POST_ROUTING","NF_INET_NUMHOOKS","NFPROTO_UNSPEC","NFPROTO_IPV4","NFPROTO_ARP","NFPROTO_BRIDGE","NFPROTO_IPV6","NFPROTO_DECNET","NFPROTO_NUMPROTO","NF_IP_PRE_ROUTING","NF_IP_LOCAL_IN","NF_IP_FORWARD","NF_IP_LOCAL_OUT","NF_IP_POST_ROUTING","NF_IP_NUMHOOKS","NF_IP_PRI_FIRST","NF_IP_PRI_CONNTRACK_DEFRAG","NF_IP_PRI_RAW","NF_IP_PRI_SELINUX_FIRST","NF_IP_PRI_CONNTRACK","NF_IP_PRI_MANGLE","NF_IP_PRI_NAT_DST","NF_IP_PRI_FILTER","NF_IP_PRI_SECURITY","NF_IP_PRI_NAT_SRC","NF_IP_PRI_SELINUX_LAST","NF_IP_PRI_CONNTRACK_HELPER","NF_IP_PRI_CONNTRACK_CONFIRM","NF_IP_PRI_LAST","NF_IP6_PRE_ROUTING","NF_IP6_LOCAL_IN","NF_IP6_FORWARD","NF_IP6_LOCAL_OUT","NF_IP6_POST_ROUTING","NF_IP6_NUMHOOKS","NF_IP6_PRI_FIRST","NF_IP6_PRI_CONNTRACK_DEFRAG","NF_IP6_PRI_RAW","NF_IP6_PRI_SELINUX_FIRST","NF_IP6_PRI_CONNTRACK","NF_IP6_PRI_MANGLE","NF_IP6_PRI_NAT_DST","NF_IP6_PRI_FILTER","NF_IP6_PRI_SECURITY","NF_IP6_PRI_NAT_SRC","NF_IP6_PRI_SELINUX_LAST","NF_IP6_PRI_CONNTRACK_HELPER","NF_IP6_PRI_LAST","IP6T_SO_ORIGINAL_DST","SIOCADDRT","SIOCDELRT","SIOCGIFNAME","SIOCSIFLINK","SIOCGIFCONF","SIOCGIFFLAGS","SIOCSIFFLAGS","SIOCGIFADDR","SIOCSIFADDR","SIOCGIFDSTADDR","SIOCSIFDSTADDR","SIOCGIFBRDADDR","SIOCSIFBRDADDR","SIOCGIFNETMASK","SIOCSIFNETMASK","SIOCGIFMETRIC","SIOCSIFMETRIC","SIOCGIFMEM","SIOCSIFMEM","SIOCGIFMTU","SIOCSIFMTU","SIOCSIFHWADDR","SIOCGIFENCAP","SIOCSIFENCAP","SIOCGIFHWADDR","SIOCGIFSLAVE","SIOCSIFSLAVE","SIOCADDMULTI","SIOCDELMULTI","SIOCDARP","SIOCGARP","SIOCSARP","SIOCDRARP","SIOCGRARP","SIOCSRARP","SIOCGIFMAP","SIOCSIFMAP","IPTOS_TOS_MASK","IPTOS_PREC_MASK","IPTOS_ECN_NOT_ECT","RTF_UP","RTF_GATEWAY","RTF_HOST","RTF_REINSTATE","RTF_DYNAMIC","RTF_MODIFIED","RTF_MTU","RTF_MSS","RTF_WINDOW","RTF_IRTT","RTF_REJECT","RTF_STATIC","RTF_XRESOLVE","RTF_NOFORWARD","RTF_THROW","RTF_NOPMTUDISC","RTF_DEFAULT","RTF_ALLONLINK","RTF_ADDRCONF","RTF_LINKRT","RTF_NONEXTHOP","RTF_CACHE","RTF_FLOW","RTF_POLICY","RTCF_VALVE","RTCF_MASQ","RTCF_NAT","RTCF_DOREDIRECT","RTCF_LOG","RTCF_DIRECTSRC","RTF_LOCAL","RTF_INTERFACE","RTF_MULTICAST","RTF_BROADCAST","RTF_NAT","RTF_ADDRCLASSMASK","RT_CLASS_UNSPEC","RT_CLASS_DEFAULT","RT_CLASS_MAIN","RT_CLASS_LOCAL","RT_CLASS_MAX","NUD_NONE","NUD_INCOMPLETE","NUD_REACHABLE","NUD_STALE","NUD_DELAY","NUD_PROBE","NUD_FAILED","NUD_NOARP","NUD_PERMANENT","NTF_USE","NTF_SELF","NTF_MASTER","NTF_PROXY","NTF_ROUTER","NDA_UNSPEC","NDA_DST","NDA_LLADDR","NDA_CACHEINFO","NDA_PROBES","NDA_VLAN","NDA_PORT","NDA_VNI","NDA_IFINDEX","NLA_ALIGNTO","NETLINK_ROUTE","NETLINK_UNUSED","NETLINK_USERSOCK","NETLINK_FIREWALL","NETLINK_SOCK_DIAG","NETLINK_NFLOG","NETLINK_XFRM","NETLINK_SELINUX","NETLINK_ISCSI","NETLINK_AUDIT","NETLINK_FIB_LOOKUP","NETLINK_CONNECTOR","NETLINK_NETFILTER","NETLINK_IP6_FW","NETLINK_DNRTMSG","NETLINK_KOBJECT_UEVENT","NETLINK_GENERIC","NETLINK_SCSITRANSPORT","NETLINK_ECRYPTFS","NETLINK_RDMA","NETLINK_CRYPTO","NETLINK_INET_DIAG","NLM_F_REQUEST","NLM_F_MULTI","NLM_F_ACK","NLM_F_ECHO","NLM_F_DUMP_INTR","NLM_F_DUMP_FILTERED","NLM_F_ROOT","NLM_F_MATCH","NLM_F_ATOMIC","NLM_F_DUMP","NLM_F_REPLACE","NLM_F_EXCL","NLM_F_CREATE","NLM_F_APPEND","NETLINK_ADD_MEMBERSHIP","NETLINK_DROP_MEMBERSHIP","NETLINK_PKTINFO","NETLINK_BROADCAST_ERROR","NETLINK_NO_ENOBUFS","NETLINK_RX_RING","NETLINK_TX_RING","NETLINK_LISTEN_ALL_NSID","NETLINK_LIST_MEMBERSHIPS","NETLINK_CAP_ACK","NLA_F_NESTED","NLA_F_NET_BYTEORDER","NLA_TYPE_MASK","TCA_UNSPEC","TCA_KIND","TCA_OPTIONS","TCA_STATS","TCA_XSTATS","TCA_RATE","TCA_FCNT","TCA_STATS2","TCA_STAB","RTM_NEWLINK","RTM_DELLINK","RTM_GETLINK","RTM_SETLINK","RTM_NEWADDR","RTM_DELADDR","RTM_GETADDR","RTM_NEWROUTE","RTM_DELROUTE","RTM_GETROUTE","RTM_NEWNEIGH","RTM_DELNEIGH","RTM_GETNEIGH","RTM_NEWRULE","RTM_DELRULE","RTM_GETRULE","RTM_NEWQDISC","RTM_DELQDISC","RTM_GETQDISC","RTM_NEWTCLASS","RTM_DELTCLASS","RTM_GETTCLASS","RTM_NEWTFILTER","RTM_DELTFILTER","RTM_GETTFILTER","RTM_NEWACTION","RTM_DELACTION","RTM_GETACTION","RTM_NEWPREFIX","RTM_GETMULTICAST","RTM_GETANYCAST","RTM_NEWNEIGHTBL","RTM_GETNEIGHTBL","RTM_SETNEIGHTBL","RTM_NEWNDUSEROPT","RTM_NEWADDRLABEL","RTM_DELADDRLABEL","RTM_GETADDRLABEL","RTM_GETDCB","RTM_SETDCB","RTM_NEWNETCONF","RTM_GETNETCONF","RTM_NEWMDB","RTM_DELMDB","RTM_GETMDB","RTM_NEWNSID","RTM_DELNSID","RTM_GETNSID","RTM_F_NOTIFY","RTM_F_CLONED","RTM_F_EQUALIZE","RTM_F_PREFIX","RTA_UNSPEC","RTA_DST","RTA_SRC","RTA_IIF","RTA_OIF","RTA_GATEWAY","RTA_PRIORITY","RTA_PREFSRC","RTA_METRICS","RTA_MULTIPATH","RTA_PROTOINFO","RTA_FLOW","RTA_CACHEINFO","RTA_SESSION","RTA_MP_ALGO","RTA_TABLE","RTA_MARK","RTA_MFC_STATS","RTN_UNSPEC","RTN_UNICAST","RTN_LOCAL","RTN_BROADCAST","RTN_ANYCAST","RTN_MULTICAST","RTN_BLACKHOLE","RTN_UNREACHABLE","RTN_PROHIBIT","RTN_THROW","RTN_NAT","RTN_XRESOLVE","RTPROT_UNSPEC","RTPROT_REDIRECT","RTPROT_KERNEL","RTPROT_BOOT","RTPROT_STATIC","RT_SCOPE_UNIVERSE","RT_SCOPE_SITE","RT_SCOPE_LINK","RT_SCOPE_HOST","RT_SCOPE_NOWHERE","RT_TABLE_UNSPEC","RT_TABLE_COMPAT","RT_TABLE_DEFAULT","RT_TABLE_MAIN","RT_TABLE_LOCAL","RTMSG_OVERRUN","RTMSG_NEWDEVICE","RTMSG_DELDEVICE","RTMSG_NEWROUTE","RTMSG_DELROUTE","RTMSG_NEWRULE","RTMSG_DELRULE","RTMSG_CONTROL","RTMSG_AR_FAILED","MAX_ADDR_LEN","ARPD_UPDATE","ARPD_LOOKUP","ARPD_FLUSH","ATF_MAGIC","SO_TIMESTAMPING","SCM_TIMESTAMPING","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SOFTWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_SYS_HARDWARE","SOF_TIMESTAMPING_RAW_HARDWARE","ALG_SET_KEY","ALG_SET_IV","ALG_SET_OP","ALG_SET_AEAD_ASSOCLEN","ALG_SET_AEAD_AUTHSIZE","ALG_OP_DECRYPT","ALG_OP_ENCRYPT","UDP_CORK","UDP_ENCAP","UDP_NO_CHECK6_TX","UDP_NO_CHECK6_RX","MAP_SHARED_VALIDATE","MAP_FIXED_NOREPLACE","VMADDR_CID_ANY","VMADDR_CID_HYPERVISOR","VMADDR_CID_RESERVED","VMADDR_CID_LOCAL","VMADDR_CID_HOST","VMADDR_PORT_ANY","IN_ACCESS","IN_MODIFY","IN_ATTRIB","IN_CLOSE_WRITE","IN_CLOSE_NOWRITE","IN_CLOSE","IN_OPEN","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_MOVE_SELF","IN_UNMOUNT","IN_Q_OVERFLOW","IN_IGNORED","IN_ONLYDIR","IN_DONT_FOLLOW","KEY_SPEC_THREAD_KEYRING","KEY_SPEC_PROCESS_KEYRING","KEY_SPEC_SESSION_KEYRING","KEY_SPEC_USER_KEYRING","KEY_SPEC_USER_SESSION_KEYRING","KEY_SPEC_GROUP_KEYRING","KEY_SPEC_REQKEY_AUTH_KEY","KEY_SPEC_REQUESTOR_KEYRING","KEY_REQKEY_DEFL_NO_CHANGE","KEY_REQKEY_DEFL_DEFAULT","KEY_REQKEY_DEFL_THREAD_KEYRING","KEY_REQKEY_DEFL_PROCESS_KEYRING","KEY_REQKEY_DEFL_SESSION_KEYRING","KEY_REQKEY_DEFL_USER_KEYRING","KEY_REQKEY_DEFL_USER_SESSION_KEYRING","KEY_REQKEY_DEFL_GROUP_KEYRING","KEY_REQKEY_DEFL_REQUESTOR_KEYRING","KEYCTL_GET_KEYRING_ID","KEYCTL_JOIN_SESSION_KEYRING","KEYCTL_UPDATE","KEYCTL_REVOKE","KEYCTL_CHOWN","KEYCTL_SETPERM","KEYCTL_DESCRIBE","KEYCTL_CLEAR","KEYCTL_LINK","KEYCTL_UNLINK","KEYCTL_SEARCH","KEYCTL_READ","KEYCTL_INSTANTIATE","KEYCTL_NEGATE","KEYCTL_SET_REQKEY_KEYRING","KEYCTL_SET_TIMEOUT","KEYCTL_ASSUME_AUTHORITY","KEYCTL_GET_SECURITY","KEYCTL_SESSION_TO_PARENT","KEYCTL_REJECT","KEYCTL_INSTANTIATE_IOV","KEYCTL_INVALIDATE","KEYCTL_GET_PERSISTENT","IN_ISDIR","IN_ONESHOT","IN_ALL_EVENTS","IN_CLOEXEC","IN_NONBLOCK","FAN_ACCESS","FAN_MODIFY","FAN_CLOSE_WRITE","FAN_CLOSE_NOWRITE","FAN_OPEN","FAN_Q_OVERFLOW","FAN_OPEN_PERM","FAN_ACCESS_PERM","FAN_ONDIR","FAN_EVENT_ON_CHILD","FAN_CLOSE","FAN_CLOEXEC","FAN_NONBLOCK","FAN_CLASS_NOTIF","FAN_CLASS_CONTENT","FAN_CLASS_PRE_CONTENT","FAN_UNLIMITED_QUEUE","FAN_UNLIMITED_MARKS","FAN_MARK_ADD","FAN_MARK_REMOVE","FAN_MARK_DONT_FOLLOW","FAN_MARK_ONLYDIR","FAN_MARK_IGNORED_MASK","FAN_MARK_IGNORED_SURV_MODIFY","FAN_MARK_FLUSH","FANOTIFY_METADATA_VERSION","FAN_ALLOW","FAN_DENY","FAN_NOFD","FUTEX_WAIT","FUTEX_WAKE","FUTEX_FD","FUTEX_REQUEUE","FUTEX_CMP_REQUEUE","FUTEX_WAKE_OP","FUTEX_LOCK_PI","FUTEX_UNLOCK_PI","FUTEX_TRYLOCK_PI","FUTEX_WAIT_BITSET","FUTEX_WAKE_BITSET","FUTEX_WAIT_REQUEUE_PI","FUTEX_CMP_REQUEUE_PI","FUTEX_PRIVATE_FLAG","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","LINUX_REBOOT_MAGIC1","LINUX_REBOOT_MAGIC2","LINUX_REBOOT_MAGIC2A","LINUX_REBOOT_MAGIC2B","LINUX_REBOOT_MAGIC2C","LINUX_REBOOT_CMD_RESTART","LINUX_REBOOT_CMD_HALT","LINUX_REBOOT_CMD_CAD_ON","LINUX_REBOOT_CMD_CAD_OFF","LINUX_REBOOT_CMD_POWER_OFF","LINUX_REBOOT_CMD_RESTART2","LINUX_REBOOT_CMD_SW_SUSPEND","LINUX_REBOOT_CMD_KEXEC","REG_EXTENDED","REG_ICASE","REG_NEWLINE","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_ENOSYS","REG_NOMATCH","REG_BADPAT","REG_ECOLLATE","REG_ECTYPE","REG_EESCAPE","REG_ESUBREG","REG_EBRACK","REG_EPAREN","REG_EBRACE","REG_BADBR","REG_ERANGE","REG_ESPACE","REG_BADRPT","SO_EE_ORIGIN_NONE","SO_EE_ORIGIN_LOCAL","SO_EE_ORIGIN_ICMP","SO_EE_ORIGIN_ICMP6","SO_EE_ORIGIN_TXSTATUS","SO_EE_ORIGIN_TIMESTAMPING","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EAGAIN","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","EWOULDBLOCK","CAN_EFF_FLAG","CAN_RTR_FLAG","CAN_ERR_FLAG","CAN_SFF_MASK","CAN_EFF_MASK","CAN_ERR_MASK","CAN_SFF_ID_BITS","CAN_EFF_ID_BITS","CAN_MAX_DLC","CAN_MAX_DLEN","CANFD_MAX_DLC","CANFD_MAX_DLEN","CANFD_BRS","CANFD_ESI","CAN_MTU","CANFD_MTU","CAN_RAW","CAN_BCM","CAN_TP16","CAN_TP20","CAN_MCNET","CAN_ISOTP","CAN_J1939","CAN_NPROTO","SOL_CAN_BASE","CAN_INV_FILTER","CAN_RAW_FILTER_MAX","NLA_ALIGN","CMSG_NXTHDR","CPU_ALLOC_SIZE","CPU_ZERO","CPU_SET","CPU_CLR","CPU_ISSET","CPU_COUNT_S","CPU_COUNT","CPU_EQUAL","major","minor","makedev","IPTOS_TOS","IPTOS_PREC","RT_TOS","RT_ADDRCLASS","RT_LOCALADDR","SO_EE_OFFENDER","pthread_t","__priority_which_t","__rlimit_resource_t","Lmid_t","regoff_t","statx","stx_mask","stx_blksize","stx_attributes","stx_nlink","stx_uid","stx_gid","stx_mode","stx_ino","stx_size","stx_blocks","stx_attributes_mask","stx_atime","stx_btime","stx_ctime","stx_mtime","stx_rdev_major","stx_rdev_minor","stx_dev_major","stx_dev_minor","stx_mnt_id","statx_timestamp","tv_sec","tv_nsec","__statx_timestamp_pad1","aiocb","aio_fildes","aio_lio_opcode","aio_reqprio","aio_buf","aio_nbytes","aio_sigevent","aio_offset","__exit_status","e_termination","e_exit","__timeval","tv_sec","tv_usec","glob64_t","gl_pathc","gl_pathv","gl_offs","gl_flags","msghdr","msg_name","msg_namelen","msg_iov","msg_iovlen","msg_control","msg_controllen","msg_flags","cmsghdr","cmsg_len","cmsg_level","cmsg_type","termios","c_iflag","c_oflag","c_cflag","c_lflag","c_line","c_cc","c_ispeed","c_ospeed","mallinfo","arena","ordblks","smblks","hblks","hblkhd","usmblks","fsmblks","uordblks","fordblks","keepcost","nlmsghdr","nlmsg_len","nlmsg_type","nlmsg_flags","nlmsg_seq","nlmsg_pid","nlmsgerr","error","msg","nl_pktinfo","group","nl_mmap_req","nm_block_size","nm_block_nr","nm_frame_size","nm_frame_nr","nl_mmap_hdr","nm_status","nm_len","nm_group","nm_pid","nm_uid","nm_gid","nlattr","nla_len","nla_type","rtentry","rt_pad1","rt_dst","rt_gateway","rt_genmask","rt_flags","rt_pad2","rt_pad3","rt_tos","rt_class","rt_pad4","rt_metric","rt_dev","rt_mtu","rt_window","rt_irtt","timex","modes","offset","freq","maxerror","esterror","status","constant","precision","tolerance","time","tick","ppsfreq","jitter","shift","stabil","jitcnt","calcnt","errcnt","stbcnt","tai","__unused1","__unused2","__unused3","__unused4","__unused5","__unused6","__unused7","__unused8","__unused9","__unused10","__unused11","ntptimeval","time","maxerror","esterror","tai","__glibc_reserved1","__glibc_reserved2","__glibc_reserved3","__glibc_reserved4","regex_t","Elf64_Chdr","ch_type","ch_reserved","ch_size","ch_addralign","Elf32_Chdr","ch_type","ch_size","ch_addralign","utmpx","ut_type","ut_pid","ut_line","ut_id","ut_user","ut_host","ut_exit","ut_session","ut_tv","ut_addr_v6","HUGETLB_FLAG_ENCODE_SHIFT","HUGETLB_FLAG_ENCODE_MASK","HUGETLB_FLAG_ENCODE_64KB","HUGETLB_FLAG_ENCODE_512KB","HUGETLB_FLAG_ENCODE_1MB","HUGETLB_FLAG_ENCODE_2MB","HUGETLB_FLAG_ENCODE_8MB","HUGETLB_FLAG_ENCODE_16MB","HUGETLB_FLAG_ENCODE_32MB","HUGETLB_FLAG_ENCODE_256MB","HUGETLB_FLAG_ENCODE_512MB","HUGETLB_FLAG_ENCODE_1GB","HUGETLB_FLAG_ENCODE_2GB","HUGETLB_FLAG_ENCODE_16GB","MAP_HUGE_SHIFT","MAP_HUGE_MASK","MAP_HUGE_64KB","MAP_HUGE_512KB","MAP_HUGE_1MB","MAP_HUGE_2MB","MAP_HUGE_8MB","MAP_HUGE_16MB","MAP_HUGE_32MB","MAP_HUGE_256MB","MAP_HUGE_512MB","MAP_HUGE_1GB","MAP_HUGE_2GB","MAP_HUGE_16GB","RLIMIT_CPU","RLIMIT_FSIZE","RLIMIT_DATA","RLIMIT_STACK","RLIMIT_CORE","RLIMIT_LOCKS","RLIMIT_SIGPENDING","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_NLIMITS","PRIO_PROCESS","PRIO_PGRP","PRIO_USER","MS_RMT_MASK","__UT_LINESIZE","__UT_NAMESIZE","__UT_HOSTSIZE","EMPTY","RUN_LVL","BOOT_TIME","NEW_TIME","OLD_TIME","INIT_PROCESS","LOGIN_PROCESS","USER_PROCESS","DEAD_PROCESS","ACCOUNTING","LM_ID_BASE","LM_ID_NEWLM","RTLD_DI_LMID","RTLD_DI_LINKMAP","RTLD_DI_CONFIGADDR","RTLD_DI_SERINFO","RTLD_DI_SERINFOSIZE","RTLD_DI_ORIGIN","RTLD_DI_PROFILENAME","RTLD_DI_PROFILEOUT","RTLD_DI_TLS_MODID","RTLD_DI_TLS_DATA","SOCK_NONBLOCK","SOL_RXRPC","SOL_PPPOL2TP","SOL_PNPIPE","SOL_RDS","SOL_IUCV","SOL_CAIF","SOL_NFC","SOL_XDP","MSG_TRYHARD","LC_PAPER","LC_NAME","LC_ADDRESS","LC_TELEPHONE","LC_MEASUREMENT","LC_IDENTIFICATION","LC_PAPER_MASK","LC_NAME_MASK","LC_ADDRESS_MASK","LC_TELEPHONE_MASK","LC_MEASUREMENT_MASK","LC_IDENTIFICATION_MASK","LC_ALL_MASK","ENOTSUP","SOCK_SEQPACKET","SOCK_DCCP","SOCK_PACKET","TCP_COOKIE_TRANSACTIONS","TCP_THIN_LINEAR_TIMEOUTS","TCP_THIN_DUPACK","TCP_USER_TIMEOUT","TCP_REPAIR","TCP_REPAIR_QUEUE","TCP_QUEUE_SEQ","TCP_REPAIR_OPTIONS","TCP_FASTOPEN","TCP_TIMESTAMP","TCP_FASTOPEN_CONNECT","FAN_MARK_INODE","FAN_MARK_MOUNT","FAN_MARK_FILESYSTEM","AF_IB","AF_MPLS","AF_NFC","AF_VSOCK","AF_XDP","PF_IB","PF_MPLS","PF_NFC","PF_VSOCK","PF_XDP","DCCP_SOCKOPT_PACKET_SIZE","DCCP_SOCKOPT_SERVICE","DCCP_SOCKOPT_CHANGE_L","DCCP_SOCKOPT_CHANGE_R","DCCP_SOCKOPT_GET_CUR_MPS","DCCP_SOCKOPT_SERVER_TIMEWAIT","DCCP_SOCKOPT_SEND_CSCOV","DCCP_SOCKOPT_RECV_CSCOV","DCCP_SOCKOPT_AVAILABLE_CCIDS","DCCP_SOCKOPT_CCID","DCCP_SOCKOPT_TX_CCID","DCCP_SOCKOPT_RX_CCID","DCCP_SOCKOPT_QPOLICY_ID","DCCP_SOCKOPT_QPOLICY_TXQLEN","DCCP_SOCKOPT_CCID_RX_INFO","DCCP_SOCKOPT_CCID_TX_INFO","DCCP_SERVICE_LIST_MAX_LEN","SIGEV_THREAD_ID","BUFSIZ","TMP_MAX","FOPEN_MAX","FILENAME_MAX","POSIX_MADV_DONTNEED","_SC_EQUIV_CLASS_MAX","_SC_CHARCLASS_NAME_MAX","_SC_PII","_SC_PII_XTI","_SC_PII_SOCKET","_SC_PII_INTERNET","_SC_PII_OSI","_SC_POLL","_SC_SELECT","_SC_PII_INTERNET_STREAM","_SC_PII_INTERNET_DGRAM","_SC_PII_OSI_COTS","_SC_PII_OSI_CLTS","_SC_PII_OSI_M","_SC_T_IOV_MAX","_SC_2_C_VERSION","_SC_CHAR_BIT","_SC_CHAR_MAX","_SC_CHAR_MIN","_SC_INT_MAX","_SC_INT_MIN","_SC_LONG_BIT","_SC_WORD_BIT","_SC_MB_LEN_MAX","_SC_SSIZE_MAX","_SC_SCHAR_MAX","_SC_SCHAR_MIN","_SC_SHRT_MAX","_SC_SHRT_MIN","_SC_UCHAR_MAX","_SC_UINT_MAX","_SC_ULONG_MAX","_SC_USHRT_MAX","_SC_NL_ARGMAX","_SC_NL_LANGMAX","_SC_NL_MSGMAX","_SC_NL_NMAX","_SC_NL_SETMAX","_SC_NL_TEXTMAX","_SC_BASE","_SC_C_LANG_SUPPORT","_SC_C_LANG_SUPPORT_R","_SC_DEVICE_IO","_SC_DEVICE_SPECIFIC","_SC_DEVICE_SPECIFIC_R","_SC_FD_MGMT","_SC_FIFO","_SC_PIPE","_SC_FILE_ATTRIBUTES","_SC_FILE_LOCKING","_SC_FILE_SYSTEM","_SC_MULTI_PROCESS","_SC_SINGLE_PROCESS","_SC_NETWORKING","_SC_REGEX_VERSION","_SC_SIGNALS","_SC_SYSTEM_DATABASE","_SC_SYSTEM_DATABASE_R","_SC_USER_GROUPS","_SC_USER_GROUPS_R","_SC_LEVEL1_ICACHE_SIZE","_SC_LEVEL1_ICACHE_ASSOC","_SC_LEVEL1_ICACHE_LINESIZE","_SC_LEVEL1_DCACHE_SIZE","_SC_LEVEL1_DCACHE_ASSOC","_SC_LEVEL1_DCACHE_LINESIZE","_SC_LEVEL2_CACHE_SIZE","_SC_LEVEL2_CACHE_ASSOC","_SC_LEVEL2_CACHE_LINESIZE","_SC_LEVEL3_CACHE_SIZE","_SC_LEVEL3_CACHE_ASSOC","_SC_LEVEL3_CACHE_LINESIZE","_SC_LEVEL4_CACHE_SIZE","_SC_LEVEL4_CACHE_ASSOC","_SC_LEVEL4_CACHE_LINESIZE","O_ACCMODE","ST_RELATIME","NI_MAXHOST","ADFS_SUPER_MAGIC","AFFS_SUPER_MAGIC","AFS_SUPER_MAGIC","AUTOFS_SUPER_MAGIC","BINDERFS_SUPER_MAGIC","BPF_FS_MAGIC","BTRFS_SUPER_MAGIC","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CODA_SUPER_MAGIC","CRAMFS_MAGIC","DEBUGFS_MAGIC","DEVPTS_SUPER_MAGIC","ECRYPTFS_SUPER_MAGIC","EFS_SUPER_MAGIC","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","F2FS_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","ISOFS_SUPER_MAGIC","JFFS2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX2_SUPER_MAGIC","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINIX_SUPER_MAGIC","MSDOS_SUPER_MAGIC","NCP_SUPER_MAGIC","NFS_SUPER_MAGIC","NILFS_SUPER_MAGIC","OCFS2_SUPER_MAGIC","OPENPROM_SUPER_MAGIC","OVERLAYFS_SUPER_MAGIC","PROC_SUPER_MAGIC","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","RDTGROUP_SUPER_MAGIC","REISERFS_SUPER_MAGIC","SECURITYFS_MAGIC","SELINUX_MAGIC","SMACK_MAGIC","SMB_SUPER_MAGIC","SYSFS_MAGIC","TMPFS_MAGIC","TRACEFS_MAGIC","UDF_SUPER_MAGIC","USBDEVICE_SUPER_MAGIC","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","CPU_SETSIZE","PTRACE_TRACEME","PTRACE_PEEKTEXT","PTRACE_PEEKDATA","PTRACE_PEEKUSER","PTRACE_POKETEXT","PTRACE_POKEDATA","PTRACE_POKEUSER","PTRACE_CONT","PTRACE_KILL","PTRACE_SINGLESTEP","PTRACE_ATTACH","PTRACE_SYSCALL","PTRACE_SETOPTIONS","PTRACE_GETEVENTMSG","PTRACE_GETSIGINFO","PTRACE_SETSIGINFO","PTRACE_GETREGSET","PTRACE_SETREGSET","PTRACE_SEIZE","PTRACE_INTERRUPT","PTRACE_LISTEN","PTRACE_PEEKSIGINFO","RWF_HIPRI","RWF_DSYNC","RWF_SYNC","RWF_NOWAIT","RWF_APPEND","TCA_PAD","TCA_DUMP_INVISIBLE","TCA_CHAIN","TCA_HW_OFFLOAD","RTM_DELNETCONF","RTM_NEWSTATS","RTM_GETSTATS","RTM_NEWCACHEREPORT","RTM_F_LOOKUP_TABLE","RTM_F_FIB_MATCH","RTA_VIA","RTA_NEWDST","RTA_PREF","RTA_ENCAP_TYPE","RTA_ENCAP","RTA_EXPIRES","RTA_PAD","RTA_UID","RTA_TTL_PROPAGATE","NTF_EXT_LEARNED","NTF_OFFLOADED","NDA_MASTER","NDA_LINK_NETNSID","NDA_SRC_VNI","UNAME26","FDPIC_FUNCPTRS","IFA_FLAGS","IFA_F_MANAGETEMPADDR","IFA_F_NOPREFIXROUTE","IFA_F_MCAUTOJOIN","IFA_F_STABLE_PRIVACY","MAX_LINKS","GENL_UNS_ADMIN_PERM","GENL_ID_VFS_DQUOT","GENL_ID_PMCRAID","TIOCM_LE","TIOCM_DTR","TIOCM_RTS","TIOCM_CD","TIOCM_RI","NF_NETDEV_INGRESS","NF_NETDEV_NUMHOOKS","NFPROTO_INET","NFPROTO_NETDEV","KEYCTL_DH_COMPUTE","KEYCTL_PKEY_QUERY","KEYCTL_PKEY_ENCRYPT","KEYCTL_PKEY_DECRYPT","KEYCTL_PKEY_SIGN","KEYCTL_PKEY_VERIFY","KEYCTL_RESTRICT_KEYRING","KEYCTL_SUPPORTS_ENCRYPT","KEYCTL_SUPPORTS_DECRYPT","KEYCTL_SUPPORTS_SIGN","KEYCTL_SUPPORTS_VERIFY","KEYCTL_MOVE","KEYCTL_CAPABILITIES","KEYCTL_CAPS0_CAPABILITIES","KEYCTL_CAPS0_PERSISTENT_KEYRINGS","KEYCTL_CAPS0_DIFFIE_HELLMAN","KEYCTL_CAPS0_PUBLIC_KEY","KEYCTL_CAPS0_BIG_KEY","KEYCTL_CAPS0_INVALIDATE","KEYCTL_CAPS0_RESTRICT_KEYRING","KEYCTL_CAPS0_MOVE","KEYCTL_CAPS1_NS_KEYRING_NAME","KEYCTL_CAPS1_NS_KEY_TAG","NFT_TABLE_MAXNAMELEN","NFT_CHAIN_MAXNAMELEN","NFT_SET_MAXNAMELEN","NFT_OBJ_MAXNAMELEN","NFT_USERDATA_MAXLEN","NFT_REG_VERDICT","NFT_REG_1","NFT_REG_2","NFT_REG_3","NFT_REG_4","__NFT_REG_MAX","NFT_REG32_00","NFT_REG32_01","NFT_REG32_02","NFT_REG32_03","NFT_REG32_04","NFT_REG32_05","NFT_REG32_06","NFT_REG32_07","NFT_REG32_08","NFT_REG32_09","NFT_REG32_10","NFT_REG32_11","NFT_REG32_12","NFT_REG32_13","NFT_REG32_14","NFT_REG32_15","NFT_REG_SIZE","NFT_REG32_SIZE","NFT_CONTINUE","NFT_BREAK","NFT_JUMP","NFT_GOTO","NFT_RETURN","NFT_MSG_NEWTABLE","NFT_MSG_GETTABLE","NFT_MSG_DELTABLE","NFT_MSG_NEWCHAIN","NFT_MSG_GETCHAIN","NFT_MSG_DELCHAIN","NFT_MSG_NEWRULE","NFT_MSG_GETRULE","NFT_MSG_DELRULE","NFT_MSG_NEWSET","NFT_MSG_GETSET","NFT_MSG_DELSET","NFT_MSG_NEWSETELEM","NFT_MSG_GETSETELEM","NFT_MSG_DELSETELEM","NFT_MSG_NEWGEN","NFT_MSG_GETGEN","NFT_MSG_TRACE","NFT_MSG_NEWOBJ","NFT_MSG_GETOBJ","NFT_MSG_DELOBJ","NFT_MSG_GETOBJ_RESET","NFT_MSG_MAX","NFT_SET_ANONYMOUS","NFT_SET_CONSTANT","NFT_SET_INTERVAL","NFT_SET_MAP","NFT_SET_TIMEOUT","NFT_SET_EVAL","NFT_SET_POL_PERFORMANCE","NFT_SET_POL_MEMORY","NFT_SET_ELEM_INTERVAL_END","NFT_DATA_VALUE","NFT_DATA_VERDICT","NFT_DATA_RESERVED_MASK","NFT_DATA_VALUE_MAXLEN","NFT_BYTEORDER_NTOH","NFT_BYTEORDER_HTON","NFT_CMP_EQ","NFT_CMP_NEQ","NFT_CMP_LT","NFT_CMP_LTE","NFT_CMP_GT","NFT_CMP_GTE","NFT_RANGE_EQ","NFT_RANGE_NEQ","NFT_LOOKUP_F_INV","NFT_DYNSET_OP_ADD","NFT_DYNSET_OP_UPDATE","NFT_DYNSET_F_INV","NFT_PAYLOAD_LL_HEADER","NFT_PAYLOAD_NETWORK_HEADER","NFT_PAYLOAD_TRANSPORT_HEADER","NFT_PAYLOAD_CSUM_NONE","NFT_PAYLOAD_CSUM_INET","NFT_META_LEN","NFT_META_PROTOCOL","NFT_META_PRIORITY","NFT_META_MARK","NFT_META_IIF","NFT_META_OIF","NFT_META_IIFNAME","NFT_META_OIFNAME","NFT_META_IIFTYPE","NFT_META_OIFTYPE","NFT_META_SKUID","NFT_META_SKGID","NFT_META_NFTRACE","NFT_META_RTCLASSID","NFT_META_SECMARK","NFT_META_NFPROTO","NFT_META_L4PROTO","NFT_META_BRI_IIFNAME","NFT_META_BRI_OIFNAME","NFT_META_PKTTYPE","NFT_META_CPU","NFT_META_IIFGROUP","NFT_META_OIFGROUP","NFT_META_CGROUP","NFT_META_PRANDOM","NFT_CT_STATE","NFT_CT_DIRECTION","NFT_CT_STATUS","NFT_CT_MARK","NFT_CT_SECMARK","NFT_CT_EXPIRATION","NFT_CT_HELPER","NFT_CT_L3PROTOCOL","NFT_CT_SRC","NFT_CT_DST","NFT_CT_PROTOCOL","NFT_CT_PROTO_SRC","NFT_CT_PROTO_DST","NFT_CT_LABELS","NFT_CT_PKTS","NFT_CT_BYTES","NFT_LIMIT_PKTS","NFT_LIMIT_PKT_BYTES","NFT_LIMIT_F_INV","NFT_QUEUE_FLAG_BYPASS","NFT_QUEUE_FLAG_CPU_FANOUT","NFT_QUEUE_FLAG_MASK","NFT_QUOTA_F_INV","NFT_REJECT_ICMP_UNREACH","NFT_REJECT_TCP_RST","NFT_REJECT_ICMPX_UNREACH","NFT_REJECT_ICMPX_NO_ROUTE","NFT_REJECT_ICMPX_PORT_UNREACH","NFT_REJECT_ICMPX_HOST_UNREACH","NFT_REJECT_ICMPX_ADMIN_PROHIBITED","NFT_NAT_SNAT","NFT_NAT_DNAT","NFT_TRACETYPE_UNSPEC","NFT_TRACETYPE_POLICY","NFT_TRACETYPE_RETURN","NFT_TRACETYPE_RULE","NFT_NG_INCREMENTAL","NFT_NG_RANDOM","M_MXFAST","M_NLBLKS","M_GRAIN","M_KEEP","M_TRIM_THRESHOLD","M_TOP_PAD","M_MMAP_THRESHOLD","M_MMAP_MAX","M_CHECK_ACTION","M_PERTURB","M_ARENA_TEST","M_ARENA_MAX","AT_STATX_SYNC_TYPE","AT_STATX_SYNC_AS_STAT","AT_STATX_FORCE_SYNC","AT_STATX_DONT_SYNC","STATX_TYPE","STATX_MODE","STATX_NLINK","STATX_UID","STATX_GID","STATX_ATIME","STATX_MTIME","STATX_CTIME","STATX_INO","STATX_SIZE","STATX_BLOCKS","STATX_BASIC_STATS","STATX_BTIME","STATX_MNT_ID","STATX_ALL","STATX__RESERVED","STATX_ATTR_COMPRESSED","STATX_ATTR_IMMUTABLE","STATX_ATTR_APPEND","STATX_ATTR_NODUMP","STATX_ATTR_ENCRYPTED","STATX_ATTR_AUTOMOUNT","AT_NULL","AT_IGNORE","AT_EXECFD","AT_PHDR","AT_PHENT","AT_PHNUM","AT_PAGESZ","AT_BASE","AT_FLAGS","AT_ENTRY","AT_NOTELF","AT_UID","AT_EUID","AT_GID","AT_EGID","AT_PLATFORM","AT_HWCAP","AT_CLKTCK","AT_SECURE","AT_BASE_PLATFORM","AT_RANDOM","AT_HWCAP2","AT_EXECFN","ADJ_OFFSET","ADJ_FREQUENCY","ADJ_MAXERROR","ADJ_ESTERROR","ADJ_STATUS","ADJ_TIMECONST","ADJ_TAI","ADJ_SETOFFSET","ADJ_MICRO","ADJ_NANO","ADJ_TICK","ADJ_OFFSET_SINGLESHOT","ADJ_OFFSET_SS_READ","MOD_OFFSET","MOD_FREQUENCY","MOD_MAXERROR","MOD_ESTERROR","MOD_STATUS","MOD_TIMECONST","MOD_CLKB","MOD_CLKA","MOD_TAI","MOD_MICRO","MOD_NANO","STA_PLL","STA_PPSFREQ","STA_PPSTIME","STA_FLL","STA_INS","STA_DEL","STA_UNSYNC","STA_FREQHOLD","STA_PPSSIGNAL","STA_PPSJITTER","STA_PPSWANDER","STA_PPSERROR","STA_CLOCKERR","STA_NANO","STA_MODE","STA_CLK","STA_RONLY","NTP_API","TIME_OK","TIME_INS","TIME_DEL","TIME_OOP","TIME_WAIT","TIME_ERROR","TIME_BAD","MAXTC","PTHREAD_STACK_MIN","PTHREAD_MUTEX_ADAPTIVE_NP","REG_STARTEND","REG_EEND","REG_ESIZE","REG_ERPAREN","ino_t","off_t","blkcnt_t","shmatt_t","msgqnum_t","msglen_t","fsblkcnt_t","fsfilcnt_t","rlim_t","__fsword_t","clock_t","time_t","sigset_t","sysinfo","uptime","loads","totalram","freeram","sharedram","bufferram","totalswap","freeswap","procs","pad","totalhigh","freehigh","mem_unit","_f","msqid_ds","msg_perm","msg_stime","msg_rtime","msg_ctime","msg_qnum","msg_qbytes","msg_lspid","msg_lrpid","RLIM_INFINITY","__SIZEOF_PTHREAD_RWLOCKATTR_T","O_LARGEFILE","c_char","wchar_t","nlink_t","blksize_t","greg_t","suseconds_t","__u64","sigaction","sa_sigaction","sa_mask","sa_flags","sa_restorer","statfs","f_type","f_bsize","f_blocks","f_bfree","f_bavail","f_files","f_ffree","f_fsid","f_namelen","f_frsize","flock","l_type","l_whence","l_start","l_len","l_pid","flock64","l_type","l_whence","l_start","l_len","l_pid","siginfo_t","si_signo","si_errno","si_code","stack_t","ss_sp","ss_flags","ss_size","stat","st_dev","st_ino","st_nlink","st_mode","st_uid","st_gid","st_rdev","st_size","st_blksize","st_blocks","st_atime","st_atime_nsec","st_mtime","st_mtime_nsec","st_ctime","st_ctime_nsec","stat64","st_dev","st_ino","st_nlink","st_mode","st_uid","st_gid","st_rdev","st_size","st_blksize","st_blocks","st_atime","st_atime_nsec","st_mtime","st_mtime_nsec","st_ctime","st_ctime_nsec","statfs64","f_type","f_bsize","f_blocks","f_bfree","f_bavail","f_files","f_ffree","f_fsid","f_namelen","f_frsize","f_flags","f_spare","statvfs64","f_bsize","f_frsize","f_blocks","f_bfree","f_bavail","f_files","f_ffree","f_favail","f_fsid","f_flag","f_namemax","pthread_attr_t","_libc_fpxreg","significand","exponent","_libc_xmmreg","element","_libc_fpstate","cwd","swd","ftw","fop","rip","rdp","mxcsr","mxcr_mask","_st","_xmm","user_regs_struct","r15","r14","r13","r12","rbp","rbx","r11","r10","r9","r8","rax","rcx","rdx","rsi","rdi","orig_rax","rip","cs","eflags","rsp","ss","fs_base","gs_base","ds","es","fs","gs","user","regs","u_fpvalid","i387","u_tsize","u_dsize","u_ssize","start_code","start_stack","signal","u_ar0","u_fpstate","magic","u_comm","u_debugreg","mcontext_t","gregs","fpregs","ipc_perm","__key","uid","gid","cuid","cgid","mode","__seq","shmid_ds","shm_perm","shm_segsz","shm_atime","shm_dtime","shm_ctime","shm_cpid","shm_lpid","shm_nattch","termios2","c_iflag","c_oflag","c_cflag","c_lflag","c_line","c_cc","c_ispeed","c_ospeed","ip_mreqn","imr_multiaddr","imr_address","imr_ifindex","user_fpregs_struct","cwd","swd","ftw","fop","rip","rdp","mxcsr","mxcr_mask","st_space","xmm_space","ucontext_t","uc_flags","uc_link","uc_stack","uc_mcontext","uc_sigmask","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","VEOF","RTLD_DEEPBIND","RTLD_GLOBAL","RTLD_NOLOAD","TIOCGSOFTCAR","TIOCSSOFTCAR","TIOCGRS485","TIOCSRS485","RLIMIT_RSS","RLIMIT_AS","RLIMIT_MEMLOCK","RLIMIT_NOFILE","RLIMIT_NPROC","O_APPEND","O_CREAT","O_EXCL","O_NOCTTY","O_NONBLOCK","O_SYNC","O_RSYNC","O_DSYNC","O_FSYNC","O_NOATIME","O_PATH","O_TMPFILE","MADV_SOFT_OFFLINE","MAP_GROWSDOWN","EDEADLK","ENAMETOOLONG","ENOLCK","ENOSYS","ENOTEMPTY","ELOOP","ENOMSG","EIDRM","ECHRNG","EL2NSYNC","EL3HLT","EL3RST","ELNRNG","EUNATCH","ENOCSI","EL2HLT","EBADE","EBADR","EXFULL","ENOANO","EBADRQC","EBADSLT","EMULTIHOP","EOVERFLOW","ENOTUNIQ","EBADFD","EBADMSG","EREMCHG","ELIBACC","ELIBBAD","ELIBSCN","ELIBMAX","ELIBEXEC","EILSEQ","ERESTART","ESTRPIPE","EUSERS","ENOTSOCK","EDESTADDRREQ","EMSGSIZE","EPROTOTYPE","ENOPROTOOPT","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EOPNOTSUPP","EPFNOSUPPORT","EAFNOSUPPORT","EADDRINUSE","EADDRNOTAVAIL","ENETDOWN","ENETUNREACH","ENETRESET","ECONNABORTED","ECONNRESET","ENOBUFS","EISCONN","ENOTCONN","ESHUTDOWN","ETOOMANYREFS","ETIMEDOUT","ECONNREFUSED","EHOSTDOWN","EHOSTUNREACH","EALREADY","EINPROGRESS","ESTALE","EDQUOT","ENOMEDIUM","EMEDIUMTYPE","ECANCELED","ENOKEY","EKEYEXPIRED","EKEYREVOKED","EKEYREJECTED","EOWNERDEAD","ENOTRECOVERABLE","EHWPOISON","ERFKILL","SOL_SOCKET","SO_REUSEADDR","SO_TYPE","SO_ERROR","SO_DONTROUTE","SO_BROADCAST","SO_SNDBUF","SO_RCVBUF","SO_SNDBUFFORCE","SO_RCVBUFFORCE","SO_KEEPALIVE","SO_OOBINLINE","SO_NO_CHECK","SO_PRIORITY","SO_LINGER","SO_BSDCOMPAT","SO_REUSEPORT","SO_PASSCRED","SO_PEERCRED","SO_RCVLOWAT","SO_SNDLOWAT","SO_RCVTIMEO","SO_SNDTIMEO","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SECURITY_ENCRYPTION_NETWORK","SO_BINDTODEVICE","SO_ATTACH_FILTER","SO_DETACH_FILTER","SO_GET_FILTER","SO_PEERNAME","SO_TIMESTAMP","SO_ACCEPTCONN","SO_PEERSEC","SO_PASSSEC","SO_TIMESTAMPNS","SCM_TIMESTAMPNS","SO_MARK","SO_PROTOCOL","SO_DOMAIN","SO_RXQ_OVFL","SO_WIFI_STATUS","SCM_WIFI_STATUS","SO_PEEK_OFF","SO_NOFCS","SO_LOCK_FILTER","SO_SELECT_ERR_QUEUE","SO_BUSY_POLL","SO_MAX_PACING_RATE","SO_BPF_EXTENSIONS","SO_INCOMING_CPU","SO_ATTACH_BPF","SO_DETACH_BPF","SO_ATTACH_REUSEPORT_CBPF","SO_ATTACH_REUSEPORT_EBPF","SO_CNX_ADVICE","SCM_TIMESTAMPING_OPT_STATS","SO_MEMINFO","SO_INCOMING_NAPI_ID","SO_COOKIE","SCM_TIMESTAMPING_PKTINFO","SO_PEERGROUPS","SO_ZEROCOPY","SO_TXTIME","SCM_TXTIME","SO_BINDTOIFINDEX","SO_TIMESTAMP_NEW","SO_TIMESTAMPNS_NEW","SO_TIMESTAMPING_NEW","SO_RCVTIMEO_NEW","SO_SNDTIMEO_NEW","SO_DETACH_REUSEPORT_BPF","SOCK_STREAM","SOCK_DGRAM","SA_ONSTACK","SA_SIGINFO","SA_NOCLDWAIT","SIGTTIN","SIGTTOU","SIGXCPU","SIGXFSZ","SIGVTALRM","SIGPROF","SIGWINCH","SIGCHLD","SIGBUS","SIGUSR1","SIGUSR2","SIGCONT","SIGSTOP","SIGTSTP","SIGURG","SIGIO","SIGSYS","SIGSTKFLT","SIGUNUSED","SIGPOLL","SIGPWR","SIG_SETMASK","SIG_BLOCK","SIG_UNBLOCK","POLLWRNORM","POLLWRBAND","O_ASYNC","O_NDELAY","PTRACE_DETACH","EFD_NONBLOCK","F_GETLK","F_GETOWN","F_SETOWN","F_SETLK","F_SETLKW","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_RDLCK","F_WRLCK","F_UNLCK","SFD_NONBLOCK","TCSANOW","TCSADRAIN","TCSAFLUSH","TIOCLINUX","TIOCGSERIAL","TIOCEXCL","TIOCNXCL","TIOCSCTTY","TIOCSTI","TIOCMGET","TIOCMBIS","TIOCMBIC","TIOCMSET","TIOCCONS","TIOCM_ST","TIOCM_SR","TIOCM_CTS","TIOCM_CAR","TIOCM_RNG","TIOCM_DSR","SFD_CLOEXEC","NCCS","O_TRUNC","O_CLOEXEC","EBFONT","ENOSTR","ENODATA","ETIME","ENOSR","ENONET","ENOPKG","EREMOTE","ENOLINK","EADV","ESRMNT","ECOMM","EPROTO","EDOTDOT","SA_NODEFER","SA_RESETHAND","SA_RESTART","SA_NOCLDSTOP","EPOLL_CLOEXEC","EFD_CLOEXEC","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_MUTEXATTR_T","O_DIRECT","O_DIRECTORY","O_NOFOLLOW","MAP_HUGETLB","MAP_LOCKED","MAP_NORESERVE","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_POPULATE","MAP_NONBLOCK","MAP_STACK","MAP_SYNC","EDEADLOCK","EUCLEAN","ENOTNAM","ENAVAIL","EISNAM","EREMOTEIO","FIOCLEX","FIONCLEX","FIONBIO","PTRACE_GETFPREGS","PTRACE_SETFPREGS","PTRACE_GETFPXREGS","PTRACE_SETFPXREGS","PTRACE_GETREGS","PTRACE_SETREGS","PTRACE_PEEKSIGINFO_SHARED","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","MCL_CURRENT","MCL_FUTURE","SIGSTKSZ","MINSIGSTKSZ","CBAUD","TAB1","TAB2","TAB3","CR1","CR2","CR3","FF1","BS1","VT1","VWERASE","VREPRINT","VSUSP","VSTART","VSTOP","VDISCARD","VTIME","IXON","IXOFF","ONLCR","CSIZE","CS6","CS7","CS8","CSTOPB","CREAD","PARENB","PARODD","HUPCL","CLOCAL","ECHOKE","ECHOE","ECHOK","ECHONL","ECHOPRT","ECHOCTL","ISIG","ICANON","PENDIN","NOFLSH","CIBAUD","CBAUDEX","VSWTC","OLCUC","NLDLY","CRDLY","TABDLY","BSDLY","FFDLY","VTDLY","XTABS","B0","B50","B75","B110","B134","B150","B200","B300","B600","B1200","B1800","B2400","B4800","B9600","B19200","B38400","EXTA","EXTB","BOTHER","B57600","B115200","B230400","B460800","B500000","B576000","B921600","B1000000","B1152000","B1500000","B2000000","B2500000","B3000000","B3500000","B4000000","VEOL","VEOL2","VMIN","IEXTEN","TOSTOP","FLUSHO","EXTPROC","TCGETS","TCSETS","TCSETSW","TCSETSF","TCGETA","TCSETA","TCSETAW","TCSETAF","TCSBRK","TCXONC","TCFLSH","TIOCINQ","TIOCGPGRP","TIOCSPGRP","TIOCOUTQ","TIOCGWINSZ","TIOCSWINSZ","FIONREAD","TIOCSBRK","TIOCCBRK","R15","R14","R13","R12","RBP","RBX","R11","R10","R9","R8","RAX","RCX","RDX","RSI","RDI","ORIG_RAX","RIP","CS","EFLAGS","RSP","SS","FS_BASE","GS_BASE","DS","ES","FS","GS","REG_R8","REG_R9","REG_R10","REG_R11","REG_R12","REG_R13","REG_R14","REG_R15","REG_RDI","REG_RSI","REG_RBP","REG_RBX","REG_RDX","REG_RAX","REG_RCX","REG_RSP","REG_RIP","REG_EFL","REG_CSGSFS","REG_ERR","REG_TRAPNO","REG_OLDMASK","REG_CR2","c_long","c_ulong","statvfs","f_bsize","f_frsize","f_blocks","f_bfree","f_bavail","f_files","f_ffree","f_favail","f_fsid","f_flag","f_namemax","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCK_T","PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","SYS_read","SYS_write","SYS_open","SYS_close","SYS_stat","SYS_fstat","SYS_lstat","SYS_poll","SYS_lseek","SYS_mmap","SYS_mprotect","SYS_munmap","SYS_brk","SYS_rt_sigaction","SYS_rt_sigprocmask","SYS_rt_sigreturn","SYS_ioctl","SYS_pread64","SYS_pwrite64","SYS_readv","SYS_writev","SYS_access","SYS_pipe","SYS_select","SYS_sched_yield","SYS_mremap","SYS_msync","SYS_mincore","SYS_madvise","SYS_shmget","SYS_shmat","SYS_shmctl","SYS_dup","SYS_dup2","SYS_pause","SYS_nanosleep","SYS_getitimer","SYS_alarm","SYS_setitimer","SYS_getpid","SYS_sendfile","SYS_socket","SYS_connect","SYS_accept","SYS_sendto","SYS_recvfrom","SYS_sendmsg","SYS_recvmsg","SYS_shutdown","SYS_bind","SYS_listen","SYS_getsockname","SYS_getpeername","SYS_socketpair","SYS_setsockopt","SYS_getsockopt","SYS_clone","SYS_fork","SYS_vfork","SYS_execve","SYS_exit","SYS_wait4","SYS_kill","SYS_uname","SYS_semget","SYS_semop","SYS_semctl","SYS_shmdt","SYS_msgget","SYS_msgsnd","SYS_msgrcv","SYS_msgctl","SYS_fcntl","SYS_flock","SYS_fsync","SYS_fdatasync","SYS_truncate","SYS_ftruncate","SYS_getdents","SYS_getcwd","SYS_chdir","SYS_fchdir","SYS_rename","SYS_mkdir","SYS_rmdir","SYS_creat","SYS_link","SYS_unlink","SYS_symlink","SYS_readlink","SYS_chmod","SYS_fchmod","SYS_chown","SYS_fchown","SYS_lchown","SYS_umask","SYS_gettimeofday","SYS_getrlimit","SYS_getrusage","SYS_sysinfo","SYS_times","SYS_ptrace","SYS_getuid","SYS_syslog","SYS_getgid","SYS_setuid","SYS_setgid","SYS_geteuid","SYS_getegid","SYS_setpgid","SYS_getppid","SYS_getpgrp","SYS_setsid","SYS_setreuid","SYS_setregid","SYS_getgroups","SYS_setgroups","SYS_setresuid","SYS_getresuid","SYS_setresgid","SYS_getresgid","SYS_getpgid","SYS_setfsuid","SYS_setfsgid","SYS_getsid","SYS_capget","SYS_capset","SYS_rt_sigpending","SYS_rt_sigtimedwait","SYS_rt_sigqueueinfo","SYS_rt_sigsuspend","SYS_sigaltstack","SYS_utime","SYS_mknod","SYS_uselib","SYS_personality","SYS_ustat","SYS_statfs","SYS_fstatfs","SYS_sysfs","SYS_getpriority","SYS_setpriority","SYS_sched_setparam","SYS_sched_getparam","SYS_sched_setscheduler","SYS_sched_getscheduler","SYS_sched_get_priority_max","SYS_sched_get_priority_min","SYS_sched_rr_get_interval","SYS_mlock","SYS_munlock","SYS_mlockall","SYS_munlockall","SYS_vhangup","SYS_modify_ldt","SYS_pivot_root","SYS__sysctl","SYS_prctl","SYS_arch_prctl","SYS_adjtimex","SYS_setrlimit","SYS_chroot","SYS_sync","SYS_acct","SYS_settimeofday","SYS_mount","SYS_umount2","SYS_swapon","SYS_swapoff","SYS_reboot","SYS_sethostname","SYS_setdomainname","SYS_iopl","SYS_ioperm","SYS_create_module","SYS_init_module","SYS_delete_module","SYS_get_kernel_syms","SYS_query_module","SYS_quotactl","SYS_nfsservctl","SYS_getpmsg","SYS_putpmsg","SYS_afs_syscall","SYS_tuxcall","SYS_security","SYS_gettid","SYS_readahead","SYS_setxattr","SYS_lsetxattr","SYS_fsetxattr","SYS_getxattr","SYS_lgetxattr","SYS_fgetxattr","SYS_listxattr","SYS_llistxattr","SYS_flistxattr","SYS_removexattr","SYS_lremovexattr","SYS_fremovexattr","SYS_tkill","SYS_time","SYS_futex","SYS_sched_setaffinity","SYS_sched_getaffinity","SYS_set_thread_area","SYS_io_setup","SYS_io_destroy","SYS_io_getevents","SYS_io_submit","SYS_io_cancel","SYS_get_thread_area","SYS_lookup_dcookie","SYS_epoll_create","SYS_epoll_ctl_old","SYS_epoll_wait_old","SYS_remap_file_pages","SYS_getdents64","SYS_set_tid_address","SYS_restart_syscall","SYS_semtimedop","SYS_fadvise64","SYS_timer_create","SYS_timer_settime","SYS_timer_gettime","SYS_timer_getoverrun","SYS_timer_delete","SYS_clock_settime","SYS_clock_gettime","SYS_clock_getres","SYS_clock_nanosleep","SYS_exit_group","SYS_epoll_wait","SYS_epoll_ctl","SYS_tgkill","SYS_utimes","SYS_vserver","SYS_mbind","SYS_set_mempolicy","SYS_get_mempolicy","SYS_mq_open","SYS_mq_unlink","SYS_mq_timedsend","SYS_mq_timedreceive","SYS_mq_notify","SYS_mq_getsetattr","SYS_kexec_load","SYS_waitid","SYS_add_key","SYS_request_key","SYS_keyctl","SYS_ioprio_set","SYS_ioprio_get","SYS_inotify_init","SYS_inotify_add_watch","SYS_inotify_rm_watch","SYS_migrate_pages","SYS_openat","SYS_mkdirat","SYS_mknodat","SYS_fchownat","SYS_futimesat","SYS_newfstatat","SYS_unlinkat","SYS_renameat","SYS_linkat","SYS_symlinkat","SYS_readlinkat","SYS_fchmodat","SYS_faccessat","SYS_pselect6","SYS_ppoll","SYS_unshare","SYS_set_robust_list","SYS_get_robust_list","SYS_splice","SYS_tee","SYS_sync_file_range","SYS_vmsplice","SYS_move_pages","SYS_utimensat","SYS_epoll_pwait","SYS_signalfd","SYS_timerfd_create","SYS_eventfd","SYS_fallocate","SYS_timerfd_settime","SYS_timerfd_gettime","SYS_accept4","SYS_signalfd4","SYS_eventfd2","SYS_epoll_create1","SYS_dup3","SYS_pipe2","SYS_inotify_init1","SYS_preadv","SYS_pwritev","SYS_rt_tgsigqueueinfo","SYS_perf_event_open","SYS_recvmmsg","SYS_fanotify_init","SYS_fanotify_mark","SYS_prlimit64","SYS_name_to_handle_at","SYS_open_by_handle_at","SYS_clock_adjtime","SYS_syncfs","SYS_sendmmsg","SYS_setns","SYS_getcpu","SYS_process_vm_readv","SYS_process_vm_writev","SYS_kcmp","SYS_finit_module","SYS_sched_setattr","SYS_sched_getattr","SYS_renameat2","SYS_seccomp","SYS_getrandom","SYS_memfd_create","SYS_kexec_file_load","SYS_bpf","SYS_execveat","SYS_userfaultfd","SYS_membarrier","SYS_mlock2","SYS_copy_file_range","SYS_preadv2","SYS_pwritev2","SYS_pkey_mprotect","SYS_pkey_alloc","SYS_pkey_free","SYS_statx","SYS_pidfd_open","SYS_clone3","max_align_t","sem_t","pthread_mutexattr_t","pthread_rwlockattr_t","pthread_condattr_t","fanotify_event_metadata","event_len","vers","reserved","metadata_len","mask","fd","pid","pthread_cond_t","pthread_mutex_t","pthread_rwlock_t","can_frame","can_id","can_dlc","data","canfd_frame","can_id","len","flags","data","c_void","in6_addr","s6_addr","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","fmt","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","si_addr","si_value","si_pid","si_uid","si_status","si_utime","si_stime"],"q":["libcdhe 64-bit libc on Solaris and illumos only has …op-by-hop option header","group mgmt protocol","for compatibility","exterior gateway protocol","pup","xns idp","tp-4 w/ class negotiation","DCCP","IP6 routing header","IP6 fragmentation header","resource reservation","General Routing Encap.","IP6 Encap Sec. Payload","IP6 Auth Header","IP6 no next header","IP6 destination option","","encapsulation header","Protocol indep. multicast","IP Payload Comp. Protocol","SCTP","","","raw IP packethe <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of …ultipathmaximum number of services provided on the same listening …quivalent to C’s <code>void</code> type when used as a [pointerif":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["c_uint",6]],["c_uint",6]],[[["c_uint",6]],["c_uint",6]],[[["c_int",6]]],[[["c_int",6]],["bool",15]],[[["c_int",6]]],[[]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["c_int",6]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]],["c_int",6]],[[]],[[["c_int",6]],["size_t",6]],[[["cpu_set_t",3]]],[[["usize",15],["cpu_set_t",3]]],[[["usize",15],["cpu_set_t",3]]],[[["usize",15],["cpu_set_t",3]],["bool",15]],[[["usize",15],["cpu_set_t",3]],["c_int",6]],[[["cpu_set_t",3]],["c_int",6]],[[["cpu_set_t",3]],["bool",15]],[[["dev_t",6]],["c_uint",6]],[[["dev_t",6]],["c_uint",6]],[[["c_uint",6]],["dev_t",6]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u32",15]],["u32",15]],[[["u32",15]],["bool",15]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],[["error",3],["result",4]]],[[],["dir",4]],[[],["group",3]],[[],["utimbuf",3]],[[],["timeval",3]],[[],["timespec",3]],[[],["rlimit",3]],[[],["rusage",3]],[[],["ipv6_mreq",3]],[[],["hostent",3]],[[],["iovec",3]],[[],["pollfd",3]],[[],["winsize",3]],[[],["linger",3]],[[],["sigval",3]],[[],["itimerval",3]],[[],["tms",3]],[[],["servent",3]],[[],["protoent",3]],[[],["file",4]],[[],["fpos_t",4]],[[],["timezone",4]],[[],["in_addr",3]],[[],["ip_mreq",3]],[[],["ip_mreq_source",3]],[[],["sockaddr",3]],[[],["sockaddr_in",3]],[[],["sockaddr_in6",3]],[[],["addrinfo",3]],[[],["sockaddr_ll",3]],[[],["fd_set",3]],[[],["tm",3]],[[],["sched_param",3]],[[],["dl_info",3]],[[],["lconv",3]],[[],["in_pktinfo",3]],[[],["ifaddrs",3]],[[],["in6_rtmsg",3]],[[],["arpreq",3]],[[],["arpreq_old",3]],[[],["arphdr",3]],[[],["mmsghdr",3]],[[],["epoll_event",3]],[[],["sockaddr_un",3]],[[],["sockaddr_storage",3]],[[],["utsname",3]],[[],["sigevent",3]],[[],["fpos64_t",4]],[[],["rlimit64",3]],[[],["glob_t",3]],[[],["passwd",3]],[[],["spwd",3]],[[],["dqblk",3]],[[],["signalfd_siginfo",3]],[[],["itimerspec",3]],[[],["fsid_t",3]],[[],["packet_mreq",3]],[[],["cpu_set_t",3]],[[],["if_nameindex",3]],[[],["msginfo",3]],[[],["sembuf",3]],[[],["input_event",3]],[[],["input_id",3]],[[],["input_absinfo",3]],[[],["input_keymap_entry",3]],[[],["input_mask",3]],[[],["ff_replay",3]],[[],["ff_trigger",3]],[[],["ff_envelope",3]],[[],["ff_constant_effect",3]],[[],["ff_ramp_effect",3]],[[],["ff_condition_effect",3]],[[],["ff_periodic_effect",3]],[[],["ff_rumble_effect",3]],[[],["ff_effect",3]],[[],["dl_phdr_info",3]],[[],["elf32_ehdr",3]],[[],["elf64_ehdr",3]],[[],["elf32_sym",3]],[[],["elf64_sym",3]],[[],["elf32_phdr",3]],[[],["elf64_phdr",3]],[[],["elf32_shdr",3]],[[],["elf64_shdr",3]],[[],["ucred",3]],[[],["mntent",3]],[[],["posix_spawn_file_actions_t",3]],[[],["posix_spawnattr_t",3]],[[],["genlmsghdr",3]],[[],["in6_pktinfo",3]],[[],["arpd_request",3]],[[],["inotify_event",3]],[[],["fanotify_response",3]],[[],["sockaddr_vm",3]],[[],["regmatch_t",3]],[[],["sock_extended_err",3]],[[],["__c_anonymous_sockaddr_can_tp",3]],[[],["__c_anonymous_sockaddr_can_j1939",3]],[[],["can_filter",3]],[[],["sockaddr_nl",3]],[[],["dirent",3]],[[],["dirent64",3]],[[],["sockaddr_alg",3]],[[],["af_alg_iv",3]],[[],["mq_attr",3]],[[],["__c_anonymous_sockaddr_can_can_addr",19]],[[],["sockaddr_can",3]],[[],["statx",3]],[[],["statx_timestamp",3]],[[],["aiocb",3]],[[],["__exit_status",3]],[[],["__timeval",3]],[[],["glob64_t",3]],[[],["msghdr",3]],[[],["cmsghdr",3]],[[],["termios",3]],[[],["mallinfo",3]],[[],["nlmsghdr",3]],[[],["nlmsgerr",3]],[[],["nl_pktinfo",3]],[[],["nl_mmap_req",3]],[[],["nl_mmap_hdr",3]],[[],["nlattr",3]],[[],["rtentry",3]],[[],["timex",3]],[[],["ntptimeval",3]],[[],["regex_t",3]],[[],["elf64_chdr",3]],[[],["elf32_chdr",3]],[[],["utmpx",3]],[[],["sigset_t",3]],[[],["sysinfo",3]],[[],["msqid_ds",3]],[[],["sigaction",3]],[[],["statfs",3]],[[],["flock",3]],[[],["flock64",3]],[[],["siginfo_t",3]],[[],["stack_t",3]],[[],["stat",3]],[[],["stat64",3]],[[],["statfs64",3]],[[],["statvfs64",3]],[[],["pthread_attr_t",3]],[[],["_libc_fpxreg",3]],[[],["_libc_xmmreg",3]],[[],["_libc_fpstate",3]],[[],["user_regs_struct",3]],[[],["user",3]],[[],["mcontext_t",3]],[[],["ipc_perm",3]],[[],["shmid_ds",3]],[[],["termios2",3]],[[],["ip_mreqn",3]],[[],["user_fpregs_struct",3]],[[],["ucontext_t",3]],[[],["statvfs",3]],[[],["max_align_t",3]],[[],["sem_t",3]],[[],["pthread_mutexattr_t",3]],[[],["pthread_rwlockattr_t",3]],[[],["pthread_condattr_t",3]],[[],["fanotify_event_metadata",3]],[[],["pthread_cond_t",3]],[[],["pthread_mutex_t",3]],[[],["pthread_rwlock_t",3]],[[],["can_frame",3]],[[],["canfd_frame",3]],[[],["in6_addr",3]],[[]],[[],["sigval",3]],[[],["pid_t",6]],[[],["uid_t",6]],[[],["c_int",6]],[[],["c_long",6]],[[],["c_long",6]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"__c_anonymous_sockaddr_can_tp"],[3,"__c_anonymous_sockaddr_can_j1939"],[3,"can_filter"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[19,"__c_anonymous_sockaddr_can_can_addr"],[3,"sockaddr_can"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"Elf64_Chdr"],[3,"Elf32_Chdr"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"fanotify_event_metadata"],[3,"can_frame"],[3,"canfd_frame"],[3,"in6_addr"],[3,"max_align_t"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"regex_t"],[4,"fpos64_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"timezone"],[3,"fd_set"],[3,"in6_rtmsg"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"c_void"]]},\
"log":{"doc":"A lightweight logging facade.","t":[4,13,13,13,13,13,11,11,11,4,13,13,13,13,13,13,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,3,11,11,11,11,8,10,10,10,5,5,5,5,3,3,5,17,14,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Level","Error","Warn","Info","Debug","Trace","max","to_level_filter","as_str","LevelFilter","Off","Error","Warn","Info","Debug","Trace","max","to_level","as_str","Record","builder","args","metadata","level","target","module_path","module_path_static","file","file_static","line","RecordBuilder","new","args","metadata","level","target","module_path","module_path_static","file","file_static","line","build","Metadata","builder","level","target","MetadataBuilder","new","level","target","build","Log","enabled","log","flush","set_max_level","max_level","set_logger","set_logger_racy","SetLoggerError","ParseLevelError","logger","STATIC_MAX_LEVEL","log","error","warn","info","debug","trace","log_enabled","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","cmp","cmp","cmp","cmp","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","partial_cmp","hash","hash","hash","hash","from_str","from_str","clone","clone","clone","clone"],"q":["logd":["An enum representing the available verbosity levels of …","The “error” level.","The “warn” level.","The “info” level.","The “debug” level.","The “trace” level.","Returns the most verbose logging level.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Returns the string representation of the <code>Level</code>.","An enum representing the available verbosity level …","A level lower than all log levels.","Corresponds to the <code>Error</code> log level.","Corresponds to the <code>Warn</code> log level.","Corresponds to the <code>Info</code> log level.","Corresponds to the <code>Debug</code> log level.","Corresponds to the <code>Trace</code> log level.","Returns the most verbose logging level filter.","Converts <code>self</code> to the equivalent <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","The “payload” of a log message.","Returns a new builder.","The message body.","Metadata about the log directive.","The verbosity level of the message.","The name of the target of the directive.","The module path of the message.","The module path of the message, if it is a <code>\'static</code> string.","The source file containing the message.","The module path of the message, if it is a <code>\'static</code> string.","The line containing the message.","Builder for <code>Record</code>.","Construct new <code>RecordBuilder</code>.","Set <code>args</code>.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","Set <code>Metadata::level</code>.","Set <code>Metadata::target</code>","Set <code>module_path</code>","Set <code>module_path</code> to a <code>\'static</code> string","Set <code>file</code>","Set <code>file</code> to a <code>\'static</code> string.","Set <code>line</code>","Invoke the builder and return a <code>Record</code>","Metadata about a log message.","Returns a new builder.","The verbosity level of the message.","The name of the target of the directive.","Builder for <code>Metadata</code>.","Construct a new <code>MetadataBuilder</code>.","Setter for <code>level</code>.","Setter for <code>target</code>.","Returns a <code>Metadata</code> object.","A trait encapsulating the operations required of a logger.","Determines if a log message with the specified metadata …","Logs the <code>Record</code>.","Flushes any buffered records.","Sets the global maximum log level.","Returns the current maximum log level.","Sets the global logger to a <code>&\'static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The type returned by <code>from_str</code> when the string doesn’t …","Returns a reference to the logger.","The statically resolved maximum log level.","The standard logging macro.","Logs a message at the error level.","Logs a message at the warn level.","Logs a message at the info level.","Logs a message at the debug level.","Logs a message at the trace level.","Determines if a message logged at the specified level in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,0,5,5,5,0,6,6,6,6,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,8,8,8,8,8,8,8,9,9,9,9,9,9,9,1,2,3,4,5,6,8,9,1,2,8,9,1,1,2,2,5,5,6,6,9,9,1,2,5,6,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,5,6,1,2,5,6,1,2,1,2,3,5],"f":[null,null,null,null,null,null,[[],["level",4]],[[],["levelfilter",4]],[[],["str",15]],null,null,null,null,null,null,null,[[],["levelfilter",4]],[[],[["option",4],["level",4]]],[[],["str",15]],null,[[],["recordbuilder",3]],[[],["arguments",3]],[[],["metadata",3]],[[],["level",4]],[[],["str",15]],[[],[["option",4],["str",15]]],[[],[["str",15],["option",4]]],[[],[["option",4],["str",15]]],[[],[["str",15],["option",4]]],[[],[["u32",15],["option",4]]],null,[[],["recordbuilder",3]],[[["arguments",3]],["recordbuilder",3]],[[["metadata",3]],["recordbuilder",3]],[[["level",4]],["recordbuilder",3]],[[["str",15]],["recordbuilder",3]],[[["option",4],["str",15]],["recordbuilder",3]],[[["str",15],["option",4]],["recordbuilder",3]],[[["option",4],["str",15]],["recordbuilder",3]],[[["str",15],["option",4]],["recordbuilder",3]],[[["u32",15],["option",4]],["recordbuilder",3]],[[],["record",3]],null,[[],["metadatabuilder",3]],[[],["level",4]],[[],["str",15]],null,[[],["metadatabuilder",3]],[[["level",4]],["metadatabuilder",3]],[[["str",15]],["metadatabuilder",3]],[[],["metadata",3]],null,[[["metadata",3]],["bool",15]],[[["record",3]]],[[]],[[["levelfilter",4]]],[[],["levelfilter",4]],[[["log",8]],[["result",4],["setloggererror",3]]],[[["log",8]],[["result",4],["setloggererror",3]]],null,null,[[],["log",8]],null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["metadata",3]],["bool",15]],[[["metadata",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],[[["level",4]],["ordering",4]],[[["levelfilter",4]],["ordering",4]],[[["metadata",3]],["ordering",4]],[[["metadatabuilder",3]],["ordering",4]],[[["level",4]],[["option",4],["ordering",4]]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],[["option",4],["ordering",4]]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],[["option",4],["ordering",4]]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],[["option",4],["ordering",4]]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["metadata",3]],[["option",4],["ordering",4]]],[[["metadatabuilder",3]],[["option",4],["ordering",4]]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",4],["level",4]]],[[["str",15]],[["result",4],["levelfilter",4]]],[[],["level",4]],[[],["levelfilter",4]],[[],["record",3]],[[],["metadata",3]]],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[8,"Log"],[3,"SetLoggerError"],[3,"ParseLevelError"]]}\
}');
initSearch(searchIndex);