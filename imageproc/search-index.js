var N=null,E="",T="t",U="u",searchIndex={};
var R=["cfg_if","lazy_static","nodrop","result","NoDrop","scopeguard","always","into_inner","try_from","try_into","borrow_mut","type_id","should_run","formatter","deref_mut","Strategy","ScopeGuard","UnicodeXID","either","Apply the function `f` on the value in the `Left` variant…","Apply the function `f` on the value in the `Right` variant…","Returns left value or computes it from a closure","Factor out a homogeneous type from an either of pairs.","into_iter","ordering","option","rollingadler32","RollingAdler32","borrow","typeid","errorkind","A wrapper type implementing [`RngCore`] for some type…","The core part of the RNG, implementing the `generate`…","Create a new `BlockRng` from an existing RNG implementing…","Get the index into the result buffer.","Reset the number of available results. This will force a…","generate_and_set","Generate a new set of results immediately, setting the…","rand_core","Implement `fill_bytes` by reading chunks from the output…","rand_core::block","to_owned","clone_into","next_u32","next_u64","fill_bytes","try_fill_bytes","from_seed","seed_from_u64","from_rng","rngcore","blockrng","blockrng64","description","stderror","ErrorKind","BlockRng","BlockRng64","BlockRngCore","SeedableRng","Creates a new LZW decoder. ","decode_bytes","Tries to obtain and decode a code word from `bytes`.","Creates a new bit reader","read_bits","write_bits","DecoderEarlyChange","LsbReader","MsbReader","LsbWriter","MsbWriter","BitReader","BitWriter","Returns the RGBA color map calculated from the sample. ","NeuQuant","PointerExt","If the current value equals `current`, stores `new` into…","fetch_add","Increments the current value by `val` and returns the…","fetch_sub","Decrements the current value by `val` and returns the…","fetch_and","Applies bitwise \"and\" to the current value and returns the…","fetch_or","Applies bitwise \"or\" to the current value and returns the…","fetch_xor","Applies bitwise \"xor\" to the current value and returns the…","crossbeam_utils","Pads and aligns a value to the length of a cache line.","unparker","lockresult","shardedlockreadguard","trylockresult","shardedlockwriteguard","scopedthreadbuilder","scopedjoinhandle","crossbeam_utils::atomic","crossbeam_utils::sync","to_string","crossbeam_utils::thread","cachepadded","atomiccell","shardedlock","waitgroup","AtomicCell","AtomicConsume","CachePadded","ShardedLock","WaitGroup","ScopedThreadBuilder","ScopedJoinHandle","ShardedLockReadGuard","ShardedLockWriteGuard","A DEFLATE decoder/decompressor.","Decompress the given slice of DEFLATE compressed (with…","inflatewriter","from_zlib","deflatedecoderbuf","Create a new `DeflateDecoderbuf` that reads from a zlib…","Create a new `Deflatedecoderbuf` to read from a raw…","deflatedecoder","from_zlib_no_checksum","Resets the decompressor, and replaces the current inner…","Returns the total number of bytes output from this decoder.","reset_data","Resets the decoder, but continue to read from the same…","total_out","current_checksum","Returns the calculated checksum value of the currently…","inflatestream","Create a new stream for decoding deflate encoded data with…","InflateWriter","DeflateDecoderBuf","DeflateDecoder","InflateStream","The enum `Either` with variants `Left` and `Right` is a…","A value of type `L`.","A value of type `R`.","interleave","multipeek","Create an iterator that merges elements of the contained…","enumerate","Iterate `i` and `j` in lock step.","An iterator adaptor that merges the two base iterators in…","An iterator adaptor that iterates over the cartesian…","Format all iterator elements lazily, separated by `sep`.","An iterator adaptor that merges an abitrary number of base…","An iterator adapter to filter out duplicate elements.","An iterator which iterates two other iterators…","itertools","eitherorboth","itertools::structs","put_back","An iterator adaptor to insert a particular value between…","intersperse","Create an iterator which iterates over both this and the…","A “meta iterator adaptor”. Its closure receives a…","Return an iterator adaptor that merges the two base…","merge_join_by","mergejoinby","kmerge_by","Return an iterator adaptor that flattens an iterator of…","Return an iterator adaptor that iterates over the…","Return an iterator adaptor that filters out elements that…","combinations","positions","Combine all an iterator's elements into one element by…","Combine all iterator elements into one String, seperated…","Format all iterator elements, separated by `sep`.","Collect all iterator elements into a sorted vector.","minmaxresult","Return the minimum and maximum element of an iterator, as…","partial_cmp","next_back","size_hint","peeking_next","foldwhile","multiproduct","interleaveshortest","batching","whilesome","position","ziplongest","Return true if the value is the `Left` variant.","Return true if the value is the `Right` variant.","Convert the left side of `Either<L, R>` to an `Option<L>`.","Convert the right side of `Either<L, R>` to an `Option<R>`.","Convert `&Either<L, R>` to `Either<&L, &R>`.","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.","Convert `Either<L, R>` to `Either<R, L>`.","map_right","Apply one of two functions depending on contents, unifying…","either_with","Like `either`, but provide some context to whichever of…","left_and_then","right_and_then","Convert the inner value to an iterator.","Return left value or given value","left_or_default","Return left or a default","left_or_else","Return right value or given value","right_or_default","Return right or a default","right_or_else","factor_first","factor_second","Extract the value of an either over two equivalent types.","MinMaxResult","EitherOrBoth","FoldWhile","MultiPeek","PeekingNext","Itertools","Interleave","InterleaveShortest","MapResults","TakeWhileRef","WhileSome","TupleCombinations","Positions","MultiProduct","Combinations","ConsTuples","FormatWith","IntoChunks","Intersperse","MergeJoinBy","PeekingTakeWhile","ProcessResults","RepeatCall","TupleBuffer","TupleWindows","WithPosition","ZipLongest","jitterrng","timererror","TimerError","JitterRng","GIF decoder","Extension","disposalmethod","Converts `u8` to `Option<Self>`","extension","decodingerror","Width of the image","Height of the image","extensiondata","set_param","streamingdecoder","Sets `value` as a parameter of `self`.","parameter","MemoryLimit","DisposalMethod","DecodingError","ColorOutput","Extensions","ExtensionData","StreamingDecoder","SetParameter","Parameter","This scheme is used to convert a value by rounding it…","NegOverflow","PosOverflow","Unrepresentable","A general error enumeration that subsumes all other…","Input was too negative for the target type.","Input was too positive for the target type.","Input was not representable in the target type.","Indicates that a conversion failed due to a range error.","The result of unwrapping.","Either unwraps the successfully converted value, or…","Returns the value stored in this error.","The error type produced by a failed conversion.","This extension trait exists to simplify using various…","approx_from","approx_into","value_from","value_into","conv::errors","unrepresentable","negoverflow","posoverflow","rangeerror","generalerror","floaterror","noerror","generalerrorkind","rangeerrorkind","GeneralError","GeneralErrorKind","FloatError","RangeError","RangeErrorKind","UnwrapOrInf","UnwrapOrInvalid","UnwrapOrSaturate","Saturated","InvalidSentinel","SignedInfinity","ApproxFrom","ApproxInto","ValueFrom","ValueInto","ConvAsUtil","DefaultApprox","RoundToNearest","RoundToNegInf","RoundToPosInf","RoundToZero","capacityerror","utf8error","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push `element` to the end of the vector.","Insert `element` at position `index`.","Remove the element at `index` and swap the last element…","Remove the element at `index` and shift down the following…","arrayvec","intoiterator","arraystring","clone_from","Start index (inclusive)","End index (exclusive)","ArrayString","CapacityError","RangeArgument","default","IntoIter","proc_macro2","tokenstream","delimiter","set_span","Creates a new suffixed integer literal with the specified…","literal","Creates a new unsuffixed integer literal with the…","proc_macro2::token_stream","tokentree","intoiter","from_iter","TokenTree","Delimiter","TokenStream","arp_flags","arp_netmask","it_interval","envelope","e_machine","e_version","e_phentsize","e_shentsize","e_shstrndx","sh_offset","sh_addralign","sh_entsize","ch_addralign","st_blksize","st_blocks","st_atime_nsec","st_mtime_nsec","st_ctime_nsec","f_namelen","f_frsize","f_blocks","f_bavail","mxcr_mask","f_namemax","cpu_set_t","sigaction","truncate","statvfs64","if_nameindex","ipv6_mreq","itimerval","sockaddr_in","sockaddr_in6","sockaddr_ll","sched_param","in_pktinfo","in6_rtmsg","arpreq_old","epoll_event","sockaddr_un","sockaddr_storage","signalfd_siginfo","itimerspec","packet_mreq","input_event","input_absinfo","input_keymap_entry","input_mask","ff_replay","ff_trigger","ff_envelope","ff_constant_effect","ff_ramp_effect","ff_condition_effect","ff_periodic_effect","ff_rumble_effect","ff_effect","dl_phdr_info","posix_spawn_file_actions_t","posix_spawnattr_t","genlmsghdr","in6_pktinfo","arpd_request","inotify_event","sockaddr_vm","sockaddr_nl","sockaddr_alg","af_alg_iv","statx_timestamp","__exit_status","__timeval","mallinfo","nl_pktinfo","nl_mmap_req","nl_mmap_hdr","siginfo_t","statfs64","pthread_attr_t","_libc_fpxreg","_libc_xmmreg","_libc_fpstate","user_regs_struct","mcontext_t","user_fpregs_struct","ucontext_t","pthread_mutexattr_t","pthread_rwlockattr_t","pthread_condattr_t","pthread_cond_t","pthread_mutex_t","pthread_rwlock_t","timespec","protoent","sockaddr","addrinfo","sigevent","rlimit64","input_id","Elf32_Ehdr","Elf64_Ehdr","Elf32_Sym","Elf64_Sym","Elf32_Phdr","Elf64_Phdr","Elf32_Shdr","Elf64_Shdr","Elf32_Chdr","Elf64_Chdr","dirent64","glob64_t","nlmsghdr","nlmsgerr","msqid_ds","ipc_perm","shmid_ds","termios2","in6_addr","sigset_t","timezone","fpos64_t","Reads an unsigned n-bytes integer from the underlying…","Reads a signed n-bytes integer from the underlying reader.","DEPRECATED.","Writes an unsigned n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","read_u128","read_uint","read_uint128","Reads an unsigned n-bytes integer from `buf`.","write_u16","write_u24","write_u32","write_u48","write_u64","write_u128","write_uint","write_uint128","Writes an unsigned integer `n` to `buf` using only `nbytes`.","read_i128","read_int128","Reads a signed n-bytes integer from `buf`.","Reads a IEEE754 single-precision (4 bytes) floating point…","Reads a IEEE754 double-precision (8 bytes) floating point…","write_i16","write_i24","write_i32","write_i48","write_i64","write_i128","write_int","write_int128","Writes a signed integer `n` to `buf` using only `nbytes`.","write_f32","Writes a IEEE754 single-precision (4 bytes) floating point…","write_f64","Writes a IEEE754 double-precision (8 bytes) floating point…","read_u16_into","read_u32_into","read_u64_into","read_u128_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","Reads IEEE754 single-precision (4 bytes) floating point…","read_f64_into_unchecked","read_u16","read_u32","read_u64","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","bigendian","littleendian","Reads an unsigned 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16 bit integer from the underlying reader.","read_i16","Reads a signed 16 bit integer from the underlying reader.","read_u24","Reads an unsigned 24 bit integer from the underlying reader.","read_i24","Reads a signed 24 bit integer from the underlying reader.","Reads an unsigned 32 bit integer from the underlying reader.","read_i32","Reads a signed 32 bit integer from the underlying reader.","read_u48","Reads an unsigned 48 bit integer from the underlying reader.","read_i48","Reads a signed 48 bit integer from the underlying reader.","Reads an unsigned 64 bit integer from the underlying reader.","read_i64","Reads a signed 64 bit integer from the underlying reader.","Reads an unsigned 128 bit integer from the underlying…","Reads a signed 128 bit integer from the underlying reader.","read_int","read_f32","read_f64","Reads a sequence of unsigned 16 bit integers from the…","Reads a sequence of unsigned 32 bit integers from the…","Reads a sequence of unsigned 64 bit integers from the…","Reads a sequence of unsigned 128 bit integers from the…","read_i8_into","Reads a sequence of signed 8 bit integers from the…","Reads a sequence of signed 16 bit integers from the…","Reads a sequence of signed 32 bit integers from the…","Reads a sequence of signed 64 bit integers from the…","Reads a sequence of signed 128 bit integers from the…","Reads a sequence of IEEE754 single-precision (4 bytes)…","Reads a sequence of IEEE754 double-precision (8 bytes)…","Writes an unsigned 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying writer.","Writes a signed 48 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes an unsigned 128 bit integer to the underlying writer.","Writes a signed 128 bit integer to the underlying writer.","ReadBytesExt","WriteBytesExt","ByteOrder","BigEndian","LittleEndian","pusherror","capacity","poperror","Returns `true` if the queue is empty.","Returns the number of elements in the queue.","PushError","ArrayQueue","is_empty","XorShiftRng","Hc128Core","rand_isaac","new_from_u64","Create an ISAAC-64 random number generator using an `u64`…","rand_isaac::isaac","rand_isaac::isaac64","generate","Refills the output buffer, `results`. See also the…","isaacarray","Create an ISAAC random number generator using an `u64` as…","Isaac64Rng","Isaac64Core","IsaacCore","partialord","num_traits","neg_infinity","min_value","max_value","Returns `-0.0`.","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","Returns the largest finite value that this type can…","is_infinite","is_finite","is_normal","Returns `true` if the number is neither zero, infinite,…","Returns the floating point category of the number. If only…","fpcategory","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","is_sign_negative","Raise a number to an integer power.","to_degrees","to_radians","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","Shifts the bits to the left by a specified amount amount,…","Shifts the bits to the right by a specified amount amount,…","num_traits::ops","Fused multiply-add. Computes `(self * a) + b` with only…","Performs the fused multiply-add operation.","checkedmul","The result after applying the operator.","Returns `true` if `self` is positive, including `+0.0`,…","Returns `true` if `self` is negative, including `-0.0`,…","Take the reciprocal (inverse) of a number, `1/x`.","Take the square root of a number.","Returns `e^(self)`, (the exponential function).","Returns `2^(self)`.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an…","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle…","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in…","Computes the arccosine of a number. Return value is in…","Computes the arctangent of a number. Return value is in…","Computes the four quadrant arctangent of `self` (`y`) and…","Simultaneously computes the sine and cosine of the number,…","Returns `e^(self) - 1` in a way that is accurate even if…","Returns `ln(1+n)` (natural logarithm) more accurately than…","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Computes the absolute value.","Returns the sign of the number.","ParseFloatError","FloatErrorKind","ToPrimitive","FromPrimitive","AsPrimitive","FloatCore","FloatConst","CheckedAdd","CheckedSub","CheckedMul","CheckedDiv","CheckedRem","CheckedNeg","CheckedShl","CheckedShr","MulAddAssign","Saturating","WrappingAdd","WrappingSub","WrappingMul","WrappingShl","WrappingShr","chachacore","ChaChaRng","ChaChaCore","A cryptographically secure random number generator that…","Lcg64Xsh32","Mcg128Xsl64","For use by `ToTokens` implementations.","into_token_stream","Convert `self` directly into a `TokenStream` object.","TokenStreamExt","compressionoptions","Compress the given slice of bytes with DEFLATE…","Returns a set of compression settings that makes the…","deflate::write","compression","When the encoder is dropped, output the rest of the data.","matchingtype","specialoptions","Flush the encoder.","Encode all pending data to the contained writer, consume…","Resets the encoder (except the compression options),…","CompressionOptions","SpecialOptions","Compression","MatchingType","DeflateEncoder","ZlibEncoder","Japanese","ChineseTrad","Microsoft","platformid","unicodeeid","microsofteid","microsoftlang","platformencodinglanguageid","vertextype","hmetrics","vmetrics","fontinfo","fontnameiter","VertexType","PlatformId","UnicodeEid","MicrosoftEid","MicrosoftLang","PlatformEncodingLanguageId","FontNameIter","integer","Returns the truncated principal `n`th root of an integer…","Returns the truncated principal square root of an integer…","Returns the truncated principal cube root of an integer --…","div_floor","mod_floor","div_mod_floor","extendedgcd","ExtendedGcd","IterBinomial","complex","parsecomplexerror","add_assign","sub_assign","mul_assign","div_assign","rem_assign","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…","mul_add_assign","ParseComplexError","from_isize","from_i128","from_usize","from_u128","toprimitive","from_str_radix","A wrapper around Floats providing an implementation of Ord…","An error indicating an attempt to construct NotNan from a…","floatisnan","Get the value out.","parsenotnanerror","from_str","orderedfloat","to_isize","to_usize","from_i64","from_u64","from_i16","from_i32","from_u8","from_u16","from_u32","from_f32","from_f64","is_positive","is_negative","OrderedFloat","ParseNotNanError","FloatIsNan","The requisite parameters for testing for approximate…","The tolerance to use when testing values that are close…","Equality comparisons between two numbers using both the…","Replace the epsilon value with the one specified.","max_relative","Peform the equality comparison","Peform the inequality comparison","epsilon","abs_diff_eq","abs_diff_ne","relative_eq","relative_ne","Approximate equality using both the absolute difference…","Approximate inequality using both the absolute difference…","relative","The inverse of `ApproxEq::abs_diff_eq`.","The inverse of `ApproxEq::relative_eq`.","The inverse of `ApproxEq::ulps_eq`.","AbsDiffEq","RelativeEq","A word of Rust code, which may be a keyword or legal…","paren_token","pub_token","bracket_token","colon_token","eq_token","lifetimes","Returned by `Generics::split_for_impl`.","brace_token","semi_token","bang_token","const_token","lifetime","mutability","lt_token","gt_token","A structured list within an attribute, like `derive(Copy,…","A name-value pair within an attribute, like `feature =…","Named fields of a struct or struct variant such as `Point…","Unnamed fields of a tuple struct or tuple variant such as…","A public visibility level: `pub`.","A crate-level visibility: `crate`.","A visibility level restricted to some path: `pub(self)` or…","A box expression: `box f`.","A placement expression: `place <- value`.","A slice literal expression: `[a, b, c, d]`.","A function call expression: `invoke(a, b)`.","A method call expression: `x.foo::<T>(a, b)`.","A tuple expression: `(a, b, c, d)`.","A binary operation: `a + b`, `a * b`.","A unary operation: `!x`, `*x`.","A literal in place of an expression: `1`, `\"foo\"`.","A cast expression: `foo as f64`.","A type ascription expression: `foo: f64`.","A `let` guard: `let Some(x) = opt`.","An `if` expression with an optional `else` block: `if expr…","A while loop: `while expr { ... }`.","A for loop: `for pat in expr { ... }`.","Conditionless loop: `loop { ... }`.","A `match` expression: `match n { Some(n) => {}, None => {}…","A closure expression: `|a, b| a + b`.","An unsafe block: `unsafe { ... }`.","A blocked scope: `{ ... }`.","An assignment expression: `a = compute()`.","A compound assignment expression: `counter += 1`.","Access of a named struct field (`obj.k`) or unnamed tuple…","A square bracketed indexing expression: `vector[2]`.","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","A path like `std::mem::replace` possibly containing…","A referencing operation: `&a` or `&mut a`.","A `break`, with an optional label to break and an optional…","A `continue`, with an optional label.","A `return`, with an optional value to be returned.","A macro invocation expression: `format!(\"{}\", q)`.","A struct literal expression: `Point { x: 1, y: 1 }`.","An array literal constructed from one repeated element:…","A parenthesized expression: `(a + b)`.","An expression contained within invisible delimiters.","A try-expression: `expr?`.","An async block: `async { ... }`.","A try block: `try { ... }`.","A yield expression: `yield expr`.","Tokens in expression position not interpreted by Syn.","A generic type parameter: `T: Into<String>`.","A lifetime definition: `'a: 'b + 'c + 'd`.","A const generic parameter: `const LENGTH: usize`.","Lifetime","A type predicate in a `where` clause: `for<'c> Foo<'c>:…","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","An equality predicate in a `where` clause (unsupported).","A UTF-8 string literal: `\"foo\"`.","A byte string literal: `b\"foo\"`.","A byte literal: `b'f'`.","A character literal: `'a'`.","An integer literal: `1` or `1u16`.","A floating point literal: `1f64` or `1.0e10f64`.","A boolean literal: `true` or `false`.","A raw token literal not interpreted by Syn, possibly…","A struct input to a `proc_macro_derive` macro.","An enum input to a `proc_macro_derive` macro.","A tagged union input to a `proc_macro_derive` macro.","A dynamically sized slice type: `[T]`.","A fixed size array type: `[T; n]`.","A raw pointer type: `*const T` or `*mut T`.","Reference","A reference type: `&'a T` or `&'a mut T`.","A bare function type: `fn(usize) -> bool`.","The never type: `!`.","A tuple type: `(A, B, C, String)`.","A path like `std::slice::Iter`, optionally qualified with…","A trait object type `Bound1 + Bound2 + Bound3` where…","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…","A parenthesized type equivalent to the inner type.","A type contained within invisible delimiters.","Indication that a type should be inferred by the compiler:…","A macro in the type position.","Verbatim","Tokens in type position not interpreted by Syn.","Constraint","An associated type bound: `Iterator<Item: Display>`.","Continue","surround","parsestream","intsuffix","floatsuffix","Parse the tokens within the macro invocation's delimiters…","without_plus","Creates a `TokenBuffer` containing all the tokens from the…","tokenbuffer","token_stream","Punctuated","punctuated","Returns an iterator over the contents of this sequence as…","Appends a syntax tree node onto the end of this punctuated…","A trait that can provide the `Span` of the complete…","Error returned when a Syn parser cannot parse the input…","syn::parse","Parse a proc-macro2 token stream into the chosen syntax…","Parse tokens of source code into the chosen syntax tree…","parse_str","Parse a string of Rust code into the chosen syntax tree…","parse_terminated","Parses zero or more occurrences of `T` separated by…","lookahead1","Triggers an error at the current position of the parse…","The result of a Syn parser.","display","syn::token","syn::buffer","syn::punctuated","to_tokens","parse_any","advance_to","nestedmeta","visibility","genericparam","typeparambound","wherepredicate","lexerror","underscore","selfvalue","metanamevalue","fieldsnamed","fieldsunnamed","vispublic","visrestricted","exprinplace","exprarray","exprmethodcall","exprtuple","exprbinary","exprunary","exprwhile","exprforloop","exprmatch","exprclosure","exprunsafe","exprblock","exprassign","exprassignop","exprfield","exprindex","exprrange","exprreference","exprbreak","exprcontinue","exprreturn","exprmacro","exprstruct","exprrepeat","exprparen","exprgroup","exprasync","exprtryblock","expryield","exprverbatim","generics","typeparam","lifetimedef","constparam","turbofish","boundlifetimes","traitbound","whereclause","predicatetype","predicatelifetime","predicateeq","litverbatim","typereference","typetraitobject","typeimpltrait","typeverbatim","Creates a new `Ident` with the given `string` as well as…","Returns the span of this `Ident`.","Configures the span of this `Ident`, possibly changing its…","Looks at the next token in the parse stream to determine…","MetaNameValue","FieldsNamed","FieldsUnnamed","VisRestricted","ExprVerbatim","BoundLifetimes","LifetimeDef","PredicateEq","PredicateLifetime","PredicateType","WhereClause","LitVerbatim","DeriveInput","TypeImplTrait","TypeReference","TypeTraitObject","TypeVerbatim","AngleBracketedGenericArguments","ParenthesizedGenericArguments","PathSegment","GenericParam","TraitBoundModifier","TypeParamBound","WherePredicate","FloatSuffix","MacroDelimiter","BareFnArgName","GenericArgument","PathArguments","Existential","TypeGenerics","TokenBuffer","Speculative","ParseBuffer","ExprAssignOp","ExprClosure","ExprContinue","ExprForLoop","ExprInPlace","ExprMethodCall","ExprReference","ExprTryBlock","ImplGenerics","A distribution to sample floating point numbers uniformly…","Sample values uniformly between two bounds.","new_inclusive","Create a new `Uniform` instance which samples uniformly…","rand::distributions","weightedindex","weightederror","sample_iter","choose_multiple","Collects `amount` values at random from the iterator into…","distribution","Fill `dest` entirely with random bytes (uniform value…","Shuffle a mutable slice in place.","rand::distributions::uniform","rand::rngs","from_entropy","rand::rngs::adapter","rand::rngs::mock","rand::seq::index","sample_single","rand::seq","unitspheresurface","indexvecintoiter","WeightedError","SampleUniform","UniformSampler","SampleBorrow","WeightedIndex","UnitSphereSurface","Distribution","WeightedChoice","ReseedingRng","SliceRandom","IteratorRandom","AsByteSliceMut","FromEntropy","Alphanumeric","OpenClosed01","StandardNormal","UniformFloat","UniformDuration","SliceChooseIter","IndexVecIter","IndexVecIntoIter","Error kind which can be matched over.","Unavailable","Feature is not available; not recoverable.","General failure; there may be a chance of recovery on retry.","A transient failure which likely can be resolved or worked…","Not ready yet: recommended to try again a little later.","Error type of random number generators","The error kind","The error message","The core of a random number generator.","Return the next random `u32`.","Return the next random `u64`.","Fill `dest` with random data.","Fill `dest` entirely with random data.","A marker trait used to indicate that an [`RngCore`] or…","A random number generator that can be explicitly seeded.","Seed type, which is restricted to types…","Create a new PRNG using the given seed.","Create a new PRNG using a `u64` seed.","Create a new PRNG seeded from another `Rng`.","should_retry","True if this kind of error may resolve itself on retry.","should_wait","True if we should retry but wait before retrying","A description of this error kind","Create a new instance, with specified kind and a message.","Create a new instance, with specified kind, message, and a…","Take the cause, if any. This allows the embedded cause to…","A true random number generator based on jitter in the CPU…","An error that can occur when [`JitterRng::test_timer`]…","No timer available.","CoarseTimer","Timer too coarse to use as an entropy source.","NotMonotonic","Timer is not monotonically increasing.","TinyVariantions","Variations of deltas of time too small.","TooManyStuck","Too many stuck results (indicating no added entropy).","Create a new `JitterRng`. Makes use of `std::time` for a…","new_with_timer","Create a new `JitterRng`. A custom timer can be supplied,…","Configures how many rounds are used to generate each…","Basic quality tests on the timer, by measuring CPU timing…","timer_stats","Statistical test: return the timer delta of one normal run…","A random number generator that retrieves randomness…","Create a new `OsRng`.","PixelDimensions","AnimationControl","FrameControl","chunktype","buffer_size","Returns the next processed row of the image","Returns the number of bytes required to hold a…","encodingerror","streamwriter","filtertype","u8 -> Self. Temporary solution until Rust provides a…","u8 -> Self. Using enum_primitive or transmute is probably…","animation_control","animationcontrol","frame_control","framecontrol","Returns the number of bytes needed for one deinterlaced…","transformations","colortype","disposeop","EncodingError","StreamWriter","Transformations","rangeinclusive","rangestepinclusive","RangeInclusive","RangeStepInclusive","Creates and initializes a `BigInt`.","Creates and initializes a `BigInt` from an array of bytes…","Creates and initializes a `BigInt`. Each u8 of the input…","Returns the sign and the byte representation of the…","Returns the two's complement byte representation of the…","Creates and initializes a `BigUint`.","assign_from_slice","from_bytes_be","from_bytes_le","parse_bytes","from_radix_be","from_radix_le","Creates and initializes a `BigUint`. Each u8 of the input…","to_bytes_be","to_bytes_le","Returns the byte representation of the `BigUint` in…","to_str_radix","Returns the integer formatted as a string in the given…","to_radix_be","Returns the integer in the requested base in big-endian…","to_radix_le","Returns the integer in the requested base in little-endian…","Determines the fewest bits necessary to express the…","Returns the truncated principal square root of `self` --…","Returns the truncated principal cube root of `self` -- see…","Returns the truncated principal `n`th root of `self` --…","to_biguint","parsebiginterror","bitand_assign","bitor_assign","bitxor_assign","Calculates the Greatest Common Divisor (GCD) of the number…","Calculates the Lowest Common Multiple (LCM) of the number…","Deprecated, use `is_multiple_of` instead.","is_multiple_of","Returns `true` if the number is a multiple of `other`.","Returns `true` if the number is divisible by `2`.","Returns `true` if the number is not divisible by `2`.","Creates and initializes a BigInt.","checked_mul","checked_div","checked_add","checked_sub","ParseBigIntError","sharedbytes","fontcollection","The glyph identifier for this glyph.","The font to which this glyph belongs. If the glyph is a…","scaledglyph","standalone","Constructs a glyph that owns its data from this glyph.…","positionedglyph","into_glyph_id","codepoint","SharedGlyphData","SharedBytes","IntoGlyphId","FontCollection","ScaledGlyph","PositionedGlyph","IntoFontsIter","advance_width","left_side_bearing","units_per_em","Stores a `Shared` or `Owned` pointer into the atomic…","compareandseterror","Stores the pointer `new` (either `Shared` or `Owned`) into…","Dereferences the pointer.","Takes ownership of the pointee.","Returns the tag stored within the pointer.","Returns the same pointer, but tagged with `tag`. `tag` is…","Stores a function so that it can be executed at some point…","collector","Returns a new pointer pointing to the tagged pointer `data`.","into_usize","CompareAndSetError","LocalHandle","CompareAndSetOrdering","load_consume","A generic trait for converting a value to a number.","Converts the value of `self` to an `isize`.","Converts the value of `self` to an `i8`.","Converts the value of `self` to an `i16`.","Converts the value of `self` to an `i32`.","Converts the value of `self` to an `i64`.","Converts the value of `self` to an `i128`.","Converts the value of `self` to a `usize`.","Converts the value of `self` to an `u8`.","Converts the value of `self` to an `u16`.","Converts the value of `self` to an `u32`.","Converts the value of `self` to an `u64`.","Converts the value of `self` to an `u128`.","Converts the value of `self` to an `f32`.","Converts the value of `self` to an `f64`.","A generic trait for converting a number to a value.","Convert an `isize` to return an optional value of this…","Convert an `i8` to return an optional value of this type.…","Convert an `i16` to return an optional value of this type.…","Convert an `i32` to return an optional value of this type.…","Convert an `i64` to return an optional value of this type.…","Convert an `i128` to return an optional value of this…","Convert a `usize` to return an optional value of this…","Convert an `u8` to return an optional value of this type.…","Convert an `u16` to return an optional value of this type.…","Convert an `u32` to return an optional value of this type.…","Convert an `u64` to return an optional value of this type.…","Convert an `u128` to return an optional value of this…","Convert a `f32` to return an optional value of this type.…","Convert a `f64` to return an optional value of this type.…","An interface for casting between machine scalars.","Creates a number from another value that can be converted…","Cast from one machine scalar to another.","Raises a value to the power of exp, using exponentiation…","checked_pow","Raises a value to the power of exp, returning `None` if an…","Floored integer division.","Floored integer modulo, satisfying:","Ceiled integer division.","Greatest Common Divisor (GCD).","Lowest Common Multiple (LCM).","Greatest Common Divisor (GCD) and Lowest Common Multiple…","extended_gcd","Greatest common divisor and Bézout coefficients.","extended_gcd_lcm","Greatest common divisor, least common multiple, and Bézout…","Returns `true` if `self` is a multiple of `other`.","Returns `true` if the number is even.","Returns `true` if the number is odd.","Simultaneous truncated integer division and modulus.…","Simultaneous floored integer division and modulus. Returns…","next_multiple_of","Rounds up to nearest multiple of argument.","prev_multiple_of","Rounds down to nearest multiple of argument.","Returns an iterator over the given range [start, stop)…","range_inclusive","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by `step`.…","range_step_inclusive","Return an iterator over the range [start, stop] by `step`.…","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","num::traits","A generic interface for casting between machine scalars…","Convert a value to another, using the `as` operator.","Generic trait for floating point numbers","Returns the `NaN` value.","Returns the infinite value.","Returns the negative infinite value.","Returns `true` if this value is `NaN` and false otherwise.","Returns `true` if this value is positive infinity or…","Returns `true` if this number is neither infinite nor `NaN`.","Raise a number to a floating point power.","Defines an additive identity element for `Self`.","Returns the additive identity element of `Self`, `0`. #…","Sets `self` to the additive identity element of `Self`, `0`.","Returns `true` if `self` is equal to the additive identity.","Defines a multiplicative identity element for `Self`.","Returns the multiplicative identity element of `Self`, `1`.","Sets `self` to the multiplicative identity element of…","Returns `true` if `self` is equal to the multiplicative…","Returns the additive identity, `0`.","Returns the multiplicative identity, `1`.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of…","count_zeros","Returns the number of zeros in the binary representation…","leading_zeros","Returns the number of leading zeros in the binary…","trailing_zeros","Returns the number of trailing zeros in the binary…","rotate_left","rotate_right","unsigned_shl","unsigned_shr","Reverses the byte order of the integer.","Convert an integer from big endian to the target's…","Convert an integer from little endian to the target's…","Convert `self` to big endian from the target's endianness.","Convert `self` to little endian from the target's…","Raises self to the power of `exp`, using exponentiation by…","Performs addition that returns `None` instead of wrapping…","Adds two numbers, checking for overflow. If overflow…","Performs subtraction that returns `None` instead of…","Subtracts two numbers, checking for underflow. If…","Performs multiplication that returns `None` instead of…","Multiplies two numbers, checking for underflow or…","Performs division that returns `None` instead of panicking…","Divides two numbers, checking for underflow, overflow and…","num::traits::ops","Saturating math operations","saturating_add","Saturating addition operator. Returns a+b, saturating at…","saturating_sub","Saturating subtraction operator. Returns a-b, saturating…","Binary operator for raising a value to a power.","Returns `self` to the power `rhs`.","Useful functions for signed numbers (i.e. numbers that can…","Returns true if the number is positive and false if the…","Returns true if the number is negative and false if the…","A trait for values which cannot be negative","The base trait for numeric types, covering `0` and `1`…","FromStrRadixErr","Convert from a string and radix <= 36.","A value bounded by a minimum and a maximum","num::integer","Greatest common divisor and Bézout coefficients","An iterator over binomial coefficients.","nth_root","Simultaneous integer division and modulus","Floored integer division","Floored integer modulus","Simultaneous floored integer division and modulus","Ceiled integer division","Calculates the Greatest Common Divisor (GCD) and Lowest…","Calculate the binomial coefficient.","multinomial","Calculate the multinomial coefficient.","Provides methods to compute an integer's square root, cube…","For a given n, iterate over all binomial coefficients…","iterbinomial","An iterator over the range [start, stop)","An iterator over the range [start, stop]","An iterator over the range [start, stop) by `step`. It…","An iterator over the range [start, stop] by `step`. It…","range_step","rangestep","RangeStep","Generic trait for floating point numbers that works with…","Returns positive infinity.","Returns negative infinity.","Returns NaN.","Returns `true` if the number is NaN.","Returns `true` if the number is infinite.","Returns `true` if the number is neither infinite or NaN.","Returns `true` if `self` is positive, including `+0.0` and…","Returns `true` if `self` is negative, including `-0.0` and…","Returns the reciprocal (multiplicative inverse) of the…","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Return Euler’s number.","Return `1.0 / π`.","FRAC_1_SQRT_2","Return `1.0 / sqrt(2.0)`.","Return `2.0 / π`.","FRAC_2_SQRT_PI","Return `2.0 / sqrt(π)`.","Return `π / 2.0`.","Return `π / 3.0`.","Return `π / 4.0`.","Return `π / 6.0`.","Return `π / 8.0`.","Return `ln(10.0)`.","Return `ln(2.0)`.","Return `log10(e)`.","Return `log2(e)`.","Return Archimedes’ constant.","Return `sqrt(2.0)`.","count_ones","signed_shl","signed_shr","swap_bytes","Performs an integral remainder that returns `None` instead…","checked_rem","Finds the remainder of dividing two numbers, checking for…","Performs negation that returns `None` if the result can't…","checked_neg","Negates a number, returning `None` for results that can't…","Performs a left shift that returns `None` on shifts larger…","checked_shl","Checked shift left. Computes `self << rhs`, returning…","Performs a right shift that returns `None` on shifts…","checked_shr","Checked shift right. Computes `self >> rhs`, returning…","Unary operator for retrieving the multiplicative inverse,…","Returns the multiplicative inverse of `self`.","The resulting type after applying the fused multiply-add.","The fused multiply-add assignment operation.","Performs addition that wraps around on overflow.","wrapping_add","Wrapping (modular) addition. Computes `self + other`,…","Performs subtraction that wraps around on overflow.","wrapping_sub","Wrapping (modular) subtraction. Computes `self - other`,…","Performs multiplication that wraps around on overflow.","wrapping_mul","Wrapping (modular) multiplication. Computes `self *…","Performs a left shift that does not panic.","wrapping_shl","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…","Performs a right shift that does not panic.","wrapping_shr","Panic-free bitwise shift-right; yields `self >>…","A trait for real number types that do not necessarily have…","Raise a number to a real number power.","The trait for types implementing basic numeric operations","The trait for `Num` types which also implement numeric…","The trait for references which implement numeric…","NumAssignOps","The trait for types implementing numeric assignment…","The trait for `Num` types which also implement assignment…","NumAssignRef","The trait for `NumAssign` types which also implement…","bigrational","parseratioerror","ParseRatioError","LimitsExceeded","PhotometricInterpretation","PlanarConfiguration","tiffresult","tiff::decoder","Tries to retrieve a tag and convert it to the desired type.","decodingbuffer","decodingresult","ResolutionUnit","ColorType","tiff::encoder","tiffencoder","directoryencoder","imageencoder","resolutionunit","tiff::decoder::ifd","tiff::encoder::colortype","tiffformaterror","tiffunsupportederror","photometricinterpretation","compressionmethod","planarconfiguration","TiffFormatError","TiffUnsupportedError","DecodingResult","DecodingBuffer","CompressionMethod","TiffEncoder","DirectoryEncoder","ImageEncoder","Returns `true` if the deque is empty.","A big unsigned integer type.","A big signed integer type.","A complex number in Cartesian form.","Real portion of the complex number","Imaginary portion of the complex number","Alias for a `Ratio` of machine-sized integers.","BigRational","Alias for arbitrary precision rationals.","num::bigint","num::complex","num::rational","A Sign is a `BigInt`'s composing element.","from_biguint","from_slice","Reinitializes a `BigInt`.","from_signed_bytes_be","from_signed_bytes_le","to_signed_bytes_be","to_signed_bytes_le","Returns the sign of the `BigInt` as a `Sign`.","Converts this `BigInt` into a `BigUint`, if it's not…","Returns `(self ^ exponent) mod modulus`","Assign a value to a `BigUint`.","Creates and initializes a `BigUint`. The input slice must…","Returns `(self ^ exponent) % modulus`.","A generic trait for converting a value to a `BigUint`.","Converts the value of `self` to a `BigUint`.","A generic trait for converting a value to a `BigInt`.","to_bigint","Converts the value of `self` to a `BigInt`.","Negate Sign value.","shl_assign","shr_assign","ToBigUint","Create a new Complex","Returns imaginary unit","Returns the square of the norm (since `T` doesn't…","Multiplies `self` by the scalar `t`.","Divides `self` by the scalar `t`.","Raises `self` to an unsigned integer power.","Returns the complex conjugate. i.e. `re - i im`","Returns `1/self`","Raises `self` to a signed integer power.","Returns the L1 norm `|re| + |im|` -- the [Manhattan…","Calculate |self|","Calculate the principal Arg of self.","Convert to polar form (r, theta), such that `self = r *…","Convert a polar representation into a complex number.","Computes `e^(self)`, where `e` is the base of the natural…","Computes the principal value of natural logarithm of `self`.","Computes the principal value of the square root of `self`.","Computes the principal value of the cube root of `self`.","Raises `self` to a floating point power.","Returns the logarithm of `self` with respect to an…","Raises `self` to a complex power.","Raises a floating point number to the complex power `self`.","Computes the sine of `self`.","Computes the cosine of `self`.","Computes the tangent of `self`.","Computes the principal value of the inverse sine of `self`.","Computes the principal value of the inverse cosine of…","Computes the principal value of the inverse tangent of…","Computes the hyperbolic sine of `self`.","Computes the hyperbolic cosine of `self`.","Computes the hyperbolic tangent of `self`.","Computes the principal value of inverse hyperbolic sine of…","Computes the principal value of inverse hyperbolic cosine…","Computes the principal value of inverse hyperbolic tangent…","Returns `1/self` using floating-point operations.","Returns `self/other` using floating-point operations.","Checks if the given complex number is NaN","Checks if the given complex number is infinite","Checks if the given complex number is finite","Checks if the given complex number is normal","Represents the ratio between two numbers.","Alias for a `Ratio` of 32-bit-sized integers.","Alias for a `Ratio` of 64-bit-sized integers.","Creates a new `Ratio`. Fails if `denom` is zero.","from_integer","Creates a `Ratio` representing the integer `t`.","Creates a `Ratio` without checking for `denom == 0` or…","Converts to an integer, rounding towards zero.","Gets an immutable reference to the numerator.","Gets an immutable reference to the denominator.","Returns true if the rational number is an integer…","Returns a reduced copy of self.","Returns the reciprocal.","Rounds towards minus infinity.","Rounds towards plus infinity.","Rounds to the nearest integer. Rounds half-way cases away…","Rounds towards zero.","Returns the fractional part of a number, with division…","Raises the `Ratio` to the power of an exponent.","Converts a float into a rational number.","approximate_float","Renders as `numer/denom`. If denom=1, renders as numer.","Parses `numer/denom` or just `numer`.","Parses `numer/denom` where the numbers are in base `radix`.","set_zero","rulinalg::matrix","rulinalg::matrix::decomposition","matrixslice","from_matrix","from_raw_parts","matrixslicemut","permutationmatrix","as_mut_slice","Returns a mutable reference to the column of a matrix at…","Returns a mutable reference to the row of a matrix at the…","Split the matrix at the specified axis returning two…","Returns the row as a slice.","Returns a non-mutable reference to the underlying data.","Returns a mutable slice of the underlying data.","get_unchecked","get_unchecked_mut","rulinalg","rulinalg::macros","rulinalg::error","rulinalg::vector","rulinalg::ulp","rulinalg::norm","into_matrix","row_stride","Top left index of the slice.","as_mut_ptr","absoluteelementwisecomparator","ulpelementwisecomparator","floatelementwisecomparator","diagoffset","ulpcomparisonresult","exactelementwisecomparator","index_mut","Returns true if the matrix contais no elements","Returns a `MatrixSlice` over the whole matrix.","Get a reference to a point in the matrix without bounds…","Returns the column of a matrix at the given index. `None`…","col_unchecked","Returns the column of a matrix at the given index without…","Returns the row of a matrix at the given index.","row_unchecked","Returns the row of a matrix at the given index without…","Returns an iterator over the matrix data.","Iterate over the columns of the matrix.","Iterate over the rows of the matrix.","Iterate over diagonal entries","The sum of the rows of the matrix.","The sum of the columns of the matrix.","Compute given matrix norm for matrix.","Compute the metric distance between two matrices.","The sum of all elements in the matrix","The min of the specified axis of the matrix.","The max of the specified axis of the matrix.","Convert the matrix struct into a owned Matrix.","select_rows","Select rows from matrix","select_cols","Select columns from matrix","The elementwise product of two matrices.","The elementwise division of two matrices.","Select block matrix from matrix","Horizontally concatenates two matrices. With self on the…","Vertically concatenates two matrices. With self on top.","Extract the diagonal of the matrix","Tranposes the given matrix","Checks if matrix is diagonal.","solve_u_triangular","Solves an upper triangular linear system.","solve_l_triangular","Solves a lower triangular linear system.","Produce a `MatrixSlice` from an existing matrix.","Returns a `MatrixSliceMut` over the whole matrix.","Get a mutable reference to a point in the matrix without…","Returns a mutable iterator over the matrix.","sliceitermut","columnmut","col_unchecked_mut","row_unchecked_mut","Swaps two rows in a matrix.","Swaps two columns in a matrix.","col_iter_mut","Iterate over the mutable columns of the matrix.","row_iter_mut","Iterate over the mutable rows of the matrix.","diag_iter_mut","Iterate over diagonal entries mutably","diagonalmut","Sets the underlying matrix data to the target data.","Applies a function to each element in the matrix.","split_at_mut","sub_slice_mut","Produce a `MatrixSliceMut` from an existing matrix.","AbsoluteElementwiseComparator","UlpElementwiseComparator","ElementwiseComparator","PartialPivLu","Decomposition","MatrixSlice","MatrixSliceMut","PermutationMatrix","BaseMatrixMut","UlpComparisonResult","VectorMetric","MatrixMetric","ExactElementwiseComparator","FloatElementwiseComparator","DiagonalMut","SliceIterMut","Represents a fork-join scope which can be used to spawn…","Fires off a task into the Rayon threadpool in the \"static\"…","Spawns a job into the fork-join scope `self`. This job…","configuration","current_num_threads","current_thread_index","current_thread_has_pending_tasks","Creates a scope that executes within this thread-pool.…","spawn_fifo","Spawns an asynchronous task in this thread-pool. This task…","threadpool","threadpoolbuilderror","customspawn","stack_size","Deprecated in favor of `ThreadPoolBuilder::build`.","thread_name","num_threads","panic_handler","breadth_first","start_handler","exit_handler","ThreadBuilder","ThreadPoolBuilder","Configuration","ThreadPoolBuildError","rayon::collections","This module contains the parallel iterator types for…","Parallel iterator over an immutable reference to a B-Tree…","This module contains the parallel iterator types for hash…","Iterate the producer, feeding each element to `folder`,…","rayon::iter","Converts `self` into a parallel iterator.","Reduces the items in the iterator into one item using…","Reduces the items in the iterator into one item using a…","Applies the given predicate to the items in the parallel…","Searches for some item in the parallel iterator that…","partition_map","Internal method used to define the behavior of this…","interleave_shortest","Interleave elements of this iterator and the other given…","Lexicographically compares the elements of this…","Determines if the elements of this `ParallelIterator` are…","Searches for the sequentially first item in the parallel…","Searches for the sequentially last item in the parallel…","ParallelBridge","Conversion trait to convert an `Iterator` to a…","Create a bridge from this type to a `ParallelIterator`.","Returns a parallel iterator over at most `chunk_size`…","Returns a parallel iterator over substrings that match a…","into_par_iter","rayon::collections::binary_heap","rayon::collections::btree_map","rayon::collections::btree_set","rayon::collections::hash_map","rayon::collections::hash_set","rayon::collections::linked_list","rayon::collections::vec_deque","rayon::option","rayon::range","rayon::range_inclusive","rayon::result","rayon::slice","defaultspawn","drive_unindexed","rayon::str","rayon::vec","with_producer","consumer","iterbridge","tryfoldwith","charindices","encodeutf16","splitterminator","splitwhitespace","matchindices","threadpoolbuilder","ProducerCallback","UnindexedConsumer","UnindexedProducer","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","ParallelIterator","IndexedParallelIterator","FromParallelIterator","ParallelExtend","ParallelSlice","ParallelSliceMut","ParallelString","TryFoldWith","CharIndices","EncodeUtf16","SplitTerminator","SplitWhitespace","MatchIndices","Thread builder used for customization via…","ThreadPool","Represents a user created [thread-pool].","Error when initializing a thread pool.","Used to create a new [`ThreadPool`] or to configure the…","Provides the calling context to a closure called by…","Takes two closures and potentially runs them in parallel.…","join_context","Identical to `join`, except that the closures have a…","Create a \"fork-join\" scope `s` and invokes the closure…","scope_fifo","Create a \"fork-join\" scope `s` with FIFO order, and…","If called from a Rayon worker thread, returns the index of…","Returns the number of threads in the current registry. If…","Get the index of this thread in the pool, within…","Get the string that was specified by…","Get the value that was specified by…","Execute the main loop for this thread. This will not…","Executes `op` within the threadpool. Any attempts to use…","Returns the (current) number of threads in the thread pool.","If called from a Rayon worker thread in this thread-pool,…","Returns true if the current worker thread currently has…","Execute `oper_a` and `oper_b` in the thread-pool and…","Creates and returns a valid rayon thread pool builder, but…","Create a new `ThreadPool` initialized using this…","build_global","Initializes the global thread pool. This initialization is…","build_scoped","Create a scoped `ThreadPool` initialized using this…","spawn_handler","Set a custom function for spawning threads.","Set a closure which takes a thread index and returns the…","Set the number of threads to be used in the rayon…","Normally, whenever Rayon catches a panic, it tries to…","Set the stack size of the worker threads","(DEPRECATED) Suggest to worker threads that they execute…","Set a callback to be invoked on thread start.","Set a callback to be invoked on thread exit.","Returns `true` if the closure was called from a different…","ScopeFifo","FnContext","imageinfo","pixelformat","PixelFormat","UnsupportedFeature","An Image in PNG Format","An Image in GIF Format","An Image in ICO Format","An Image in BMP Format","imageformat","imageresult","dynamicimage","Create a new image from a byte slice","image::math","Available Sampling Filters","Nearest Neighbor","Linear Filter","Cubic Filter","Gaussian Filter","Lanczos with window 3","imagebuffer","Add this to an index to get to the next sample in…","strides_cwh","Get the strides for indexing matrix-like `[(c, w, h)]`.","Get the dimensions `(channels, width, height)`.","Tuple of bounds in the order of coordinate inputs.","flatsamples","View the samples as a slice.","Get the minimum length of a buffer such that all in-bounds…","Check if a buffer of length `len` is large enough.","has_aliased_samples","If there are any samples aliasing each other.","Check if a buffer fulfills the requirements of a normal…","Check that the pixel and the channel index are in bounds.","Resolve the index of a particular sample.","index_ignoring_bounds","in_bounds_index","Get an index provided it is inbouds.","Shrink the image to the minimum of current and given…","get_mut_sample","min_length","image_slice","Return the portion of the buffer that holds sample values.","image_mut_slice","Take out the sample buffer.","Get a reference on the inner buffer.","get_sample","shrink_to","Shrink the inner image.","Disposal method","StreamingDecoder is not required to take any action.","Do not dispose.","Restore to background color.","Restore to previous.","A GIF frame","Frame delay in units of 10 ms.","Disposal method.","transparent","Transparent index (if available).","needs_user_input","True if the frame needs user input to be displayed.","Offset from the top border of the canvas.","Offset from the left border of the canvas.","Width of the frame.","Height of the frame.","True if the image is interlaced.","Frame local color palette if available.","Buffer containing the image data. Only indices unless…","GIF encoder.","Wrapper struct around a `Cursor<Vec<u8>>`","hdradapter","hdrdecoder","rgbe8pixel","Create a new decoder that decodes from the stream `r`","Create a new encoder that writes its output to `w`.","Encodes the image `image` that has dimensions `width` and…","jpegdecoder","Create a new encoder that writes its output to `w`","jpegencoder","Height of the image file","Width of the image file","Binary or Ascii encoded file","Maximum sample value within the image","pnmsubtype","bitmapheader","graymapheader","pixmapheader","arbitraryheader","imageerror","tiffdecoder","webpdecoder","Contructs a new frame","Returns the image buffer","rgbaimage","Enumerates over the pixels of the image. The iterator…","Enumerates over the rows of the image. The iterator yields…","Return a mutable reference to an 8bit RGBA image","grayimage","grayalphaimage","as_flat_samples","Return a view on the raw sample buffer.","Resize this image using the specified filter algorithm.…","Hue rotate the supplied image. `value` is the degrees to…","imageoutputformat","Saves the buffer to a file at the path specified.","save_with_format","Saves the buffer to a file at the specified path in the…","get_pixel_mut","Gets a reference to the mutable pixel at location `(x, y)`","Underlying image type. This is mainly used by SubImages in…","The width and height of this image.","The width of this image.","The height of this image.","Returns the pixel located at (x, y)","dimensions","to_luma_alpha","Apply the function `f` to each channel of this pixel.","Apply the function `f` to each channel except the alpha…","Apply the function `f` to each channel of this pixel and…","image::math::nq","image::imageops::colorops","image::flat","image::jpeg","image::tiff","image::webp","image::webp::vp8","image::gif","channels_mut","from_channels","from_slice_mut","map_with_alpha","apply_with_alpha","channels4","channels","image::bmp","into_reader","image::dxt","scanline_bytes","read_image","image::hdr","image::ico","image::png","image::pnm","image::tga","read_rect_with_progress","into_frames","in_bounds","get_pixel","unsafe_get_pixel","blend_pixel","put_pixel","unsafe_put_pixel","Put a pixel at location (x, y), taking into account alpha…","inner_mut","samplelayout","normalform","dxtvariant","sampleencoding","hdrmetadata","read_to_end","Creates a frame from pixels in RGBA format. Note: This…","from_rgba_speed","Creates a frame from pixels in RGBA format. `speed` is a…","from_palette_pixels","Creates a frame from a palette and indexed pixels.","from_indexed_pixels","Creates a frame from indexed pixels in the global palette.","Creates a frame from pixels in RGB format. Note: This…","from_rgb_speed","Creates a frame from pixels in RGB format. `speed` is a…","CHANNEL_COUNT","The number of channels of this pixel type.","channel_count","Returns the number of channels of this pixel type.","COLOR_MODEL","A string that can help to interpret the meaning each…","color_model","Returns a string that can help to interpret the meaning…","ColorType for this pixel format","Returns the ColorType for this pixel format","map_without_alpha","apply_without_alpha","Returns the number of bytes in a single row of the image.…","total_bytes","Returns the total number of bytes in the image.","Returns the minimum number of bytes that can be…","Returns all the bytes in the image.","read_image_with_progress","Same as `read_image` but periodically calls the provided…","Read a rectangular section of the image.","Returns true if this x, y coordinate is contained inside…","Returns an Iterator over the pixels of this image. The…","Returns an subimage that is an immutable view into this…","subimage","Puts a pixel at location (x, y)","Copies all of the pixels from another image into this image.","Returns a subimage that is a view into this image.","FilterType","ImageFormat","ImageOutputFormat","DynamicImage","FlatSamples","SampleLayout","HDRMetadata","JPEGDecoder","JPEGEncoder","ArbitraryHeader","BitmapHeader","GraymapHeader","PixmapHeader","ArbitraryTuplType","SampleEncoding","TIFFDecoder","WebpDecoder","ImageBuffer","AnimationDecoder","GenericImage","GenericImageView","ImageDecoder","ImageDecoderExt","ConvertBuffer","HDRImageDecoderIterator","into_buffer","JPEG decoder","Unsupported","color_type","interlaced","GrayscaleAlpha","Background","par_bridge","Decoding and Encoding of TIFF Images","FormatError","The Image is not formatted properly","UnsupportedError","The Decoder does not support this image format","An I/O Error occurred while decoding the image","An enumeration over supported color types and their bit…","Pixel is grayscale","Pixel contains R, G and B channels","Pixel is an index into a color palette","Pixel is grayscale with an alpha channel","Pixel is RGB with an alpha channel","Result of an image decoding/encoding process","Human readable description of some of the pixels that…","imageproc","distance_transform","Iterates over the image pixels in a line segment using…","Draws as much of a cubic bezier curve as lies within image…","Draw as much of an ellipse, including its contents, as…","Draw as much of a circle as lies inside the image bounds.","Draw as much of an ellipse as lies inside the image…","Draws as much of the line segment between start and end as…","Draws as much of a filled convex polygon as lies within…","Draw as much of a rectangle, including its boundary, as…","Draws as much of the boundary of a rectangle as lies…","Draws colored text on an image in place. `scale` is…","Returns horizontal correlations between an image and a 1d…","interpolation","Warps an image using the provided function to define the…","projection","Returns the magnitudes of gradients in an image using…","haarfeature","hogoptions","Draws each element of `lines` on `image` in the provided…","integral_image","channelmap","Creates an RGB image by embedding a grayscale image in its…","Sets all pixels within distance `k` of a foreground pixel…","Sets all pixels within distance `k` of a background pixel…","Erosion followed by dilation.","Dilation followed by erosion.","Adds independent additive Gaussian noise to all channels…","verticalseam","imageproc::utils","imageproc::corners","imageproc::distance_transform","imageproc::drawing","imageproc::filter","imageproc::geometric_transformations","imageproc::haar","imageproc::hog","imageproc::hough","imageproc::rect","imageproc::region_labelling","imageproc::seam_carving","imageproc::stats","imageproc::template_matching","imageproc::union_find","x-coordinate of the corner.","y-coordinate of the corner.","polarline","linedetectionoptions","rectposition","connectivity","matchtemplatemethod","haarfeaturetype","The width of this canvas.","The height of this canvas.","BresenhamLineIter","BresenhamLinePixelIter","BresenhamLinePixelIterMut","Interpolation","HaarFeatureType","HaarFeature","LineDetectionOptions","WithChannel","RectPosition","Connectivity","ChannelHistogram","CumulativeChannelHistogram","MatchTemplateMethod","DisjointSetForest","VerticalSeam"];
searchIndex["adler32"]={"doc":"A minimal implementation of Adler32 for Rust.","i":[[3,R[27],"adler32","A rolling version of the Adler32 hash, which can 'forget'…",N,N],[5,"adler32",E,"Consume a Read object and returns the Adler32 hash.",N,[[["read"]],[["u32"],[R[3],["u32"]]]]],[11,"new",E,"Creates an empty Adler32 context (with hash 1).",0,[[],[R[26]]]],[11,"from_value",E,"Creates an Adler32 context with the given initial value.",0,[[["u32"]],[R[26]]]],[11,"from_buffer",E,"Convenience function initializing a context from the hash…",0,[[],[R[26]]]],[11,"hash",E,"Returns the current hash.",0,[[["self"]],["u32"]]],[11,"remove",E,"Removes the given `byte` that was fed to the algorithm…",0,[[["self"],["usize"],["u8"]]]],[11,"update",E,"Feeds a new `byte` to the algorithm to update the hash.",0,[[["self"],["u8"]]]],[11,"update_buffer",E,"Feeds a vector of bytes to the algorithm to update the hash.",0,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]]],"p":[[3,R[27]]]};
searchIndex["approx"]={"doc":"A crate that provides facilities for testing the…","i":[[3,"AbsDiff","approx",R[795],N,N],[12,R[802],E,R[796],0,N],[3,"Relative",E,R[795],N,N],[12,R[802],E,R[796],1,N],[12,R[799],E,"The relative tolerance for testing values that are…",1,N],[3,"Ulps",E,R[795],N,N],[12,R[802],E,R[796],2,N],[12,"max_ulps",E,"The ULPs to tolerate when testing values that are far-apart.",2,N],[8,R[813],E,"Equality that is defined using the absolute difference of…",N,N],[16,"Epsilon",E,"Used for specifying relative comparisons.",3,N],[10,"default_epsilon",E,"The default tolerance to use when testing values that are…",3,[[]]],[10,R[803],E,"A test for equality that uses the absolute difference to…",3,[[["self"],["rhs"]],["bool"]]],[11,R[804],E,R[810],3,[[["self"],["rhs"]],["bool"]]],[8,R[814],E,R[797],N,N],[10,"default_max_relative",E,"The default relative tolerance for testing values that are…",4,[[]]],[10,R[805],E,"A test for equality that uses a relative comparison if the…",4,[[["self"],["rhs"]],["bool"]]],[11,R[806],E,R[811],4,[[["self"],["rhs"]],["bool"]]],[8,"UlpsEq",E,R[797],N,N],[10,"default_max_ulps",E,"The default ULPs to tolerate when testing values that are…",5,[[],["u32"]]],[10,"ulps_eq",E,"A test for equality that uses units in the last place…",5,[[["self"],["rhs"],["u32"]],["bool"]]],[11,"ulps_ne",E,R[812],5,[[["self"],["rhs"],["u32"]],["bool"]]],[11,R[802],E,R[798],0,[[],["absdiff"]]],[11,"eq",E,R[800],0,[[["b"],["a"]],["bool"]]],[11,"ne",E,R[801],0,[[["b"],["a"]],["bool"]]],[11,R[802],E,R[798],1,[[],[R[809]]]],[11,R[799],E,"Replace the maximum relative value with the one specified.",1,[[],[R[809]]]],[11,"eq",E,R[800],1,[[["b"],["a"]],["bool"]]],[11,"ne",E,R[801],1,[[["b"],["a"]],["bool"]]],[11,R[802],E,R[798],2,[[],["ulps"]]],[11,"max_ulps",E,"Replace the max ulps value with the one specified.",2,[[["u32"]],["ulps"]]],[11,"eq",E,R[800],2,[[["b"],["a"]],["bool"]]],[11,"ne",E,R[801],2,[[["b"],["a"]],["bool"]]],[14,R[803],E,"Approximate equality of using the absolute difference.",N,N],[14,R[804],E,"Approximate inequality of using the absolute difference.",N,N],[14,R[805],E,R[807],N,N],[14,R[806],E,R[808],N,N],[14,"ulps_eq",E,R[807],N,N],[14,"ulps_ne",E,R[808],N,N],[14,"assert_abs_diff_eq",E,"An assertion that delegates to `abs_diff_eq!`, and panics…",N,N],[14,"assert_abs_diff_ne",E,"An assertion that delegates to `abs_diff_ne!`, and panics…",N,N],[14,"assert_relative_eq",E,"An assertion that delegates to `relative_eq!`, and panics…",N,N],[14,"assert_relative_ne",E,"An assertion that delegates to `relative_ne!`, and panics…",N,N],[14,"assert_ulps_eq",E,"An assertion that delegates to `ulps_eq!`, and panics with…",N,N],[14,"assert_ulps_ne",E,"An assertion that delegates to `ulps_ne!`, and panics with…",N,N],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,R[327],E,E,0,[[],["absdiff"]]],[11,R[327],E,E,1,[[],[R[809]]]],[11,R[327],E,E,2,[[],["ulps"]]],[11,R[804],E,R[810],3,[[["self"],["rhs"]],["bool"]]],[11,R[806],E,R[811],4,[[["self"],["rhs"]],["bool"]]],[11,"ulps_ne",E,R[812],5,[[["self"],["rhs"],["u32"]],["bool"]]]],"p":[[3,"AbsDiff"],[3,"Relative"],[3,"Ulps"],[8,R[813]],[8,R[814]],[8,"UlpsEq"]]};
searchIndex["arrayvec"]={"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","i":[[3,R[324],R[318],"A string with a fixed capacity.",N,N],[3,R[325],E,"Error value indicating insufficient capacity",N,N],[3,"ArrayVec",E,"A vector with a fixed capacity.",N,N],[3,R[328],E,"By-value iterator for `ArrayVec`.",N,N],[3,"Drain",E,"A draining iterator for `ArrayVec`.",N,N],[11,"new",E,"Create a new empty `ArrayString`.",0,[[],[R[320]]]],[11,"from",E,"Create a new `ArrayString` from a `str`.",0,[[["str"]],[[R[310],["str"]],[R[3],[R[310]]]]]],[11,"from_byte_string",E,"Create a new `ArrayString` from a byte string literal.",0,[[["a"]],[[R[3],[R[311]]],[R[311]]]]],[11,R[583],E,"Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full",E,"Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push",E,R[312],0,[[["self"],["char"]]]],[11,"try_push",E,R[312],0,[[["self"],["char"]],[[R[310],["char"]],[R[3],[R[310]]]]]],[11,"push_str",E,R[313],0,[[["self"],["str"]]]],[11,"try_push_str",E,R[313],0,[[["self"],["str"]],[[R[310],["str"]],[R[3],[R[310]]]]]],[11,"pop",E,"Removes the last character from the string and returns it.",0,[[["self"]],[[R[25],["char"]],["char"]]]],[11,R[369],E,"Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove",E,"Removes a `char` from this `ArrayString` at a byte…",0,[[["self"],["usize"]],["char"]]],[11,"clear",E,"Make the string empty.",0,[[["self"]]]],[11,"set_len",E,"Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str",E,"Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new",E,"Create a new `CapacityError` from `element`.",1,[[[T]],[R[310]]]],[11,"element",E,"Extract the overflowing element",1,[[],[T]]],[11,"simplify",E,"Convert into a `CapacityError` that does not carry an…",1,[[],[R[310]]]],[8,"Array",E,"Trait for fixed size arrays.",N,N],[16,"Item",E,"The array’s element type",2,N],[8,R[326],E,"`RangeArgument` is implemented by Rust's built-in range…",N,N],[11,"start",E,R[322],3,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,"end",E,R[323],3,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,"new",E,"Create a new empty `ArrayVec`.",4,[[],[R[318]]]],[11,"len",E,"Return the number of elements in the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,R[583],E,"Return the capacity of the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"is_full",E,"Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push",E,R[314],4,[[["self"]]]],[11,"try_push",E,R[314],4,[[["self"]],[[R[3],[R[310]]],[R[310]]]]],[11,"push_unchecked",E,"Push `element` to the end of the vector without checking…",4,[[["self"]]]],[11,"insert",E,R[315],4,[[["self"],["usize"]]]],[11,"try_insert",E,R[315],4,[[["self"],["usize"]],[[R[3],[R[310]]],[R[310]]]]],[11,"pop",E,"Remove the last element in the vector and return it.",4,[[["self"]],[R[25]]]],[11,"swap_remove",E,R[316],4,[[["self"],["usize"]]]],[11,"swap_pop",E,R[316],4,[[["self"],["usize"]],[R[25]]]],[11,"remove",E,R[317],4,[[["self"],["usize"]]]],[11,"pop_at",E,R[317],4,[[["self"],["usize"]],[R[25]]]],[11,R[369],E,"Shortens the vector, keeping the first `len` elements and…",4,[[["self"],["usize"]]]],[11,"clear",E,"Remove all elements in the vector.",4,[[["self"]]]],[11,"retain",E,"Retains only the elements specified by the predicate.",4,[[["self"],["f"]]]],[11,"set_len",E,"Set the vector’s length without dropping or moving out…",4,[[["self"],["usize"]]]],[11,"drain",E,"Create a draining iterator that removes the specified…",4,[[["self"],["rangeargument"]],["drain"]]],[11,R[7],E,"Return the inner fixed size array, if it is full to its…",4,[[],[R[3]]]],[11,"dispose",E,"Dispose of `self` without the overwriting that is needed…",4,[[]]],[11,"as_slice",E,"Return a slice containing all elements of the vector.",4,[[["self"]]]],[11,R[1617],E,"Return a mutable slice containing all elements of the…",4,[[["self"]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[23],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[23],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[23],E,E,6,[[],["i"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"deref",E,E,0,[[["self"]],["str"]]],[11,"deref",E,E,4,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[310]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[310]]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[24]]]],[11,"cmp",E,E,1,[[["self"],[R[310]]],[R[24]]]],[11,"cmp",E,E,4,[[["self"],[R[318]]],[R[24]]]],[11,R[172],E,E,0,[[["self"]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,0,[[["self"]],["bool"]]],[11,"le",E,E,0,[[["self"]],["bool"]]],[11,"gt",E,E,0,[[["self"]],["bool"]]],[11,"ge",E,E,0,[[["self"]],["bool"]]],[11,R[172],E,E,0,[[["self"],["str"]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,0,[[["self"],["str"]],["bool"]]],[11,"le",E,E,0,[[["self"],["str"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["str"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["str"]],["bool"]]],[11,R[172],E,E,1,[[["self"],[R[310]]],[[R[24]],[R[25],[R[24]]]]]],[11,"lt",E,E,1,[[["self"],[R[310]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[310]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[310]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[310]]],["bool"]]],[11,R[172],E,E,4,[[["self"],[R[318]]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,4,[[["self"]],["bool"]]],[11,"le",E,E,4,[[["self"]],["bool"]]],[11,"ge",E,E,4,[[["self"]],["bool"]]],[11,"gt",E,E,4,[[["self"]],["bool"]]],[11,"write_char",E,E,0,[[["self"],["char"]],[R[3]]]],[11,"write_str",E,E,0,[[["self"],["str"]],[R[3]]]],[11,R[14],E,E,0,[[["self"]],["str"]]],[11,R[14],E,E,4,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"hash",E,E,4,[[["self"],["h"]]]],[11,R[173],E,E,5,[[["self"]],[R[25]]]],[11,R[173],E,E,6,[[["self"]],[R[25]]]],[11,"next",E,E,5,[[["self"]],[R[25]]]],[11,R[174],E,E,5,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[R[25]]]],[11,R[174],E,E,6,[[["self"]]]],[11,R[339],E,E,4,[[[R[319]]],["self"]]],[11,R[23],E,E,4,[[],[R[338]]]],[11,"extend",E,E,4,[[["self"],[R[319]]]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,4,[[["self"]]]],[11,"as_mut",E,E,4,[[["self"]]]],[11,"from",E,E,4,[[["a"]],["self"]]],[11,"clone",E,E,0,[[["self"]],[R[320]]]],[11,R[321],E,E,0,[[["self"],["self"]]]],[11,"clone",E,E,1,[[["self"]],[R[310]]]],[11,"clone",E,E,5,[[["self"]],[R[338]]]],[11,"clone",E,E,4,[[["self"]],["self"]]],[11,R[321],E,E,4,[[["self"],["self"]]]],[11,R[327],E,"Return an empty `ArrayString`",0,[[],[R[320]]]],[11,R[327],E,"Return an empty array",4,[[],[R[318]]]],[11,R[28],E,E,0,[[["self"]],["str"]]],[11,R[28],E,E,4,[[["self"]]]],[11,R[10],E,E,4,[[["self"]]]],[11,"start",E,R[322],3,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,"end",E,R[323],3,[[["self"]],[[R[25],["usize"]],["usize"]]]]],"p":[[3,R[324]],[3,R[325]],[8,"Array"],[8,R[326]],[3,"ArrayVec"],[3,R[328]],[3,"Drain"]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"p":[]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and…","i":[[4,R[580],"byteorder","Defines big-endian serialization.",N,N],[4,R[581],E,"Defines little-endian serialization.",N,N],[6,"BE",E,"A type alias for [`BigEndian`].",N,N],[6,"LE",E,"A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian",E,"Defines network byte order serialization.",N,N],[6,"NativeEndian",E,"Defines system native-endian serialization.",N,N],[8,R[577],E,"Extends [`Read`] with methods for reading numbers. (For…",N,N],[11,"read_u8",E,R[527],0,[[["self"]],[[R[3],["u8"]],["u8"]]]],[11,"read_i8",E,R[528],0,[[["self"]],[["i8"],[R[3],["i8"]]]]],[11,R[512],E,R[529],0,[[["self"]],[["u16"],[R[3],["u16"]]]]],[11,R[530],E,R[531],0,[[["self"]],[[R[3],["i16"]],["i16"]]]],[11,R[532],E,R[533],0,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,R[534],E,R[535],0,[[["self"]],[["i32"],[R[3],["i32"]]]]],[11,R[513],E,R[536],0,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,R[537],E,R[538],0,[[["self"]],[["i32"],[R[3],["i32"]]]]],[11,R[539],E,R[540],0,[[["self"]],[["u64"],[R[3],["u64"]]]]],[11,R[541],E,R[542],0,[[["self"]],[["i64"],[R[3],["i64"]]]]],[11,R[514],E,R[543],0,[[["self"]],[["u64"],[R[3],["u64"]]]]],[11,R[544],E,R[545],0,[[["self"]],[["i64"],[R[3],["i64"]]]]],[11,R[468],E,R[546],0,[[["self"]],[["u128"],[R[3],["u128"]]]]],[11,R[481],E,R[547],0,[[["self"]],[[R[3],["i128"]],["i128"]]]],[11,R[469],E,R[463],0,[[["self"],["usize"]],[["u64"],[R[3],["u64"]]]]],[11,R[548],E,R[464],0,[[["self"],["usize"]],[["i64"],[R[3],["i64"]]]]],[11,R[470],E,R[463],0,[[["self"],["usize"]],[["u128"],[R[3],["u128"]]]]],[11,R[482],E,R[464],0,[[["self"],["usize"]],[[R[3],["i128"]],["i128"]]]],[11,R[549],E,R[484],0,[[["self"]],[["f32"],[R[3],["f32"]]]]],[11,R[550],E,R[485],0,[[["self"]],[[R[3],["f64"]],["f64"]]]],[11,R[499],E,R[551],0,[[["self"]],[R[3]]]],[11,R[500],E,R[552],0,[[["self"]],[R[3]]]],[11,R[501],E,R[553],0,[[["self"]],[R[3]]]],[11,R[502],E,R[554],0,[[["self"]],[R[3]]]],[11,R[555],E,R[556],0,[[["self"]],[R[3]]]],[11,R[503],E,R[557],0,[[["self"]],[R[3]]]],[11,R[504],E,R[558],0,[[["self"]],[R[3]]]],[11,R[505],E,R[559],0,[[["self"]],[R[3]]]],[11,R[506],E,R[560],0,[[["self"]],[R[3]]]],[11,R[507],E,R[561],0,[[["self"]],[R[3]]]],[11,R[508],E,R[465],0,[[["self"]],[R[3]]]],[11,R[509],E,R[562],0,[[["self"]],[R[3]]]],[11,R[511],E,R[465],0,[[["self"]],[R[3]]]],[8,R[578],E,"Extends [`Write`] with methods for writing numbers. (For…",N,N],[11,"write_u8",E,R[563],1,[[["self"],["u8"]],[R[3]]]],[11,"write_i8",E,R[564],1,[[["self"],["i8"]],[R[3]]]],[11,R[472],E,R[565],1,[[["self"],["u16"]],[R[3]]]],[11,R[486],E,R[566],1,[[["self"],["i16"]],[R[3]]]],[11,R[473],E,R[567],1,[[["self"],["u32"]],[R[3]]]],[11,R[487],E,R[568],1,[[["self"],["i32"]],[R[3]]]],[11,R[474],E,R[569],1,[[["self"],["u32"]],[R[3]]]],[11,R[488],E,R[570],1,[[["self"],["i32"]],[R[3]]]],[11,R[475],E,R[571],1,[[["self"],["u64"]],[R[3]]]],[11,R[489],E,R[572],1,[[["self"],["i64"]],[R[3]]]],[11,R[476],E,R[573],1,[[["self"],["u64"]],[R[3]]]],[11,R[490],E,R[574],1,[[["self"],["i64"]],[R[3]]]],[11,R[477],E,R[575],1,[[["self"],["u128"]],[R[3]]]],[11,R[491],E,R[576],1,[[["self"],["i128"]],[R[3]]]],[11,R[478],E,R[466],1,[[["self"],["u64"],["usize"]],[R[3]]]],[11,R[492],E,R[467],1,[[["self"],["i64"],["usize"]],[R[3]]]],[11,R[479],E,R[466],1,[[["self"],["usize"],["u128"]],[R[3]]]],[11,R[493],E,R[467],1,[[["self"],["i128"],["usize"]],[R[3]]]],[11,R[495],E,R[496],1,[[["self"],["f32"]],[R[3]]]],[11,R[497],E,R[498],1,[[["self"],["f64"]],[R[3]]]],[8,R[579],E,"`ByteOrder` describes types that can serialize integers as…",N,N],[10,R[512],E,"Reads an unsigned 16 bit integer from `buf`.",2,[[],["u16"]]],[11,R[532],E,"Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[],["u32"]]],[10,R[513],E,"Reads an unsigned 32 bit integer from `buf`.",2,[[],["u32"]]],[11,R[539],E,"Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[],["u64"]]],[10,R[514],E,"Reads an unsigned 64 bit integer from `buf`.",2,[[],["u64"]]],[10,R[468],E,"Reads an unsigned 128 bit integer from `buf`.",2,[[],["u128"]]],[10,R[469],E,R[471],2,[[["usize"]],["u64"]]],[10,R[470],E,R[471],2,[[["usize"]],["u128"]]],[10,R[472],E,"Writes an unsigned 16 bit integer `n` to `buf`.",2,[[["u16"]]]],[11,R[473],E,"Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[["u32"]]]],[10,R[474],E,"Writes an unsigned 32 bit integer `n` to `buf`.",2,[[["u32"]]]],[11,R[475],E,"Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[["u64"]]]],[10,R[476],E,"Writes an unsigned 64 bit integer `n` to `buf`.",2,[[["u64"]]]],[10,R[477],E,"Writes an unsigned 128 bit integer `n` to `buf`.",2,[[["u128"]]]],[10,R[478],E,R[480],2,[[["usize"],["u64"]]]],[10,R[479],E,R[480],2,[[["u128"],["usize"]]]],[11,R[530],E,"Reads a signed 16 bit integer from `buf`.",2,[[],["i16"]]],[11,R[534],E,"Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[],["i32"]]],[11,R[537],E,"Reads a signed 32 bit integer from `buf`.",2,[[],["i32"]]],[11,R[541],E,"Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[],["i64"]]],[11,R[544],E,"Reads a signed 64 bit integer from `buf`.",2,[[],["i64"]]],[11,R[481],E,"Reads a signed 128 bit integer from `buf`.",2,[[],["i128"]]],[11,R[548],E,R[483],2,[[["usize"]],["i64"]]],[11,R[482],E,R[483],2,[[["usize"]],["i128"]]],[11,R[549],E,R[484],2,[[],["f32"]]],[11,R[550],E,R[485],2,[[],["f64"]]],[11,R[486],E,"Writes a signed 16 bit integer `n` to `buf`.",2,[[["i16"]]]],[11,R[487],E,"Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[["i32"]]]],[11,R[488],E,"Writes a signed 32 bit integer `n` to `buf`.",2,[[["i32"]]]],[11,R[489],E,"Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[["i64"]]]],[11,R[490],E,"Writes a signed 64 bit integer `n` to `buf`.",2,[[["i64"]]]],[11,R[491],E,"Writes a signed 128 bit integer `n` to `buf`.",2,[[["i128"]]]],[11,R[492],E,R[494],2,[[["i64"],["usize"]]]],[11,R[493],E,R[494],2,[[["i128"],["usize"]]]],[11,R[495],E,R[496],2,[[["f32"]]]],[11,R[497],E,R[498],2,[[["f64"]]]],[10,R[499],E,"Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,R[500],E,"Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,R[501],E,"Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,R[502],E,"Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,R[503],E,"Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,R[504],E,"Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,R[505],E,"Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,R[506],E,"Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,R[507],E,R[510],2,[[]]],[11,R[508],E,R[465],2,[[]]],[11,R[509],E,R[510],2,[[]]],[11,R[511],E,R[465],2,[[]]],[10,R[515],E,"Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,R[516],E,"Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,R[517],E,"Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,R[518],E,"Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into",E,"Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into",E,"Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into",E,"Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into",E,"Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into",E,"Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into",E,"Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,R[519],E,"Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,R[520],E,"Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,R[521],E,"Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,R[522],E,"Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16",E,"Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32",E,"Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64",E,"Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128",E,"Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,R[523],E,"Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,R[524],E,"Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"],[T]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,R[512],E,E,3,[[],["u16"]]],[11,R[513],E,E,3,[[],["u32"]]],[11,R[514],E,E,3,[[],["u64"]]],[11,R[468],E,E,3,[[],["u128"]]],[11,R[469],E,E,3,[[["usize"]],["u64"]]],[11,R[470],E,E,3,[[["usize"]],["u128"]]],[11,R[472],E,E,3,[[["u16"]]]],[11,R[474],E,E,3,[[["u32"]]]],[11,R[476],E,E,3,[[["u64"]]]],[11,R[477],E,E,3,[[["u128"]]]],[11,R[478],E,E,3,[[["usize"],["u64"]]]],[11,R[479],E,E,3,[[["u128"],["usize"]]]],[11,R[499],E,E,3,[[]]],[11,R[500],E,E,3,[[]]],[11,R[501],E,E,3,[[]]],[11,R[502],E,E,3,[[]]],[11,R[515],E,E,3,[[]]],[11,R[516],E,E,3,[[]]],[11,R[517],E,E,3,[[]]],[11,R[518],E,E,3,[[]]],[11,R[519],E,E,3,[[]]],[11,R[520],E,E,3,[[]]],[11,R[521],E,E,3,[[]]],[11,R[522],E,E,3,[[]]],[11,R[523],E,E,3,[[]]],[11,R[524],E,E,3,[[]]],[11,R[512],E,E,4,[[],["u16"]]],[11,R[513],E,E,4,[[],["u32"]]],[11,R[514],E,E,4,[[],["u64"]]],[11,R[468],E,E,4,[[],["u128"]]],[11,R[469],E,E,4,[[["usize"]],["u64"]]],[11,R[470],E,E,4,[[["usize"]],["u128"]]],[11,R[472],E,E,4,[[["u16"]]]],[11,R[474],E,E,4,[[["u32"]]]],[11,R[476],E,E,4,[[["u64"]]]],[11,R[477],E,E,4,[[["u128"]]]],[11,R[478],E,E,4,[[["usize"],["u64"]]]],[11,R[479],E,E,4,[[["u128"],["usize"]]]],[11,R[499],E,E,4,[[]]],[11,R[500],E,E,4,[[]]],[11,R[501],E,E,4,[[]]],[11,R[502],E,E,4,[[]]],[11,R[515],E,E,4,[[]]],[11,R[516],E,E,4,[[]]],[11,R[517],E,E,4,[[]]],[11,R[518],E,E,4,[[]]],[11,R[519],E,E,4,[[]]],[11,R[520],E,E,4,[[]]],[11,R[521],E,E,4,[[]]],[11,R[522],E,E,4,[[]]],[11,R[523],E,E,4,[[]]],[11,R[524],E,E,4,[[]]],[11,"cmp",E,E,3,[[["self"],[R[525]]],[R[24]]]],[11,"cmp",E,E,4,[[["self"],[R[526]]],[R[24]]]],[11,R[172],E,E,3,[[["self"],[R[525]]],[[R[25],[R[24]]],[R[24]]]]],[11,R[172],E,E,4,[[["self"],[R[526]]],[[R[25],[R[24]]],[R[24]]]]],[11,"eq",E,E,3,[[["self"],[R[525]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[526]]],["bool"]]],[11,R[327],E,E,3,[[],[R[525]]]],[11,R[327],E,E,4,[[],[R[526]]]],[11,"clone",E,E,3,[[["self"]],[R[525]]]],[11,"clone",E,E,4,[[["self"]],[R[526]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"read_u8",E,R[527],0,[[["self"]],[[R[3],["u8"]],["u8"]]]],[11,"read_i8",E,R[528],0,[[["self"]],[["i8"],[R[3],["i8"]]]]],[11,R[512],E,R[529],0,[[["self"]],[["u16"],[R[3],["u16"]]]]],[11,R[530],E,R[531],0,[[["self"]],[[R[3],["i16"]],["i16"]]]],[11,R[532],E,R[533],0,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,R[534],E,R[535],0,[[["self"]],[["i32"],[R[3],["i32"]]]]],[11,R[513],E,R[536],0,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,R[537],E,R[538],0,[[["self"]],[["i32"],[R[3],["i32"]]]]],[11,R[539],E,R[540],0,[[["self"]],[["u64"],[R[3],["u64"]]]]],[11,R[541],E,R[542],0,[[["self"]],[["i64"],[R[3],["i64"]]]]],[11,R[514],E,R[543],0,[[["self"]],[["u64"],[R[3],["u64"]]]]],[11,R[544],E,R[545],0,[[["self"]],[["i64"],[R[3],["i64"]]]]],[11,R[468],E,R[546],0,[[["self"]],[["u128"],[R[3],["u128"]]]]],[11,R[481],E,R[547],0,[[["self"]],[[R[3],["i128"]],["i128"]]]],[11,R[469],E,R[463],0,[[["self"],["usize"]],[["u64"],[R[3],["u64"]]]]],[11,R[548],E,R[464],0,[[["self"],["usize"]],[["i64"],[R[3],["i64"]]]]],[11,R[470],E,R[463],0,[[["self"],["usize"]],[["u128"],[R[3],["u128"]]]]],[11,R[482],E,R[464],0,[[["self"],["usize"]],[[R[3],["i128"]],["i128"]]]],[11,R[549],E,R[484],0,[[["self"]],[["f32"],[R[3],["f32"]]]]],[11,R[550],E,R[485],0,[[["self"]],[[R[3],["f64"]],["f64"]]]],[11,R[499],E,R[551],0,[[["self"]],[R[3]]]],[11,R[500],E,R[552],0,[[["self"]],[R[3]]]],[11,R[501],E,R[553],0,[[["self"]],[R[3]]]],[11,R[502],E,R[554],0,[[["self"]],[R[3]]]],[11,R[555],E,R[556],0,[[["self"]],[R[3]]]],[11,R[503],E,R[557],0,[[["self"]],[R[3]]]],[11,R[504],E,R[558],0,[[["self"]],[R[3]]]],[11,R[505],E,R[559],0,[[["self"]],[R[3]]]],[11,R[506],E,R[560],0,[[["self"]],[R[3]]]],[11,R[507],E,R[561],0,[[["self"]],[R[3]]]],[11,R[508],E,R[465],0,[[["self"]],[R[3]]]],[11,R[509],E,R[562],0,[[["self"]],[R[3]]]],[11,R[511],E,R[465],0,[[["self"]],[R[3]]]],[11,"write_u8",E,R[563],1,[[["self"],["u8"]],[R[3]]]],[11,"write_i8",E,R[564],1,[[["self"],["i8"]],[R[3]]]],[11,R[472],E,R[565],1,[[["self"],["u16"]],[R[3]]]],[11,R[486],E,R[566],1,[[["self"],["i16"]],[R[3]]]],[11,R[473],E,R[567],1,[[["self"],["u32"]],[R[3]]]],[11,R[487],E,R[568],1,[[["self"],["i32"]],[R[3]]]],[11,R[474],E,R[569],1,[[["self"],["u32"]],[R[3]]]],[11,R[488],E,R[570],1,[[["self"],["i32"]],[R[3]]]],[11,R[475],E,R[571],1,[[["self"],["u64"]],[R[3]]]],[11,R[489],E,R[572],1,[[["self"],["i64"]],[R[3]]]],[11,R[476],E,R[573],1,[[["self"],["u64"]],[R[3]]]],[11,R[490],E,R[574],1,[[["self"],["i64"]],[R[3]]]],[11,R[477],E,R[575],1,[[["self"],["u128"]],[R[3]]]],[11,R[491],E,R[576],1,[[["self"],["i128"]],[R[3]]]],[11,R[478],E,R[466],1,[[["self"],["u64"],["usize"]],[R[3]]]],[11,R[492],E,R[467],1,[[["self"],["i64"],["usize"]],[R[3]]]],[11,R[479],E,R[466],1,[[["self"],["usize"],["u128"]],[R[3]]]],[11,R[493],E,R[467],1,[[["self"],["i128"],["usize"]],[R[3]]]],[11,R[495],E,R[496],1,[[["self"],["f32"]],[R[3]]]],[11,R[497],E,R[498],1,[[["self"],["f64"]],[R[3]]]]],"p":[[8,R[577]],[8,R[578]],[8,R[579]],[4,R[580]],[4,R[581]]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,R[0],R[0],"The main macro provided by this crate. See crate…",N,N]],"p":[]};
searchIndex["color_quant"]={"doc":"Color quantization library This library provides a color…","i":[[3,R[74],"color_quant","Neural network based color quantizer.",N,N],[11,"new",E,"Creates a new neuronal network and trains it with the…",0,[[["usize"],["i32"]],["self"]]],[11,"init",E,"Initializes the neuronal network and trains it with the…",0,[[["self"]]]],[11,"map_pixel",E,"Maps the rgba-pixel in-place to the best-matching color in…",0,[[["self"]]]],[11,"index_of",E,"Finds the best-matching index in the color map.",0,[[["self"]],["usize"]]],[11,"color_map_rgba",E,R[73],0,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"color_map_rgb",E,R[73],0,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]]],"p":[[3,R[74]]]};
searchIndex["conv"]={"doc":"This crate provides a number of conversion traits with…","i":[[4,R[305],"conv","The \"default\" approximation scheme. This scheme does…",N,N],[4,"Wrapping",E,"This scheme is used to convert a value by \"wrapping\" it…",N,N],[4,R[306],E,"This scheme is used to convert a value by rounding it to…",N,N],[4,R[307],E,R[261],N,N],[4,R[308],E,R[261],N,N],[4,R[309],E,R[261],N,N],[0,"macros",E,"This module provides convenience macros to help with…",N,N],[0,"prelude",E,"Publicly re-exports the most generally useful set of items.",N,N],[0,"errors",E,"This module defines the various error types that can be…",N,N],[3,R[264],R[279],"Indicates that the conversion failed because the value was…",N,N],[12,"0",E,E,0,N],[3,R[262],E,"Indicates that the conversion failed due to a negative…",N,N],[12,"0",E,E,1,N],[3,R[263],E,"Indicates that the conversion failed due to a positive…",N,N],[12,"0",E,E,2,N],[4,R[289],E,R[265],N,N],[13,R[262],E,R[266],3,N],[13,R[263],E,R[267],3,N],[13,R[264],E,R[268],3,N],[4,R[290],E,R[265],N,N],[13,R[262],E,R[266],4,N],[13,R[263],E,R[267],4,N],[13,R[264],E,R[268],4,N],[4,"NoError",E,"Indicates that it is not possible for the conversion to…",N,N],[4,R[291],E,"Indicates that a conversion from a floating point type…",N,N],[13,R[262],E,R[266],5,N],[13,R[263],E,R[267],5,N],[13,"NotANumber",E,"Input was not-a-number, which the target type could not…",5,N],[4,R[292],E,R[269],N,N],[13,R[262],E,R[266],6,N],[13,R[263],E,"Input was too positive the target type.",6,N],[4,R[293],E,R[269],N,N],[13,R[262],E,R[266],7,N],[13,R[263],E,R[267],7,N],[8,"Saturate",E,"Saturates a `Result`.",N,N],[16,"Output",E,"The result of saturating.",8,N],[10,"saturate",E,"Replaces an overflow error with a saturated value.",8,[[]]],[8,"UnwrapOk",E,"Safely unwrap a `Result` that cannot contain an error.",N,N],[10,"unwrap_ok",E,"Unwraps a `Result` without possibility of failing.",9,[[],[T]]],[8,R[294],E,"Unwrap a conversion by saturating to infinity.",N,N],[16,"Output",E,R[270],10,N],[10,"unwrap_or_inf",E,R[271],10,[[]]],[8,R[295],E,"Unwrap a conversion by replacing a failure with an invalid…",N,N],[16,"Output",E,R[270],11,N],[10,"unwrap_or_invalid",E,R[271],11,[[]]],[8,R[296],E,"Unwrap a conversion by saturating.",N,N],[16,"Output",E,R[270],12,N],[10,"unwrap_or_saturate",E,R[271],12,[[]]],[11,R[7],E,R[272],3,[[],[T]]],[11,R[7],E,R[272],0,[[],[T]]],[11,R[7],E,R[272],1,[[],[T]]],[11,R[7],E,R[272],2,[[],[T]]],[11,R[7],E,R[272],5,[[],[T]]],[11,R[7],E,R[272],6,[[],[T]]],[0,"misc","conv","This module defines some additional traits not directly…",N,N],[8,R[297],"conv::misc","This trait indicates that values of a type can be…",N,N],[10,"saturated_max",E,"Returns the type's saturated, maximum value.",13,[[],["self"]]],[10,"saturated_min",E,"Returns the type's saturated, minimum value.",13,[[],["self"]]],[8,R[298],E,"This trait indicates that a type has an \"invalid\" sentinel…",N,N],[10,"invalid_sentinel",E,"Returns the type's \"invalid\" sentinel value.",14,[[],["self"]]],[8,R[299],E,"This trait indicates that a type has positive and negative…",N,N],[10,R[606],E,"Returns the type's positive infinity value.",15,[[],["self"]]],[10,"pos_infinity",E,"Returns the type's negative infinity value.",15,[[],["self"]]],[8,R[300],"conv","This trait is used to perform a conversion that is…",N,N],[16,"Err",E,R[273],16,N],[10,R[275],E,"Convert the given value into an approximately equivalent…",16,[[["src"]],[R[3]]]],[8,R[301],E,"This is the dual of `ApproxFrom`; see that trait for…",N,N],[16,"Err",E,R[273],17,N],[10,R[276],E,"Convert the subject into an approximately equivalent…",17,[[],[R[3]]]],[8,"ApproxScheme",E,"This trait is used to mark approximation scheme types.",N,N],[8,"TryFrom",E,"This trait is used to perform a conversion between…",N,N],[16,"Err",E,R[273],18,N],[10,R[8],E,"Convert the given value into the subject type.",18,[[["src"]],[R[3]]]],[8,"TryInto",E,"This is the dual of `TryFrom`; see that trait for…",N,N],[16,"Err",E,R[273],19,N],[10,R[9],E,"Convert the subject into the destination type.",19,[[],[R[3]]]],[8,R[302],E,"This trait is used to perform an exact, value-preserving…",N,N],[16,"Err",E,R[273],20,N],[10,R[277],E,"Convert the given value into an exactly equivalent…",20,[[["src"]],[R[3]]]],[8,R[303],E,"This is the dual of `ValueFrom`; see that trait for…",N,N],[16,"Err",E,R[273],21,N],[10,R[278],E,"Convert the subject into an exactly equivalent…",21,[[],[R[3]]]],[8,"ConvUtil",E,R[274],N,N],[11,"approx_as",E,"Approximate the subject to a given type with the default…",22,[[],[R[3]]]],[11,"approx_as_by",E,"Approximate the subject to a given type with a specific…",22,[[],[R[3]]]],[11,"into_as",E,"Convert the subject to a given type.",22,[[],["dst"]]],[11,"try_as",E,"Attempt to convert the subject to a given type.",22,[[],[R[3]]]],[11,"value_as",E,"Attempt a value conversion of the subject to a given type.",22,[[],[R[3]]]],[8,R[304],E,R[274],N,N],[11,"approx",E,"Approximate the subject with the default scheme.",23,[[],[R[3]]]],[11,"approx_by",E,"Approximate the subject with a specific scheme.",23,[[],[R[3]]]],[14,"TryFrom",E,"See the documentation for the `macros` module for details.",N,N],[11,R[275],E,E,24,[[["src"]],[R[3]]]],[11,R[276],E,E,24,[[],[R[3]]]],[11,R[8],E,E,24,[[["src"]],[R[3]]]],[11,R[9],E,E,24,[[],[R[3]]]],[11,R[277],E,E,24,[[["src"]],[R[3]]]],[11,R[278],E,E,24,[[],[R[3]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[8],E,E,24,[[[U]],[R[3]]]],[11,R[9],E,E,24,[[],[R[3]]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,R[275],E,E,25,[[["src"]],[R[3]]]],[11,R[276],E,E,25,[[],[R[3]]]],[11,R[8],E,E,25,[[["src"]],[R[3]]]],[11,R[9],E,E,25,[[],[R[3]]]],[11,R[277],E,E,25,[[["src"]],[R[3]]]],[11,R[278],E,E,25,[[],[R[3]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[8],E,E,25,[[[U]],[R[3]]]],[11,R[9],E,E,25,[[],[R[3]]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,R[275],E,E,26,[[["src"]],[R[3]]]],[11,R[276],E,E,26,[[],[R[3]]]],[11,R[8],E,E,26,[[["src"]],[R[3]]]],[11,R[9],E,E,26,[[],[R[3]]]],[11,R[277],E,E,26,[[["src"]],[R[3]]]],[11,R[278],E,E,26,[[],[R[3]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[8],E,E,26,[[[U]],[R[3]]]],[11,R[9],E,E,26,[[],[R[3]]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,R[275],E,E,27,[[["src"]],[R[3]]]],[11,R[276],E,E,27,[[],[R[3]]]],[11,R[8],E,E,27,[[["src"]],[R[3]]]],[11,R[9],E,E,27,[[],[R[3]]]],[11,R[277],E,E,27,[[["src"]],[R[3]]]],[11,R[278],E,E,27,[[],[R[3]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[8],E,E,27,[[[U]],[R[3]]]],[11,R[9],E,E,27,[[],[R[3]]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,R[275],E,E,28,[[["src"]],[R[3]]]],[11,R[276],E,E,28,[[],[R[3]]]],[11,R[8],E,E,28,[[["src"]],[R[3]]]],[11,R[9],E,E,28,[[],[R[3]]]],[11,R[277],E,E,28,[[["src"]],[R[3]]]],[11,R[278],E,E,28,[[],[R[3]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[8],E,E,28,[[[U]],[R[3]]]],[11,R[9],E,E,28,[[],[R[3]]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,R[275],E,E,29,[[["src"]],[R[3]]]],[11,R[276],E,E,29,[[],[R[3]]]],[11,R[8],E,E,29,[[["src"]],[R[3]]]],[11,R[9],E,E,29,[[],[R[3]]]],[11,R[277],E,E,29,[[["src"]],[R[3]]]],[11,R[278],E,E,29,[[],[R[3]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[8],E,E,29,[[[U]],[R[3]]]],[11,R[9],E,E,29,[[],[R[3]]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[29]]]],[11,R[275],R[279],E,0,[[["src"]],[R[3]]]],[11,R[276],E,E,0,[[],[R[3]]]],[11,R[8],E,E,0,[[["src"]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[277],E,E,0,[[["src"]],[R[3]]]],[11,R[278],E,E,0,[[],[R[3]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[98],E,E,0,[[["self"]],["string"]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[275],E,E,1,[[["src"]],[R[3]]]],[11,R[276],E,E,1,[[],[R[3]]]],[11,R[8],E,E,1,[[["src"]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[277],E,E,1,[[["src"]],[R[3]]]],[11,R[278],E,E,1,[[],[R[3]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[98],E,E,1,[[["self"]],["string"]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[275],E,E,2,[[["src"]],[R[3]]]],[11,R[276],E,E,2,[[],[R[3]]]],[11,R[8],E,E,2,[[["src"]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[277],E,E,2,[[["src"]],[R[3]]]],[11,R[278],E,E,2,[[],[R[3]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[98],E,E,2,[[["self"]],["string"]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,R[275],E,E,3,[[["src"]],[R[3]]]],[11,R[276],E,E,3,[[],[R[3]]]],[11,R[8],E,E,3,[[["src"]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[277],E,E,3,[[["src"]],[R[3]]]],[11,R[278],E,E,3,[[],[R[3]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[98],E,E,3,[[["self"]],["string"]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,R[275],E,E,4,[[["src"]],[R[3]]]],[11,R[276],E,E,4,[[],[R[3]]]],[11,R[8],E,E,4,[[["src"]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[277],E,E,4,[[["src"]],[R[3]]]],[11,R[278],E,E,4,[[],[R[3]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[98],E,E,4,[[["self"]],["string"]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"],[T]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,R[275],E,E,30,[[["src"]],[R[3]]]],[11,R[276],E,E,30,[[],[R[3]]]],[11,R[8],E,E,30,[[["src"]],[R[3]]]],[11,R[9],E,E,30,[[],[R[3]]]],[11,R[277],E,E,30,[[["src"]],[R[3]]]],[11,R[278],E,E,30,[[],[R[3]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[98],E,E,30,[[["self"]],["string"]]],[11,R[41],E,E,30,[[["self"]],[T]]],[11,R[42],E,E,30,[[["self"],[T]]]],[11,R[8],E,E,30,[[[U]],[R[3]]]],[11,R[9],E,E,30,[[],[R[3]]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,R[275],E,E,5,[[["src"]],[R[3]]]],[11,R[276],E,E,5,[[],[R[3]]]],[11,R[8],E,E,5,[[["src"]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[277],E,E,5,[[["src"]],[R[3]]]],[11,R[278],E,E,5,[[],[R[3]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[98],E,E,5,[[["self"]],["string"]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"],[T]]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,R[275],E,E,6,[[["src"]],[R[3]]]],[11,R[276],E,E,6,[[],[R[3]]]],[11,R[8],E,E,6,[[["src"]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[277],E,E,6,[[["src"]],[R[3]]]],[11,R[278],E,E,6,[[],[R[3]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[98],E,E,6,[[["self"]],["string"]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[42],E,E,6,[[["self"],[T]]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,R[275],E,E,7,[[["src"]],[R[3]]]],[11,R[276],E,E,7,[[],[R[3]]]],[11,R[8],E,E,7,[[["src"]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[277],E,E,7,[[["src"]],[R[3]]]],[11,R[278],E,E,7,[[],[R[3]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[98],E,E,7,[[["self"]],["string"]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[42],E,E,7,[[["self"],[T]]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[R[286]]],["self"]]],[11,"from",E,E,3,[[[R[280]]],["self"]]],[11,"from",E,E,3,[[[R[281]]],["self"]]],[11,"from",E,E,3,[[[R[282]]],["self"]]],[11,"from",E,E,3,[[[R[283]]],["self"]]],[11,"from",E,E,3,[[[R[285]]],[R[284]]]],[11,"from",E,E,4,[[[R[286]]],["self"]]],[11,"from",E,E,4,[[[R[280]]],["self"]]],[11,"from",E,E,4,[[[R[281]]],["self"]]],[11,"from",E,E,4,[[[R[282]]],["self"]]],[11,"from",E,E,4,[[[R[288]]],["self"]]],[11,"from",E,E,4,[[[R[283]]],["self"]]],[11,"from",E,E,4,[[[R[284]]],["self"]]],[11,"from",E,E,4,[[[R[285]]],[R[287]]]],[11,"from",E,E,0,[[[R[286]]],["self"]]],[11,"from",E,E,1,[[[R[286]]],["self"]]],[11,"from",E,E,2,[[[R[286]]],["self"]]],[11,"from",E,E,5,[[[R[286]]],["self"]]],[11,"from",E,E,5,[[[R[281]]],["self"]]],[11,"from",E,E,5,[[[R[282]]],["self"]]],[11,"from",E,E,5,[[[R[283]]],["self"]]],[11,"from",E,E,6,[[[R[286]]],["self"]]],[11,"from",E,E,6,[[[R[281]]],["self"]]],[11,"from",E,E,6,[[[R[282]]],["self"]]],[11,"from",E,E,7,[[[R[286]]],["self"]]],[11,"from",E,E,7,[[[R[281]]],["self"]]],[11,"from",E,E,7,[[[R[282]]],["self"]]],[11,"from",E,E,7,[[[R[283]]],["self"]]],[11,"cmp",E,E,3,[[["self"],[R[284]]],[R[24]]]],[11,"cmp",E,E,4,[[["self"],[R[287]]],[R[24]]]],[11,"cmp",E,E,30,[[["self"],[R[286]]],[R[24]]]],[11,"cmp",E,E,0,[[["self"],[R[280]]],[R[24]]]],[11,"cmp",E,E,1,[[["self"],[R[281]]],[R[24]]]],[11,"cmp",E,E,2,[[["self"],[R[282]]],[R[24]]]],[11,"cmp",E,E,5,[[["self"],[R[285]]],[R[24]]]],[11,"cmp",E,E,6,[[["self"],[R[283]]],[R[24]]]],[11,"cmp",E,E,7,[[["self"],[R[288]]],[R[24]]]],[11,R[172],E,E,3,[[["self"],[R[284]]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,3,[[["self"],[R[284]]],["bool"]]],[11,"le",E,E,3,[[["self"],[R[284]]],["bool"]]],[11,"gt",E,E,3,[[["self"],[R[284]]],["bool"]]],[11,"ge",E,E,3,[[["self"],[R[284]]],["bool"]]],[11,R[172],E,E,4,[[["self"],[R[287]]],[[R[25],[R[24]]],[R[24]]]]],[11,R[172],E,E,30,[[["self"],[R[286]]],[[R[25],[R[24]]],[R[24]]]]],[11,R[172],E,E,0,[[["self"],[R[280]]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,0,[[["self"],[R[280]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[280]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[280]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[280]]],["bool"]]],[11,R[172],E,E,1,[[["self"],[R[281]]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,1,[[["self"],[R[281]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[281]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[281]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[281]]],["bool"]]],[11,R[172],E,E,2,[[["self"],[R[282]]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,2,[[["self"],[R[282]]],["bool"]]],[11,"le",E,E,2,[[["self"],[R[282]]],["bool"]]],[11,"gt",E,E,2,[[["self"],[R[282]]],["bool"]]],[11,"ge",E,E,2,[[["self"],[R[282]]],["bool"]]],[11,R[172],E,E,5,[[["self"],[R[285]]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,5,[[["self"],[R[285]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[285]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[285]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[285]]],["bool"]]],[11,R[172],E,E,6,[[["self"],[R[283]]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,6,[[["self"],[R[283]]],["bool"]]],[11,"le",E,E,6,[[["self"],[R[283]]],["bool"]]],[11,"gt",E,E,6,[[["self"],[R[283]]],["bool"]]],[11,"ge",E,E,6,[[["self"],[R[283]]],["bool"]]],[11,R[172],E,E,7,[[["self"],[R[288]]],[[R[25],[R[24]]],[R[24]]]]],[11,"eq",E,E,3,[[["self"],[R[284]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[284]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[287]]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[286]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[280]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[280]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[281]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[281]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[282]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[282]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[285]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[285]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[283]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[283]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[288]]],["bool"]]],[11,"clone",E,E,3,[[["self"]],[R[284]]]],[11,"clone",E,E,4,[[["self"]],[R[287]]]],[11,"clone",E,E,30,[[["self"]],[R[286]]]],[11,"clone",E,E,0,[[["self"]],[R[280]]]],[11,"clone",E,E,1,[[["self"]],[R[281]]]],[11,"clone",E,E,2,[[["self"]],[R[282]]]],[11,"clone",E,E,5,[[["self"]],[R[285]]]],[11,"clone",E,E,6,[[["self"]],[R[283]]]],[11,"clone",E,E,7,[[["self"]],[R[288]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,30,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,R[53],E,E,3,[[["self"]],["str"]]],[11,R[53],E,E,4,[[["self"]],["str"]]],[11,R[53],E,E,30,[[["self"]],["str"]]],[11,R[53],E,E,0,[[["self"]],["str"]]],[11,R[53],E,E,1,[[["self"]],["str"]]],[11,R[53],E,E,2,[[["self"]],["str"]]],[11,R[53],E,E,5,[[["self"]],["str"]]],[11,R[53],E,E,6,[[["self"]],["str"]]],[11,R[53],E,E,7,[[["self"]],["str"]]]],"p":[[3,R[264]],[3,R[262]],[3,R[263]],[4,R[289]],[4,R[290]],[4,R[291]],[4,R[292]],[4,R[293]],[8,"Saturate"],[8,"UnwrapOk"],[8,R[294]],[8,R[295]],[8,R[296]],[8,R[297]],[8,R[298]],[8,R[299]],[8,R[300]],[8,R[301]],[8,"TryFrom"],[8,"TryInto"],[8,R[302]],[8,R[303]],[8,"ConvUtil"],[8,R[304]],[4,R[305]],[4,"Wrapping"],[4,R[306]],[4,R[307]],[4,R[308]],[4,R[309]],[4,"NoError"]]};
searchIndex["crc32fast"]={"doc":"Example","i":[[3,"Hasher","crc32fast","Represents an in-progress CRC32 computation.",N,N],[11,"new",E,"Create a new `Hasher`.",0,[[],["self"]]],[11,"new_with_initial",E,"Create a new `Hasher` with an initial CRC32 state.",0,[[["u32"]],["self"]]],[11,"update",E,"Process the given byte slice and update the hash state.",0,[[["self"]]]],[11,"finalize",E,"Finalize the hash state and return the computed CRC32 value.",0,[[],["u32"]]],[11,"reset",E,"Reset the hash state.",0,[[["self"]]]],[11,"combine",E,"Combine the hash state with the hash state for the…",0,[[["self"],["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[327],E,E,0,[[],["self"]]],[11,"clone",E,E,0,[[["self"]],["hasher"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"write",E,E,0,[[["self"]]]],[11,"finish",E,E,0,[[["self"]],["u64"]]]],"p":[[3,"Hasher"]]};
searchIndex["crossbeam_deque"]={"doc":"A concurrent work-stealing deque.","i":[[3,"Worker","crossbeam_deque","The worker side of a deque.",N,N],[3,"Stealer",E,"The stealer side of a deque.",N,N],[4,"Pop",E,"Possible outcomes of a pop operation.",N,N],[13,"Empty",E,"The deque was empty at the time of popping.",0,N],[13,"Data",E,"Some data has been successfully popped.",0,N],[13,"Retry",E,"Lost the race for popping data to another concurrent steal…",0,N],[4,"Steal",E,"Possible outcomes of a steal operation.",N,N],[13,"Empty",E,"The deque was empty at the time of stealing.",1,N],[13,"Data",E,"Some data has been successfully stolen.",1,N],[13,"Retry",E,"Lost the race for stealing data to another concurrent…",1,N],[5,"fifo",E,"Creates a work-stealing deque with the first-in first-out…",N,[[]]],[5,"lifo",E,"Creates a work-stealing deque with the last-in first-out…",N,[[]]],[11,R[589],E,R[1510],2,[[["self"]],["bool"]]],[11,"push",E,"Pushes an element into the back of the deque.",2,[[["self"],[T]]]],[11,"pop",E,"Pops an element from the deque.",2,[[["self"]],["pop"]]],[11,R[589],E,R[1510],3,[[["self"]],["bool"]]],[11,"steal",E,"Steals an element from the front of the deque.",3,[[["self"]],["steal"]]],[11,"steal_many",E,"Steals elements from the front of the deque.",3,[[["self"],["worker"]],["steal"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"cmp",E,E,0,[[["self"],["pop"]],[R[24]]]],[11,"cmp",E,E,1,[[["self"],["steal"]],[R[24]]]],[11,R[172],E,E,0,[[["self"],["pop"]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"le",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["pop"]],["bool"]]],[11,R[172],E,E,1,[[["self"],["steal"]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"le",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],["pop"]]],[11,"clone",E,E,1,[[["self"]],["steal"]]],[11,"clone",E,E,3,[[["self"]],["stealer"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]]],"p":[[4,"Pop"],[4,"Steal"],[3,"Worker"],[3,"Stealer"]]};
searchIndex["crossbeam_epoch"]={"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",N,N],[3,R[1248],E,"The error returned on failed compare-and-set operation.",N,N],[12,"current",E,"The value in the atomic pointer at the time of the failed…",0,N],[12,"new",E,"The new value, which the operation failed to store.",0,N],[3,"Owned",E,"An owned heap-allocated object.",N,N],[3,"Shared",E,"A pointer to an object protected by the epoch GC.",N,N],[3,"Collector",E,"An epoch-based garbage collector.",N,N],[3,R[1249],E,"A handle to a garbage collector.",N,N],[3,"Guard",E,"A guard that keeps the current thread pinned.",N,N],[5,"unprotected",E,"Returns a reference to a dummy guard that allows…",N,[[],["guard"]]],[5,"default_collector",E,"Returns the default global collector.",N,[[],[R[1245]]]],[5,"is_pinned",E,"Returns `true` if the current thread is pinned.",N,[[],["bool"]]],[5,"pin",E,"Pins the current thread.",N,[[],["guard"]]],[11,"null",E,"Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new",E,"Allocates `value` on the heap and returns a new atomic…",1,[[[T]],["atomic"]]],[11,"load",E,"Loads a `Shared` from the atomic pointer.",1,[[["self"],[R[24]],["guard"]],["shared"]]],[11,R[1251],E,"Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["self"],["guard"]],["shared"]]],[11,"store",E,R[1237],1,[[["self"],["pointer"],[R[24]]]]],[11,"swap",E,R[1237],1,[[["self"],["pointer"],[R[24]],["guard"]],["shared"]]],[11,"compare_and_set",E,R[1239],1,[[["self"],["shared"],["o"],["p"],["guard"]],[[R[3],["shared",R[1238]]],["shared"],[R[1238]]]]],[11,"compare_and_set_weak",E,R[1239],1,[[["self"],["shared"],["o"],["p"],["guard"]],[[R[3],["shared",R[1238]]],["shared"],[R[1238]]]]],[11,R[81],E,"Bitwise \"and\" with the current tag.",1,[[["self"],["usize"],[R[24]],["guard"]],["shared"]]],[11,R[83],E,"Bitwise \"or\" with the current tag.",1,[[["self"],["usize"],[R[24]],["guard"]],["shared"]]],[11,R[85],E,"Bitwise \"xor\" with the current tag.",1,[[["self"],["usize"],[R[24]],["guard"]],["shared"]]],[11,"into_owned",E,R[1241],1,[[],["owned"]]],[11,"new",E,"Allocates `value` on the heap and returns a new owned…",2,[[[T]],["owned"]]],[11,"from_raw",E,"Returns a new owned pointer pointing to `raw`.",2,[[],["owned"]]],[11,"into_shared",E,"Converts the owned pointer into a [`Shared`].",2,[[["guard"]],["shared"]]],[11,"into_box",E,"Converts the owned pointer into a `Box`.",2,[[],["box"]]],[11,"tag",E,R[1242],2,[[["self"]],["usize"]]],[11,"with_tag",E,R[1243],2,[[["usize"]],["owned"]]],[11,"null",E,"Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null",E,"Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw",E,"Converts the pointer to a raw pointer (without the tag).",3,[[["self"]]]],[11,"deref",E,R[1240],3,[[["self"]],[T]]],[11,R[14],E,R[1240],3,[[["self"]],[T]]],[11,"as_ref",E,"Converts the pointer to a reference.",3,[[["self"]],[[T],[R[25]]]]],[11,"into_owned",E,R[1241],3,[[],["owned"]]],[11,"tag",E,R[1242],3,[[["self"]],["usize"]]],[11,"with_tag",E,R[1243],3,[[["self"],["usize"]],["shared"]]],[11,"new",E,"Creates a new collector.",4,[[],["self"]]],[11,"register",E,"Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin",E,"Pins the handle.",5,[[["self"]],["guard"]]],[11,"is_pinned",E,"Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,R[1245],E,"Returns the `Collector` associated with this handle.",5,[[["self"]],[R[1245]]]],[11,"defer",E,R[1244],6,[[["self"],["f"]]]],[11,"defer_unchecked",E,R[1244],6,[[["self"],["f"]]]],[11,"defer_destroy",E,"Stores a destructor for an object so that it can be…",6,[[["self"],["shared"]]]],[11,"flush",E,"Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin",E,"Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after",E,"Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,R[1245],E,"Returns the `Collector` associated with this guard.",6,[[["self"]],[[R[25],[R[1245]]],[R[1245]]]]],[8,R[1250],E,"Memory orderings for compare-and-set operations.",N,N],[10,"success",E,"The ordering of the operation when it succeeds.",7,[[["self"]],[R[24]]]],[10,"failure",E,"The ordering of the operation when it fails.",7,[[["self"]],[R[24]]]],[8,"Pointer",E,"A trait for either `Owned` or `Shared` pointers.",N,N],[10,R[1247],E,"Returns the machine representation of the pointer.",8,[[],["usize"]]],[10,R[768],E,R[1246],8,[[["usize"]],["self"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"],[T]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,R[1247],E,E,2,[[],["usize"]]],[11,R[768],E,R[1246],2,[[["usize"]],["self"]]],[11,R[1247],E,E,3,[[],["usize"]]],[11,R[768],E,E,3,[[["usize"]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from",E,E,1,[[["box"]],["self"]]],[11,"from",E,E,1,[[[T]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `raw`.",1,[[],["self"]]],[11,"from",E,E,2,[[[T]],["self"]]],[11,"from",E,"Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from",E,"Returns a new pointer pointing to `raw`.",3,[[],["self"]]],[11,"cmp",E,E,3,[[["self"]],[R[24]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,R[172],E,E,3,[[["self"]],[[R[24]],[R[25],[R[24]]]]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,"Checks if both handles point to the same collector.",4,[[["self"],[R[1245]]],["bool"]]],[11,R[327],E,E,1,[[],["self"]]],[11,R[327],E,E,3,[[],["self"]]],[11,"clone",E,"Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"clone",E,"Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"as_mut",E,E,2,[[["self"]],[T]]],[11,"as_ref",E,E,2,[[["self"]],[T]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[3]]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]]],"p":[[3,R[1248]],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,R[1249]],[3,"Guard"],[8,R[1250]],[8,"Pointer"]]};
searchIndex["crossbeam_queue"]={"doc":"Concurrent queues.","i":[[3,R[588],"crossbeam_queue","A bounded multi-producer multi-consumer queue.",N,N],[3,"SegQueue",E,"An unbounded multi-producer multi-consumer queue.",N,N],[3,"PopError",E,"Error which occurs when popping from an empty queue.",N,N],[3,R[587],E,"Error which occurs when pushing into a full queue.",N,N],[12,"0",E,E,0,N],[11,"new",E,"Creates a new bounded queue with the given capacity.",1,[[["usize"]],["arrayqueue"]]],[11,"push",E,"Attempts to push an element into the queue.",1,[[["self"],[T]],[[R[582]],[R[3],[R[582]]]]]],[11,"pop",E,"Attempts to pop an element from the queue.",1,[[["self"]],[[R[3],[R[584]]],[R[584]]]]],[11,R[583],E,"Returns the capacity of the queue.",1,[[["self"]],["usize"]]],[11,R[589],E,R[585],1,[[["self"]],["bool"]]],[11,"is_full",E,"Returns `true` if the queue is full.",1,[[["self"]],["bool"]]],[11,"len",E,R[586],1,[[["self"]],["usize"]]],[11,"new",E,"Creates a new unbounded queue.",2,[[],["segqueue"]]],[11,"push",E,"Pushes an element into the queue.",2,[[["self"],[T]]]],[11,"pop",E,"Pops an element from the queue.",2,[[["self"]],[[R[3],[R[584]]],[R[584]]]]],[11,R[589],E,R[585],2,[[["self"]],["bool"]]],[11,"len",E,R[586],2,[[["self"]],["usize"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[98],E,E,3,[[["self"]],["string"]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[98],E,E,0,[[["self"]],["string"]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"eq",E,E,3,[[["self"],[R[584]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[582]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[582]]],["bool"]]],[11,R[327],E,E,2,[[],["segqueue"]]],[11,"clone",E,E,3,[[["self"]],[R[584]]]],[11,"clone",E,E,0,[[["self"]],[R[582]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,R[53],E,E,3,[[["self"]],["str"]]],[11,R[53],E,E,0,[[["self"]],["str"]]]],"p":[[3,R[587]],[3,R[588]],[3,"SegQueue"],[3,"PopError"]]};
searchIndex["crossbeam_utils"]={"doc":"Miscellaneous tools for concurrent programming.","i":[[3,R[106],R[87],R[88],N,N],[3,"Backoff",E,"Performs exponential backoff in spin loops.",N,N],[0,"atomic",E,"Atomic types.",N,N],[3,R[104],R[96],"A thread-safe mutable memory location.",N,N],[11,"new",E,"Creates a new atomic cell initialized with `val`.",0,[[[T]],[R[101]]]],[11,R[7],E,"Unwraps the atomic cell and returns its inner value.",0,[[],[T]]],[11,"is_lock_free",E,"Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store",E,"Stores `val` into the atomic cell.",0,[[["self"],[T]]]],[11,"swap",E,"Stores `val` into the atomic cell and returns the previous…",0,[[["self"],[T]],[T]]],[11,"as_ptr",E,"Returns a raw pointer to the underlying data in this…",0,[[["self"]]]],[11,"take",E,"Takes the value of the atomic cell, leaving…",0,[[["self"]],[T]]],[11,"load",E,"Loads a value.",0,[[["self"]],[T]]],[11,"compare_and_swap",E,R[76],0,[[["self"],[T]],[T]]],[11,"compare_exchange",E,R[76],0,[[["self"],[T]],[R[3]]]],[11,R[77],E,R[78],0,[[["self"],["u8"]],["u8"]]],[11,R[79],E,R[80],0,[[["self"],["u8"]],["u8"]]],[11,R[81],E,R[82],0,[[["self"],["u8"]],["u8"]]],[11,R[83],E,R[84],0,[[["self"],["u8"]],["u8"]]],[11,R[85],E,R[86],0,[[["self"],["u8"]],["u8"]]],[11,R[77],E,R[78],0,[[["self"],["i8"]],["i8"]]],[11,R[79],E,R[80],0,[[["self"],["i8"]],["i8"]]],[11,R[81],E,R[82],0,[[["self"],["i8"]],["i8"]]],[11,R[83],E,R[84],0,[[["self"],["i8"]],["i8"]]],[11,R[85],E,R[86],0,[[["self"],["i8"]],["i8"]]],[11,R[77],E,R[78],0,[[["self"],["u16"]],["u16"]]],[11,R[79],E,R[80],0,[[["self"],["u16"]],["u16"]]],[11,R[81],E,R[82],0,[[["self"],["u16"]],["u16"]]],[11,R[83],E,R[84],0,[[["self"],["u16"]],["u16"]]],[11,R[85],E,R[86],0,[[["self"],["u16"]],["u16"]]],[11,R[77],E,R[78],0,[[["self"],["i16"]],["i16"]]],[11,R[79],E,R[80],0,[[["self"],["i16"]],["i16"]]],[11,R[81],E,R[82],0,[[["self"],["i16"]],["i16"]]],[11,R[83],E,R[84],0,[[["self"],["i16"]],["i16"]]],[11,R[85],E,R[86],0,[[["self"],["i16"]],["i16"]]],[11,R[77],E,R[78],0,[[["self"],["u32"]],["u32"]]],[11,R[79],E,R[80],0,[[["self"],["u32"]],["u32"]]],[11,R[81],E,R[82],0,[[["self"],["u32"]],["u32"]]],[11,R[83],E,R[84],0,[[["self"],["u32"]],["u32"]]],[11,R[85],E,R[86],0,[[["self"],["u32"]],["u32"]]],[11,R[77],E,R[78],0,[[["self"],["i32"]],["i32"]]],[11,R[79],E,R[80],0,[[["self"],["i32"]],["i32"]]],[11,R[81],E,R[82],0,[[["self"],["i32"]],["i32"]]],[11,R[83],E,R[84],0,[[["self"],["i32"]],["i32"]]],[11,R[85],E,R[86],0,[[["self"],["i32"]],["i32"]]],[11,R[77],E,R[78],0,[[["self"],["u64"]],["u64"]]],[11,R[79],E,R[80],0,[[["self"],["u64"]],["u64"]]],[11,R[81],E,R[82],0,[[["self"],["u64"]],["u64"]]],[11,R[83],E,R[84],0,[[["self"],["u64"]],["u64"]]],[11,R[85],E,R[86],0,[[["self"],["u64"]],["u64"]]],[11,R[77],E,R[78],0,[[["self"],["i64"]],["i64"]]],[11,R[79],E,R[80],0,[[["self"],["i64"]],["i64"]]],[11,R[81],E,R[82],0,[[["self"],["i64"]],["i64"]]],[11,R[83],E,R[84],0,[[["self"],["i64"]],["i64"]]],[11,R[85],E,R[86],0,[[["self"],["i64"]],["i64"]]],[11,R[77],E,R[78],0,[[["self"],["u128"]],["u128"]]],[11,R[79],E,R[80],0,[[["self"],["u128"]],["u128"]]],[11,R[81],E,R[82],0,[[["self"],["u128"]],["u128"]]],[11,R[83],E,R[84],0,[[["self"],["u128"]],["u128"]]],[11,R[85],E,R[86],0,[[["self"],["u128"]],["u128"]]],[11,R[77],E,R[78],0,[[["self"],["i128"]],["i128"]]],[11,R[79],E,R[80],0,[[["self"],["i128"]],["i128"]]],[11,R[81],E,R[82],0,[[["self"],["i128"]],["i128"]]],[11,R[83],E,R[84],0,[[["self"],["i128"]],["i128"]]],[11,R[85],E,R[86],0,[[["self"],["i128"]],["i128"]]],[11,R[77],E,R[78],0,[[["self"],["usize"]],["usize"]]],[11,R[79],E,R[80],0,[[["self"],["usize"]],["usize"]]],[11,R[81],E,R[82],0,[[["self"],["usize"]],["usize"]]],[11,R[83],E,R[84],0,[[["self"],["usize"]],["usize"]]],[11,R[85],E,R[86],0,[[["self"],["usize"]],["usize"]]],[11,R[77],E,R[78],0,[[["self"],["isize"]],["isize"]]],[11,R[79],E,R[80],0,[[["self"],["isize"]],["isize"]]],[11,R[81],E,R[82],0,[[["self"],["isize"]],["isize"]]],[11,R[83],E,R[84],0,[[["self"],["isize"]],["isize"]]],[11,R[85],E,R[86],0,[[["self"],["isize"]],["isize"]]],[11,R[81],E,"Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[83],E,"Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[85],E,"Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,R[105],E,"Trait which allows reading from primitive atomic types…",N,N],[16,"Val",E,"Type returned by `load_consume`.",1,N],[10,R[1251],E,"Loads a value from the atomic using a \"consume\" memory…",1,[[["self"]]]],[11,"new",R[87],R[88],2,[[[T]],[R[100]]]],[11,R[7],E,"Returns the inner value.",2,[[],[T]]],[11,"new",E,"Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset",E,"Resets the `Backoff`.",3,[[["self"]]]],[11,"spin",E,"Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze",E,"Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed",E,"Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync",E,"Thread synchronization primitives.",N,N],[3,R[107],R[97],"A sharded reader-writer lock.",N,N],[3,R[111],E,"A guard used to release the shared read access of a…",N,N],[3,R[112],E,"A guard used to release the exclusive write access of a…",N,N],[3,"Parker",E,"A thread parking primitive.",N,N],[3,"Unparker",E,"Unparks a thread parked by the associated [`Parker`].",N,N],[3,R[108],E,"Enables threads to synchronize the beginning or end of…",N,N],[11,"new",E,"Creates a new `Parker`.",4,[[],["parker"]]],[11,"park",E,"Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,"park_timeout",E,"Blocks the current thread until the token is made…",4,[[["self"],["duration"]]]],[11,R[89],E,"Returns a reference to an associated [`Unparker`].",4,[[["self"]],[R[89]]]],[11,"unpark",E,"Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new",E,"Creates a new sharded reader-writer lock.",6,[[[T]],[R[102]]]],[11,R[7],E,"Consumes this lock, returning the underlying data.",6,[[],[R[90]]]],[11,"is_poisoned",E,"Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,"get_mut",E,"Returns a mutable reference to the underlying data.",6,[[["self"]],[[R[90]],[T]]]],[11,"try_read",E,"Attempts to acquire this lock with shared read access.",6,[[["self"]],[[R[92],[R[91]]],[R[91]]]]],[11,"read",E,"Locks with shared read access, blocking the current thread…",6,[[["self"]],[[R[90],[R[91]]],[R[91]]]]],[11,"try_write",E,"Attempts to acquire this lock with exclusive write access.",6,[[["self"]],[[R[93]],[R[92],[R[93]]]]]],[11,"write",E,"Locks with exclusive write access, blocking the current…",6,[[["self"]],[[R[93]],[R[90],[R[93]]]]]],[11,"new",E,"Creates a new wait group and returns the single reference…",7,[[],[R[103]]]],[11,"wait",E,"Drops this reference and waits until all other references…",7,[[]]],[0,"thread",R[87],"Threads that can borrow variables from the stack.",N,N],[3,"Scope",R[99],"A scope for spawning threads.",N,N],[3,R[109],E,"Configures the properties of a new thread.",N,N],[3,R[110],E,"A handle that can be used to join its scoped thread.",N,N],[5,"scope",E,"Creates a new scope for spawning threads.",N,[[["f"]],[R[3]]]],[11,"spawn",E,"Spawns a scoped thread.",8,[[["self"],["f"]],[R[95]]]],[11,"builder",E,"Creates a builder that can configure a thread before…",8,[[["self"]],[R[94]]]],[11,"name",E,"Sets the name for the new thread.",9,[[["string"]],[R[94]]]],[11,R[1731],E,"Sets the size of the stack for the new thread.",9,[[["usize"]],[R[94]]]],[11,"spawn",E,"Spawns a scoped thread with this configuration.",9,[[["f"]],[[R[3],[R[95]]],[R[95]]]]],[11,"join",E,"Waits for the thread to finish and returns its result.",10,[[],[R[3]]]],[11,"thread",E,"Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,"from",R[87],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",R[96],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",R[97],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[98],E,E,11,[[["self"]],["string"]]],[11,R[8],E,E,11,[[[U]],[R[3]]]],[11,R[9],E,E,11,[[],[R[3]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[98],E,E,12,[[["self"]],["string"]]],[11,R[8],E,E,12,[[[U]],[R[3]]]],[11,R[9],E,E,12,[[],[R[3]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"],[T]]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[42],E,E,7,[[["self"],[T]]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"from",R[99],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[8],E,E,8,[[[U]],[R[3]]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[8],E,E,9,[[[U]],[R[3]]]],[11,R[9],E,E,9,[[],[R[3]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[8],E,E,10,[[[U]],[R[3]]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"from",R[87],E,2,[[[T]],["self"]]],[11,"from",R[97],E,6,[[[T]],["self"]]],[11,"drop",E,E,12,[[["self"]]]],[11,"drop",E,E,7,[[["self"]]]],[11,"eq",R[87],E,2,[[["self"],[R[100]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[100]]],["bool"]]],[11,R[327],R[96],E,0,[[],[R[101]]]],[11,R[327],R[87],E,2,[[],[R[100]]]],[11,R[327],E,E,3,[[],["backoff"]]],[11,R[327],R[97],E,6,[[],[R[102]]]],[11,"clone",R[87],E,2,[[["self"]],[R[100]]]],[11,"clone",R[97],E,5,[[["self"]],[R[89]]]],[11,"clone",E,E,7,[[["self"]],[R[103]]]],[11,"deref",R[87],E,2,[[["self"]],[T]]],[11,"deref",R[97],E,11,[[["self"]],[T]]],[11,"deref",E,E,12,[[["self"]],[T]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[96],E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[87],E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[97],E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[99],E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[3]]]],[11,R[14],R[87],E,2,[[["self"]],[T]]],[11,R[14],R[97],E,12,[[["self"]],[T]]],[11,"hash",R[87],E,2,[[["self"],["__h"]]]]],"p":[[3,R[104]],[8,R[105]],[3,R[106]],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,R[107]],[3,R[108]],[3,"Scope"],[3,R[109]],[3,R[110]],[3,R[111]],[3,R[112]]]};
searchIndex["custom_derive"]={"doc":"Note: This crate has been superseded by `macro-attr`.","i":[],"p":[]};
searchIndex["deflate"]={"doc":"An implementation an encoder using DEFLATE compression…","i":[[3,R[720],"deflate","A struct describing the options for a compressor or…",N,N],[12,"max_hash_checks",E,"The maximum number of checks to make in the hash table for…",0,N],[12,"lazy_if_less_than",E,"Only lazy match if we have a length less than this value.",0,N],[12,"matching_type",E,"Whether to use lazy or greedy matching.",0,N],[12,"special",E,"Force fixed/stored blocks (Not implemented yet). * Default…",0,N],[4,R[721],E,"Enum allowing some special options (not implemented yet)!",N,N],[13,"Normal",E,"Compress normally.",1,N],[13,"_ForceFixed",E,"Force fixed huffman tables. (Unimplemented!).",1,N],[13,"_ForceStored",E,"Force stored (uncompressed) blocks only. (Unimplemented!).",1,N],[4,R[722],E,"An enum describing the level of compression to be used by…",N,N],[13,"Fast",E,"Fast minimal compression (`CompressionOptions::fast()`).",2,N],[13,"Default",E,"Default level (`CompressionOptions::default()`).",2,N],[13,"Best",E,"Higher compression level (`CompressionOptions::high()`).",2,N],[4,R[723],E,"An enum describing whether we use lazy or greedy matching.",N,N],[13,"Greedy",E,"Use greedy matching: the matching algorithm simply uses a…",3,N],[13,"Lazy",E,"Use lazy matching: after finding a match, the next input…",3,N],[5,"deflate_bytes_conf",E,"Compress the given slice of bytes with DEFLATE compression.",N,[[["into",[R[709]]],[R[709]]],[["u8"],["vec",["u8"]]]]],[5,"deflate_bytes",E,"Compress the given slice of bytes with DEFLATE compression…",N,[[],[["u8"],["vec",["u8"]]]]],[5,"deflate_bytes_zlib_conf",E,R[710],N,[[["into",[R[709]]],[R[709]]],[["u8"],["vec",["u8"]]]]],[5,"deflate_bytes_zlib",E,R[710],N,[[],[["u8"],["vec",["u8"]]]]],[11,"high",E,"Returns compression settings rouhgly corresponding to the…",0,[[],[R[709]]]],[11,"fast",E,"Returns  a fast set of compression settings",0,[[],[R[709]]]],[11,"huffman_only",E,R[711],0,[[],[R[709]]]],[11,"rle",E,R[711],0,[[],[R[709]]]],[0,"write",E,"Encoders implementing a `Write` interface.",N,N],[3,R[724],R[712],"A DEFLATE encoder/compressor.",N,N],[3,R[725],E,"A Zlib encoder/compressor.",N,N],[11,"from","deflate",E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[98],E,E,3,[[["self"]],["string"]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",R[712],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from","deflate",E,0,[[[R[713]]],[R[709]]]],[11,"cmp",E,E,2,[[["self"],[R[713]]],[R[24]]]],[11,"cmp",E,E,3,[[["self"],[R[715]]],[R[24]]]],[11,"drop",R[712],R[714],4,[[["self"]]]],[11,"drop",E,R[714],5,[[["self"]]]],[11,R[172],"deflate",E,2,[[["self"],[R[713]]],[[R[25],[R[24]]],[R[24]]]]],[11,R[172],E,E,3,[[["self"],[R[715]]],[[R[25],[R[24]]],[R[24]]]]],[11,"eq",E,E,2,[[["self"],[R[713]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[716]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[709]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[709]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[715]]],["bool"]]],[11,R[327],E,E,2,[[],[R[713]]]],[11,R[327],E,E,1,[[],[R[716]]]],[11,R[327],E,"Returns the options describing the default compression…",0,[[],[R[709]]]],[11,"clone",E,E,2,[[["self"]],[R[713]]]],[11,"clone",E,E,1,[[["self"]],[R[716]]]],[11,"clone",E,E,0,[[["self"]],[R[709]]]],[11,"clone",E,E,3,[[["self"]],[R[715]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"write",R[712],E,4,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,R[717],4,[[["self"]],[R[3]]]],[11,"write",E,E,5,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,R[717],5,[[["self"]],[R[3]]]],[11,"new",E,"Creates a new encoder using the provided compression…",4,[[["w"],["into",[R[709]]],[R[709]]],["deflateencoder"]]],[11,"finish",E,R[718],4,[[],[R[3]]]],[11,"reset",E,R[719],4,[[["self"],["w"]],[R[3]]]],[11,"new",E,"Create a new `ZlibEncoder` using the provided compression…",5,[[["w"],["into",[R[709]]],[R[709]]],["zlibencoder"]]],[11,"finish",E,R[718],5,[[],[R[3]]]],[11,"reset",E,R[719],5,[[["self"],["w"]],[R[3]]]],[11,"checksum",E,"Return the adler32 checksum of the currently consumed data.",5,[[["self"]],["u32"]]]],"p":[[3,R[720]],[4,R[721]],[4,R[722]],[4,R[723]],[3,R[724]],[3,R[725]]]};
searchIndex["either"]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either",R[18],R[135],N,N],[13,"Left",E,R[136],0,N],[13,"Right",E,R[137],0,N],[11,"is_left",E,R[183],0,[[["self"]],["bool"]]],[11,"is_right",E,R[184],0,[[["self"]],["bool"]]],[11,"left",E,R[185],0,[[],[R[25]]]],[11,"right",E,R[186],0,[[],[R[25]]]],[11,"as_ref",E,R[187],0,[[["self"]],[["r"],[R[18]],["l"]]]],[11,"as_mut",E,R[188],0,[[["self"]],[["r"],["l"],[R[18]]]]],[11,"flip",E,R[189],0,[[],[R[18]]]],[11,"map_left",E,R[19],0,[[["f"]],[R[18]]]],[11,R[190],E,R[20],0,[[["f"]],[R[18]]]],[11,R[18],E,R[191],0,[[["f"],["g"]],[T]]],[11,R[192],E,R[193],0,[[["ctx"],["f"],["g"]],[T]]],[11,R[194],E,R[19],0,[[["f"]],[R[18]]]],[11,R[195],E,R[20],0,[[["f"]],[R[18]]]],[11,R[23],E,R[196],0,[[],[R[18]]]],[11,"left_or",E,R[197],0,[[["l"]],["l"]]],[11,R[198],E,R[199],0,[[],["l"]]],[11,R[200],E,R[21],0,[[["f"]],["l"]]],[11,"right_or",E,R[201],0,[[["r"]],["r"]]],[11,R[202],E,R[203],0,[[],["r"]]],[11,R[204],E,R[21],0,[[["f"]],["r"]]],[11,R[205],E,R[22],0,[[]]],[11,R[206],E,R[22],0,[[]]],[11,R[7],E,R[207],0,[[],[T]]],[14,"try_left",E,"Macro for unwrapping the left side of an `Either`, which…",N,N],[14,"try_right",E,"Dual to `try_left!`, see its documentation for more…",N,N],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[23],E,E,0,[[],["i"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"deref",E,E,0,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"eq",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],[R[18]]],[R[24]]]],[11,R[172],E,E,0,[[["self"],[R[18]]],[[R[24]],[R[25],[R[24]]]]]],[11,"lt",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,R[14],E,E,0,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,R[173],E,E,0,[[["self"]],[R[25]]]],[11,"next",E,E,0,[[["self"]],[R[25]]]],[11,R[174],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["acc"],["g"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[25]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[25]]]],[11,"collect",E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,"as_ref",E,E,0,[[["self"]],["target"]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,"as_mut",E,E,0,[[["self"]],["str"]]],[11,"as_mut",E,E,0,[[["self"]],["target"]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"into",E,E,0,[[],[R[3]]]],[11,"from",E,E,0,[[[R[3]]],["self"]]],[11,"clone",E,E,0,[[["self"]],[R[18]]]]],"p":[[4,"Either"]]};
searchIndex["gif"]={"doc":"GIF en- and decoding library Build Status","i":[[3,"Frame","gif",R[1907],N,N],[12,"delay",E,R[1908],0,N],[12,"dispose",E,R[1909],0,N],[12,R[1910],E,R[1911],0,N],[12,R[1912],E,R[1913],0,N],[12,"top",E,R[1914],0,N],[12,"left",E,R[1915],0,N],[12,"width",E,R[1916],0,N],[12,"height",E,R[1917],0,N],[12,R[2079],E,R[1918],0,N],[12,"palette",E,R[1919],0,N],[12,"buffer",E,R[1920],0,N],[3,R[258],E,"GIF decoder which supports streaming",N,N],[3,R[252],E,"Memory limit in bytes. `MemoryLimit::Some(0)` means that…",N,N],[12,"0",E,E,1,N],[3,"Reader",E,R[239],N,N],[3,"Decoder",E,R[239],N,N],[3,"Encoder",E,R[1921],N,N],[4,"Block",E,"Known GIF block types",N,N],[13,"Image",E,"Image block.",2,N],[13,R[240],E,"Extension block.",2,N],[13,"Trailer",E,"Image trailer.",2,N],[4,R[240],E,"Known GIF extensions",N,N],[13,"Text",E,"Text extension.",3,N],[13,"Control",E,"Control extension.",3,N],[13,"Comment",E,"Comment extension.",3,N],[13,"Application",E,"Application extension.",3,N],[4,R[253],E,R[1902],N,N],[13,"Any",E,R[1903],4,N],[13,"Keep",E,R[1904],4,N],[13,R[2081],E,R[1905],4,N],[13,"Previous",E,R[1906],4,N],[4,"Decoded",E,"Indicates whether a certain object has been decoded",N,N],[13,"Nothing",E,"Decoded nothing.",5,N],[13,"GlobalPalette",E,"Global palette.",5,N],[13,"BackgroundColor",E,"Index of the background color in the global palette.",5,N],[13,"Trailer",E,"Decoded the image trailer.",5,N],[13,"BlockStart",E,"The start of a block.",5,N],[13,"SubBlockFinished",E,"Decoded a sub-block. More sub-block are available.",5,N],[13,"BlockFinished",E,"Decoded the last (or only) sub-block of a block.",5,N],[13,"Frame",E,"Decoded all information of the next frame. The returned…",5,N],[13,"Data",E,"Decoded some data of the current frame.",5,N],[13,"DataEnd",E,"No more data available the current frame.",5,N],[4,R[254],E,"Decoding error.",N,N],[13,"Format",E,"Returned if the image is found to be malformed.",6,N],[13,"Internal",E,"Internal (logic) error.",6,N],[13,"Io",E,"Wraps `std::io::Error`.",6,N],[4,R[255],E,"Output mode for the image data",N,N],[13,"RGBA",E,"The decoder expands the image data to 32bit RGBA. This…",7,N],[13,"Indexed",E,"The decoder returns the raw indexed data.",7,N],[4,R[256],E,"Configures how extensions should be handled",N,N],[13,"Save",E,"Saves all extention data",8,N],[13,"Skip",E,"Skips the data of unknown extensions and extracts the data…",8,N],[4,R[257],E,"Extension data.",N,N],[13,"Control",E,"Control extension. Use `ExtensionData::new_control_ext` to…",9,N],[12,"flags","gif::ExtensionData","Flags.",9,N],[12,"delay",E,"Frame delay.",9,N],[12,"trns",E,"Transparent index.",9,N],[13,"Repetitions","gif","Sets the number of repetitions",9,N],[4,"Repeat",E,"Number of repetitions",N,N],[13,"Finite",E,"Finite number of repetitions",10,N],[13,"Infinite",E,"Infinite number of repetitions",10,N],[11,R[785],E,R[242],4,[[["u8"]],[[R[25],[R[241]]],[R[241]]]]],[11,R[785],E,R[242],2,[[["u8"]],[["block"],[R[25],["block"]]]]],[11,R[785],E,R[242],3,[[["u8"]],[[R[25],[R[243]]],[R[243]]]]],[11,"from_rgba",E,R[2013],0,[[["u16"]],["frame"]]],[11,R[2014],E,R[2015],0,[[["u16"],["i32"]],["frame"]]],[11,R[2016],E,R[2017],0,[[["u16"],[R[25],["u8"]],["u8"]],["frame"]]],[11,R[2018],E,R[2019],0,[[["u16"],[R[25],["u8"]],["u8"]],["frame"]]],[11,"from_rgb",E,R[2020],0,[[["u16"]],["frame"]]],[11,R[2021],E,R[2022],0,[[["u16"],["i32"]],["frame"]]],[11,"new",E,"Creates a new streaming decoder",11,[[],[R[249]]]],[11,"update",E,"Updates the internal state of the decoder. ",11,[[["self"]],[[R[3],[R[244]]],[R[244]]]]],[11,"last_ext",E,"Returns the data of the last extension that has been…",11,[[["self"]]]],[11,"current_frame_mut",E,"Current frame info as a mutable ref.",11,[[["self"]],["frame"]]],[11,"current_frame",E,"Current frame info as a ref.",11,[[["self"]],["frame"]]],[11,"width",E,R[245],11,[[["self"]],["u16"]]],[11,"height",E,R[246],11,[[["self"]],["u16"]]],[11,"new",E,"Creates a new decoder builder",12,[[["r"]],["decoder"]]],[11,"read_info",E,"Reads the logical screen descriptor including the global…",12,[[],[[R[244]],[R[3],["reader",R[244]]],["reader"]]]],[11,"next_frame_info",E,"Returns the next frame info",13,[[["self"]],[[R[3],[R[25],R[244]]],[R[25],["frame"]],[R[244]]]]],[11,"read_next_frame",E,"Reads the next frame from the image.",13,[[["self"]],[[R[3],[R[25],R[244]]],[R[25],["frame"]],[R[244]]]]],[11,"read_into_buffer",E,"Reads the data of the current frame into a pre-allocated…",13,[[["self"]],[[R[3],[R[244]]],[R[244]]]]],[11,"fill_buffer",E,"Reads data of the current frame into a pre-allocated…",13,[[["self"]],[[R[3],["bool",R[244]]],[R[244]],["bool"]]]],[11,R[1150],E,"Output buffer size",13,[[["self"]],["usize"]]],[11,"line_length",E,"Line length of the current frame",13,[[["self"]],["usize"]]],[11,"palette",E,"Returns the color palette relevant for the current (next)…",13,[[["self"]],[[R[244]],[R[3],[R[244]]]]]],[11,"global_palette",E,"The global color palette",13,[[["self"]],[R[25]]]],[11,"width",E,R[245],13,[[["self"]],["u16"]]],[11,"height",E,R[246],13,[[["self"]],["u16"]]],[11,"bg_color",E,"Index of the background color in the global palette",13,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,"new_control_ext",E,"Constructor for control extension data.",9,[[[R[241]],["u8"],["u16"],[R[25],["u8"]],["bool"]],[R[247]]]],[11,"new",E,"Creates a new encoder.",14,[[["w"],["u16"]],[R[3]]]],[11,"write_global_palette",E,"Writes the global color palette.",14,[[],[R[3]]]],[11,"write_frame",E,"Writes a frame to the image.",14,[[["self"],["frame"]],[R[3]]]],[11,"write_extension",E,"Writes an extension to the image.",14,[[["self"],[R[247]]],[R[3]]]],[11,"write_raw_extension",E,"Writes a raw extension to the image.",14,[[["self"],["u8"]],[R[3]]]],[8,R[259],E,"Implemented for objects that have parameters.",N,N],[11,"set",E,R[250],15,[[["self"],[R[251]]]]],[8,R[260],E,"Configuration parameter trait.",N,N],[16,"Result",E,"Result type of `set_param`.",16,N],[10,R[248],E,"Sets `self` as a parameter of `Object`.",16,[[["object"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[8],E,E,11,[[[U]],[R[3]]]],[11,R[9],E,E,11,[[],[R[3]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[8],E,E,13,[[[U]],[R[3]]]],[11,R[9],E,E,13,[[],[R[3]]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[8],E,E,12,[[[U]],[R[3]]]],[11,R[9],E,E,12,[[],[R[3]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[8],E,E,14,[[[U]],[R[3]]]],[11,R[9],E,E,14,[[],[R[3]]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"],[T]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[98],E,E,6,[[["self"]],["string"]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[8],E,E,8,[[[U]],[R[3]]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[8],E,E,9,[[[U]],[R[3]]]],[11,R[9],E,E,9,[[],[R[3]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[8],E,E,10,[[[U]],[R[3]]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,R[248],E,E,8,[[[R[249]]]]],[11,R[248],E,E,7,[[["decoder"]]]],[11,R[248],E,E,1,[[["decoder"]]]],[11,R[248],E,E,10,[[["encoder"]]]],[11,"from",E,E,6,[[["error"]],["self"]]],[11,"drop",E,E,14,[[["self"]]]],[11,"eq",E,E,4,[[["self"],[R[241]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["block"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[243]]],["bool"]]],[11,"eq",E,E,8,[[["self"],["extensions"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["coloroutput"]],["bool"]]],[11,R[327],E,E,0,[[],["frame"]]],[11,"clone",E,E,4,[[["self"]],[R[241]]]],[11,"clone",E,E,2,[[["self"]],["block"]]],[11,"clone",E,E,3,[[["self"]],[R[243]]]],[11,"clone",E,E,0,[[["self"]],["frame"]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,R[53],E,E,6,[[["self"]],["str"]]],[11,"cause",E,E,6,[[["self"]],[[R[25],["error"]],["error"]]]],[11,"set",E,R[250],15,[[["self"],[R[251]]]]]],"p":[[3,"Frame"],[3,R[252]],[4,"Block"],[4,R[240]],[4,R[253]],[4,"Decoded"],[4,R[254]],[4,R[255]],[4,R[256]],[4,R[257]],[4,"Repeat"],[3,R[258]],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[8,R[259]],[8,R[260]]]};
searchIndex["image"]={"doc":"This crate provides native rust implementations of image…","i":[[3,"Luma","image","Grayscale colors",N,N],[12,"0",E,E,0,N],[3,"LumaA",E,"Grayscale colors + alpha channel",N,N],[12,"0",E,E,1,N],[3,"Rgb",E,"RGB colors",N,N],[12,"0",E,E,2,N],[3,"Rgba",E,"RGB colors + alpha channel",N,N],[12,"0",E,E,3,N],[3,"Bgr",E,"BGR colors",N,N],[12,"0",E,E,4,N],[3,"Bgra",E,"BGR colors + alpha channel",N,N],[12,"0",E,E,5,N],[3,"Pixels",E,"Immutable pixel iterator",N,N],[3,"SubImage",E,"A View into another image",N,N],[3,R[2067],E,"Generic image buffer",N,N],[3,"Frame",E,"A single animation frame",N,N],[3,"Frames",E,"An implementation dependent iterator, reading the frames…",N,N],[4,R[1489],E,R[2089],N,N],[13,"Gray",E,R[2090],6,N],[13,"RGB",E,R[2091],6,N],[13,"Palette",E,R[2092],6,N],[13,"GrayA",E,R[2093],6,N],[13,"RGBA",E,R[2094],6,N],[13,"BGR",E,"Pixel contains B, G and R channels",6,N],[13,"BGRA",E,"Pixel is BGR with an alpha channel",6,N],[4,"ImageError",E,"An enumeration of Image errors",N,N],[13,R[2084],E,R[2085],7,N],[13,"DimensionError",E,"The Image's dimensions are either too small or too large",7,N],[13,R[2086],E,R[2087],7,N],[13,"UnsupportedColor",E,"The Decoder does not support this color type",7,N],[13,"NotEnoughData",E,"Not enough data was provided to the Decoder to decode the…",7,N],[13,"IoError",E,R[2088],7,N],[13,"ImageEnd",E,"The end of the image has been reached",7,N],[13,"InsufficientMemory",E,"There is not enough memory to complete the given operation",7,N],[4,R[2050],E,R[1867],N,N],[13,"Nearest",E,R[1868],8,N],[13,"Triangle",E,R[1869],8,N],[13,"CatmullRom",E,R[1870],8,N],[13,"Gaussian",E,R[1871],8,N],[13,"Lanczos3",E,R[1872],8,N],[4,R[2051],E,"An enumeration of supported image formats. Not all formats…",N,N],[13,"PNG",E,R[1858],9,N],[13,"JPEG",E,"An Image in JPEG Format",9,N],[13,"GIF",E,R[1859],9,N],[13,"WEBP",E,"An Image in WEBP Format",9,N],[13,"PNM",E,"An Image in general PNM Format",9,N],[13,"TIFF",E,"An Image in TIFF Format",9,N],[13,"TGA",E,"An Image in TGA Format",9,N],[13,"BMP",E,R[1861],9,N],[13,"ICO",E,R[1860],9,N],[13,"HDR",E,"An Image in Radiance HDR Format",9,N],[4,R[2052],E,"An enumeration of supported image formats for encoding.",N,N],[13,"PNG",E,R[1858],10,N],[13,"JPEG",E,"An Image in JPEG Format with specified quality",10,N],[13,"PNM",E,"An Image in one of the PNM Formats",10,N],[13,"GIF",E,R[1859],10,N],[13,"ICO",E,R[1860],10,N],[13,"BMP",E,R[1861],10,N],[13,R[2077],E,"A value for signalling an error: An unsupported format was…",10,N],[4,R[2053],E,"A Dynamic Image",N,N],[13,"ImageLuma8",E,"Each pixel in this image is 8-bit Luma",11,N],[13,"ImageLumaA8",E,"Each pixel in this image is 8-bit Luma with alpha",11,N],[13,"ImageRgb8",E,"Each pixel in this image is 8-bit Rgb",11,N],[13,"ImageRgba8",E,"Each pixel in this image is 8-bit Rgb with alpha",11,N],[13,"ImageBgr8",E,"Each pixel in this image is 8-bit Bgr",11,N],[13,"ImageBgra8",E,"Each pixel in this image is 8-bit Bgr with alpha",11,N],[5,"guess_format",E,"Guess image format from memory block",N,[[],[[R[1862]],[R[1863],[R[1862]]]]]],[5,"load",E,"Create a new image from a Reader",N,[[[R[1862]],["bufread"],["seek"]],[[R[1864]],[R[1863],[R[1864]]]]]],[5,"load_from_memory",E,R[1865],N,[[],[[R[1864]],[R[1863],[R[1864]]]]]],[5,"load_from_memory_with_format",E,R[1865],N,[[[R[1862]]],[[R[1864]],[R[1863],[R[1864]]]]]],[5,"open",E,"Open the image located at the path specified. The image's…",N,[[["p"]],[[R[1864]],[R[1863],[R[1864]]]]]],[5,"save_buffer",E,"Saves the supplied buffer to a file at the path specified.",N,[[["u32"],["p"],[R[1164]]],[R[3]]]],[5,"save_buffer_with_format",E,"Saves the supplied buffer to a file at the path specified…",N,[[["u32"],["p"],[R[1862]],[R[1164]]],[R[3]]]],[5,"image_dimensions",E,"Read the dimensions of the image located at the specified…",N,[[["p"]],[R[1863]]]],[0,"math",E,"Mathematical helper functions and types.",N,N],[0,"nq",R[1866],"NEUQUANT Neural-Net quantization algorithm by Anthony…",N,N],[3,R[74],R[1972],"Neural network color quantizer",N,N],[11,"new",E,"Creates a new neural network and trains it with the…",12,[[["usize"],["i32"]],["self"]]],[11,"init",E,"Initializes the neural network and trains it with the…",12,[[["self"]]]],[11,"map_pixel",E,"Maps the pixel in-place to the best-matching color in the…",12,[[["self"]]]],[11,"index_of",E,"Finds the best-matching index in the color map for `pixel`",12,[[["self"]],["usize"]]],[0,"utils",R[1866],"Shared mathematical utility functions.",N,N],[5,"clamp","image::math::utils","Cut value to be inside given range",N,[[["n"]],["n"]]],[0,"imageops","image","Image Processing Functions",N,N],[4,R[2050],"image::imageops",R[1867],N,N],[13,"Nearest",E,R[1868],8,N],[13,"Triangle",E,R[1869],8,N],[13,"CatmullRom",E,R[1870],8,N],[13,"Gaussian",E,R[1871],8,N],[13,"Lanczos3",E,R[1872],8,N],[5,"flip_horizontal",E,"Flip an image horizontally",N,[[["i"]],[[R[1873],["vec"]],["vec"]]]],[5,"flip_vertical",E,"Flip an image vertically",N,[[["i"]],[[R[1873],["vec"]],["vec"]]]],[5,"rotate180",E,"Rotate an image 180 degrees clockwise.",N,[[["i"]],[[R[1873],["vec"]],["vec"]]]],[5,"rotate270",E,"Rotate an image 270 degrees clockwise.",N,[[["i"]],[[R[1873],["vec"]],["vec"]]]],[5,"rotate90",E,"Rotate an image 90 degrees clockwise.",N,[[["i"]],[[R[1873],["vec"]],["vec"]]]],[5,"blur",E,"Performs a Gaussian blur on the supplied image. `sigma` is…",N,[[["i"],["f32"]],[[R[1873],["vec"]],["vec"]]]],[5,"filter3x3",E,"Perform a 3x3 box filter on the supplied image. `kernel`…",N,[[["i"]],[["vec"],[R[1873],["vec"]]]]],[5,"resize",E,"Resize the supplied image to the specified dimensions.…",N,[[["i"],["u32"],[R[1155]]],[[R[1873],["vec"]],["vec"]]]],[5,"thumbnail",E,"Resize the supplied image to the specific dimensions.",N,[[["i"],["u32"]],[["vec"],[R[1873],["vec"]]]]],[5,"unsharpen",E,"Performs an unsharpen mask on the supplied image. `sigma`…",N,[[["i"],["f32"],["i32"]],[["vec"],[R[1873],["vec"]]]]],[5,"crop",E,"Return a mutable view into an image",N,[[["u32"],["i"]],[[R[2046]],["i"]]]],[5,"overlay_bounds",E,"Calculate the region that can be copied from top to bottom.",N,[[["u32"]]]],[5,"overlay",E,"Overlay an image at a given coordinate (x, y)",N,[[["u32"],["j"],["i"]]]],[5,"replace",E,"Replace the contents of an image at a given coordinate (x,…",N,[[["u32"],["j"],["i"]]]],[0,"colorops",E,"Functions for altering and converting the color of pixelbufs",N,N],[3,"BiLevel",R[1973],"A bi-level color map",N,N],[5,"grayscale",E,"Convert the supplied image to grayscale",N,[[["i"]],[["luma"],["vec"],[R[1873],["luma","vec"]]]]],[5,"invert",E,"Invert each pixel within the supplied image. This function…",N,[[["i"]]]],[5,"contrast",E,"Adjust the contrast of the supplied image. `contrast` is…",N,[[["i"],["f32"]],[["vec"],[R[1873],["vec"]]]]],[5,"brighten",E,"Brighten the supplied image. `value` is the amount to…",N,[[["i"],["i32"]],[["vec"],[R[1873],["vec"]]]]],[5,"huerotate",E,R[1955],N,[[["i"],["i32"]],[["vec"],[R[1873],["vec"]]]]],[5,"dither",E,"Reduces the colors of the image using the supplied…",N,[[["map"],[R[1873]]]]],[5,"index_colors",E,"Reduces the colors using the supplied `color_map` and…",N,[[[R[1873]],["map"]],[["vec",["u8"]],[R[1873],["luma","vec"]],["luma",["u8"]]]]],[8,"ColorMap",E,"A color map",N,N],[16,"Color",E,"The color type on which the map operates on",13,N],[10,"index_of",E,"Returns the index of the closed match of `color` in the…",13,[[["self"]],["usize"]]],[10,"map_color",E,"Maps `color` to the closest color in the color map.",13,[[["self"]]]],[0,"flat","image","Image representations for ffi.",N,N],[3,R[2054],R[1974],"A flat buffer over a (multi channel) image.",N,N],[12,"samples",E,"Underlying linear container holding sample values.",14,N],[12,"layout",E,"A `repr(C)` description of the layout of buffer samples.",14,N],[12,"color_hint",E,"Supplementary color information.",14,N],[3,R[2055],E,"A ffi compatible description of a sample buffer.",N,N],[12,R[1986],E,"The number of channels in the color representation of the…",15,N],[12,"channel_stride",E,"Add this to an index to get to the sample in the next…",15,N],[12,"width",E,"The width of the represented image.",15,N],[12,"width_stride",E,R[1874],15,N],[12,"height",E,"The height of the represented image.",15,N],[12,"height_stride",E,R[1874],15,N],[3,"View",E,"A flat buffer that can be used as an image view.",N,N],[3,"ViewMut",E,"A mutable owning version of a flat buffer.",N,N],[4,"Error",E,"Denotes invalid flat sample buffers when trying to convert…",N,N],[13,"TooLarge",E,"The represented image was too large.",16,N],[13,"NormalFormRequired",E,"The represented image can not use this representation.",16,N],[13,"WrongColor",E,"The color format did not match the channel count.",16,N],[4,"NormalForm",E,"Different normal forms of buffers.",N,N],[13,"Unaliased",E,"No pixel aliases another.",17,N],[13,"PixelPacked",E,"At least pixels are packed.",17,N],[13,"ImagePacked",E,"All samples are packed.",17,N],[13,"RowMajorPacked",E,"The samples are in row-major form and all samples are…",17,N],[13,"ColumnMajorPacked",E,"The samples are in column-major form and all samples are…",17,N],[11,"row_major_packed",E,"Describe a row-major image packed in all directions.",15,[[["u32"],["u8"]],["self"]]],[11,"column_major_packed",E,"Describe a column-major image packed in all directions.",15,[[["u32"],["u8"]],["self"]]],[11,R[1875],E,R[1876],15,[[["self"]]]],[11,"extents",E,R[1877],15,[[["self"]]]],[11,"bounds",E,R[1878],15,[[["self"]]]],[11,R[1893],E,R[1881],15,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,"fits",E,R[1882],15,[[["self"],["usize"]],["bool"]]],[11,R[1883],E,R[1884],15,[[["self"]],["bool"]]],[11,R[617],E,R[1885],15,[[["self"],[R[2008]]],["bool"]]],[11,R[1999],E,R[1886],15,[[["self"],["u32"],["u8"]],["bool"]]],[11,"index",E,R[1887],15,[[["self"],["u32"],["u8"]],[[R[25],["usize"]],["usize"]]]],[11,R[1888],E,"Get the theoretical position of sample (channel, x, y).",15,[[["self"],["usize"]],[[R[25],["usize"]],["usize"]]]],[11,R[1889],E,R[1890],15,[[["self"],["u32"],["u8"]],["usize"]]],[11,R[1900],E,R[1891],15,[[["self"],["u32"],["u8"]]]],[11,R[1875],E,R[1876],14,[[["self"]]]],[11,"extents",E,R[1877],14,[[["self"]]]],[11,"bounds",E,R[1878],14,[[["self"]]]],[11,"as_ref",E,"Get a reference based version.",14,[[["self"]],[R[1879]]]],[11,"as_mut",E,"Get a mutable reference based version.",14,[[["self"]],[R[1879]]]],[11,"to_vec",E,"Copy the data into an owned vector.",14,[[["self"]],[[R[1879],["vec"]],["vec"]]]],[11,R[1899],E,"Get a reference to a single sample.",14,[[["self"],["u32"],["u8"]],[[R[25]],[T]]]],[11,R[1892],E,"Get a mutable reference to a single sample.",14,[[["self"],["u32"],["u8"]],[[R[25]],[T]]]],[11,"as_view",E,"View this buffer as an image over some type of pixel.",14,[[["self"]],[[R[3],["view","error"]],["view"],["error"]]]],[11,"as_view_with_mut_samples",E,"View this buffer but keep mutability at a sample level.",14,[[["self"]],[["view"],[R[3],["view","error"]],["error"]]]],[11,"as_view_mut",E,"Interpret this buffer as a mutable image.",14,[[["self"]],[["viewmut"],["error"],[R[3],["viewmut","error"]]]]],[11,"as_slice",E,R[1880],14,[[["self"]]]],[11,R[1617],E,R[1880],14,[[["self"]]]],[11,R[1894],E,R[1895],14,[[["self"]],[R[25]]]],[11,R[1896],E,"Mutable portion of the buffer that holds sample values.",14,[[["self"]],[R[25]]]],[11,"try_into_buffer",E,"Move the data into an image buffer.",14,[[],[[R[3],[R[1873]]],[R[1873]]]]],[11,R[1893],E,R[1881],14,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,"fits",E,R[1882],14,[[["self"],["usize"]],["bool"]]],[11,R[1883],E,R[1884],14,[[["self"]],["bool"]]],[11,R[617],E,R[1885],14,[[["self"],[R[2008]]],["bool"]]],[11,R[1999],E,R[1886],14,[[["self"],["u32"],["u8"]],["bool"]]],[11,"index",E,R[1887],14,[[["self"],["u32"],["u8"]],[[R[25],["usize"]],["usize"]]]],[11,R[1888],E,"Get the theoretical position of sample (x, y, channel).",14,[[["self"],["usize"]],[[R[25],["usize"]],["usize"]]]],[11,R[1889],E,R[1890],14,[[["self"],["u32"],["u8"]],["usize"]]],[11,R[1900],E,R[1891],14,[[["self"],["u32"],["u8"]]]],[11,R[7],E,R[1897],18,[[],[R[1879]]]],[11,"flat",E,"Get a reference on the inner sample descriptor.",18,[[["self"]],[R[1879]]]],[11,"samples",E,R[1898],18,[[["self"]],["buffer"]]],[11,R[1899],E,"Get a reference to a selected subpixel if it is in-bounds.",18,[[["self"],["u32"],["u8"]],[R[25]]]],[11,R[1892],E,"Get a mutable reference to a selected subpixel if it is…",18,[[["self"],["u32"],["u8"]],[R[25]]]],[11,R[1893],E,R[1881],18,[[["self"]],["usize"]]],[11,R[1894],E,R[1895],18,[[["self"]]]],[11,R[1896],E,"Return the mutable portion of the buffer that holds sample…",18,[[["self"]]]],[11,R[1900],E,R[1901],18,[[["self"],["u32"]]]],[11,"try_upgrade",E,"Try to convert this into an image with mutable pixels.",18,[[],[["viewmut"],[R[3],["viewmut"]]]]],[11,R[7],E,R[1897],19,[[],[R[1879]]]],[11,"flat",E,"Get a reference on the sample buffer descriptor.",19,[[["self"]],[R[1879]]]],[11,"samples",E,R[1898],19,[[["self"]],["buffer"]]],[11,R[1893],E,R[1881],19,[[["self"]],["usize"]]],[11,R[1899],E,"Get a reference to a selected subpixel.",19,[[["self"],["u32"],["u8"]],[R[25]]]],[11,R[1892],E,"Get a mutable reference to a selected sample.",19,[[["self"],["u32"],["u8"]],[R[25]]]],[11,R[1894],E,R[1895],19,[[["self"]]]],[11,R[1896],E,"Return the mutable buffer that holds sample values.",19,[[["self"]]]],[11,R[1900],E,R[1901],19,[[["self"],["u32"]]]],[0,"bmp","image","Decoding and Encoding of BMP Images",N,N],[3,"BMPDecoder",R[1987],"A bmp decoder",N,N],[3,"BMPEncoder",E,"The representation of a BMP encoder.",N,N],[11,"new",E,R[1926],20,[[["r"]],[[R[1863],["bmpdecoder"]],["bmpdecoder"]]]],[11,"new",E,R[1927],21,[[["w"]],["self"]]],[11,"encode",E,R[1928],21,[[["self"],["u32"],[R[1164]]],[R[3]]]],[0,"dxt","image","Decoding of DXT (S3TC) compression",N,N],[3,"DXTDecoder",R[1989],"DXT decoder",N,N],[3,"DXTReader",E,"DXT reader",N,N],[3,"DXTEncoder",E,"DXT encoder",N,N],[4,"DXTVariant",E,"What version of DXT compression are we using? Note that…",N,N],[13,"DXT1",E,"The DXT1 format. 48 bytes of RGB data in a 4x4 pixel…",22,N],[13,"DXT3",E,"The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel…",22,N],[13,"DXT5",E,"The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel…",22,N],[11,R[1164],E,"Returns the colortype that is stored in this DXT variant",22,[[],[R[1164]]]],[11,"new",E,"Create a new DXT decoder that decodes from the stream `r`.…",23,[[["u32"],[R[2009]],["r"]],[["dxtdecoder"],[R[1941]],[R[3],["dxtdecoder",R[1941]]]]]],[11,"new",E,R[1930],24,[[["w"]],["dxtencoder"]]],[11,"encode",E,"Encodes the image data `data` that has dimensions `width`…",24,[[["u32"],[R[2009]]],[R[1863]]]],[0,"gif","image","Decoding of GIF Images",N,N],[4,R[253],R[1979],R[1902],N,N],[13,"Any",E,R[1903],25,N],[13,"Keep",E,R[1904],25,N],[13,R[2081],E,R[1905],25,N],[13,"Previous",E,R[1906],25,N],[3,"Frame",E,R[1907],N,N],[12,"delay",E,R[1908],26,N],[12,"dispose",E,R[1909],26,N],[12,R[1910],E,R[1911],26,N],[12,R[1912],E,R[1913],26,N],[12,"top",E,R[1914],26,N],[12,"left",E,R[1915],26,N],[12,"width",E,R[1916],26,N],[12,"height",E,R[1917],26,N],[12,R[2079],E,R[1918],26,N],[12,"palette",E,R[1919],26,N],[12,"buffer",E,R[1920],26,N],[3,"Decoder",E,R[239],N,N],[3,"GifReader",E,R[1922],N,N],[3,"Encoder",E,R[1921],N,N],[11,"new",E,"Creates a new decoder that decodes the input steam `r`",27,[[["r"]],[["decoder"],[R[1863],["decoder"]]]]],[11,"new",E,"Creates a new GIF encoder.",28,[[["w"]],["encoder"]]],[11,"encode",E,"Encodes a frame.",28,[[["self"],["frame"]],[R[1863]]]],[11,"encode_frames",E,"Encodes Frames. Consider using `try_encode_frames` instead…",28,[[["self"],["f"]],[R[1863]]]],[11,"try_encode_frames",E,"Try to encode a collection of…",28,[[["self"],["f"]],[R[1863]]]],[0,"hdr","image","Decoding of Radiance HDR Images",N,N],[3,"HDRAdapter",R[1992],"Adapter to conform to `ImageDecoder` trait",N,N],[3,"HdrReader",E,R[1922],N,N],[3,"HDRDecoder",E,"An Radiance HDR decoder",N,N],[3,"RGBE8Pixel",E,"Refer to wikipedia",N,N],[12,"c",E,"Color components",29,N],[12,"e",E,"Exponent",29,N],[3,R[2074],E,"Scanline buffered pixel by pixel iterator",N,N],[3,R[2056],E,"Metadata for Radiance HDR image",N,N],[12,"width",E,"Width of decoded image. It could be either scanline…",30,N],[12,"height",E,"Height of decoded image. It depends on orientation too.",30,N],[12,"orientation",E,"Orientation matrix. For standard orientation it is…",30,N],[12,"exposure",E,"Divide color values by exposure to get to get physical…",30,N],[12,"color_correction",E,"Divide color values by corresponding tuple member (r, g,…",30,N],[12,"pixel_aspect_ratio",E,"Pixel height divided by pixel width",30,N],[12,"custom_attributes",E,"All lines contained in image header are put here. Ordering…",30,N],[3,"HDREncoder",E,"Radiance HDR encoder",N,N],[5,"rgbe8",E,"Creates `RGBE8Pixel` from components",N,[[["u8"]],[R[1925]]]],[5,"read_raw_file",E,"Helper function for reading raw 3-channel f32 images",N,[[["path"],["asref",["path"]]],[[R[3],["vec"]],["vec",["rgb"]]]]],[5,"to_rgbe8",E,"Converts `Rgb<f32>` into `RGBE8Pixel`",N,[[["f32"],["rgb",["f32"]]],[R[1925]]]],[11,"new",E,"Creates adapter",31,[[["r"]],[[R[1863],[R[1923]]],[R[1923]]]]],[11,"new_nonstrict",E,"Allows reading old Radiance HDR images",31,[[["r"]],[[R[1863],[R[1923]]],[R[1923]]]]],[11,"to_hdr",E,"Converts `RGBE8Pixel` into `Rgb<f32>` linearly",29,[[],[["f32"],["rgb",["f32"]]]]],[11,"to_ldr",E,"Converts `RGBE8Pixel` into `Rgb<T>` with scale=1 and…",29,[[],[["rgb"],["primitive"],["zero"]]]],[11,"to_ldr_scale_gamma",E,"Converts RGBE8Pixel into Rgb using provided scale and gamma",29,[[["f32"]],[["rgb"],["primitive"],["zero"]]]],[11,"new",E,"Reads Radiance HDR image header from stream `r` if the…",32,[[["r"]],[[R[1924]],[R[1863],[R[1924]]]]]],[11,"with_strictness",E,"Reads Radiance HDR image header from stream `reader`, if…",32,[[["bool"],["r"]],[[R[1924]],[R[1863],[R[1924]]]]]],[11,"metadata",E,"Returns file metadata. Refer to `HDRMetadata` for details.",32,[[["self"]],[R[2011]]]],[11,"read_image_native",E,"Consumes decoder and returns a vector of RGBE8 pixels",32,[[],[[R[1863],["vec"]],["vec",[R[1925]]]]]],[11,"read_image_transform",E,"Consumes decoder and returns a vector of transformed pixels",32,[[["fn"],["send"],["sync"]],[R[1863]]]],[11,"read_image_ldr",E,"Consumes decoder and returns a vector of Rgb pixels. scale…",32,[[],[[R[1863],["vec"]],["vec",["rgb"]]]]],[11,"read_image_hdr",E,"Consumes decoder and returns a vector of Rgb pixels.",32,[[],[[R[1863],["vec"]],["vec",["rgb"]]]]],[11,"new",E,"Creates encoder",33,[[["w"]],["hdrencoder"]]],[11,"encode",E,"Encodes the image `data` that has dimensions `width` and…",33,[[["usize"]],[R[3]]]],[17,"SIGNATURE",E,"Radiance HDR file signature",N,N],[0,"ico","image","Decoding and Encoding of ICO files",N,N],[3,"ICODecoder",R[1993],"An ico decoder",N,N],[3,"ICOEncoder",E,"ICO encoder",N,N],[11,"new",E,R[1926],34,[[["r"]],[["icodecoder"],[R[1863],["icodecoder"]]]]],[11,"new",E,R[1927],35,[[["w"]],["icoencoder"]]],[11,"encode",E,R[1928],35,[[[R[1164]],["u32"]],[R[3]]]],[0,"jpeg","image","Decoding and Encoding of JPEG Images",N,N],[3,R[2057],R[1975],R[2076],N,N],[3,R[2058],E,"The representation of a JPEG encoder",N,N],[11,"new",E,R[1926],36,[[["r"]],[[R[1929]],[R[1863],[R[1929]]]]]],[11,"new",E,R[1930],37,[[["w"]],[R[1931]]]],[11,"new_with_quality",E,"Create a new encoder that writes its output to `w`, and…",37,[[["w"],["u8"]],[R[1931]]]],[11,"encode",E,R[1928],37,[[["self"],["u32"],[R[1164]]],[R[3]]]],[0,"png","image","Decoding and Encoding of PNG Images",N,N],[3,"PNGReader",R[1994],"PNG Reader",N,N],[3,"PNGDecoder",E,"PNG decoder",N,N],[3,"PNGEncoder",E,"PNG encoder",N,N],[11,"new",E,"Creates a new decoder that decodes from the stream `r`",38,[[["r"]],[[R[1863],["pngdecoder"]],["pngdecoder"]]]],[11,"new",E,R[1930],39,[[["w"]],["pngencoder"]]],[11,"encode",E,R[1928],39,[[[R[1164]],["u32"]],[R[3]]]],[0,"pnm","image","Decoding of netpbm image formats (pbm, pgm, ppm and pam).",N,N],[3,"PNMDecoder",R[1995],"PNM decoder",N,N],[3,"PNMEncoder",E,"Encodes images to any of the `pnm` image formats.",N,N],[3,R[2059],E,"Header produced by a `pam` file (\"Portable Arbitrary Map\")",N,N],[12,"height",E,R[1932],40,N],[12,"width",E,R[1933],40,N],[12,"depth",E,"Number of color channels",40,N],[12,"maxval",E,R[1935],40,N],[12,"tupltype",E,"Color interpretation of image pixels",40,N],[3,R[2060],E,"Header produced by a `pbm` file (\"Portable Bit Map\")",N,N],[12,"encoding",E,R[1934],41,N],[12,"height",E,R[1932],41,N],[12,"width",E,R[1933],41,N],[3,R[2061],E,"Header produced by a `pgm` file (\"Portable Gray Map\")",N,N],[12,"encoding",E,R[1934],42,N],[12,"height",E,R[1932],42,N],[12,"width",E,R[1933],42,N],[12,"maxwhite",E,R[1935],42,N],[3,R[2062],E,"Header produced by a `ppm` file (\"Portable Pixel Map\")",N,N],[12,"encoding",E,R[1934],43,N],[12,"height",E,R[1932],43,N],[12,"width",E,R[1933],43,N],[12,"maxval",E,R[1935],43,N],[3,"PNMHeader",E,"Stores the complete header data of a file.",N,N],[4,R[2063],E,"Standardized tuple type specifiers in the header of a `pam`.",N,N],[13,"BlackAndWhite",E,"Pixels are either black (0) or white (1)",44,N],[13,"BlackAndWhiteAlpha",E,"Pixels are either black (0) or white (1) and a second…",44,N],[13,"Grayscale",E,"Pixels represent the amount of white",44,N],[13,R[2080],E,"Grayscale with an additional alpha channel",44,N],[13,"RGB",E,"Three channels: Red, Green, Blue",44,N],[13,"RGBAlpha",E,"Four channels: Red, Green, Blue, Alpha",44,N],[13,"Custom",E,"An image format which is not standardized",44,N],[4,"PNMSubtype",E,"Denotes the category of the magic number",N,N],[13,"Bitmap",E,"Magic numbers P1 and P4",45,N],[13,"Graymap",E,"Magic numbers P2 and P5",45,N],[13,"Pixmap",E,"Magic numbers P3 and P6",45,N],[13,"ArbitraryMap",E,"Magic number P7",45,N],[4,R[2064],E,"The kind of encoding used to store sample values",N,N],[13,"Binary",E,"Samples are unsigned binary integers in big endian",46,N],[13,"Ascii",E,"Samples are encoded as decimal ascii strings separated by…",46,N],[11,"new",E,"Create a new decoder that decodes from the stream `read`",47,[[["r"]],[[R[1863],["pnmdecoder"]],["pnmdecoder"]]]],[11,R[7],E,"Extract the reader and header after an image has been read.",47,[[]]],[11,"subtype",E,"Get the pnm subtype, depending on the magic constant…",47,[[["self"]],[R[1936]]]],[11,"new",E,"Create new PNMEncoder from the `writer`.",48,[[["w"]],["self"]]],[11,"with_subtype",E,"Encode a specific pnm subtype image.",48,[[[R[1936]]],["self"]]],[11,"with_header",E,"Enforce the use of a chosen header.",48,[[["pnmheader"]],["self"]]],[11,"with_dynamic_header",E,"Create the header dynamically for each image.",48,[[],["self"]]],[11,"encode",E,"Encode an image whose samples are represented as `u8`.",48,[[["self"],["u32"],[R[1164]],["s"]],[R[3]]]],[11,"magic_constant",E,"Get the two magic constant bytes corresponding to this…",45,[[]]],[11,"sample_encoding",E,"Whether samples are stored as binary or as decimal ascii",45,[[],[R[2010]]]],[11,"subtype",E,"Retrieve the format subtype from which the header was…",49,[[["self"]],[R[1936]]]],[11,"width",E,"The width of the image this header is for.",49,[[["self"]],["u32"]]],[11,"height",E,"The height of the image this header is for.",49,[[["self"]],["u32"]]],[11,"maximal_sample",E,"The biggest value a sample can have. In other words, the…",49,[[["self"]],["u32"]]],[11,"as_bitmap",E,"Retrieve the underlying bitmap header if any",49,[[["self"]],[[R[25],[R[1937]]],[R[1937]]]]],[11,"as_graymap",E,"Retrieve the underlying graymap header if any",49,[[["self"]],[[R[1938]],[R[25],[R[1938]]]]]],[11,"as_pixmap",E,"Retrieve the underlying pixmap header if any",49,[[["self"]],[[R[25],[R[1939]]],[R[1939]]]]],[11,"as_arbitrary",E,"Retrieve the underlying arbitrary header if any",49,[[["self"]],[[R[1940]],[R[25],[R[1940]]]]]],[11,"write",E,"Write the header back into a binary stream",49,[[["self"],["write"]],[R[3]]]],[0,"tga","image","Decoding of TGA Images",N,N],[3,"TGADecoder",R[1996],"The representation of a TGA decoder",N,N],[11,"new",E,R[1926],50,[[["r"]],[["tgadecoder"],[R[1863],["tgadecoder"]]]]],[0,"tiff","image",R[2083],N,N],[3,R[2065],R[1976],"Decoder for TIFF images.",N,N],[3,"TiffReader",E,R[1922],N,N],[3,R[1507],E,"Encoder for tiff images",N,N],[11,"new",E,"Create a new TIFFDecoder.",51,[[["r"]],[[R[3],[R[1942],R[1941]]],[R[1942]],[R[1941]]]]],[11,"new",E,R[1930],52,[[["w"]],[R[1491]]]],[11,"encode",E,R[1928],52,[[[R[1164]],["u32"]],[R[1863]]]],[0,"webp","image","Decoding of Webp Images",N,N],[3,R[2066],R[1977],"Webp Image format decoder. Currently only supportes the…",N,N],[11,"new",E,"Create a new WebpDecoder from the Reader `r`. This…",53,[[["r"]],[[R[1863],[R[1943]]],[R[1943]]]]],[0,"vp8",E,"An implementation of the VP8 Video Codec",N,N],[3,"Frame",R[1978],"A Representation of the last decoded video frame",N,N],[12,"width",E,"The width of the luma plane",54,N],[12,"height",E,"The height of the luma plane",54,N],[12,"ybuf",E,"The luma plane of the frame",54,N],[12,"keyframe",E,"Indicates whether this frame is a keyframe",54,N],[12,"for_display",E,"Indicates whether this frame is intended for display",54,N],[12,"pixel_type",E,"The pixel type of the frame as defined by Section 9.2 of…",54,N],[3,"VP8Decoder",E,"VP8 Decoder",N,N],[11,"new",E,"Create a new decoder. The reader must present a raw vp8…",55,[[["r"]],["vp8decoder"]]],[11,"decode_frame",E,"Decodes the current frame and returns a reference to it",55,[[["self"]],[["frame"],[R[1863],["frame"]]]]],[11,"new","image","Creates a new `Frames` from an implementation specific…",56,[[["box",["iterator"]],["iterator"]],["self"]]],[11,"collect_frames",E,"Steps through the iterator from the current frame until…",56,[[],[["vec",["frame"]],[R[1863],["vec"]]]]],[11,"new",E,R[1944],57,[[[R[1946]]],["frame"]]],[11,"from_parts",E,R[1944],57,[[[R[1946]],["u32"],["u16"],["ratio",["u16"]]],["frame"]]],[11,"delay",E,"Delay of this frame",57,[[["self"]],[["u16"],["ratio",["u16"]]]]],[11,"buffer",E,R[1945],57,[[["self"]],[R[1946]]]],[11,R[2075],E,R[1945],57,[[],[R[1946]]]],[11,"left",E,"Returns the x offset",57,[[["self"]],["u32"]]],[11,"top",E,"Returns the y offset",57,[[["self"]],["u32"]]],[11,"from_raw",E,"Contructs a buffer from a generic container (for example a…",58,[[["u32"],["container"]],[[R[25],[R[1873]]],[R[1873]]]]],[11,"into_raw",E,"Returns the underlying raw buffer",58,[[],["container"]]],[11,R[1967],E,R[1963],58,[[["self"]]]],[11,"width",E,R[1964],58,[[["self"]],["u32"]]],[11,"height",E,R[1965],58,[[["self"]],["u32"]]],[11,"pixels",E,"Returns an iterator over the pixels of this image.",58,[[["self"]],["pixels"]]],[11,"rows",E,"Returns an iterator over the rows of this image.",58,[[["self"]],["rows"]]],[11,"enumerate_pixels",E,R[1947],58,[[["self"]],["enumeratepixels"]]],[11,"enumerate_rows",E,R[1948],58,[[["self"]],["enumeraterows"]]],[11,R[2000],E,"Gets a reference to the pixel at location `(x, y)`",58,[[["self"],["u32"]],["p"]]],[11,"sample_layout",E,"Get the format of the buffer when viewed as a matrix of…",58,[[["self"]],[R[2007]]]],[11,"into_flat_samples",E,"Return the raw sample buffer with its stride an dimension…",58,[[],[R[1879]]]],[11,R[1952],E,R[1953],58,[[["self"]],[R[1879]]]],[11,"pixels_mut",E,"Returns an iterator over the mutable pixels of this image.",58,[[["self"]],["pixelsmut"]]],[11,"rows_mut",E,"Returns an iterator over the mutable rows of this image.",58,[[["self"]],["rowsmut"]]],[11,"enumerate_pixels_mut",E,R[1947],58,[[["self"]],["enumeratepixelsmut"]]],[11,"enumerate_rows_mut",E,R[1948],58,[[["self"]],["enumeraterowsmut"]]],[11,R[1960],E,R[1961],58,[[["self"],["u32"]],["p"]]],[11,R[2003],E,"Puts a pixel at location `(x, y)`",58,[[["self"],["u32"],["p"]]]],[11,"save",E,R[1957],58,[[["self"],["q"]],[R[3]]]],[11,R[1958],E,R[1959],58,[[["self"],["q"],[R[1862]]],[R[3]]]],[11,"new",E,"Creates a new image buffer based on a `Vec<P::Subpixel>`.",58,[[["u32"]],[["vec"],[R[1873],["vec"]]]]],[11,"from_pixel",E,"Constructs a new ImageBuffer by copying a pixel",58,[[["u32"],["p"]],[["vec"],[R[1873],["vec"]]]]],[11,"from_fn",E,"Constructs a new ImageBuffer by repeated application of…",58,[[["u32"],["f"]],[["vec"],[R[1873],["vec"]]]]],[11,"from_vec",E,"Creates an image buffer out of an existing buffer. Returns…",58,[[["vec"],["u32"]],[[R[25],[R[1873]]],[R[1873],["vec"]]]]],[11,"into_vec",E,"Consumes the image buffer and returns the underlying data…",58,[[],["vec"]]],[11,"new_luma8",E,"Creates a dynamic image backed by a buffer of grey pixels.",11,[[["u32"]],[R[1864]]]],[11,"new_luma_a8",E,"Creates a dynamic image backed by a buffer of grey pixels…",11,[[["u32"]],[R[1864]]]],[11,"new_rgb8",E,"Creates a dynamic image backed by a buffer of RGB pixels.",11,[[["u32"]],[R[1864]]]],[11,"new_rgba8",E,"Creates a dynamic image backed by a buffer of RGBA pixels.",11,[[["u32"]],[R[1864]]]],[11,"new_bgra8",E,"Creates a dynamic image backed by a buffer of BGRA pixels.",11,[[["u32"]],[R[1864]]]],[11,"new_bgr8",E,"Creates a dynamic image backed by a buffer of BGR pixels.",11,[[["u32"]],[R[1864]]]],[11,"to_rgb",E,"Returns a copy of this image as an RGB image.",11,[[["self"]],["rgbimage"]]],[11,"to_rgba",E,"Returns a copy of this image as an RGBA image.",11,[[["self"]],[R[1946]]]],[11,"to_bgr",E,"Returns a copy of this image as an BGR image.",11,[[["self"]],[["vec",["u8"]],["bgr",["u8"]],[R[1873],["bgr","vec"]]]]],[11,"to_bgra",E,"Returns a copy of this image as an BGRA image.",11,[[["self"]],[["vec",["u8"]],[R[1873],["bgra","vec"]],["bgra",["u8"]]]]],[11,"to_luma",E,"Returns a copy of this image as a Luma image.",11,[[["self"]],[R[1950]]]],[11,R[1968],E,"Returns a copy of this image as a LumaA image.",11,[[["self"]],[R[1951]]]],[11,"crop",E,"Return a cut out of this image delimited by the bounding…",11,[[["self"],["u32"]],[R[1864]]]],[11,"as_rgb8",E,"Return a reference to an 8bit RGB image",11,[[["self"]],[["rgbimage"],[R[25],["rgbimage"]]]]],[11,"as_mut_rgb8",E,"Return a mutable reference to an 8bit RGB image",11,[[["self"]],[["rgbimage"],[R[25],["rgbimage"]]]]],[11,"as_bgr8",E,"Return a reference to an 8bit BGR image",11,[[["self"]],[[R[25],[R[1873]]],[R[1873]]]]],[11,"as_mut_bgr8",E,"Return a mutable reference to an 8bit BGR image",11,[[["self"]],[[R[25],[R[1873]]],[R[1873]]]]],[11,"as_rgba8",E,"Return a reference to an 8bit RGBA image",11,[[["self"]],[[R[25],[R[1946]]],[R[1946]]]]],[11,"as_mut_rgba8",E,R[1949],11,[[["self"]],[[R[25],[R[1946]]],[R[1946]]]]],[11,"as_bgra8",E,"Return a reference to an 8bit BGRA image",11,[[["self"]],[[R[1873]],[R[25],[R[1873]]]]]],[11,"as_mut_bgra8",E,R[1949],11,[[["self"]],[[R[1873]],[R[25],[R[1873]]]]]],[11,"as_luma8",E,"Return a reference to an 8bit Grayscale image",11,[[["self"]],[[R[1950]],[R[25],[R[1950]]]]]],[11,"as_mut_luma8",E,"Return a mutable reference to an 8bit Grayscale image",11,[[["self"]],[[R[1950]],[R[25],[R[1950]]]]]],[11,"as_luma_alpha8",E,"Return a reference to an 8bit Grayscale image with an…",11,[[["self"]],[[R[25],[R[1951]]],[R[1951]]]]],[11,"as_mut_luma_alpha8",E,"Return a mutable reference to an 8bit Grayscale image with…",11,[[["self"]],[[R[1951]],[R[25],[R[1951]]]]]],[11,"raw_pixels",E,"Return this image's pixels as a byte vector.",11,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1952],E,R[1953],11,[[["self"]],[R[1879]]]],[11,"color",E,"Return this image's color type.",11,[[["self"]],[R[1164]]]],[11,"grayscale",E,"Return a grayscale version of this image.",11,[[["self"]],[R[1864]]]],[11,"invert",E,"Invert the colors of this image. This method operates…",11,[[["self"]]]],[11,"resize",E,R[1954],11,[[["self"],["u32"],[R[1155]]],[R[1864]]]],[11,"resize_exact",E,R[1954],11,[[["self"],["u32"],[R[1155]]],[R[1864]]]],[11,"thumbnail",E,"Scale this image down to fit within a specific size.…",11,[[["self"],["u32"]],[R[1864]]]],[11,"thumbnail_exact",E,"Scale this image down to a specific size. Returns a new…",11,[[["self"],["u32"]],[R[1864]]]],[11,"resize_to_fill",E,R[1954],11,[[["self"],["u32"],[R[1155]]],[R[1864]]]],[11,"blur",E,"Performs a Gaussian blur on this image. `sigma` is a…",11,[[["self"],["f32"]],[R[1864]]]],[11,"unsharpen",E,"Performs an unsharpen mask on this image. `sigma` is the…",11,[[["self"],["f32"],["i32"]],[R[1864]]]],[11,"filter3x3",E,"Filters this image with the specified 3x3 kernel.",11,[[["self"]],[R[1864]]]],[11,"adjust_contrast",E,"Adjust the contrast of this image. `contrast` is the…",11,[[["self"],["f32"]],[R[1864]]]],[11,"brighten",E,"Brighten the pixels of this image. `value` is the amount…",11,[[["self"],["i32"]],[R[1864]]]],[11,"huerotate",E,R[1955],11,[[["self"],["i32"]],[R[1864]]]],[11,"flipv",E,"Flip this image vertically",11,[[["self"]],[R[1864]]]],[11,"fliph",E,"Flip this image horizontally",11,[[["self"]],[R[1864]]]],[11,"rotate90",E,"Rotate this image 90 degrees clockwise.",11,[[["self"]],[R[1864]]]],[11,"rotate180",E,"Rotate this image 180 degrees clockwise.",11,[[["self"]],[R[1864]]]],[11,"rotate270",E,"Rotate this image 270 degrees clockwise.",11,[[["self"]],[R[1864]]]],[11,"write_to",E,"Encode this image and write it to `w`",11,[[["self"],["into",[R[1956]]],["w"],[R[1956]]],[R[1863]]]],[11,"save",E,R[1957],11,[[["self"],["q"]],[R[3]]]],[11,R[1958],E,R[1959],11,[[["self"],["q"],[R[1862]]],[R[3]]]],[11,"new",E,"Construct a new subimage",59,[[["i"],["u32"]],[R[2046]]]],[11,"change_bounds",E,"Change the coordinates of this subimage.",59,[[["self"],["u32"]]]],[11,"to_image",E,"Convert this subimage to an ImageBuffer",59,[[["self"]],[["vec"],[R[1873],["vec"]]]]],[6,"ImageResult",E,R[2095],N,N],[6,"GrayAlphaImage",E,"Sendable grayscale + alpha channel image buffer",N,N],[6,"GrayImage",E,"Sendable grayscale image buffer",N,N],[6,"RgbImage",E,"Sendable Rgb image buffer",N,N],[6,"RgbaImage",E,"Sendable Rgb + alpha channel image buffer",N,N],[8,R[2068],E,"AnimationDecoder trait",N,N],[10,R[1998],E,"Consume the decoder producing a series of frames.",60,[[],["frames"]]],[8,R[2069],E,"A trait for manipulating images.",N,N],[16,"InnerImage",E,R[1962],61,N],[10,R[1960],E,R[1961],61,[[["self"],["u32"]]]],[10,R[2003],E,"Put a pixel at location (x, y)",61,[[["self"],["u32"]]]],[11,R[2004],E,R[2047],61,[[["self"],["u32"]]]],[10,R[2002],E,R[2005],61,[[["self"],["u32"]]]],[11,"copy_from",E,R[2048],61,[[["self"],["o"],["u32"]],["bool"]]],[10,R[2006],E,"Returns a mutable reference to the underlying image.",61,[[["self"]]]],[11,"sub_image",E,R[2049],61,[[["self"],["u32"]],[R[2046]]]],[8,R[2070],E,"Trait to inspect an image.",N,N],[16,"Pixel",E,"The type of pixel.",62,N],[16,"InnerImageView",E,R[1962],62,N],[10,R[1967],E,R[1963],62,[[["self"]]]],[11,"width",E,R[1964],62,[[["self"]],["u32"]]],[11,"height",E,R[1965],62,[[["self"]],["u32"]]],[10,"bounds",E,"The bounding rectangle of this image.",62,[[["self"]]]],[11,R[1999],E,R[2043],62,[[["self"],["u32"]],["bool"]]],[10,R[2000],E,R[1966],62,[[["self"],["u32"]]]],[11,R[2001],E,R[1966],62,[[["self"],["u32"]]]],[11,"pixels",E,R[2044],62,[[["self"]],["pixels"]]],[10,"inner",E,"Returns a reference to the underlying image.",62,[[["self"]]]],[11,"view",E,R[2045],62,[[["self"],["u32"]],[R[2046]]]],[8,R[2071],E,"The trait that all decoders implement",N,N],[16,"Reader",E,"The type of reader produced by `into_reader`.",63,N],[10,R[1967],E,"Returns a tuple containing the width and height of the image",63,[[["self"]]]],[10,R[1164],E,"Returns the color type of the image e.g. RGB(8) (8bit RGB)",63,[[["self"]],[R[1164]]]],[10,R[1988],E,"Returns a reader that can be used to obtain the bytes of…",63,[[],[R[1863]]]],[11,"row_bytes",E,R[2035],63,[[["self"]],["u64"]]],[11,R[2036],E,R[2037],63,[[["self"]],["u64"]]],[11,R[1990],E,R[2038],63,[[["self"]],["u64"]]],[11,R[1991],E,R[2039],63,[[],[["vec",["u8"]],[R[1863],["vec"]]]]],[11,R[2040],E,R[2041],63,[[["fn"]],[["vec",["u8"]],[R[1863],["vec"]]]]],[8,R[2072],E,"ImageDecoderExt trait",N,N],[11,"read_rect",E,R[2042],64,[[["self"],["u64"]],[R[1863]]]],[10,R[1997],E,"Read a rectangular section of the image, periodically…",64,[[["self"],["fn"],["u64"]],[R[1863]]]],[8,R[2073],E,"Provides color conversions for whole image buffers.",N,N],[10,"convert",E,"Converts `self` to a buffer of type T",65,[[["self"]],[T]]],[8,"Pixel",E,"A generalized pixel.",N,N],[16,"Subpixel",E,"The underlying subpixel type.",66,N],[18,R[2023],E,R[2024],66,N],[11,R[2025],E,R[2026],66,[[],["u8"]]],[10,R[1986],E,"Returns the components as a slice.",66,[[["self"]]]],[10,R[1980],E,"Returns the components as a mutable slice",66,[[["self"]]]],[18,R[2027],E,R[2028],66,N],[11,R[2029],E,R[2030],66,[[],["str"]]],[18,"COLOR_TYPE",E,R[2031],66,N],[11,R[2078],E,R[2032],66,[[],[R[1164]]]],[10,R[1985],E,"Returns the channels of this pixel as a 4 tuple. If the…",66,[[["self"]]]],[10,R[1981],E,"Construct a pixel from the 4 channels a, b, c and d. If…",66,[[],["self"]]],[10,R[1524],E,"Returns a view into a slice.",66,[[],["self"]]],[10,R[1982],E,"Returns mutable view into a mutable slice.",66,[[],["self"]]],[10,"to_rgb",E,"Convert this pixel to RGB",66,[[["self"]],["rgb"]]],[10,"to_rgba",E,"Convert this pixel to RGB with an alpha channel",66,[[["self"]],["rgba"]]],[10,"to_luma",E,"Convert this pixel to luma",66,[[["self"]],["luma"]]],[10,R[1968],E,"Convert this pixel to luma with an alpha channel",66,[[["self"]],["lumaa"]]],[10,"to_bgr",E,"Convert this pixel to BGR",66,[[["self"]],["bgr"]]],[10,"to_bgra",E,"Convert this pixel to BGR with an alpha channel",66,[[["self"]],["bgra"]]],[10,"map",E,R[1969],66,[[["self"],["f"]],["self"]]],[10,"apply",E,R[1969],66,[[["self"],["f"]]]],[10,R[1983],E,R[1970],66,[[["self"],["f"],["g"]],["self"]]],[10,R[1984],E,R[1970],66,[[["self"],["f"],["g"]]]],[11,R[2033],E,R[1970],66,[[["self"],["f"]],["self"]]],[11,R[2034],E,R[1970],66,[[["self"],["f"]]]],[10,"map2",E,R[1971],66,[[["self"],["f"]],["self"]]],[10,"apply2",E,R[1971],66,[[["self"],["self"],["f"]]]],[10,"invert",E,"Invert this pixel",66,[[["self"]]]],[10,"blend",E,"Blend the color of a given pixel into ourself, taking into…",66,[[["self"],["self"]]]],[8,"Primitive",E,"Primitive trait from old stdlib",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"],[T]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"],[T]]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[23],E,E,67,[[],["i"]]],[11,R[8],E,E,67,[[[U]],[R[3]]]],[11,R[9],E,E,67,[[],[R[3]]]],[11,R[28],E,E,67,[[["self"]],[T]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[11],E,E,67,[[["self"]],[R[29]]]],[11,R[2082],E,E,67,[[],[R[1786]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[8],E,E,59,[[[U]],[R[3]]]],[11,R[9],E,E,59,[[],[R[3]]]],[11,R[28],E,E,59,[[["self"]],[T]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[29]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[41],E,E,58,[[["self"]],[T]]],[11,R[42],E,E,58,[[["self"],[T]]]],[11,R[8],E,E,58,[[[U]],[R[3]]]],[11,R[9],E,E,58,[[],[R[3]]]],[11,R[28],E,E,58,[[["self"]],[T]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[29]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[41],E,E,57,[[["self"]],[T]]],[11,R[42],E,E,57,[[["self"],[T]]]],[11,R[8],E,E,57,[[[U]],[R[3]]]],[11,R[9],E,E,57,[[],[R[3]]]],[11,R[28],E,E,57,[[["self"]],[T]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[29]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[23],E,E,56,[[],["i"]]],[11,R[8],E,E,56,[[[U]],[R[3]]]],[11,R[9],E,E,56,[[],[R[3]]]],[11,R[28],E,E,56,[[["self"]],[T]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[29]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[42],E,E,6,[[["self"],[T]]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[98],E,E,7,[[["self"]],["string"]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"],[T]]]],[11,R[8],E,E,8,[[[U]],[R[3]]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[42],E,E,9,[[["self"],[T]]]],[11,R[8],E,E,9,[[[U]],[R[3]]]],[11,R[9],E,E,9,[[],[R[3]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[42],E,E,10,[[["self"],[T]]]],[11,R[8],E,E,10,[[[U]],[R[3]]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[42],E,E,11,[[["self"],[T]]]],[11,R[8],E,E,11,[[[U]],[R[3]]]],[11,R[9],E,E,11,[[],[R[3]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"from",R[1972],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[8],E,E,12,[[[U]],[R[3]]]],[11,R[9],E,E,12,[[],[R[3]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"from",R[1973],E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[41],E,E,68,[[["self"]],[T]]],[11,R[42],E,E,68,[[["self"],[T]]]],[11,R[8],E,E,68,[[[U]],[R[3]]]],[11,R[9],E,E,68,[[],[R[3]]]],[11,R[28],E,E,68,[[["self"]],[T]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[11],E,E,68,[[["self"]],[R[29]]]],[11,"from",R[1974],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[42],E,E,14,[[["self"],[T]]]],[11,R[8],E,E,14,[[[U]],[R[3]]]],[11,R[9],E,E,14,[[],[R[3]]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[42],E,E,15,[[["self"],[T]]]],[11,R[8],E,E,15,[[[U]],[R[3]]]],[11,R[9],E,E,15,[[],[R[3]]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[42],E,E,18,[[["self"],[T]]]],[11,R[8],E,E,18,[[[U]],[R[3]]]],[11,R[9],E,E,18,[[],[R[3]]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[42],E,E,19,[[["self"],[T]]]],[11,R[8],E,E,19,[[[U]],[R[3]]]],[11,R[9],E,E,19,[[],[R[3]]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[42],E,E,16,[[["self"],[T]]]],[11,R[8],E,E,16,[[[U]],[R[3]]]],[11,R[9],E,E,16,[[],[R[3]]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[42],E,E,17,[[["self"],[T]]]],[11,R[8],E,E,17,[[[U]],[R[3]]]],[11,R[9],E,E,17,[[],[R[3]]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,"from",R[1987],E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[8],E,E,20,[[[U]],[R[3]]]],[11,R[9],E,E,20,[[],[R[3]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[8],E,E,21,[[[U]],[R[3]]]],[11,R[9],E,E,21,[[],[R[3]]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,"from",R[1989],E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[8],E,E,23,[[[U]],[R[3]]]],[11,R[9],E,E,23,[[],[R[3]]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[8],E,E,69,[[[U]],[R[3]]]],[11,R[9],E,E,69,[[],[R[3]]]],[11,R[28],E,E,69,[[["self"]],[T]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[11],E,E,69,[[["self"]],[R[29]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[8],E,E,24,[[[U]],[R[3]]]],[11,R[9],E,E,24,[[],[R[3]]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[42],E,E,22,[[["self"],[T]]]],[11,R[8],E,E,22,[[[U]],[R[3]]]],[11,R[9],E,E,22,[[],[R[3]]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"from",R[1979],E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[42],E,E,25,[[["self"],[T]]]],[11,R[8],E,E,25,[[[U]],[R[3]]]],[11,R[9],E,E,25,[[],[R[3]]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[41],E,E,26,[[["self"]],[T]]],[11,R[42],E,E,26,[[["self"],[T]]]],[11,R[8],E,E,26,[[[U]],[R[3]]]],[11,R[9],E,E,26,[[],[R[3]]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[8],E,E,27,[[[U]],[R[3]]]],[11,R[9],E,E,27,[[],[R[3]]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[8],E,E,70,[[[U]],[R[3]]]],[11,R[9],E,E,70,[[],[R[3]]]],[11,R[28],E,E,70,[[["self"]],[T]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[11],E,E,70,[[["self"]],[R[29]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[8],E,E,28,[[[U]],[R[3]]]],[11,R[9],E,E,28,[[],[R[3]]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,"from",R[1992],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[8],E,E,31,[[[U]],[R[3]]]],[11,R[9],E,E,31,[[],[R[3]]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[29]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[8],E,E,71,[[[U]],[R[3]]]],[11,R[9],E,E,71,[[],[R[3]]]],[11,R[28],E,E,71,[[["self"]],[T]]],[11,R[10],E,E,71,[[["self"]],[T]]],[11,R[11],E,E,71,[[["self"]],[R[29]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[23],E,E,32,[[],["i"]]],[11,R[8],E,E,32,[[[U]],[R[3]]]],[11,R[9],E,E,32,[[],[R[3]]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[29]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[41],E,E,29,[[["self"]],[T]]],[11,R[42],E,E,29,[[["self"],[T]]]],[11,R[8],E,E,29,[[[U]],[R[3]]]],[11,R[9],E,E,29,[[],[R[3]]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[29]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[23],E,E,72,[[],["i"]]],[11,R[8],E,E,72,[[[U]],[R[3]]]],[11,R[9],E,E,72,[[],[R[3]]]],[11,R[28],E,E,72,[[["self"]],[T]]],[11,R[10],E,E,72,[[["self"]],[T]]],[11,R[11],E,E,72,[[["self"]],[R[29]]]],[11,R[2082],E,E,72,[[],[R[1786]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[41],E,E,30,[[["self"]],[T]]],[11,R[42],E,E,30,[[["self"],[T]]]],[11,R[8],E,E,30,[[[U]],[R[3]]]],[11,R[9],E,E,30,[[],[R[3]]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[8],E,E,33,[[[U]],[R[3]]]],[11,R[9],E,E,33,[[],[R[3]]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[29]]]],[11,"from",R[1993],E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[8],E,E,34,[[[U]],[R[3]]]],[11,R[9],E,E,34,[[],[R[3]]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[29]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[8],E,E,35,[[[U]],[R[3]]]],[11,R[9],E,E,35,[[],[R[3]]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[29]]]],[11,"from",R[1975],E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[8],E,E,36,[[[U]],[R[3]]]],[11,R[9],E,E,36,[[],[R[3]]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[29]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[8],E,E,37,[[[U]],[R[3]]]],[11,R[9],E,E,37,[[],[R[3]]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[29]]]],[11,"from",R[1994],E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[8],E,E,73,[[[U]],[R[3]]]],[11,R[9],E,E,73,[[],[R[3]]]],[11,R[28],E,E,73,[[["self"]],[T]]],[11,R[10],E,E,73,[[["self"]],[T]]],[11,R[11],E,E,73,[[["self"]],[R[29]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[8],E,E,38,[[[U]],[R[3]]]],[11,R[9],E,E,38,[[],[R[3]]]],[11,R[28],E,E,38,[[["self"]],[T]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[29]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[8],E,E,39,[[[U]],[R[3]]]],[11,R[9],E,E,39,[[],[R[3]]]],[11,R[28],E,E,39,[[["self"]],[T]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[29]]]],[11,"from",R[1995],E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[8],E,E,47,[[[U]],[R[3]]]],[11,R[9],E,E,47,[[],[R[3]]]],[11,R[28],E,E,47,[[["self"]],[T]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[29]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[8],E,E,48,[[[U]],[R[3]]]],[11,R[9],E,E,48,[[],[R[3]]]],[11,R[28],E,E,48,[[["self"]],[T]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[29]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[41],E,E,40,[[["self"]],[T]]],[11,R[42],E,E,40,[[["self"],[T]]]],[11,R[8],E,E,40,[[[U]],[R[3]]]],[11,R[9],E,E,40,[[],[R[3]]]],[11,R[28],E,E,40,[[["self"]],[T]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[29]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[41],E,E,41,[[["self"]],[T]]],[11,R[42],E,E,41,[[["self"],[T]]]],[11,R[8],E,E,41,[[[U]],[R[3]]]],[11,R[9],E,E,41,[[],[R[3]]]],[11,R[28],E,E,41,[[["self"]],[T]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[29]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[41],E,E,42,[[["self"]],[T]]],[11,R[42],E,E,42,[[["self"],[T]]]],[11,R[8],E,E,42,[[[U]],[R[3]]]],[11,R[9],E,E,42,[[],[R[3]]]],[11,R[28],E,E,42,[[["self"]],[T]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[29]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[41],E,E,43,[[["self"]],[T]]],[11,R[42],E,E,43,[[["self"],[T]]]],[11,R[8],E,E,43,[[[U]],[R[3]]]],[11,R[9],E,E,43,[[],[R[3]]]],[11,R[28],E,E,43,[[["self"]],[T]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[29]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[8],E,E,49,[[[U]],[R[3]]]],[11,R[9],E,E,49,[[],[R[3]]]],[11,R[28],E,E,49,[[["self"]],[T]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[29]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[41],E,E,44,[[["self"]],[T]]],[11,R[42],E,E,44,[[["self"],[T]]]],[11,R[8],E,E,44,[[[U]],[R[3]]]],[11,R[9],E,E,44,[[],[R[3]]]],[11,R[28],E,E,44,[[["self"]],[T]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[29]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[41],E,E,45,[[["self"]],[T]]],[11,R[42],E,E,45,[[["self"],[T]]]],[11,R[8],E,E,45,[[[U]],[R[3]]]],[11,R[9],E,E,45,[[],[R[3]]]],[11,R[28],E,E,45,[[["self"]],[T]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[29]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[41],E,E,46,[[["self"]],[T]]],[11,R[42],E,E,46,[[["self"],[T]]]],[11,R[8],E,E,46,[[[U]],[R[3]]]],[11,R[9],E,E,46,[[],[R[3]]]],[11,R[28],E,E,46,[[["self"]],[T]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[29]]]],[11,"from",R[1996],E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[8],E,E,50,[[[U]],[R[3]]]],[11,R[9],E,E,50,[[],[R[3]]]],[11,R[28],E,E,50,[[["self"]],[T]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[29]]]],[11,"from",R[1976],E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[8],E,E,51,[[[U]],[R[3]]]],[11,R[9],E,E,51,[[],[R[3]]]],[11,R[28],E,E,51,[[["self"]],[T]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[29]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[8],E,E,74,[[[U]],[R[3]]]],[11,R[9],E,E,74,[[],[R[3]]]],[11,R[28],E,E,74,[[["self"]],[T]]],[11,R[10],E,E,74,[[["self"]],[T]]],[11,R[11],E,E,74,[[["self"]],[R[29]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[8],E,E,52,[[[U]],[R[3]]]],[11,R[9],E,E,52,[[],[R[3]]]],[11,R[28],E,E,52,[[["self"]],[T]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[29]]]],[11,"from",R[1977],E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[8],E,E,53,[[[U]],[R[3]]]],[11,R[9],E,E,53,[[],[R[3]]]],[11,R[28],E,E,53,[[["self"]],[T]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[29]]]],[11,"from",R[1978],E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[41],E,E,54,[[["self"]],[T]]],[11,R[42],E,E,54,[[["self"],[T]]]],[11,R[8],E,E,54,[[[U]],[R[3]]]],[11,R[9],E,E,54,[[],[R[3]]]],[11,R[28],E,E,54,[[["self"]],[T]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[29]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[8],E,E,55,[[[U]],[R[3]]]],[11,R[9],E,E,55,[[],[R[3]]]],[11,R[28],E,E,55,[[["self"]],[T]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[29]]]],[11,"fmt",R[1979],E,26,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,25,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"clone",E,E,26,[[["self"]],["frame"]]],[11,"clone",E,E,25,[[["self"]],[R[241]]]],[11,R[327],E,E,26,[[],["frame"]]],[11,"eq",E,E,25,[[["self"],[R[241]]],["bool"]]],[11,"index_of",R[1973],E,68,[[["self"],["luma"]],["usize"]]],[11,"map_color",E,E,68,[[["self"],["luma"]]]],[11,"index_of",R[1972],E,12,[[["self"],["rgba"]],["usize"]]],[11,"map_color",E,E,12,[[["self"],["rgba"]]]],[11,R[1986],"image",E,2,[[["self"]]]],[11,R[1980],E,E,2,[[["self"]]]],[11,R[1985],E,E,2,[[["self"]]]],[11,R[1981],E,E,2,[[[T]],["rgb"]]],[11,R[1524],E,E,2,[[],["rgb"]]],[11,R[1982],E,E,2,[[],["rgb"]]],[11,"to_rgb",E,E,2,[[["self"]],["rgb"]]],[11,"to_bgr",E,E,2,[[["self"]],["bgr"]]],[11,"to_rgba",E,E,2,[[["self"]],["rgba"]]],[11,"to_bgra",E,E,2,[[["self"]],["bgra"]]],[11,"to_luma",E,E,2,[[["self"]],["luma"]]],[11,R[1968],E,E,2,[[["self"]],["lumaa"]]],[11,"map",E,E,2,[[["self"],["f"]],["rgb"]]],[11,"apply",E,E,2,[[["self"],["f"]]]],[11,R[1983],E,E,2,[[["self"],["f"],["g"]],["rgb"]]],[11,R[1984],E,E,2,[[["self"],["f"],["g"]]]],[11,"map2",E,E,2,[[["self"],["f"]],["rgb"]]],[11,"apply2",E,E,2,[[["self"],["rgb"],["f"]]]],[11,"invert",E,E,2,[[["self"]]]],[11,"blend",E,E,2,[[["self"],["rgb"]]]],[11,R[1986],E,E,4,[[["self"]]]],[11,R[1980],E,E,4,[[["self"]]]],[11,R[1985],E,E,4,[[["self"]]]],[11,R[1981],E,E,4,[[[T]],["bgr"]]],[11,R[1524],E,E,4,[[],["bgr"]]],[11,R[1982],E,E,4,[[],["bgr"]]],[11,"to_rgb",E,E,4,[[["self"]],["rgb"]]],[11,"to_bgr",E,E,4,[[["self"]],["bgr"]]],[11,"to_rgba",E,E,4,[[["self"]],["rgba"]]],[11,"to_bgra",E,E,4,[[["self"]],["bgra"]]],[11,"to_luma",E,E,4,[[["self"]],["luma"]]],[11,R[1968],E,E,4,[[["self"]],["lumaa"]]],[11,"map",E,E,4,[[["self"],["f"]],["bgr"]]],[11,"apply",E,E,4,[[["self"],["f"]]]],[11,R[1983],E,E,4,[[["self"],["f"],["g"]],["bgr"]]],[11,R[1984],E,E,4,[[["self"],["f"],["g"]]]],[11,"map2",E,E,4,[[["self"],["f"]],["bgr"]]],[11,"apply2",E,E,4,[[["self"],["bgr"],["f"]]]],[11,"invert",E,E,4,[[["self"]]]],[11,"blend",E,E,4,[[["self"],["bgr"]]]],[11,R[1986],E,E,0,[[["self"]]]],[11,R[1980],E,E,0,[[["self"]]]],[11,R[1985],E,E,0,[[["self"]]]],[11,R[1981],E,E,0,[[[T]],["luma"]]],[11,R[1524],E,E,0,[[],["luma"]]],[11,R[1982],E,E,0,[[],["luma"]]],[11,"to_rgb",E,E,0,[[["self"]],["rgb"]]],[11,"to_bgr",E,E,0,[[["self"]],["bgr"]]],[11,"to_rgba",E,E,0,[[["self"]],["rgba"]]],[11,"to_bgra",E,E,0,[[["self"]],["bgra"]]],[11,"to_luma",E,E,0,[[["self"]],["luma"]]],[11,R[1968],E,E,0,[[["self"]],["lumaa"]]],[11,"map",E,E,0,[[["self"],["f"]],["luma"]]],[11,"apply",E,E,0,[[["self"],["f"]]]],[11,R[1983],E,E,0,[[["self"],["f"],["g"]],["luma"]]],[11,R[1984],E,E,0,[[["self"],["f"],["g"]]]],[11,"map2",E,E,0,[[["self"],["f"]],["luma"]]],[11,"apply2",E,E,0,[[["self"],["luma"],["f"]]]],[11,"invert",E,E,0,[[["self"]]]],[11,"blend",E,E,0,[[["self"],["luma"]]]],[11,R[1986],E,E,3,[[["self"]]]],[11,R[1980],E,E,3,[[["self"]]]],[11,R[1985],E,E,3,[[["self"]]]],[11,R[1981],E,E,3,[[[T]],["rgba"]]],[11,R[1524],E,E,3,[[],["rgba"]]],[11,R[1982],E,E,3,[[],["rgba"]]],[11,"to_rgb",E,E,3,[[["self"]],["rgb"]]],[11,"to_bgr",E,E,3,[[["self"]],["bgr"]]],[11,"to_rgba",E,E,3,[[["self"]],["rgba"]]],[11,"to_bgra",E,E,3,[[["self"]],["bgra"]]],[11,"to_luma",E,E,3,[[["self"]],["luma"]]],[11,R[1968],E,E,3,[[["self"]],["lumaa"]]],[11,"map",E,E,3,[[["self"],["f"]],["rgba"]]],[11,"apply",E,E,3,[[["self"],["f"]]]],[11,R[1983],E,E,3,[[["self"],["f"],["g"]],["rgba"]]],[11,R[1984],E,E,3,[[["self"],["f"],["g"]]]],[11,"map2",E,E,3,[[["self"],["f"]],["rgba"]]],[11,"apply2",E,E,3,[[["self"],["rgba"],["f"]]]],[11,"invert",E,E,3,[[["self"]]]],[11,"blend",E,E,3,[[["self"],["rgba"]]]],[11,R[1986],E,E,5,[[["self"]]]],[11,R[1980],E,E,5,[[["self"]]]],[11,R[1985],E,E,5,[[["self"]]]],[11,R[1981],E,E,5,[[[T]],["bgra"]]],[11,R[1524],E,E,5,[[],["bgra"]]],[11,R[1982],E,E,5,[[],["bgra"]]],[11,"to_rgb",E,E,5,[[["self"]],["rgb"]]],[11,"to_bgr",E,E,5,[[["self"]],["bgr"]]],[11,"to_rgba",E,E,5,[[["self"]],["rgba"]]],[11,"to_bgra",E,E,5,[[["self"]],["bgra"]]],[11,"to_luma",E,E,5,[[["self"]],["luma"]]],[11,R[1968],E,E,5,[[["self"]],["lumaa"]]],[11,"map",E,E,5,[[["self"],["f"]],["bgra"]]],[11,"apply",E,E,5,[[["self"],["f"]]]],[11,R[1983],E,E,5,[[["self"],["f"],["g"]],["bgra"]]],[11,R[1984],E,E,5,[[["self"],["f"],["g"]]]],[11,"map2",E,E,5,[[["self"],["f"]],["bgra"]]],[11,"apply2",E,E,5,[[["self"],["bgra"],["f"]]]],[11,"invert",E,E,5,[[["self"]]]],[11,"blend",E,E,5,[[["self"],["bgra"]]]],[11,R[1986],E,E,1,[[["self"]]]],[11,R[1980],E,E,1,[[["self"]]]],[11,R[1985],E,E,1,[[["self"]]]],[11,R[1981],E,E,1,[[[T]],["lumaa"]]],[11,R[1524],E,E,1,[[],["lumaa"]]],[11,R[1982],E,E,1,[[],["lumaa"]]],[11,"to_rgb",E,E,1,[[["self"]],["rgb"]]],[11,"to_bgr",E,E,1,[[["self"]],["bgr"]]],[11,"to_rgba",E,E,1,[[["self"]],["rgba"]]],[11,"to_bgra",E,E,1,[[["self"]],["bgra"]]],[11,"to_luma",E,E,1,[[["self"]],["luma"]]],[11,R[1968],E,E,1,[[["self"]],["lumaa"]]],[11,"map",E,E,1,[[["self"],["f"]],["lumaa"]]],[11,"apply",E,E,1,[[["self"],["f"]]]],[11,R[1983],E,E,1,[[["self"],["f"],["g"]],["lumaa"]]],[11,R[1984],E,E,1,[[["self"],["f"],["g"]]]],[11,"map2",E,E,1,[[["self"],["f"]],["lumaa"]]],[11,"apply2",E,E,1,[[["self"],["f"],["lumaa"]]]],[11,"invert",E,E,1,[[["self"]]]],[11,"blend",E,E,1,[[["self"],["lumaa"]]]],[11,"convert",E,E,58,[[["self"]],[["vec"],[R[1873],["vec"]]]]],[11,R[1967],R[1987],E,20,[[["self"]]]],[11,R[1164],E,E,20,[[["self"]],[R[1164]]]],[11,R[1988],E,E,20,[[],[R[1863]]]],[11,R[1991],E,E,20,[[],[["vec",["u8"]],[R[1863],["vec"]]]]],[11,R[1967],R[1989],E,23,[[["self"]]]],[11,R[1164],E,E,23,[[["self"]],[R[1164]]]],[11,R[1990],E,E,23,[[["self"]],["u64"]]],[11,R[1988],E,E,23,[[],[R[1863]]]],[11,R[1991],E,E,23,[[],[["vec",["u8"]],[R[1863],["vec"]]]]],[11,R[1967],R[1979],E,27,[[["self"]]]],[11,R[1164],E,E,27,[[["self"]],[R[1164]]]],[11,R[1988],E,E,27,[[],[R[1863]]]],[11,R[1991],E,E,27,[[],[["vec",["u8"]],[R[1863],["vec"]]]]],[11,R[1967],R[1992],E,31,[[["self"]]]],[11,R[1164],E,E,31,[[["self"]],[R[1164]]]],[11,R[1988],E,E,31,[[],[R[1863]]]],[11,R[1991],E,E,31,[[],[["vec",["u8"]],[R[1863],["vec"]]]]],[11,R[1967],R[1993],E,34,[[["self"]]]],[11,R[1164],E,E,34,[[["self"]],[R[1164]]]],[11,R[1988],E,E,34,[[],[R[1863]]]],[11,R[1991],E,E,34,[[],[["vec",["u8"]],[R[1863],["vec"]]]]],[11,R[1967],R[1975],E,36,[[["self"]]]],[11,R[1164],E,E,36,[[["self"]],[R[1164]]]],[11,R[1988],E,E,36,[[],[R[1863]]]],[11,R[1991],E,E,36,[[],[["vec",["u8"]],[R[1863],["vec"]]]]],[11,R[1967],R[1994],E,38,[[["self"]]]],[11,R[1164],E,E,38,[[["self"]],[R[1164]]]],[11,R[1988],E,E,38,[[],[R[1863]]]],[11,R[1991],E,E,38,[[],[["vec",["u8"]],[R[1863],["vec"]]]]],[11,R[1990],E,E,38,[[["self"]],["u64"]]],[11,R[1967],R[1995],E,47,[[["self"]]]],[11,R[1164],E,E,47,[[["self"]],[R[1164]]]],[11,R[1988],E,E,47,[[],[R[1863]]]],[11,R[1991],E,E,47,[[],[["vec",["u8"]],[R[1863],["vec"]]]]],[11,R[1967],R[1996],E,50,[[["self"]]]],[11,R[1164],E,E,50,[[["self"]],[R[1164]]]],[11,R[1990],E,E,50,[[["self"]],["u64"]]],[11,R[1988],E,E,50,[[],[R[1863]]]],[11,R[1991],E,E,50,[[],[["vec",["u8"]],[R[1863],["vec"]]]]],[11,R[1967],R[1976],E,51,[[["self"]]]],[11,R[1164],E,E,51,[[["self"]],[R[1164]]]],[11,R[1988],E,E,51,[[],[R[1863]]]],[11,R[1991],E,E,51,[[],[["vec",["u8"]],[R[1863],["vec"]]]]],[11,R[1967],R[1977],E,53,[[["self"]]]],[11,R[1164],E,E,53,[[["self"]],[R[1164]]]],[11,R[1988],E,E,53,[[],[R[1863]]]],[11,R[1991],E,E,53,[[],[["vec",["u8"]],[R[1863],["vec"]]]]],[11,R[1997],R[1987],E,20,[[["self"],["fn"],["u64"]],[R[1863]]]],[11,R[1997],R[1989],E,23,[[["self"],["fn"],["u64"]],[R[1863]]]],[11,R[1997],R[1992],E,31,[[["self"],["fn"],["u64"]],[R[1863]]]],[11,R[1998],R[1979],E,27,[[],["frames"]]],[11,R[1967],R[1974],E,18,[[["self"]]]],[11,"bounds",E,E,18,[[["self"]]]],[11,R[1999],E,E,18,[[["self"],["u32"]],["bool"]]],[11,R[2000],E,E,18,[[["self"],["u32"]]]],[11,"inner",E,E,18,[[["self"]],["self"]]],[11,R[1967],E,E,19,[[["self"]]]],[11,"bounds",E,E,19,[[["self"]]]],[11,R[1999],E,E,19,[[["self"],["u32"]],["bool"]]],[11,R[2000],E,E,19,[[["self"],["u32"]]]],[11,"inner",E,E,19,[[["self"]],["self"]]],[11,R[1967],"image",E,58,[[["self"]]]],[11,"bounds",E,E,58,[[["self"]]]],[11,R[2000],E,E,58,[[["self"],["u32"]],["p"]]],[11,R[2001],E,"Returns the pixel located at (x, y), ignoring bounds…",58,[[["self"],["u32"]],["p"]]],[11,"inner",E,E,58,[[["self"]]]],[11,R[1967],E,E,11,[[["self"]]]],[11,"bounds",E,E,11,[[["self"]]]],[11,R[2000],E,E,11,[[["self"],["u32"]],[["rgba",["u8"]],["u8"]]]],[11,"inner",E,E,11,[[["self"]]]],[11,R[1967],E,E,59,[[["self"]]]],[11,"bounds",E,E,59,[[["self"]]]],[11,R[2000],E,E,59,[[["self"],["u32"]]]],[11,"view",E,E,59,[[["self"],["u32"]],[R[2046]]]],[11,"inner",E,E,59,[[["self"]]]],[11,R[1960],R[1974],E,19,[[["self"],["u32"]]]],[11,R[2003],E,E,19,[[["self"],["u32"]]]],[11,R[2002],E,E,19,[[["self"],["u32"]]]],[11,R[2006],E,E,19,[[["self"]],["self"]]],[11,R[1960],"image",E,58,[[["self"],["u32"]],["p"]]],[11,R[2003],E,E,58,[[["self"],["u32"],["p"]]]],[11,R[2004],E,"Puts a pixel at location (x, y), ignoring bounds checking.",58,[[["self"],["u32"],["p"]]]],[11,R[2002],E,R[2005],58,[[["self"],["u32"],["p"]]]],[11,R[2006],E,E,58,[[["self"]]]],[11,R[2003],E,E,11,[[["self"],["u32"],["rgba",["u8"]],["u8"]]]],[11,R[2002],E,"DEPRECATED: Use iterator `pixels_mut` to blend the pixels…",11,[[["self"],["u32"],["rgba",["u8"]],["u8"]]]],[11,R[1960],E,"DEPRECATED: Do not use is function: It is unimplemented!",11,[[["self"],["u32"]],["rgba"]]],[11,R[2006],E,E,11,[[["self"]]]],[11,R[1960],E,E,59,[[["self"],["u32"]]]],[11,R[2003],E,E,59,[[["self"],["u32"]]]],[11,R[2002],E,"DEPRECATED: This method will be removed. Blend the pixel…",59,[[["self"],["u32"]]]],[11,"sub_image",E,E,59,[[["self"],["u32"]],[R[2046]]]],[11,R[2006],E,E,59,[[["self"]]]],[11,"from",E,E,7,[[["error"]],[R[1941]]]],[11,"from",E,E,7,[[[R[244]]],[R[1941]]]],[11,"from",E,E,6,[[[R[1855]]],[R[1164]]]],[11,"from",E,E,7,[[["error"]],[R[1941]]]],[11,"from",E,E,6,[[],[R[1164]]]],[11,"from",E,E,7,[[[R[244]]],[R[1941]]]],[11,"from",R[1995],E,49,[[[R[1937]]],["self"]]],[11,"from",E,E,49,[[[R[1938]]],["self"]]],[11,"from",E,E,49,[[[R[1939]]],["self"]]],[11,"from",E,E,49,[[[R[1940]]],["self"]]],[11,"from","image",E,7,[[["tifferror"]],[R[1941]]]],[11,"from",E,E,6,[[[R[1164]]],[R[1164]]]],[11,"from",E,E,7,[[["error"]],[R[1941]]]],[11,"from",E,E,10,[[[R[1862]]],["self"]]],[11,"next",R[1992],E,72,[[["self"]],[R[25]]]],[11,R[174],E,E,72,[[["self"]]]],[11,"next","image",E,56,[[["self"]],[[R[1863],["frame"]],[R[25],[R[1863]]]]]],[11,"next",E,E,67,[[["self"]],[R[25]]]],[11,R[172],R[1974],"Compares the logical preconditions.",17,[[["self"]],[[R[24]],[R[25],[R[24]]]]]],[11,"eq",E,E,15,[[["self"],[R[2007]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[2007]]],["bool"]]],[11,"eq",E,E,16,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["error"]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[2008]]],["bool"]]],[11,"eq",R[1989],E,22,[[["self"],[R[2009]]],["bool"]]],[11,"eq",R[1992],E,29,[[["self"],[R[1925]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[1925]]],["bool"]]],[11,"eq",R[1995],E,46,[[["self"],[R[2010]]],["bool"]]],[11,"eq",E,E,45,[[["self"],[R[1936]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[1936]]],["bool"]]],[11,"eq","image",E,6,[[["self"],[R[1164]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[1164]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["rgb"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["rgb"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["bgr"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["bgr"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["luma"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["luma"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["rgba"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["rgba"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["bgra"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["bgra"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["lumaa"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["lumaa"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[1862]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[1956]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[1956]]],["bool"]]],[11,R[327],R[1992],E,29,[[],[R[1925]]]],[11,R[327],R[1978],E,54,[[],["frame"]]],[11,R[23],R[1992],E,32,[[]]],[11,"clone",R[1973],E,68,[[["self"]],["bilevel"]]],[11,"clone","image",E,8,[[["self"]],[R[1155]]]],[11,"clone",R[1974],E,14,[[["self"]],[R[1879]]]],[11,"clone",E,E,15,[[["self"]],[R[2007]]]],[11,"clone",E,E,18,[[["self"]],["view"]]],[11,"clone",E,E,19,[[["self"]],["viewmut"]]],[11,"clone",E,E,16,[[["self"]],["error"]]],[11,"clone",E,E,17,[[["self"]],[R[2008]]]],[11,"clone",R[1989],E,22,[[["self"]],[R[2009]]]],[11,"clone",R[1992],E,29,[[["self"]],[R[1925]]]],[11,"clone",E,E,30,[[["self"]],[R[2011]]]],[11,"clone",R[1995],E,46,[[["self"]],[R[2010]]]],[11,"clone",E,E,45,[[["self"]],[R[1936]]]],[11,"clone",E,E,41,[[["self"]],[R[1937]]]],[11,"clone",E,E,42,[[["self"]],[R[1938]]]],[11,"clone",E,E,43,[[["self"]],[R[1939]]]],[11,"clone",E,E,40,[[["self"]],[R[1940]]]],[11,"clone",E,E,44,[[["self"]],["arbitrarytupltype"]]],[11,"clone",R[1978],E,54,[[["self"]],["frame"]]],[11,"clone","image",E,57,[[["self"]],["frame"]]],[11,"clone",E,E,58,[[["self"]],[R[1873]]]],[11,"clone",E,E,6,[[["self"]],[R[1164]]]],[11,"clone",E,E,2,[[["self"]],["rgb"]]],[11,"clone",E,E,4,[[["self"]],["bgr"]]],[11,"clone",E,E,0,[[["self"]],["luma"]]],[11,"clone",E,E,3,[[["self"]],["rgba"]]],[11,"clone",E,E,5,[[["self"]],["bgra"]]],[11,"clone",E,E,1,[[["self"]],["lumaa"]]],[11,"clone",E,E,11,[[["self"]],[R[1864]]]],[11,"clone",E,E,9,[[["self"]],[R[1862]]]],[11,"clone",E,E,10,[[["self"]],[R[1956]]]],[11,"deref",E,E,58,[[["self"]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1974],E,14,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1989],E,22,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1992],E,31,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1995],E,46,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1978],E,54,[[["self"],[R[13]]],[R[3]]]],[11,"fmt","image",E,58,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[3]]]],[11,R[14],E,E,58,[[["self"]]]],[11,"index",R[1974],"Return a reference to a single sample at specified…",14,[[["self"]]]],[11,"index","image",E,58,[[["self"]],["p"]]],[11,"index",E,E,2,[[["self"],["usize"]],[T]]],[11,"index",E,E,4,[[["self"],["usize"]],[T]]],[11,"index",E,E,0,[[["self"],["usize"]],[T]]],[11,"index",E,E,3,[[["self"],["usize"]],[T]]],[11,"index",E,E,5,[[["self"],["usize"]],[T]]],[11,"index",E,E,1,[[["self"],["usize"]],[T]]],[11,R[1642],R[1974],"Return a mutable reference to a single sample at specified…",14,[[["self"]]]],[11,R[1642],"image",E,58,[[["self"]],["p"]]],[11,R[1642],E,E,2,[[["self"],["usize"]],[T]]],[11,R[1642],E,E,4,[[["self"],["usize"]],[T]]],[11,R[1642],E,E,0,[[["self"],["usize"]],[T]]],[11,R[1642],E,E,3,[[["self"],["usize"]],[T]]],[11,R[1642],E,E,5,[[["self"],["usize"]],[T]]],[11,R[1642],E,E,1,[[["self"],["usize"]],[T]]],[11,"hash",R[1974],E,15,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",E,E,17,[[["self"],["__h"]]]],[11,"hash","image",E,6,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,R[53],E,E,7,[[["self"]],["str"]]],[11,"cause",E,E,7,[[["self"]],[[R[25],["error"]],["error"]]]],[11,"read",R[1989],E,69,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"read",R[1979],E,70,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,R[2012],E,E,70,[[["self"],["vec"]],[[R[3],["usize"]],["usize"]]]],[11,"read",R[1992],E,71,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,R[2012],E,E,71,[[["self"],["vec"]],[[R[3],["usize"]],["usize"]]]],[11,"read",R[1994],E,73,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,R[2012],E,E,73,[[["self"],["vec"]],[[R[3],["usize"]],["usize"]]]],[11,"read",R[1976],E,74,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,R[2012],E,E,74,[[["self"],["vec"]],[[R[3],["usize"]],["usize"]]]],[11,R[785],R[1979],R[242],25,[[["u8"]],[[R[241]],[R[25],[R[241]]]]]],[11,"from_rgba",E,R[2013],26,[[["u16"]],["frame"]]],[11,R[2014],E,R[2015],26,[[["u16"],["i32"]],["frame"]]],[11,R[2016],E,R[2017],26,[[[R[25],["u8"]],["u16"],["u8"]],["frame"]]],[11,R[2018],E,R[2019],26,[[[R[25],["u8"]],["u16"],["u8"]],["frame"]]],[11,"from_rgb",E,R[2020],26,[[["u16"]],["frame"]]],[11,R[2021],E,R[2022],26,[[["u16"],["i32"]],["frame"]]],[18,R[2023],"image",R[2024],66,N],[11,R[2025],E,R[2026],66,[[],["u8"]]],[18,R[2027],E,R[2028],66,N],[11,R[2029],E,R[2030],66,[[],["str"]]],[18,"COLOR_TYPE",E,R[2031],66,N],[11,R[2078],E,R[2032],66,[[],[R[1164]]]],[11,R[2033],E,R[1970],66,[[["self"],["f"]],["self"]]],[11,R[2034],E,R[1970],66,[[["self"],["f"]]]],[11,"expand_palette",E,"Expands a color palette by re-using the existing buffer.…",75,[[["u8"],[R[25],["u8"]]],[R[1946]]]],[11,"row_bytes",E,R[2035],63,[[["self"]],["u64"]]],[11,R[2036],E,R[2037],63,[[["self"]],["u64"]]],[11,R[1990],E,R[2038],63,[[["self"]],["u64"]]],[11,R[1991],E,R[2039],63,[[],[["vec",["u8"]],[R[1863],["vec"]]]]],[11,R[2040],E,R[2041],63,[[["fn"]],[["vec",["u8"]],[R[1863],["vec"]]]]],[11,"read_rect",E,R[2042],64,[[["self"],["u64"]],[R[1863]]]],[11,"width",E,R[1964],62,[[["self"]],["u32"]]],[11,"height",E,R[1965],62,[[["self"]],["u32"]]],[11,R[1999],E,R[2043],62,[[["self"],["u32"]],["bool"]]],[11,R[2001],E,R[1966],62,[[["self"],["u32"]]]],[11,"pixels",E,R[2044],62,[[["self"]],["pixels"]]],[11,"view",E,R[2045],62,[[["self"],["u32"]],[R[2046]]]],[11,R[2004],E,R[2047],61,[[["self"],["u32"]]]],[11,"copy_from",E,R[2048],61,[[["self"],["o"],["u32"]],["bool"]]],[11,"sub_image",E,R[2049],61,[[["self"],["u32"]],[R[2046]]]]],"p":[[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[3,"Bgr"],[3,"Bgra"],[4,R[1489]],[4,"ImageError"],[4,R[2050]],[4,R[2051]],[4,R[2052]],[4,R[2053]],[3,R[74]],[8,"ColorMap"],[3,R[2054]],[3,R[2055]],[4,"Error"],[4,"NormalForm"],[3,"View"],[3,"ViewMut"],[3,"BMPDecoder"],[3,"BMPEncoder"],[4,"DXTVariant"],[3,"DXTDecoder"],[3,"DXTEncoder"],[4,R[253]],[3,"Frame"],[3,"Decoder"],[3,"Encoder"],[3,"RGBE8Pixel"],[3,R[2056]],[3,"HDRAdapter"],[3,"HDRDecoder"],[3,"HDREncoder"],[3,"ICODecoder"],[3,"ICOEncoder"],[3,R[2057]],[3,R[2058]],[3,"PNGDecoder"],[3,"PNGEncoder"],[3,R[2059]],[3,R[2060]],[3,R[2061]],[3,R[2062]],[4,R[2063]],[4,"PNMSubtype"],[4,R[2064]],[3,"PNMDecoder"],[3,"PNMEncoder"],[3,"PNMHeader"],[3,"TGADecoder"],[3,R[2065]],[3,R[1507]],[3,R[2066]],[3,"Frame"],[3,"VP8Decoder"],[3,"Frames"],[3,"Frame"],[3,R[2067]],[3,"SubImage"],[8,R[2068]],[8,R[2069]],[8,R[2070]],[8,R[2071]],[8,R[2072]],[8,R[2073]],[8,"Pixel"],[3,"Pixels"],[3,"BiLevel"],[3,"DXTReader"],[3,"GifReader"],[3,"HdrReader"],[3,R[2074]],[3,"PNGReader"],[3,"TiffReader"],[6,"GrayImage"]]};
searchIndex["imageproc"]={"doc":"An image processing library based on the [image] crate.","i":[[0,"utils",R[2097],"Utils for testing and debugging.",N,N],[3,"Diff",R[2126],"A difference between two images",N,N],[12,"x",E,"x-coordinate of diff.",0,N],[12,"y",E,"y-coordinate of diff.",0,N],[12,"expected",E,"Pixel value in expected image.",0,N],[12,"actual",E,"Pixel value in actual image.",0,N],[5,"pixel_diff_summary",E,R[2096],N,[[["i"],["j"]],[[R[25],["string"]],["string"]]]],[5,"significant_pixel_diff_summary",E,R[2096],N,[[["i"],["j"],["f"]],[[R[25],["string"]],["string"]]]],[5,"pixel_diffs",E,"Lists pixels that differ between left and right images.",N,[[["i"],["j"],["f"]],[["vec",["diff"]],["diff"]]]],[5,"describe_pixel_diffs",E,"Gives a summary description of a list of pixel diffs for…",N,[[["i"],["j"]],["string"]]],[5,"load_image_or_panic",E,"Loads image at given path, panicking on failure.",N,[[["path"],["debug"],["asref",["path"]]],[R[1864]]]],[5,"gray_bench_image",E,"Gray image to use in benchmarks. This is neither noise nor…",N,[[["u32"]],[R[1950]]]],[5,"rgb_bench_image",E,"RGB image to use in benchmarks. See comment on…",N,[[["u32"]],["rgbimage"]]],[0,"contrast",R[2097],"Functions for manipulating the contrast of images.",N,N],[5,"adaptive_threshold","imageproc::contrast","Applies an adaptive threshold to an image.",N,[[[R[1950]],["u32"]],[R[1950]]]],[5,"otsu_level",E,"Returns the [Otsu threshold level] of an 8bpp image.",N,[[[R[1950]]],["u8"]]],[5,"threshold",E,"Returns a binarized image from an input 8bpp grayscale…",N,[[[R[1950]],["u8"]],[R[1950]]]],[5,"threshold_mut",E,"Mutates given image to form a binarized version produced…",N,[[[R[1950]],["u8"]]]],[5,"equalize_histogram_mut",E,"Equalises the histogram of an 8bpp grayscale image in…",N,[[[R[1950]]]]],[5,"equalize_histogram",E,"Equalises the histogram of an 8bpp grayscale image. See…",N,[[[R[1950]]],[R[1950]]]],[5,"match_histogram_mut",E,"Adjusts contrast of an 8bpp grayscale image in place so…",N,[[[R[1950]],[R[1950]]]]],[5,"match_histogram",E,"Adjusts contrast of an 8bpp grayscale image so that its…",N,[[[R[1950]]],[R[1950]]]],[5,"stretch_contrast",E,"Linearly stretches the contrast in an image, sending…",N,[[[R[1950]],["u8"]],[R[1950]]]],[5,"stretch_contrast_mut",E,"Linearly stretches the contrast in an image in place,…",N,[[[R[1950]],["u8"]]]],[0,"corners",R[2097],"Functions for detecting corners, also known as interest…",N,N],[3,"Corner",R[2127],"A location and score for a detected corner. The scores…",N,N],[12,"x",E,R[2141],1,N],[12,"y",E,R[2142],1,N],[12,"score",E,"Score of the detected corner.",1,N],[4,"Fast",E,"Variants of the FAST corner detector. These classify a…",N,N],[13,"Nine",E,"Corners require a section of length as least nine.",2,N],[13,"Twelve",E,"Corners require a section of length as least twelve.",2,N],[5,"corners_fast12",E,"Finds corners using FAST-12 features. See comment on Fast…",N,[[[R[1950]],["u8"]],[["corner"],["vec",["corner"]]]]],[5,"corners_fast9",E,"Finds corners using FAST-9 features. See comment on Fast…",N,[[[R[1950]],["u8"]],[["corner"],["vec",["corner"]]]]],[5,"fast_corner_score",E,"The score of a corner detected using the FAST detector is…",N,[[[R[1950]],["u32"],["fast"],["u8"]],["u8"]]],[11,"new",E,"A corner at location (x, y) with score `score`.",1,[[["f32"],["u32"]],["corner"]]],[0,"definitions",R[2097],"Trait definitions and type aliases.",N,N],[6,"Image","imageproc::definitions","An `ImageBuffer` containing Pixels of type P with storage…",N,N],[8,"HasBlack",E,"Pixels which have a named Black value.",N,N],[10,"black",E,"Returns a black pixel of this type.",3,[[],["self"]]],[8,"HasWhite",E,"Pixels which have a named White value.",N,N],[10,"white",E,"Returns a white pixel of this type.",4,[[],["self"]]],[8,"Position",E,"Something with a 2d position.",N,N],[10,"x",E,"x-coordinate.",5,[[["self"]],["u32"]]],[10,"y",E,"y-coordinate.",5,[[["self"]],["u32"]]],[8,"Score",E,"Something with a score.",N,N],[10,"score",E,"Score of this item.",6,[[["self"]],["f32"]]],[8,"Clamp",E,"A type to which we can clamp a value of type T.…",N,N],[10,"clamp",E,"Clamp `x` to a valid value for this type.",7,[[[T]],["self"]]],[0,R[2098],R[2097],"Functions for computing distance transforms - the distance…",N,N],[4,"Norm",R[2128],"How to measure distance between coordinates. See the…",N,N],[13,"L1",E,"Defines d((x1, y1), (x2, y2)) to be abs(x1 - x2) + abs(y1…",8,N],[13,"LInf",E,"Defines d((x1, y1), (x2, y2)) to be max(abs(x1 - x2),…",8,N],[5,R[2098],E,"Returns an image showing the distance of each pixel from a…",N,[[[R[1950]],["norm"]],[R[1950]]]],[5,"distance_transform_mut",E,"Updates an image in place so that each pixel contains its…",N,[[["norm"],[R[1950]]]]],[5,"euclidean_squared_distance_transform",E,"Computes the square of the `L2` (Euclidean) distance…",N,[[["image"]],[["image",["luma"]],["luma",["f64"]]]]],[0,"drawing",R[2097],"Helpers for drawing basic shapes on images.",N,N],[3,"Blend",R[2129],"A canvas that blends pixels when drawing.",N,N],[12,"0",E,E,9,N],[3,R[2151],E,"Iterates over the coordinates in a line segment using…",N,N],[3,R[2152],E,R[2099],N,N],[3,R[2153],E,R[2099],N,N],[3,"Point",E,"A 2D point.",N,N],[5,"draw_cubic_bezier_curve",E,R[2100],N,[[["i"]],["image"]]],[5,"draw_cubic_bezier_curve_mut",E,R[2100],N,[[["c"]]]],[5,"draw_filled_circle",E,"Draw as much of a circle and its contents as lies inside…",N,[[["i"],["i32"]],["image"]]],[5,"draw_filled_circle_mut",E,"Draw as much of a circle, including its contents, as lies…",N,[[["c"],["i32"]]]],[5,"draw_filled_ellipse",E,R[2101],N,[[["i"],["i32"]],["image"]]],[5,"draw_filled_ellipse_mut",E,R[2101],N,[[["c"],["i32"]]]],[5,"draw_hollow_circle",E,R[2102],N,[[["i"],["i32"]],["image"]]],[5,"draw_hollow_circle_mut",E,R[2102],N,[[["c"],["i32"]]]],[5,"draw_hollow_ellipse",E,R[2103],N,[[["i"],["i32"]],["image"]]],[5,"draw_hollow_ellipse_mut",E,R[2103],N,[[["c"],["i32"]]]],[5,"draw_cross",E,"Draws a colored cross on an image. Handles coordinates…",N,[[["i"],["i32"]],["image"]]],[5,"draw_cross_mut",E,"Draws a colored cross on an image in place. Handles…",N,[[["c"],["i32"]]]],[5,"draw_antialiased_line_segment",E,R[2104],N,[[["i"],["b"]],["image"]]],[5,"draw_antialiased_line_segment_mut",E,R[2104],N,[[["b"],["i"]]]],[5,"draw_line_segment",E,R[2104],N,[[["i"]],["image"]]],[5,"draw_line_segment_mut",E,R[2104],N,[[["c"]]]],[5,"draw_convex_polygon",E,R[2105],N,[[["i"]],["image"]]],[5,"draw_convex_polygon_mut",E,R[2105],N,[[["c"]]]],[5,"draw_filled_rect",E,R[2106],N,[[["i"],["rect"]],["image"]]],[5,"draw_filled_rect_mut",E,R[2106],N,[[["c"],["rect"]]]],[5,"draw_hollow_rect",E,R[2107],N,[[["i"],["rect"]],["image"]]],[5,"draw_hollow_rect_mut",E,R[2107],N,[[["c"],["rect"]]]],[5,"draw_text",E,R[2108],N,[[["i"],["u32"],["font"],["str"],["scale"]],["image"]]],[5,"draw_text_mut",E,R[2108],N,[[["scale"],["u32"],["font"],["str"],["c"]]]],[11,"new",E,"Creates a `BresenhamLineIter` which will iterate over the…",10,[[],["bresenhamlineiter"]]],[11,"new",E,"Creates a `BresenhamLinePixelIter` which will iterate over…",11,[[["image"]],["bresenhamlinepixeliter"]]],[11,"new",E,"Creates a `BresenhamLinePixelIterMut` which will iterate…",12,[[["image"]],["bresenhamlinepixelitermut"]]],[11,"new",E,"Construct a point at (x, y).",13,[[[T]],["point"]]],[8,"Canvas",E,"A surface for drawing on - many drawing functions in this…",N,N],[16,"Pixel",E,"The type of `Pixel` that can be drawn on this canvas.",14,N],[10,R[1967],E,"The width and height of this canvas.",14,[[["self"]]]],[11,"width",E,R[2149],14,[[["self"]],["u32"]]],[11,"height",E,R[2150],14,[[["self"]],["u32"]]],[10,R[2000],E,"Returns the pixel located at (x, y).",14,[[["self"],["u32"]]]],[10,"draw_pixel",E,"Draw a pixel at the given coordinates. `x` and `y` should…",14,[[["self"],["u32"]]]],[0,"edges",R[2097],"Functions for detecting edges in images.",N,N],[5,"canny","imageproc::edges","Runs the canny edge detection algorithm.",N,[[["f32"],[R[1950]]],[R[1950]]]],[0,"filter",R[2097],"Functions for filtering images.",N,N],[3,"Kernel",R[2130],"A 2D kernel, used to filter images via convolution.",N,N],[5,"median_filter",E,"Applies a median filter of given dimensions to an image.…",N,[[["u32"],["image"]],["image"]]],[5,"box_filter",E,"Convolves an 8bpp grayscale image with a kernel of width…",N,[[[R[1950]],["u32"]],[["luma",["u8"]],["image",["luma"]]]]],[5,"gaussian_blur_f32",E,"Blurs an image using a Gaussian of standard deviation…",N,[[["f32"],["image"]],["image"]]],[5,"separable_filter",E,"Returns 2d correlation of view with the outer product of…",N,[[["image"]],["image"]]],[5,"separable_filter_equal",E,"Returns 2d correlation of an image with the outer product…",N,[[["image"]],["image"]]],[5,"filter3x3",E,"Returns 2d correlation of an image with a 3x3 row-major…",N,[[["image"]],[[R[2118]],["image",[R[2118]]]]]],[5,"horizontal_filter",E,R[2109],N,[[["image"]],["image"]]],[5,"vertical_filter",E,R[2109],N,[[["image"]],["image"]]],[11,"new",E,"Construct a kernel from a slice and its dimensions. The…",15,[[["u32"]],["kernel"]]],[11,"filter",E,"Returns 2d correlation of an image. Intermediate…",15,[[["self"],["f"],["image"]],["image"]]],[0,"geometric_transformations",R[2097],"Geometric transformations of images. This includes…",N,N],[3,"Projection",R[2131],"A 2d projective transformation, stored as a row major 3x3…",N,N],[4,R[2154],E,"How to handle pixels whose pre-image lies between input…",N,N],[13,"Nearest",E,"Choose the nearest pixel to the pre-image of the output…",16,N],[13,"Bilinear",E,"Bilinearly interpolate between the four pixels closest to…",16,N],[13,"Bicubic",E,"Bicubicly interpolate between the four pixels closest to…",16,N],[5,"rotate_about_center",E,"Rotates an image clockwise about its center. The output…",N,[[["f32"],["image"],["p"],[R[2110]]],["image"]]],[5,"rotate",E,"Rotates an image clockwise about the provided center by…",N,[[["f32"],["image"],["p"],[R[2110]]],["image"]]],[5,"translate",E,"Translates the input image by t. Note that image…",N,[[["image"]],["image"]]],[5,"warp",E,"Applies a projective transformation to an image.",N,[[["image"],["p"],[R[2110]],[R[2112]]],["image"]]],[5,"warp_into",E,"Applies a projective transformation to an image, writing…",N,[[["image"],["p"],["image"],[R[2110]],[R[2112]]]]],[5,"warp_with",E,R[2111],N,[[["image"],["p"],[R[2110]],["f"]],["image"]]],[5,"warp_into_with",E,R[2111],N,[[["image"],["p"],["image"],[R[2110]],["f"]]]],[11,R[1613],E,"Creates a 2d projective transform from a row-major 3x3…",17,[[],[[R[2112]],[R[25],[R[2112]]]]]],[11,"translate",E,"A translation by (tx, ty).",17,[[["f32"]],[R[2112]]]],[11,"rotate",E,"A clockwise rotation around the top-left corner of the…",17,[[["f32"]],[R[2112]]]],[11,"scale",E,"An anisotropic scaling (sx, sy).",17,[[["f32"]],[R[2112]]]],[11,"invert",E,"Inverts the transformation.",17,[[],[R[2112]]]],[11,"from_control_points",E,"Calculates a projection from a set of four control point…",17,[[],[[R[2112]],[R[25],[R[2112]]]]]],[0,"gradients",R[2097],"Functions for computing gradients of image intensities.",N,N],[5,"horizontal_sobel","imageproc::gradients","Convolves an image with the `HORIZONTAL_SOBEL` kernel to…",N,[[[R[1950]]],[["image",["luma"]],["luma",["i16"]]]]],[5,"vertical_sobel",E,"Convolves an image with the `VERTICAL_SOBEL` kernel to…",N,[[[R[1950]]],[["image",["luma"]],["luma",["i16"]]]]],[5,"horizontal_scharr",E,"Convolves an image with the `HORIZONTAL_SCHARR` kernel to…",N,[[[R[1950]]],[["image",["luma"]],["luma",["i16"]]]]],[5,"vertical_scharr",E,"Convolves an image with the `VERTICAL_SCHARR` kernel to…",N,[[[R[1950]]],[["image",["luma"]],["luma",["i16"]]]]],[5,"horizontal_prewitt",E,"Convolves an image with the `HORIZONTAL_PREWITT` kernel to…",N,[[[R[1950]]],[["image",["luma"]],["luma",["i16"]]]]],[5,"vertical_prewitt",E,"Convolves an image with the `VERTICAL_PREWITT` kernel to…",N,[[[R[1950]]],[["image",["luma"]],["luma",["i16"]]]]],[5,"sobel_gradients",E,R[2113],N,[[[R[1950]]],[["luma",["u16"]],["image",["luma"]]]]],[5,"sobel_gradient_map",E,"Computes per-channel gradients using Sobel filters and…",N,[[["f"],["image"]],["image"]]],[5,"prewitt_gradients",E,R[2113],N,[[[R[1950]]],[["luma",["u16"]],["image",["luma"]]]]],[7,"VERTICAL_SOBEL",E,"Sobel filter for detecting vertical gradients.",N,N],[7,"HORIZONTAL_SOBEL",E,"Sobel filter for detecting horizontal gradients.",N,N],[7,"VERTICAL_SCHARR",E,"Scharr filter for detecting vertical gradients.",N,N],[7,"HORIZONTAL_SCHARR",E,"Scharr filter for detecting horizontal gradients.",N,N],[7,"VERTICAL_PREWITT",E,"Prewitt filter for detecting vertical gradients.",N,N],[7,"HORIZONTAL_PREWITT",E,"Prewitt filter for detecting horizontal gradients.",N,N],[0,"haar",R[2097],"Functions for creating and evaluating [Haar-like features].",N,N],[3,R[2156],R[2132],"A [Haar-like feature].",N,N],[4,R[2155],E,"The type of a Haar-like feature determines the number of…",N,N],[13,"TwoRegionHorizontal",E,"Two horizontally-adjacent regions of equal width.…",18,N],[13,"ThreeRegionHorizontal",E,"Three horizontally-adjacent regions of equal width.…",18,N],[13,"TwoRegionVertical",E,"Two vertically-adjacent regions of equal height. ----- | *…",18,N],[13,"ThreeRegionVertical",E,"Three vertically-adjacent regions of equal height. ----- |…",18,N],[13,"FourRegion",E,"Four regions arranged in a two-by-two grid. The two…",18,N],[5,"enumerate_haar_features",E,"Returns a vector of all valid Haar-like features for an…",N,[[["u8"]],[["vec",[R[2114]]],[R[2114]]]]],[5,"number_of_haar_features",E,"Returns the number of distinct Haar-like features for an…",N,[[["u32"]],["u32"]]],[5,"draw_haar_feature",E,"Draws the given Haar-like feature on an image, drawing…",N,[[["i"],[R[2114]]],["image"]]],[5,"draw_haar_feature_mut",E,"Draws the given Haar-like feature on an image in place,…",N,[[[R[2114]],["i"]]]],[11,"evaluate",E,"Evaluates the Haar-like feature on an integral image.",19,[[["self"],["image"]],["i32"]]],[0,"hog",R[2097],"HoG features and helpers for visualizing them.",N,N],[3,"HogOptions",R[2133],"Parameters for HoG descriptors.",N,N],[12,"orientations",E,"Number of gradient orientation bins.",20,N],[12,"signed",E,"Whether gradients in opposite directions are treated as…",20,N],[12,"cell_side",E,"Width and height of cell in pixels.",20,N],[12,"block_side",E,"Width and height of block in cells.",20,N],[12,"block_stride",E,"Offset of the start of one block from the next in cells.",20,N],[3,"HogSpec",E,"HoG options plus values calculated from these options and…",N,N],[3,"Array3d",E,"A 3d array that owns its data.",N,N],[3,"View3d",E,"A view into a 3d array.",N,N],[5,"hog",E,"Computes the HoG descriptor of an image, or None if the…",N,[[[R[1950]],[R[2115]]],[[R[3],["vec","string"]],["vec",["f32"]],["string"]]]],[5,"cell_histograms",E,"Computes orientation histograms for each cell of an image.…",N,[[["hogspec"],[R[1950]]],[["array3d",["f32"]],["f32"]]]],[5,"render_hist_grid",E,"Visualises an array of orientation histograms. The…",N,[[["view3d"],["u32"],["bool"]],[["luma",["u8"]],["image",["luma"]]]]],[11,"new",E,"User-provided options, prior to validation.",20,[[["usize"],["bool"]],[R[2115]]]],[11,"from_options",E,"Returns an error message if image dimensions aren't…",21,[[["u32"],[R[2115]]],[["hogspec"],[R[3],["hogspec","string"]],["string"]]]],[11,"descriptor_length",E,"The total size in floats of the HoG descriptor with these…",21,[[["self"]],["usize"]]],[11,"view_mut",E,"Provides a 3d view of the data.",22,[[["self"]],["view3d"]]],[0,"hough",R[2097],"Line detection via the [Hough transform].",N,N],[3,"PolarLine",R[2134],"A detected line, in polar coordinates.",N,N],[12,"r",E,"Signed distance of the line from the origin (top-left of…",23,N],[12,"angle_in_degrees",E,"Clockwise angle in degrees between the x-axis and the…",23,N],[3,R[2157],E,"Options for Hough line detection.",N,N],[12,"vote_threshold",E,"Number of votes required to be detected as a line.",24,N],[12,"suppression_radius",E,"Non-maxima suppression is applied to accumulator buckets…",24,N],[5,"detect_lines",E,"Detects lines in a binary input image using the Hough…",N,[[[R[1950]],[R[2144]]],[["vec",[R[2143]]],[R[2143]]]]],[5,"draw_polar_lines",E,R[2116],N,[[["p"],["image"]],["image"]]],[5,"draw_polar_lines_mut",E,R[2116],N,[[["p"],["image"]]]],[0,R[2117],R[2097],"Functions for computing integral images and running sums…",N,N],[5,R[2117],"imageproc::integral_image","Computes the 2d running sum of an image. Channels are…",N,[[["image"]],[["image",[R[2118]]],[R[2118]]]]],[5,"integral_squared_image",E,"Computes the 2d running sum of the squares of the…",N,[[["image"]],[["image",[R[2118]]],[R[2118]]]]],[5,"sum_image_pixels",E,"Sums the pixels in positions [left, right] * [top, bottom]…",N,[[["u32"],["image"]]]],[5,"variance",E,"Computes the variance of [left, right] * [top, bottom] in…",N,[[["image"],["u32"]],["f64"]]],[5,"row_running_sum",E,"Computes the running sum of one row of image, padded at…",N,[[[R[1950]],["u32"]]]],[5,"column_running_sum",E,"Computes the running sum of one column of image, padded at…",N,[[[R[1950]],["u32"]]]],[8,"ArrayData",E,"Hack to get around lack of const generics. See comment on…",N,N],[16,"DataType",E,"The type of the data for this array. e.g. `[T; 1]` for…",25,N],[10,"data",E,"Get the data from this pixel as a constant length array.",25,[[["self"]]]],[10,"add",E,"Add the elements of two data arrays elementwise.",25,[[]]],[10,"sub",E,"Subtract the elements of two data arrays elementwise.",25,[[]]],[0,"local_binary_patterns",R[2097],"Functions for computing local binary patterns.",N,N],[5,"local_binary_pattern","imageproc::local_binary_patterns","Computes the basic local binary pattern of a pixel, or…",N,[[["i"],["u32"]],[[R[25],["u8"]],["u8"]]]],[5,"min_shift",E,"Returns the least value of all rotations of a byte.",N,[[["u8"]],["u8"]]],[5,"count_transitions",E,"Number of bit transitions in a byte, counting the last and…",N,[[["u8"]],["u32"]]],[7,"UNIFORM_REPRESENTATIVE_2",E,"Maps uniform bytes (i.e. those with at most two bit…",N,N],[7,"MIN_SHIFT",E,"Lookup table for the least circular shift of a byte.",N,N],[0,"map",R[2097],"Functions for mapping over pixels, colors or subpixels of…",N,N],[5,"map_subpixels","imageproc::map","Applies `f` to each subpixel of the input image.",N,[[["i"],["f"]],[[R[2118]],["image",[R[2118]]]]]],[5,"map_colors",E,"Applies `f` to the color of each pixel in the input image.",N,[[["i"],["f"]],["image"]]],[5,"map_colors2",E,"Applies `f` to the colors of the pixels in the input images.",N,[[["i"],["j"],["f"]],["image"]]],[5,"map_pixels",E,"Applies `f` to each pixel in the input image.",N,[[["i"],["f"]],["image"]]],[5,"red_channel",E,"Creates a grayscale image by extracting the red channel of…",N,[[["i"]],[["luma"],["image",["luma"]]]]],[5,"as_red_channel",E,R[2119],N,[[["i"]],[["image",["rgb"]],["rgb"]]]],[5,"green_channel",E,"Creates a grayscale image by extracting the green channel…",N,[[["i"]],[["luma"],["image",["luma"]]]]],[5,"as_green_channel",E,R[2119],N,[[["i"]],[["image",["rgb"]],["rgb"]]]],[5,"blue_channel",E,"Creates a grayscale image by extracting the blue channel…",N,[[["i"]],[["luma"],["image",["luma"]]]]],[5,"as_blue_channel",E,R[2119],N,[[["i"]],[["image",["rgb"]],["rgb"]]]],[6,"ChannelMap",E,"Alias to make uses of `WithChannel` less syntactically…",N,N],[8,R[2158],E,"The type obtained by replacing the channel type of a given…",N,N],[16,"Pixel",E,"The new pixel type.",26,N],[0,"math",R[2097],"Assorted mathematical helper functions.",N,N],[5,"l2_norm","imageproc::math","L2 norm of a vector.",N,[[],["f32"]]],[5,"cast",E,"Helper for a conversion that we know can't fail.",N,[[[T]],[U]]],[0,"morphology",R[2097],"Functions for computing [morphological operators].",N,N],[5,"dilate","imageproc::morphology",R[2120],N,[[[R[1950]],["norm"],["u8"]],[R[1950]]]],[5,"dilate_mut",E,R[2120],N,[[["norm"],[R[1950]],["u8"]]]],[5,"erode",E,R[2121],N,[[[R[1950]],["norm"],["u8"]],[R[1950]]]],[5,"erode_mut",E,R[2121],N,[[["norm"],[R[1950]],["u8"]]]],[5,"open",E,R[2122],N,[[[R[1950]],["norm"],["u8"]],[R[1950]]]],[5,"open_mut",E,R[2122],N,[[["norm"],[R[1950]],["u8"]]]],[5,"close",E,R[2123],N,[[[R[1950]],["norm"],["u8"]],[R[1950]]]],[5,"close_mut",E,R[2123],N,[[["norm"],[R[1950]],["u8"]]]],[0,"noise",R[2097],"Functions for adding synthetic noise to images.",N,N],[5,"gaussian_noise","imageproc::noise",R[2124],N,[[["f64"],["u64"],["image"]],["image"]]],[5,"gaussian_noise_mut",E,R[2124],N,[[["image"],["f64"],["u64"]]]],[5,"salt_and_pepper_noise",E,"Converts pixels to black or white at the given `rate`…",N,[[["f64"],["u64"],["image"]],["image"]]],[5,"salt_and_pepper_noise_mut",E,"Converts pixels to black or white in place at the given…",N,[[["image"],["f64"],["u64"]]]],[0,"pixelops",R[2097],"Pixel manipulations.",N,N],[5,"weighted_sum","imageproc::pixelops","Adds pixels with the given weights. Results are clamped to…",N,[[["f32"],["pixel"]],["pixel"]]],[5,"interpolate",E,"Equivalent to `weighted_sum(left, right, left_weight, 1 -…",N,[[["f32"],["pixel"]],["pixel"]]],[0,"rect",R[2097],"Basic manipulation of rectangles.",N,N],[3,"Rect",R[2135],"A rectangular region of non-zero width and height. #…",N,N],[3,R[2159],E,"Position of the top left of a rectangle. Only used when…",N,N],[8,"Region",E,"A geometrical representation of a set of 2D points with…",N,N],[10,"contains",E,"Whether this region contains the given point.",27,[[["self"],[T]],["bool"]]],[11,"at",E,"Reduces possibility of confusing coordinates and…",28,[[["i32"]],[R[2145]]]],[11,"top",E,"Smallest y-coordinate reached by rect.",28,[[["self"]],["i32"]]],[11,"left",E,"Smallest x-coordinate reached by rect.",28,[[["self"]],["i32"]]],[11,"bottom",E,"Greatest y-coordinate reached by rect.",28,[[["self"]],["i32"]]],[11,"right",E,"Greatest x-coordinate reached by rect.",28,[[["self"]],["i32"]]],[11,"width",E,"Width of rect.",28,[[["self"]],["u32"]]],[11,"height",E,"Height of rect.",28,[[["self"]],["u32"]]],[11,"intersect",E,"Returns the intersection of self and other, or none if…",28,[[["self"],["rect"]],[["rect"],[R[25],["rect"]]]]],[11,"of_size",E,"Construct a rectangle from a position and size. Width and…",29,[[["u32"]],["rect"]]],[0,"region_labelling",R[2097],"Functions for finding and labelling connected components…",N,N],[4,R[2160],R[2136],"Determines which neighbors of a pixel we consider to be…",N,N],[13,"Four",E,"A pixel is connected to its N, S, E and W neighbors.",30,N],[13,"Eight",E,"A pixel is connected to all of its neighbors.",30,N],[5,"connected_components",E,"Returns an image of the same size as the input, where each…",N,[[["i"],[R[2146]]],[["image",["luma"]],["luma",["u32"]]]]],[0,"seam_carving",R[2097],"An implementation of [seam carving]. Currently in a pretty…",N,N],[3,R[2165],R[2137],"An image seam connecting the bottom of an image to its top…",N,N],[5,"shrink_width",E,"Reduces the width of an image using seam carving.",N,[[["u32"],["image"]],["image"]]],[5,"find_vertical_seam",E,"Computes an 8-connected path from the bottom of the image…",N,[[["image"]],[R[2125]]]],[5,"remove_vertical_seam",E,"Returns the result of removing `seam` from `image`.",N,[[[R[2125]],["image"]],["image"]]],[5,"draw_vertical_seams",E,"Draws a series of `seams` on `image` in red. Assumes that…",N,[[[R[1950]]],[["image",["rgb"]],["rgb",["u8"]]]]],[0,"stats",R[2097],"Statistical properties of images.",N,N],[3,R[2161],R[2138],"A set of per-channel histograms from an image with 8 bits…",N,N],[12,R[1986],E,"Per-channel histograms.",31,N],[3,R[2162],E,"A set of per-channel cumulative histograms from an image…",N,N],[12,R[1986],E,"Per-channel cumulative histograms.",32,N],[5,"histogram",E,"Returns a vector of per-channel histograms.",N,[[["image"]],["channelhistogram"]]],[5,"cumulative_histogram",E,"Returns per-channel cumulative histograms.",N,[[["image"]],["cumulativechannelhistogram"]]],[5,"percentile",E,"Returns the `p`th percentile of the pixel intensities in…",N,[[[R[1950]],["u8"]],["u8"]]],[5,"root_mean_squared_error",E,"Returns the square root of the mean of the squares of…",N,[[["i"],["j"]],["f64"]]],[5,"peak_signal_to_noise_ratio",E,"Returns the peak signal to noise ratio for a clean image…",N,[[["i"],["j"]],["f64"]]],[0,"suppress",R[2097],"Functions for suppressing non-maximal values.",N,N],[5,"suppress_non_maximum","imageproc::suppress","Returned image has zeroes for all inputs pixels which do…",N,[[["i"],["u32"]],[["vec"],[R[1873],["luma","vec"]],["luma"]]]],[5,"local_maxima",E,"Returns all items which have the highest score in the (2 *…",N,[[["u32"]],["vec"]]],[0,"template_matching",R[2097],"Functions for performing template matching.",N,N],[3,"Extremes",R[2139],"The largest and smallest values in an image, together with…",N,N],[12,R[608],E,"The largest value in an image.",33,N],[12,R[607],E,"The smallest value in an image.",33,N],[12,"max_value_location",E,"The coordinates of the largest value in an image.",33,N],[12,"min_value_location",E,"The coordinates of the smallest value in an image.",33,N],[4,R[2163],E,"Method used to compute the matching score between a…",N,N],[13,"SumOfSquaredErrors",E,"Sum of the squares of the difference between image and…",34,N],[13,"SumOfSquaredErrorsNormalized",E,"Divides the sum computed using `SumOfSquaredErrors` by a…",34,N],[13,"CrossCorrelation",E,"Cross Correlation",34,N],[13,"CrossCorrelationNormalized",E,"Divides the sum computed using `CrossCorrelation` by a…",34,N],[5,"match_template",E,"Slides a `template` over an `image` and scores the match…",N,[[[R[1950]],[R[2147]]],[["luma",["f32"]],["image",["luma"]]]]],[5,"find_extremes",E,"Finds the largest and smallest values in an image and…",N,[[["image"]],["extremes"]]],[0,"union_find",R[2097],"An implementation of disjoint set forests for union find.",N,N],[3,R[2164],R[2140],"Data structure for efficient union find.",N,N],[11,"new",E,"Constructs forest of singletons with count elements.",35,[[["usize"]],["disjointsetforest"]]],[11,"num_trees",E,"Returns the number of trees in the forest.",35,[[["self"]],["usize"]]],[11,"root",E,"Returns index of the root of the tree containing i. Needs…",35,[[["self"],["usize"]],["usize"]]],[11,"find",E,"Returns true if i and j are in the same tree. Need mutable…",35,[[["self"],["usize"]],["bool"]]],[11,"union",E,"Unions the trees containing i and j.",35,[[["self"],["usize"]]]],[11,"trees",E,"Returns the elements of each tree.",35,[[["self"]],[["vec",["vec"]],["vec",["usize"]]]]],[14,"gray_image",R[2097],"Helper for defining greyscale images.",N,N],[14,"rgb_image",E,"Helper for defining RGB images.",N,N],[14,"rgba_image",E,"Helper for defining RGBA images.",N,N],[14,"assert_pixels_eq",E,"Panics if any pixels differ between the two input images.",N,N],[14,"assert_pixels_eq_within",E,"Panics if any pixels differ between the two images by more…",N,N],[14,"assert_dimensions_match",E,"Panics if image dimensions do not match.",N,N],[11,"from",R[2126],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[277],E,E,0,[[["src"]],[R[3]]]],[11,R[276],E,E,0,[[],[R[3]]]],[11,R[278],E,E,0,[[],[R[3]]]],[11,R[275],E,E,0,[[["src"]],[R[3]]]],[11,R[8],E,E,0,[[["src"]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,"from",R[2127],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[277],E,E,1,[[["src"]],[R[3]]]],[11,R[276],E,E,1,[[],[R[3]]]],[11,R[278],E,E,1,[[],[R[3]]]],[11,R[275],E,E,1,[[["src"]],[R[3]]]],[11,R[8],E,E,1,[[["src"]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,R[277],E,E,2,[[["src"]],[R[3]]]],[11,R[276],E,E,2,[[],[R[3]]]],[11,R[278],E,E,2,[[],[R[3]]]],[11,R[275],E,E,2,[[["src"]],[R[3]]]],[11,R[8],E,E,2,[[["src"]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,"from",R[2128],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"],[T]]]],[11,R[8],E,E,8,[[[U]],[R[3]]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,R[277],E,E,8,[[["src"]],[R[3]]]],[11,R[276],E,E,8,[[],[R[3]]]],[11,R[278],E,E,8,[[],[R[3]]]],[11,R[275],E,E,8,[[["src"]],[R[3]]]],[11,R[8],E,E,8,[[["src"]],[R[3]]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,"from",R[2129],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[8],E,E,9,[[[U]],[R[3]]]],[11,R[9],E,E,9,[[],[R[3]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,R[277],E,E,9,[[["src"]],[R[3]]]],[11,R[276],E,E,9,[[],[R[3]]]],[11,R[278],E,E,9,[[],[R[3]]]],[11,R[275],E,E,9,[[["src"]],[R[3]]]],[11,R[8],E,E,9,[[["src"]],[R[3]]]],[11,R[9],E,E,9,[[],[R[3]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[23],E,E,10,[[],["i"]]],[11,R[8],E,E,10,[[[U]],[R[3]]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,R[2082],E,E,10,[[],[R[1786]]]],[11,R[277],E,E,10,[[["src"]],[R[3]]]],[11,R[276],E,E,10,[[],[R[3]]]],[11,R[278],E,E,10,[[],[R[3]]]],[11,R[275],E,E,10,[[["src"]],[R[3]]]],[11,R[8],E,E,10,[[["src"]],[R[3]]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[23],E,E,11,[[],["i"]]],[11,R[8],E,E,11,[[[U]],[R[3]]]],[11,R[9],E,E,11,[[],[R[3]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,R[2082],E,E,11,[[],[R[1786]]]],[11,R[277],E,E,11,[[["src"]],[R[3]]]],[11,R[276],E,E,11,[[],[R[3]]]],[11,R[278],E,E,11,[[],[R[3]]]],[11,R[275],E,E,11,[[["src"]],[R[3]]]],[11,R[8],E,E,11,[[["src"]],[R[3]]]],[11,R[9],E,E,11,[[],[R[3]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[23],E,E,12,[[],["i"]]],[11,R[8],E,E,12,[[[U]],[R[3]]]],[11,R[9],E,E,12,[[],[R[3]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,R[2082],E,E,12,[[],[R[1786]]]],[11,R[277],E,E,12,[[["src"]],[R[3]]]],[11,R[276],E,E,12,[[],[R[3]]]],[11,R[278],E,E,12,[[],[R[3]]]],[11,R[275],E,E,12,[[["src"]],[R[3]]]],[11,R[8],E,E,12,[[["src"]],[R[3]]]],[11,R[9],E,E,12,[[],[R[3]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[42],E,E,13,[[["self"],[T]]]],[11,R[8],E,E,13,[[[U]],[R[3]]]],[11,R[9],E,E,13,[[],[R[3]]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,R[277],E,E,13,[[["src"]],[R[3]]]],[11,R[276],E,E,13,[[],[R[3]]]],[11,R[278],E,E,13,[[],[R[3]]]],[11,R[275],E,E,13,[[["src"]],[R[3]]]],[11,R[8],E,E,13,[[["src"]],[R[3]]]],[11,R[9],E,E,13,[[],[R[3]]]],[11,"from",R[2130],E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[8],E,E,15,[[[U]],[R[3]]]],[11,R[9],E,E,15,[[],[R[3]]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,R[277],E,E,15,[[["src"]],[R[3]]]],[11,R[276],E,E,15,[[],[R[3]]]],[11,R[278],E,E,15,[[],[R[3]]]],[11,R[275],E,E,15,[[["src"]],[R[3]]]],[11,R[8],E,E,15,[[["src"]],[R[3]]]],[11,R[9],E,E,15,[[],[R[3]]]],[11,"from",R[2131],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[42],E,E,17,[[["self"],[T]]]],[11,R[8],E,E,17,[[[U]],[R[3]]]],[11,R[9],E,E,17,[[],[R[3]]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,R[277],E,E,17,[[["src"]],[R[3]]]],[11,R[276],E,E,17,[[],[R[3]]]],[11,R[278],E,E,17,[[],[R[3]]]],[11,R[275],E,E,17,[[["src"]],[R[3]]]],[11,R[8],E,E,17,[[["src"]],[R[3]]]],[11,R[9],E,E,17,[[],[R[3]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[42],E,E,16,[[["self"],[T]]]],[11,R[8],E,E,16,[[[U]],[R[3]]]],[11,R[9],E,E,16,[[],[R[3]]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,R[277],E,E,16,[[["src"]],[R[3]]]],[11,R[276],E,E,16,[[],[R[3]]]],[11,R[278],E,E,16,[[],[R[3]]]],[11,R[275],E,E,16,[[["src"]],[R[3]]]],[11,R[8],E,E,16,[[["src"]],[R[3]]]],[11,R[9],E,E,16,[[],[R[3]]]],[11,"from",R[2132],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[42],E,E,19,[[["self"],[T]]]],[11,R[8],E,E,19,[[[U]],[R[3]]]],[11,R[9],E,E,19,[[],[R[3]]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,R[277],E,E,19,[[["src"]],[R[3]]]],[11,R[276],E,E,19,[[],[R[3]]]],[11,R[278],E,E,19,[[],[R[3]]]],[11,R[275],E,E,19,[[["src"]],[R[3]]]],[11,R[8],E,E,19,[[["src"]],[R[3]]]],[11,R[9],E,E,19,[[],[R[3]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[42],E,E,18,[[["self"],[T]]]],[11,R[8],E,E,18,[[[U]],[R[3]]]],[11,R[9],E,E,18,[[],[R[3]]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,R[277],E,E,18,[[["src"]],[R[3]]]],[11,R[276],E,E,18,[[],[R[3]]]],[11,R[278],E,E,18,[[],[R[3]]]],[11,R[275],E,E,18,[[["src"]],[R[3]]]],[11,R[8],E,E,18,[[["src"]],[R[3]]]],[11,R[9],E,E,18,[[],[R[3]]]],[11,"from",R[2133],E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[42],E,E,20,[[["self"],[T]]]],[11,R[8],E,E,20,[[[U]],[R[3]]]],[11,R[9],E,E,20,[[],[R[3]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,R[277],E,E,20,[[["src"]],[R[3]]]],[11,R[276],E,E,20,[[],[R[3]]]],[11,R[278],E,E,20,[[],[R[3]]]],[11,R[275],E,E,20,[[["src"]],[R[3]]]],[11,R[8],E,E,20,[[["src"]],[R[3]]]],[11,R[9],E,E,20,[[],[R[3]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[42],E,E,21,[[["self"],[T]]]],[11,R[8],E,E,21,[[[U]],[R[3]]]],[11,R[9],E,E,21,[[],[R[3]]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,R[277],E,E,21,[[["src"]],[R[3]]]],[11,R[276],E,E,21,[[],[R[3]]]],[11,R[278],E,E,21,[[],[R[3]]]],[11,R[275],E,E,21,[[["src"]],[R[3]]]],[11,R[8],E,E,21,[[["src"]],[R[3]]]],[11,R[9],E,E,21,[[],[R[3]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[8],E,E,22,[[[U]],[R[3]]]],[11,R[9],E,E,22,[[],[R[3]]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,R[277],E,E,22,[[["src"]],[R[3]]]],[11,R[276],E,E,22,[[],[R[3]]]],[11,R[278],E,E,22,[[],[R[3]]]],[11,R[275],E,E,22,[[["src"]],[R[3]]]],[11,R[8],E,E,22,[[["src"]],[R[3]]]],[11,R[9],E,E,22,[[],[R[3]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[8],E,E,36,[[[U]],[R[3]]]],[11,R[9],E,E,36,[[],[R[3]]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[29]]]],[11,R[277],E,E,36,[[["src"]],[R[3]]]],[11,R[276],E,E,36,[[],[R[3]]]],[11,R[278],E,E,36,[[],[R[3]]]],[11,R[275],E,E,36,[[["src"]],[R[3]]]],[11,R[8],E,E,36,[[["src"]],[R[3]]]],[11,R[9],E,E,36,[[],[R[3]]]],[11,"from",R[2134],E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[42],E,E,23,[[["self"],[T]]]],[11,R[8],E,E,23,[[[U]],[R[3]]]],[11,R[9],E,E,23,[[],[R[3]]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,R[277],E,E,23,[[["src"]],[R[3]]]],[11,R[276],E,E,23,[[],[R[3]]]],[11,R[278],E,E,23,[[],[R[3]]]],[11,R[275],E,E,23,[[["src"]],[R[3]]]],[11,R[8],E,E,23,[[["src"]],[R[3]]]],[11,R[9],E,E,23,[[],[R[3]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[42],E,E,24,[[["self"],[T]]]],[11,R[8],E,E,24,[[[U]],[R[3]]]],[11,R[9],E,E,24,[[],[R[3]]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,R[277],E,E,24,[[["src"]],[R[3]]]],[11,R[276],E,E,24,[[],[R[3]]]],[11,R[278],E,E,24,[[],[R[3]]]],[11,R[275],E,E,24,[[["src"]],[R[3]]]],[11,R[8],E,E,24,[[["src"]],[R[3]]]],[11,R[9],E,E,24,[[],[R[3]]]],[11,"from",R[2135],E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[42],E,E,28,[[["self"],[T]]]],[11,R[8],E,E,28,[[[U]],[R[3]]]],[11,R[9],E,E,28,[[],[R[3]]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,R[277],E,E,28,[[["src"]],[R[3]]]],[11,R[276],E,E,28,[[],[R[3]]]],[11,R[278],E,E,28,[[],[R[3]]]],[11,R[275],E,E,28,[[["src"]],[R[3]]]],[11,R[8],E,E,28,[[["src"]],[R[3]]]],[11,R[9],E,E,28,[[],[R[3]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[41],E,E,29,[[["self"]],[T]]],[11,R[42],E,E,29,[[["self"],[T]]]],[11,R[8],E,E,29,[[[U]],[R[3]]]],[11,R[9],E,E,29,[[],[R[3]]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[29]]]],[11,R[277],E,E,29,[[["src"]],[R[3]]]],[11,R[276],E,E,29,[[],[R[3]]]],[11,R[278],E,E,29,[[],[R[3]]]],[11,R[275],E,E,29,[[["src"]],[R[3]]]],[11,R[8],E,E,29,[[["src"]],[R[3]]]],[11,R[9],E,E,29,[[],[R[3]]]],[11,"from",R[2136],E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[41],E,E,30,[[["self"]],[T]]],[11,R[42],E,E,30,[[["self"],[T]]]],[11,R[8],E,E,30,[[[U]],[R[3]]]],[11,R[9],E,E,30,[[],[R[3]]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,R[277],E,E,30,[[["src"]],[R[3]]]],[11,R[276],E,E,30,[[],[R[3]]]],[11,R[278],E,E,30,[[],[R[3]]]],[11,R[275],E,E,30,[[["src"]],[R[3]]]],[11,R[8],E,E,30,[[["src"]],[R[3]]]],[11,R[9],E,E,30,[[],[R[3]]]],[11,"from",R[2137],E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[8],E,E,37,[[[U]],[R[3]]]],[11,R[9],E,E,37,[[],[R[3]]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[29]]]],[11,R[277],E,E,37,[[["src"]],[R[3]]]],[11,R[276],E,E,37,[[],[R[3]]]],[11,R[278],E,E,37,[[],[R[3]]]],[11,R[275],E,E,37,[[["src"]],[R[3]]]],[11,R[8],E,E,37,[[["src"]],[R[3]]]],[11,R[9],E,E,37,[[],[R[3]]]],[11,"from",R[2138],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[8],E,E,31,[[[U]],[R[3]]]],[11,R[9],E,E,31,[[],[R[3]]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[29]]]],[11,R[277],E,E,31,[[["src"]],[R[3]]]],[11,R[276],E,E,31,[[],[R[3]]]],[11,R[278],E,E,31,[[],[R[3]]]],[11,R[275],E,E,31,[[["src"]],[R[3]]]],[11,R[8],E,E,31,[[["src"]],[R[3]]]],[11,R[9],E,E,31,[[],[R[3]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[8],E,E,32,[[[U]],[R[3]]]],[11,R[9],E,E,32,[[],[R[3]]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[29]]]],[11,R[277],E,E,32,[[["src"]],[R[3]]]],[11,R[276],E,E,32,[[],[R[3]]]],[11,R[278],E,E,32,[[],[R[3]]]],[11,R[275],E,E,32,[[["src"]],[R[3]]]],[11,R[8],E,E,32,[[["src"]],[R[3]]]],[11,R[9],E,E,32,[[],[R[3]]]],[11,"from",R[2139],E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[41],E,E,33,[[["self"]],[T]]],[11,R[42],E,E,33,[[["self"],[T]]]],[11,R[8],E,E,33,[[[U]],[R[3]]]],[11,R[9],E,E,33,[[],[R[3]]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[29]]]],[11,R[277],E,E,33,[[["src"]],[R[3]]]],[11,R[276],E,E,33,[[],[R[3]]]],[11,R[278],E,E,33,[[],[R[3]]]],[11,R[275],E,E,33,[[["src"]],[R[3]]]],[11,R[8],E,E,33,[[["src"]],[R[3]]]],[11,R[9],E,E,33,[[],[R[3]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[41],E,E,34,[[["self"]],[T]]],[11,R[42],E,E,34,[[["self"],[T]]]],[11,R[8],E,E,34,[[[U]],[R[3]]]],[11,R[9],E,E,34,[[],[R[3]]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[29]]]],[11,R[277],E,E,34,[[["src"]],[R[3]]]],[11,R[276],E,E,34,[[],[R[3]]]],[11,R[278],E,E,34,[[],[R[3]]]],[11,R[275],E,E,34,[[["src"]],[R[3]]]],[11,R[8],E,E,34,[[["src"]],[R[3]]]],[11,R[9],E,E,34,[[],[R[3]]]],[11,"from",R[2140],E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[8],E,E,35,[[[U]],[R[3]]]],[11,R[9],E,E,35,[[],[R[3]]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[29]]]],[11,R[277],E,E,35,[[["src"]],[R[3]]]],[11,R[276],E,E,35,[[],[R[3]]]],[11,R[278],E,E,35,[[],[R[3]]]],[11,R[275],E,E,35,[[["src"]],[R[3]]]],[11,R[8],E,E,35,[[["src"]],[R[3]]]],[11,R[9],E,E,35,[[],[R[3]]]],[11,"x",R[2127],R[2141],1,[[["self"]],["u32"]]],[11,"y",E,R[2142],1,[[["self"]],["u32"]]],[11,"score",E,E,1,[[["self"]],["f32"]]],[11,R[1967],R[2129],E,9,[[["self"]]]],[11,R[2000],E,E,9,[[["self"],["u32"]]]],[11,"draw_pixel",E,E,9,[[["self"],["u32"]]]],[11,"contains",R[2135],E,28,[[["self"],["i32"]],["bool"]]],[11,"contains",E,E,28,[[["self"],["f32"]],["bool"]]],[11,"next",R[2129],E,10,[[["self"]],[R[25]]]],[11,"next",E,E,11,[[["self"]],[R[25]]]],[11,"next",E,E,12,[[["self"]],[R[25]]]],[11,"eq",R[2127],E,1,[[["self"],["corner"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["corner"]],["bool"]]],[11,"eq",R[2128],E,8,[[["self"],["norm"]],["bool"]]],[11,"eq",R[2129],E,13,[[["self"],["point"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["point"]],["bool"]]],[11,"eq",R[2131],E,16,[[["self"],[R[2110]]],["bool"]]],[11,"eq",R[2132],E,19,[[["self"],[R[2114]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[2114]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[2148]]],["bool"]]],[11,"eq",R[2133],E,20,[[["self"],[R[2115]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[2115]]],["bool"]]],[11,"eq",E,E,21,[[["self"],["hogspec"]],["bool"]]],[11,"ne",E,E,21,[[["self"],["hogspec"]],["bool"]]],[11,"eq",R[2134],E,23,[[["self"],[R[2143]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[2143]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[2144]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[2144]]],["bool"]]],[11,"eq",R[2135],E,28,[[["self"],["rect"]],["bool"]]],[11,"ne",E,E,28,[[["self"],["rect"]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[2145]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[2145]]],["bool"]]],[11,"eq",R[2136],E,30,[[["self"],[R[2146]]],["bool"]]],[11,"eq",R[2139],E,34,[[["self"],[R[2147]]],["bool"]]],[11,"eq",E,E,33,[[["self"],["extremes"]],["bool"]]],[11,"ne",E,E,33,[[["self"],["extremes"]],["bool"]]],[11,"clone",R[2127],E,1,[[["self"]],["corner"]]],[11,"clone",R[2128],E,8,[[["self"]],["norm"]]],[11,"clone",R[2129],E,13,[[["self"]],["point"]]],[11,"clone",R[2131],E,17,[[["self"]],[R[2112]]]],[11,"clone",E,E,16,[[["self"]],[R[2110]]]],[11,"clone",R[2132],E,19,[[["self"]],[R[2114]]]],[11,"clone",E,E,18,[[["self"]],[R[2148]]]],[11,"clone",R[2133],E,20,[[["self"]],[R[2115]]]],[11,"clone",E,E,21,[[["self"]],["hogspec"]]],[11,"clone",R[2134],E,23,[[["self"]],[R[2143]]]],[11,"clone",E,E,24,[[["self"]],[R[2144]]]],[11,"clone",R[2135],E,28,[[["self"]],["rect"]]],[11,"clone",E,E,29,[[["self"]],[R[2145]]]],[11,"clone",R[2136],E,30,[[["self"]],[R[2146]]]],[11,"clone",R[2139],E,34,[[["self"]],[R[2147]]]],[11,"clone",E,E,33,[[["self"]],["extremes"]]],[11,"fmt",R[2127],E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[2128],E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[2129],E,13,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[2131],E,17,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[2132],E,19,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[2133],E,20,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[2134],E,23,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[2135],E,28,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[2136],E,30,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[2139],E,34,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[3]]]],[11,"mul",R[2131],E,17,[[[R[2112]]],[R[2112]]]],[11,"mul",E,E,17,[[]]],[11,"hash",R[2132],E,18,[[["self"],["__h"]]]],[11,"width",R[2129],R[2149],14,[[["self"]],["u32"]]],[11,"height",E,R[2150],14,[[["self"]],["u32"]]]],"p":[[3,"Diff"],[3,"Corner"],[4,"Fast"],[8,"HasBlack"],[8,"HasWhite"],[8,"Position"],[8,"Score"],[8,"Clamp"],[4,"Norm"],[3,"Blend"],[3,R[2151]],[3,R[2152]],[3,R[2153]],[3,"Point"],[8,"Canvas"],[3,"Kernel"],[4,R[2154]],[3,"Projection"],[4,R[2155]],[3,R[2156]],[3,"HogOptions"],[3,"HogSpec"],[3,"Array3d"],[3,"PolarLine"],[3,R[2157]],[8,"ArrayData"],[8,R[2158]],[8,"Region"],[3,"Rect"],[3,R[2159]],[4,R[2160]],[3,R[2161]],[3,R[2162]],[3,"Extremes"],[4,R[2163]],[3,R[2164]],[3,"View3d"],[3,R[2165]]]};
searchIndex["inflate"]={"doc":"A DEFLATE decoder written in rust.","i":[[3,R[131],"inflate","A DEFLATE decoder.",N,N],[3,R[133],E,R[113],N,N],[3,R[132],E,R[113],N,N],[3,R[134],E,E,N,N],[5,"inflate_bytes",E,"Decompress the given slice of DEFLATE compressed data.",N,[[],[[R[3],["vec","string"]],["string"],["vec",["u8"]]]]],[5,"inflate_bytes_zlib",E,R[114],N,[[],[[R[3],["vec","string"]],["string"],["vec",["u8"]]]]],[5,"inflate_bytes_zlib_no_checksum",E,R[114],N,[[],[[R[3],["vec","string"]],["string"],["vec",["u8"]]]]],[11,"new",E,E,0,[[["w"]],[R[115]]]],[11,R[116],E,E,0,[[["w"]],[R[115]]]],[11,"finish",E,E,0,[[],[R[3]]]],[11,"new",E,R[119],1,[[["r"]],[R[117]]]],[11,R[116],E,R[118],1,[[["r"]],[R[117]]]],[11,R[121],E,R[118],1,[[["r"]],[R[117]]]],[11,"reset",E,R[122],1,[[["self"],["r"]],["r"]]],[11,R[124],E,R[125],1,[[["self"]]]],[11,"get_ref",E,"Returns a reference to the underlying `BufRead` instance.",1,[[["self"]],["r"]]],[11,"get_mut",E,"Returns a mutable reference to the underlying `BufRead`…",1,[[["self"]],["r"]]],[11,R[7],E,"Drops the decoder and return the inner `BufRead` instance.",1,[[],["r"]]],[11,"total_in",E,"Returns the total bytes read from the underlying `BufRead`…",1,[[["self"]],["u64"]]],[11,R[126],E,R[123],1,[[["self"]],["u64"]]],[11,R[127],E,R[128],1,[[["self"]],["u32"]]],[11,"new",E,R[119],2,[[["r"]],[R[120]]]],[11,R[116],E,R[118],2,[[["r"]],[R[120]]]],[11,R[121],E,R[118],2,[[["r"]],[R[120]]]],[11,"reset",E,R[122],2,[[["self"],["r"]],["r"]]],[11,"get_ref",E,"Returns a reference to the underlying reader.",2,[[["self"]],["r"]]],[11,"get_mut",E,"Returns a mutable reference to the underlying reader.",2,[[["self"]],["r"]]],[11,R[7],E,R[123],2,[[],["r"]]],[11,R[124],E,R[125],2,[[["self"]]]],[11,"total_in",E,"Returns the total bytes read from the underlying reader.",2,[[["self"]],["u64"]]],[11,R[126],E,R[123],2,[[["self"]],["u64"]]],[11,R[127],E,R[128],2,[[["self"]],["u32"]]],[11,"new",E,"Create a new stream for decoding raw deflate encoded data.",3,[[],[R[129]]]],[11,R[116],E,R[130],3,[[],[R[129]]]],[11,R[121],E,R[130],3,[[],[R[129]]]],[11,"reset",E,E,3,[[["self"]]]],[11,"reset_to_zlib",E,E,3,[[["self"]]]],[11,"update",E,"Try to uncompress/decode the data in `data`.",3,[[["self"]],[[R[3],["string"]],["string"]]]],[11,R[127],E,R[128],3,[[["self"]],["u32"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"write",E,E,0,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,E,0,[[["self"]],[R[3]]]],[11,"read",E,E,1,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"read",E,E,2,[[["self"]],[[R[3],["usize"]],["usize"]]]]],"p":[[3,R[131]],[3,R[132]],[3,R[133]],[3,R[134]]]};
searchIndex["itertools"]={"doc":"Itertools — extra iterator adaptors, functions and macros.","i":[[4,"Either",R[149],R[135],N,N],[13,"Left",E,R[136],0,N],[13,"Right",E,R[137],0,N],[4,"Diff",E,"A type returned by the `diff_with` function.",N,N],[13,"FirstMismatch",E,"The index of the first non-matching element along with…",1,N],[13,"Shorter",E,"The total number of elements that were in `J` along with…",1,N],[13,"Longer",E,"The total number of elements that were in `I` along with…",1,N],[4,R[208],E,"`MinMaxResult` is an enum returned by `minmax`. See…",N,N],[13,"NoElements",E,"Empty iterator",2,N],[13,"OneElement",E,"Iterator with one element, so the minimum and maximum are…",2,N],[13,"MinMax",E,"More than one element in the iterator, the first element…",2,N],[4,"Position",E,"A value yielded by `WithPosition`. Indicates the position…",N,N],[13,"First",E,"This is the first element.",3,N],[13,"Middle",E,"This is neither the first nor the last element.",3,N],[13,"Last",E,"This is the last element.",3,N],[13,"Only",E,"This is the only element.",3,N],[4,R[209],E,"Value that either holds a single A or B, or both.",N,N],[13,"Both",E,"Both values are present.",4,N],[13,"Left",E,"Only the left value of type `A` is present.",4,N],[13,"Right",E,"Only the right value of type `B` is present.",4,N],[4,R[210],E,"An enum used for controlling the execution of…",N,N],[13,R[915],E,"Continue folding with this value",5,N],[13,"Done",E,"Fold is complete and will return this value",5,N],[5,"flatten",E,"Flatten an iterable of iterables into a single combined…",N,[[["i"]],["flatten"]]],[5,"concat",E,R[166],N,[[["i"]]]],[5,"cons_tuples",E,"Create an iterator that maps for example iterators of…",N,[[["i"]],["constuples"]]],[5,"diff_with",E,"Compares every element yielded by both `i` and `j` with…",N,[[["j"],["i"],["f"]],[[R[25],["diff"]],["diff"]]]],[5,R[160],E,R[140],N,[[["i"],["f"]],["kmergeby"]]],[5,"process_results",E,"“Lift” a function of the values of an iterator so that it…",N,[[["i"],["f"]],[R[3]]]],[5,"repeat_n",E,"Create an iterator that produces `n` repetitions of…",N,[[["a"],["usize"]],["repeatn"]]],[5,"repeat_call",E,"An iterator source that produces elements indefinitely by…",N,[[["f"]],["repeatcall"]]],[5,"unfold",E,"Creates a new unfold source with the specified closure as…",N,[[["f"],["st"]],["unfold"]]],[5,"iterate",E,"Creates a new iterator that infinitely applies function to…",N,[[["f"],["st"]],["iterate"]]],[5,"multizip",E,"An iterator that generalizes .zip() and allows running…",N,[[[U]],["zip"]]],[5,R[138],E,"Create an iterator that interleaves elements in `i` and `j`.",N,[[["j"],["i"]],[R[138]]]],[5,"merge",E,"Create an iterator that merges elements in `i` and `j`.",N,[[["j"],["i"]],["merge"]]],[5,R[152],E,"Create an iterator where you can put back a single item",N,[[["i"]],["putback"]]],[5,"put_back_n",E,"Create an iterator where you can put back multiple values…",N,[[["i"]],["putbackn"]]],[5,R[139],E,"An iterator adaptor that allows the user to peek at…",N,[[["i"]],[R[139]]]],[5,"kmerge",E,R[140],N,[[["i"]],["kmerge"]]],[5,"zip_eq",E,R[142],N,[[["j"],["i"]],["zipeq"]]],[5,R[158],E,"Return an iterator adaptor that merge-joins items from the…",N,[[["j"],["i"],["f"]],[R[159]]]],[5,"rciter",E,"Return an iterator inside a `Rc<RefCell<_>>` wrapper.",N,[[["i"]],["rciter"]]],[5,R[141],E,"Iterate `iterable` with a running index.",N,[[["i"]],[R[141]]]],[5,"rev",E,"Iterate `iterable` in reverse.",N,[[["i"]],["rev"]]],[5,"zip",E,R[142],N,[[["j"],["i"]],["zip"]]],[5,"chain",E,"Create an iterator that first iterates `i` and then `j`.",N,[[["j"],["i"]],["chain"]]],[5,"cloned",E,"Create an iterator that clones each element from &T to T",N,[[["i"]],["cloned"]]],[5,"fold",E,"Perform a fold operation over the iterable.",N,[[["i"],["b"],["f"]],["b"]]],[5,"all",E,"Test whether the predicate holds for all elements in the…",N,[[["i"],["f"]],["bool"]]],[5,"any",E,"Test whether the predicate holds for any elements in the…",N,[[["i"],["f"]],["bool"]]],[5,"max",E,"Return the maximum value of the iterable.",N,[[["i"]],[R[25]]]],[5,"min",E,"Return the minimum value of the iterable.",N,[[["i"]],[R[25]]]],[5,"join",E,R[167],N,[[["i"],["str"]],["string"]]],[5,"sorted",E,"Collect all the iterable's elements into a sorted vector…",N,[[["i"]],["vec"]]],[5,"equal",E,"Return `true` if both iterables produce equal sequences…",N,[[["j"],["i"]],["bool"]]],[5,"assert_equal",E,"Assert that two iterables produce equal sequences, with…",N,[[["j"],["i"]]]],[5,"partition",E,"Partition a sequence using predicate `pred` so that…",N,[[["i"],["f"]],["usize"]]],[0,"structs",E,"The concrete iterator types.",N,N],[3,"Dedup",R[151],"An iterator adaptor that removes repeated duplicates.",N,N],[3,R[214],E,"An iterator adaptor that alternates elements from two…",N,N],[3,R[215],E,"An iterator adaptor that alternates elements from the two…",N,N],[3,"Product",E,R[144],N,N],[3,"PutBack",E,"An iterator adaptor that allows putting back a single item…",N,N],[3,"Batching",E,R[156],N,N],[3,"Step",E,"An iterator adaptor that steps a number elements in the…",N,N],[3,R[216],E,"An iterator adapter to apply a transformation within a…",N,N],[3,"Merge",E,R[143],N,N],[3,"MergeBy",E,R[143],N,N],[3,R[217],E,"An iterator adaptor that borrows from a `Clone`-able…",N,N],[3,R[218],E,"An iterator adaptor that filters `Option<A>` iterator…",N,N],[3,"Coalesce",E,"An iterator adaptor that may join together adjacent…",N,N],[3,R[219],E,"An iterator to iterate through all combinations in a…",N,N],[3,"Flatten",E,"An iterator adapter to simply flatten a structure.",N,N],[3,R[220],E,"An iterator adapter to get the positions of each element…",N,N],[3,"Update",E,"An iterator adapter to apply a mutating function to each…",N,N],[3,R[221],E,R[144],N,N],[3,R[222],E,"An iterator to iterate through all the `n`-length…",N,N],[3,R[223],E,"An iterator that maps an iterator of tuples like `((A, B),…",N,N],[3,"Format",E,R[145],N,N],[3,R[224],E,R[145],N,N],[3,R[225],E,"`ChunkLazy` is the storage for a lazy chunking operation.",N,N],[3,"Chunk",E,"An iterator for the elements in a single chunk.",N,N],[3,"Chunks",E,"An iterator that yields the Chunk iterators.",N,N],[3,"GroupBy",E,"`GroupBy` is the storage for the lazy grouping operation.",N,N],[3,"Group",E,"An iterator for the elements in a single group.",N,N],[3,"Groups",E,"An iterator that yields the Group iterators.",N,N],[3,R[226],E,R[153],N,N],[3,"KMerge",E,R[146],N,N],[3,"KMergeBy",E,R[146],N,N],[3,R[227],E,"An iterator adaptor that merge-joins items from the two…",N,N],[3,R[211],E,"See `multipeek()` for more information.",N,N],[3,"PadUsing",E,"An iterator adaptor that pads a sequence to a minimum…",N,N],[3,R[228],E,"An iterator adaptor that takes items while a closure…",N,N],[3,R[229],E,"An iterator that produces only the `T` values as long as…",N,N],[3,"PutBackN",E,"An iterator adaptor that allows putting multiple items in…",N,N],[3,"RcIter",E,"A wrapper for `Rc<RefCell<I>>`, that implements the…",N,N],[12,"rciter",E,"The boxed iterator.",6,N],[3,"RepeatN",E,"An iterator that produces n repetitions of an element.",N,N],[3,R[230],E,"See `repeat_call` for more information.",N,N],[3,"Unfold",E,"See `unfold` for more information.",N,N],[12,"state",E,"Internal state that will be passed to the closure on the…",7,N],[3,"Iterate",E,"An iterator that infinitely applies function to value and…",N,N],[3,"Tee",E,"One half of an iterator pair where both return the same…",N,N],[3,R[231],E,"An iterator over a incomplete tuple.",N,N],[3,R[232],E,"An iterator over all contiguous windows that produces…",N,N],[3,"Tuples",E,"An iterator that groups the items in tuples of a specific…",N,N],[3,"Unique",E,R[147],N,N],[3,"UniqueBy",E,R[147],N,N],[3,R[233],E,"An iterator adaptor that wraps each element in an…",N,N],[3,"ZipEq",E,R[148],N,N],[3,R[234],E,R[148],N,N],[3,"Zip",E,"See `multizip` for more information.",N,N],[11,"with_value",E,"put back value `value` (builder method)",8,[[],["self"]]],[11,"into_parts",E,"Split the `PutBack` into its parts.",8,[[]]],[11,R[152],E,"Put back a single value to the front of the iterator.",8,[[["self"]]]],[11,"has_left",R[149],"If `Left`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"has_right",E,"If `Right`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"left",E,"If `Left`, or `Both`, return `Some` with the left value,…",4,[[],[R[25]]]],[11,"right",E,"If `Right`, or `Both`, return `Some` with the right value,…",4,[[],[R[25]]]],[11,"as_ref",E,"Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A,…",4,[[["self"]],[["b"],[R[150]],["a"]]]],[11,"as_mut",E,"Converts from `&mut EitherOrBoth<A, B>` to…",4,[[["self"]],[["b"],["a"],[R[150]]]]],[11,"into_option",E,"`into_option` creates an `Option` of type `(T, T)`. The…",2,[[],[R[25]]]],[11,"reset_peek",R[151],"Reset the peeking “cursor”",9,[[["self"]]]],[11,"peek",E,"Works exactly like `.next()` with the only difference that…",9,[[["self"]],[R[25]]]],[11,R[152],E,"Puts x in front of the iterator. The values are yielded in…",10,[[["self"]]]],[11,R[2075],E,"Return a buffer with the produced items that was not…",11,[[],["tuplebuffer"]]],[11,R[7],R[149],"Return the inner value.",3,[[],[T]]],[8,R[212],E,"An iterator that allows peeking at an element before…",N,N],[10,R[175],E,"Pass a reference to the next iterator element to the…",12,[[["self"],["f"]],[R[25]]]],[8,R[213],E,"The trait `Itertools`: extra iterator adaptors and methods…",N,N],[11,R[138],E,"Alternate elements from two iterators until both have run…",13,[[["j"]],[R[138]]]],[11,R[1756],E,"Alternate elements from two iterators until at least one…",13,[[["j"]],[R[178]]]],[11,R[154],E,R[153],13,[[],[R[154]]]],[11,"zip_longest",E,R[155],13,[[["j"]],[R[182]]]],[11,"zip_eq",E,R[155],13,[[["j"]],["zipeq"]]],[11,R[179],E,R[156],13,[[["f"]],[R[179]]]],[11,"group_by",E,"Return an iterable that can group iterator elements.…",13,[[["f"]],["groupby"]]],[11,"chunks",E,"Return an iterable that can chunk the iterator.",13,[[["usize"]],["intochunks"]]],[11,"tuple_windows",E,"Return an iterator over all contiguous windows producing…",13,[[],["tuplewindows"]]],[11,"tuples",E,"Return an iterator that groups the items in tuples of a…",13,[[],["tuples"]]],[11,"tee",E,"Split into an iterator pair that both yield all elements…",13,[[]]],[11,"step",E,"Return an iterator adaptor that steps `n` elements in the…",13,[[["usize"]],["step"]]],[11,"map_results",E,"Return an iterator adaptor that applies the provided…",13,[[["f"]],["mapresults"]]],[11,"merge",E,R[157],13,[[["j"]],["merge"]]],[11,"merge_by",E,R[157],13,[[["j"],["f"]],["mergeby"]]],[11,R[158],E,"Create an iterator that merges items from both this and…",13,[[["j"],["f"]],[R[159]]]],[11,"kmerge",E,R[161],13,[[],["kmerge"]]],[11,R[160],E,R[161],13,[[["f"]],["kmergeby"]]],[11,"cartesian_product",E,R[162],13,[[["j"]],["product"]]],[11,"multi_cartesian_product",E,R[162],13,[[],[R[177]]]],[11,"coalesce",E,"Return an iterator adaptor that uses the passed-in closure…",13,[[["f"]],["coalesce"]]],[11,"dedup",E,"Remove duplicates from sections of consecutive identical…",13,[[],["dedup"]]],[11,"unique",E,R[163],13,[[],["unique"]]],[11,"unique_by",E,R[163],13,[[["f"]],["uniqueby"]]],[11,"peeking_take_while",E,"Return an iterator adaptor that borrows from this iterator…",13,[[["self"],["f"]],["peekingtakewhile"]]],[11,"take_while_ref",E,"Return an iterator adaptor that borrows from a…",13,[[["self"],["f"]],["takewhileref"]]],[11,"while_some",E,"Return an iterator adaptor that filters `Option<A>`…",13,[[],[R[180]]]],[11,"tuple_combinations",E,R[162],13,[[],["tuplecombinations"]]],[11,R[164],E,R[162],13,[[["usize"]],[R[164]]]],[11,"pad_using",E,"Return an iterator adaptor that pads the sequence to a…",13,[[["usize"],["f"]],["padusing"]]],[11,"flatten",E,"Flatten an iterator of iterables into a single combined…",13,[[],["flatten"]]],[11,"with_position",E,"Return an iterator adaptor that wraps each element in a…",13,[[],["withposition"]]],[11,R[165],E,"Return an iterator adaptor that yields the indices of all…",13,[[["p"]],[R[165]]]],[11,"update",E,"Return an iterator adaptor that applies a mutating…",13,[[["f"]],["update"]]],[11,"next_tuple",E,"Advances the iterator and returns the next items grouped…",13,[[["self"]],[R[25]]]],[11,"collect_tuple",E,"Collects all items from the iterator into a tuple of a…",13,[[],[R[25]]]],[11,"find_position",E,"Find the position and value of the first element…",13,[[["self"],["p"]],[R[25]]]],[11,"all_equal",E,"Check whether all elements compare equal.",13,[[["self"]],["bool"]]],[11,"dropping",E,"Consume the first `n` elements from the iterator eagerly,…",13,[[["usize"]],["self"]]],[11,"dropping_back",E,"Consume the last `n` elements from the iterator eagerly,…",13,[[["usize"]],["self"]]],[11,"foreach",E,"Run the closure `f` eagerly on each element of the iterator.",13,[[["f"]]]],[11,"concat",E,R[166],13,[[]]],[11,"collect_vec",E,"`.collect_vec()` is simply a type specialization of…",13,[[],["vec"]]],[11,"set_from",E,"Assign to each reference in `self` from the `from`…",13,[[["self"],["j"]],["usize"]]],[11,"join",E,R[167],13,[[["self"],["str"]],["string"]]],[11,"format",E,R[168],13,[[["str"]],["format"]]],[11,"format_with",E,R[168],13,[[["str"],["f"]],["formatwith"]]],[11,"fold_results",E,"Fold `Result` values from an iterator.",13,[[["self"],["b"],["f"]],[R[3]]]],[11,"fold_options",E,"Fold `Option` values from an iterator.",13,[[["self"],["b"],["f"]],[R[25]]]],[11,"fold1",E,"Accumulator of the elements in the iterator.",13,[[["f"]],[R[25]]]],[11,"tree_fold1",E,"Accumulate the elements in the iterator in a tree-like…",13,[[["f"]],[R[25]]]],[11,"fold_while",E,"An iterator method that applies a function, producing a…",13,[[["self"],["b"],["f"]],[R[176]]]],[11,"sorted",E,"Collect all iterator elements into a sorted vector in…",13,[[],["vec"]]],[11,"sorted_by",E,R[169],13,[[["f"]],["vec"]]],[11,"sorted_by_key",E,R[169],13,[[["f"]],["vec"]]],[11,R[1754],E,"Collect all iterator elements into one of two partitions.…",13,[[["f"]]]],[11,"into_group_map",E,"Return a `HashMap` of keys mapped to `Vec`s of values.…",13,[[],[["hashmap",["vec"]],["vec"]]]],[11,"minmax",E,"Return the minimum and maximum elements in the iterator.",13,[[],[R[170]]]],[11,"minmax_by_key",E,R[171],13,[[["f"]],[R[170]]]],[11,"minmax_by",E,R[171],13,[[["f"]],[R[170]]]],[11,R[7],E,"Return the value in the continue or done.",5,[[],[T]]],[11,"is_done",E,"Return true if `self` is `Done`, false if it is `Continue`.",5,[[["self"]],["bool"]]],[14,"iproduct",E,"Create an iterator over the “cartesian product” of…",N,N],[14,"izip",E,"Create an iterator running multiple iterators in lockstep.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[98],E,E,0,[[["self"]],["string"]]],[11,R[23],E,E,0,[[],["i"]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"],[T]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"],[T]]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",R[151],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[23],E,E,14,[[],["i"]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[42],E,E,14,[[["self"],[T]]]],[11,R[8],E,E,14,[[[U]],[R[3]]]],[11,R[9],E,E,14,[[],[R[3]]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[23],E,E,15,[[],["i"]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[42],E,E,15,[[["self"],[T]]]],[11,R[8],E,E,15,[[[U]],[R[3]]]],[11,R[9],E,E,15,[[],[R[3]]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[23],E,E,16,[[],["i"]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[42],E,E,16,[[["self"],[T]]]],[11,R[8],E,E,16,[[[U]],[R[3]]]],[11,R[9],E,E,16,[[],[R[3]]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[23],E,E,17,[[],["i"]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[42],E,E,17,[[["self"],[T]]]],[11,R[8],E,E,17,[[[U]],[R[3]]]],[11,R[9],E,E,17,[[],[R[3]]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[23],E,E,8,[[],["i"]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"],[T]]]],[11,R[8],E,E,8,[[[U]],[R[3]]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[23],E,E,18,[[],["i"]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[42],E,E,18,[[["self"],[T]]]],[11,R[8],E,E,18,[[[U]],[R[3]]]],[11,R[9],E,E,18,[[],[R[3]]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[23],E,E,19,[[],["i"]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[42],E,E,19,[[["self"],[T]]]],[11,R[8],E,E,19,[[[U]],[R[3]]]],[11,R[9],E,E,19,[[],[R[3]]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[23],E,E,20,[[],["i"]]],[11,R[8],E,E,20,[[[U]],[R[3]]]],[11,R[9],E,E,20,[[],[R[3]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[23],E,E,21,[[],["i"]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[42],E,E,21,[[["self"],[T]]]],[11,R[8],E,E,21,[[[U]],[R[3]]]],[11,R[9],E,E,21,[[],[R[3]]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[23],E,E,22,[[],["i"]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[42],E,E,22,[[["self"],[T]]]],[11,R[8],E,E,22,[[[U]],[R[3]]]],[11,R[9],E,E,22,[[],[R[3]]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[23],E,E,23,[[],["i"]]],[11,R[8],E,E,23,[[[U]],[R[3]]]],[11,R[9],E,E,23,[[],[R[3]]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[23],E,E,24,[[],["i"]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[42],E,E,24,[[["self"],[T]]]],[11,R[8],E,E,24,[[[U]],[R[3]]]],[11,R[9],E,E,24,[[],[R[3]]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[23],E,E,25,[[],["i"]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[42],E,E,25,[[["self"],[T]]]],[11,R[8],E,E,25,[[[U]],[R[3]]]],[11,R[9],E,E,25,[[],[R[3]]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[23],E,E,26,[[],["i"]]],[11,R[8],E,E,26,[[[U]],[R[3]]]],[11,R[9],E,E,26,[[],[R[3]]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[23],E,E,27,[[],["i"]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[42],E,E,27,[[["self"],[T]]]],[11,R[8],E,E,27,[[[U]],[R[3]]]],[11,R[9],E,E,27,[[],[R[3]]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[23],E,E,28,[[],["i"]]],[11,R[8],E,E,28,[[[U]],[R[3]]]],[11,R[9],E,E,28,[[],[R[3]]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[23],E,E,29,[[],["i"]]],[11,R[8],E,E,29,[[[U]],[R[3]]]],[11,R[9],E,E,29,[[],[R[3]]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[29]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[23],E,E,30,[[],["i"]]],[11,R[41],E,E,30,[[["self"]],[T]]],[11,R[42],E,E,30,[[["self"],[T]]]],[11,R[8],E,E,30,[[[U]],[R[3]]]],[11,R[9],E,E,30,[[],[R[3]]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[23],E,E,31,[[],["i"]]],[11,R[8],E,E,31,[[[U]],[R[3]]]],[11,R[9],E,E,31,[[],[R[3]]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[29]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[23],E,E,32,[[],["i"]]],[11,R[41],E,E,32,[[["self"]],[T]]],[11,R[42],E,E,32,[[["self"],[T]]]],[11,R[8],E,E,32,[[[U]],[R[3]]]],[11,R[9],E,E,32,[[],[R[3]]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[29]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[98],E,E,33,[[["self"]],["string"]]],[11,R[41],E,E,33,[[["self"]],[T]]],[11,R[42],E,E,33,[[["self"],[T]]]],[11,R[8],E,E,33,[[[U]],[R[3]]]],[11,R[9],E,E,33,[[],[R[3]]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[29]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[98],E,E,34,[[["self"]],["string"]]],[11,R[8],E,E,34,[[[U]],[R[3]]]],[11,R[9],E,E,34,[[],[R[3]]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[29]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[8],E,E,35,[[[U]],[R[3]]]],[11,R[9],E,E,35,[[],[R[3]]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[29]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[23],E,E,36,[[],["i"]]],[11,R[8],E,E,36,[[[U]],[R[3]]]],[11,R[9],E,E,36,[[],[R[3]]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[29]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[23],E,E,37,[[],["i"]]],[11,R[8],E,E,37,[[[U]],[R[3]]]],[11,R[9],E,E,37,[[],[R[3]]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[29]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[8],E,E,38,[[[U]],[R[3]]]],[11,R[9],E,E,38,[[],[R[3]]]],[11,R[28],E,E,38,[[["self"]],[T]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[29]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[23],E,E,39,[[],["i"]]],[11,R[8],E,E,39,[[[U]],[R[3]]]],[11,R[9],E,E,39,[[],[R[3]]]],[11,R[28],E,E,39,[[["self"]],[T]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[29]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[23],E,E,40,[[],["i"]]],[11,R[8],E,E,40,[[[U]],[R[3]]]],[11,R[9],E,E,40,[[],[R[3]]]],[11,R[28],E,E,40,[[["self"]],[T]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[29]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[23],E,E,41,[[],["i"]]],[11,R[41],E,E,41,[[["self"]],[T]]],[11,R[42],E,E,41,[[["self"],[T]]]],[11,R[8],E,E,41,[[[U]],[R[3]]]],[11,R[9],E,E,41,[[],[R[3]]]],[11,R[28],E,E,41,[[["self"]],[T]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[29]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[23],E,E,42,[[],["i"]]],[11,R[41],E,E,42,[[["self"]],[T]]],[11,R[42],E,E,42,[[["self"],[T]]]],[11,R[8],E,E,42,[[[U]],[R[3]]]],[11,R[9],E,E,42,[[],[R[3]]]],[11,R[28],E,E,42,[[["self"]],[T]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[29]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[23],E,E,43,[[],["i"]]],[11,R[8],E,E,43,[[[U]],[R[3]]]],[11,R[9],E,E,43,[[],[R[3]]]],[11,R[28],E,E,43,[[["self"]],[T]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[29]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[23],E,E,44,[[],["i"]]],[11,R[8],E,E,44,[[[U]],[R[3]]]],[11,R[9],E,E,44,[[],[R[3]]]],[11,R[28],E,E,44,[[["self"]],[T]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[29]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[23],E,E,9,[[],["i"]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[42],E,E,9,[[["self"],[T]]]],[11,R[8],E,E,9,[[[U]],[R[3]]]],[11,R[9],E,E,9,[[],[R[3]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[23],E,E,45,[[],["i"]]],[11,R[41],E,E,45,[[["self"]],[T]]],[11,R[42],E,E,45,[[["self"],[T]]]],[11,R[8],E,E,45,[[[U]],[R[3]]]],[11,R[9],E,E,45,[[],[R[3]]]],[11,R[28],E,E,45,[[["self"]],[T]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[29]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[23],E,E,46,[[],["i"]]],[11,R[8],E,E,46,[[[U]],[R[3]]]],[11,R[9],E,E,46,[[],[R[3]]]],[11,R[28],E,E,46,[[["self"]],[T]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[29]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[23],E,E,47,[[],["i"]]],[11,R[8],E,E,47,[[[U]],[R[3]]]],[11,R[9],E,E,47,[[],[R[3]]]],[11,R[28],E,E,47,[[["self"]],[T]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[29]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[23],E,E,10,[[],["i"]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[42],E,E,10,[[["self"],[T]]]],[11,R[8],E,E,10,[[[U]],[R[3]]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[23],E,E,6,[[],["i"]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[42],E,E,6,[[["self"],[T]]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[23],E,E,48,[[],["i"]]],[11,R[8],E,E,48,[[[U]],[R[3]]]],[11,R[9],E,E,48,[[],[R[3]]]],[11,R[28],E,E,48,[[["self"]],[T]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[29]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[23],E,E,49,[[],["i"]]],[11,R[8],E,E,49,[[[U]],[R[3]]]],[11,R[9],E,E,49,[[],[R[3]]]],[11,R[28],E,E,49,[[["self"]],[T]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[29]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[23],E,E,7,[[],["i"]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[42],E,E,7,[[["self"],[T]]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[23],E,E,50,[[],["i"]]],[11,R[41],E,E,50,[[["self"]],[T]]],[11,R[42],E,E,50,[[["self"],[T]]]],[11,R[8],E,E,50,[[[U]],[R[3]]]],[11,R[9],E,E,50,[[],[R[3]]]],[11,R[28],E,E,50,[[["self"]],[T]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[29]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[23],E,E,51,[[],["i"]]],[11,R[8],E,E,51,[[[U]],[R[3]]]],[11,R[9],E,E,51,[[],[R[3]]]],[11,R[28],E,E,51,[[["self"]],[T]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[29]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[23],E,E,52,[[],["i"]]],[11,R[8],E,E,52,[[[U]],[R[3]]]],[11,R[9],E,E,52,[[],[R[3]]]],[11,R[28],E,E,52,[[["self"]],[T]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[29]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[23],E,E,53,[[],["i"]]],[11,R[8],E,E,53,[[[U]],[R[3]]]],[11,R[9],E,E,53,[[],[R[3]]]],[11,R[28],E,E,53,[[["self"]],[T]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[29]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[23],E,E,11,[[],["i"]]],[11,R[8],E,E,11,[[[U]],[R[3]]]],[11,R[9],E,E,11,[[],[R[3]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[23],E,E,54,[[],["i"]]],[11,R[41],E,E,54,[[["self"]],[T]]],[11,R[42],E,E,54,[[["self"],[T]]]],[11,R[8],E,E,54,[[[U]],[R[3]]]],[11,R[9],E,E,54,[[],[R[3]]]],[11,R[28],E,E,54,[[["self"]],[T]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[29]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[23],E,E,55,[[],["i"]]],[11,R[41],E,E,55,[[["self"]],[T]]],[11,R[42],E,E,55,[[["self"],[T]]]],[11,R[8],E,E,55,[[[U]],[R[3]]]],[11,R[9],E,E,55,[[],[R[3]]]],[11,R[28],E,E,55,[[["self"]],[T]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[29]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[23],E,E,56,[[],["i"]]],[11,R[8],E,E,56,[[[U]],[R[3]]]],[11,R[9],E,E,56,[[],[R[3]]]],[11,R[28],E,E,56,[[["self"]],[T]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[29]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[23],E,E,57,[[],["i"]]],[11,R[41],E,E,57,[[["self"]],[T]]],[11,R[42],E,E,57,[[["self"],[T]]]],[11,R[8],E,E,57,[[[U]],[R[3]]]],[11,R[9],E,E,57,[[],[R[3]]]],[11,R[28],E,E,57,[[["self"]],[T]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[29]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[23],E,E,58,[[],["i"]]],[11,R[41],E,E,58,[[["self"]],[T]]],[11,R[42],E,E,58,[[["self"],[T]]]],[11,R[8],E,E,58,[[[U]],[R[3]]]],[11,R[9],E,E,58,[[],[R[3]]]],[11,R[28],E,E,58,[[["self"]],[T]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[29]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[23],E,E,59,[[],["i"]]],[11,R[41],E,E,59,[[["self"]],[T]]],[11,R[42],E,E,59,[[["self"],[T]]]],[11,R[8],E,E,59,[[[U]],[R[3]]]],[11,R[9],E,E,59,[[],[R[3]]]],[11,R[28],E,E,59,[[["self"]],[T]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[29]]]],[11,"eq",R[149],E,0,[[["self"],[R[18]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"as_mut",E,E,0,[[["self"]],["str"]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"as_mut",E,E,0,[[["self"]],["target"]]],[11,"from",E,E,0,[[[R[3]]],[R[18]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"clone",E,E,0,[[["self"]],[R[18]]]],[11,R[172],E,E,0,[[["self"],[R[18]]],[[R[24]],[R[25],[R[24]]]]]],[11,"lt",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"into",E,E,0,[[],[R[3]]]],[11,"deref",E,E,0,[[["self"]]]],[11,R[173],E,E,0,[[["self"]],[R[25]]]],[11,"as_ref",E,E,0,[[["self"]],["target"]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,"cmp",E,E,0,[[["self"],[R[18]]],[R[24]]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,R[14],E,E,0,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"next",E,E,0,[[["self"]],[R[25]]]],[11,R[174],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["acc"],["g"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[25]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[25]]]],[11,"collect",E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,R[175],R[151],E,9,[[["self"],["f"]],[R[25]]]],[11,R[175],E,E,8,[[["self"],["f"]],[R[25]]]],[11,R[175],E,E,10,[[["self"],["f"]],[R[25]]]],[11,"from",E,E,59,[[],["self"]]],[11,"from",E,E,59,[[],["self"]]],[11,"from",E,E,59,[[],["self"]]],[11,"from",E,E,59,[[],["self"]]],[11,"from",E,E,59,[[],["self"]]],[11,"from",E,E,59,[[],["self"]]],[11,"from",E,E,59,[[],["self"]]],[11,"from",E,E,59,[[],["self"]]],[11,"drop",E,E,39,[[["self"]]]],[11,"drop",E,E,36,[[["self"]]]],[11,"next",E,E,30,[[["self"]],[R[25]]]],[11,"count",E,E,30,[[],["usize"]]],[11,R[174],E,E,30,[[["self"]]]],[11,"last",E,E,30,[[],[R[25]]]],[11,"next",E,E,15,[[["self"]],[R[25]]]],[11,R[174],E,E,15,[[["self"]]]],[11,"next",E,E,16,[[["self"]],[R[25]]]],[11,R[174],E,E,16,[[["self"]]]],[11,"next",E,E,8,[[["self"]],[R[25]]]],[11,R[174],E,E,8,[[["self"]]]],[11,"all",E,E,8,[[["self"],["g"]],["bool"]]],[11,"fold",E,E,8,[[["acc"],["g"]],["acc"]]],[11,"next",E,E,17,[[["self"]],[R[25]]]],[11,R[174],E,E,17,[[["self"]]]],[11,"fold",E,E,17,[[["acc"],["g"]],["acc"]]],[11,"next",E,E,18,[[["self"]],[R[25]]]],[11,R[174],E,E,18,[[["self"]]]],[11,"next",E,E,19,[[["self"]],[R[25]]]],[11,R[174],E,E,19,[[["self"]]]],[11,"next",E,E,21,[[["self"]],[R[25]]]],[11,R[174],E,E,21,[[["self"]]]],[11,"next",E,E,22,[[["self"]],[R[25]]]],[11,R[174],E,E,22,[[["self"]]]],[11,"next",E,E,25,[[["self"]],[R[25]]]],[11,R[174],E,E,25,[[["self"]]]],[11,"next",E,E,14,[[["self"]],[R[25]]]],[11,R[174],E,E,14,[[["self"]]]],[11,"fold",E,E,14,[[["acc"],["g"]],["acc"]]],[11,"next",E,E,23,[[["self"]],[R[25]]]],[11,R[174],E,E,23,[[["self"]]]],[11,"next",E,E,24,[[["self"]],[R[25]]]],[11,R[174],E,E,24,[[["self"]]]],[11,"next",E,E,26,[[["self"]],[R[25]]]],[11,"next",E,E,27,[[["self"]],[R[25]]]],[11,"fold",E,E,27,[[["acc"],["g"]],["acc"]]],[11,"next",E,E,20,[[["self"]],[R[25]]]],[11,R[174],E,E,20,[[["self"]]]],[11,"fold",E,E,20,[[["acc"],["fold"]],["acc"]]],[11,"collect",E,E,20,[[],["c"]]],[11,"next",E,E,28,[[["self"]],[R[25]]]],[11,R[174],E,E,28,[[["self"]]]],[11,"next",E,E,29,[[["self"]],[R[25]]]],[11,R[174],E,E,29,[[["self"]]]],[11,"fold",E,E,29,[[["acc"],["g"]],["acc"]]],[11,"collect",E,E,29,[[],["c"]]],[11,"next",E,E,32,[[["self"]],[R[25]]]],[11,R[174],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[25]]]],[11,R[174],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[25]]]],[11,R[174],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[25]]]],[11,R[174],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[25]]]],[11,R[174],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[25]]]],[11,R[174],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,31,[[["self"]],[R[25]]]],[11,"next",E,E,40,[[["self"]],[R[25]]]],[11,"next",E,E,39,[[["self"]],[R[25]]]],[11,"next",E,E,37,[[["self"]],[R[25]]]],[11,"next",E,E,36,[[["self"]],[R[25]]]],[11,"next",E,E,41,[[["self"]],[R[25]]]],[11,R[174],E,E,41,[[["self"]]]],[11,"next",E,E,42,[[["self"]],[R[25]]]],[11,R[174],E,E,42,[[["self"]]]],[11,"next",E,E,43,[[["self"]],[R[25]]]],[11,R[174],E,E,43,[[["self"]]]],[11,"next",E,E,44,[[["self"]],[R[25]]]],[11,R[174],E,E,44,[[["self"]]]],[11,"next",E,E,9,[[["self"]],[R[25]]]],[11,R[174],E,E,9,[[["self"]]]],[11,"next",E,E,45,[[["self"]],[R[25]]]],[11,R[174],E,E,45,[[["self"]]]],[11,"next",E,E,46,[[["self"]],[R[25]]]],[11,R[174],E,E,46,[[["self"]]]],[11,"next",E,E,47,[[["self"]],[R[25]]]],[11,R[174],E,E,47,[[["self"]]]],[11,"next",E,E,10,[[["self"]],[R[25]]]],[11,R[174],E,E,10,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[R[25]]]],[11,R[174],E,E,6,[[["self"]]]],[11,"next",E,E,48,[[["self"]],[R[25]]]],[11,R[174],E,E,48,[[["self"]]]],[11,"next",E,E,49,[[["self"]],[R[25]]]],[11,R[174],E,E,49,[[["self"]]]],[11,"next",E,E,7,[[["self"]],[R[25]]]],[11,R[174],E,E,7,[[["self"]]]],[11,"next",E,E,50,[[["self"]],[R[25]]]],[11,R[174],E,E,50,[[["self"]]]],[11,"next",E,E,51,[[["self"]],[R[25]]]],[11,R[174],E,E,51,[[["self"]]]],[11,"next",E,E,52,[[["self"]],[R[25]]]],[11,R[174],E,E,52,[[["self"]]]],[11,"next",E,E,11,[[["self"]],[R[25]]]],[11,"next",E,E,53,[[["self"]],[R[25]]]],[11,"next",E,E,55,[[["self"]],[R[25]]]],[11,R[174],E,E,55,[[["self"]]]],[11,"count",E,E,55,[[],["usize"]]],[11,"next",E,E,54,[[["self"]],[R[25]]]],[11,R[174],E,E,54,[[["self"]]]],[11,"count",E,E,54,[[],["usize"]]],[11,"next",E,E,56,[[["self"]],[R[25]]]],[11,R[174],E,E,56,[[["self"]]]],[11,"next",E,E,57,[[["self"]],[R[25]]]],[11,R[174],E,E,57,[[["self"]]]],[11,"next",E,E,58,[[["self"]],[R[25]]]],[11,R[174],E,E,58,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[25]]]],[11,R[174],E,E,59,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[25]]]],[11,R[174],E,E,59,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[25]]]],[11,R[174],E,E,59,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[25]]]],[11,R[174],E,E,59,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[25]]]],[11,R[174],E,E,59,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[25]]]],[11,R[174],E,E,59,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[25]]]],[11,R[174],E,E,59,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[25]]]],[11,R[174],E,E,59,[[["self"]]]],[11,"eq",R[149],E,4,[[["self"],[R[150]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[150]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[170]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[170]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[181]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[181]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[176]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[176]]],["bool"]]],[11,R[173],R[151],E,28,[[["self"]],[R[25]]]],[11,R[173],E,E,29,[[["self"]],[R[25]]]],[11,R[173],E,E,32,[[["self"]],[R[25]]]],[11,R[173],E,E,32,[[["self"]],[R[25]]]],[11,R[173],E,E,32,[[["self"]],[R[25]]]],[11,R[173],E,E,32,[[["self"]],[R[25]]]],[11,R[173],E,E,32,[[["self"]],[R[25]]]],[11,R[173],E,E,32,[[["self"]],[R[25]]]],[11,R[173],E,E,45,[[["self"]],[R[25]]]],[11,R[173],E,E,6,[[["self"]],[R[25]]]],[11,R[173],E,E,48,[[["self"]],[R[25]]]],[11,R[173],E,E,58,[[["self"]],[R[25]]]],[11,"clone",E,E,30,[[["self"]],[R[177]]]],[11,"clone",E,E,15,[[["self"]],[R[138]]]],[11,"clone",E,E,16,[[["self"]],[R[178]]]],[11,"clone",E,E,8,[[["self"]],["putback"]]],[11,"clone",E,E,17,[[["self"]],["product"]]],[11,"clone",E,E,18,[[["self"]],[R[179]]]],[11,"clone",E,E,19,[[["self"]],["step"]]],[11,"clone",E,E,21,[[["self"]],["self"]]],[11,"clone",E,E,22,[[["self"]],["self"]]],[11,"clone",E,E,25,[[["self"]],["self"]]],[11,"clone",E,E,14,[[["self"]],["self"]]],[11,"clone",E,E,24,[[["self"]],[R[180]]]],[11,"clone",E,E,27,[[["self"]],["flatten"]]],[11,"clone",R[149],E,4,[[["self"]],[R[150]]]],[11,"clone",R[151],E,32,[[["self"]],["self"]]],[11,"clone",E,E,33,[[["self"]],["format"]]],[11,"clone",E,E,41,[[["self"]],[R[154]]]],[11,"clone",E,E,42,[[["self"]],["kmerge"]]],[11,"clone",R[149],E,2,[[["self"]],[R[170]]]],[11,"clone",R[151],E,9,[[["self"]],[R[139]]]],[11,"clone",E,E,45,[[["self"]],["padusing"]]],[11,"clone",E,E,10,[[["self"]],["putbackn"]]],[11,"clone",E,E,6,[[["self"]],["rciter"]]],[11,"clone",E,E,7,[[["self"]],["unfold"]]],[11,"clone",E,E,50,[[["self"]],["iterate"]]],[11,"clone",E,E,55,[[["self"]],["uniqueby"]]],[11,"clone",E,E,54,[[["self"]],["unique"]]],[11,"clone",R[149],E,3,[[["self"]],[R[181]]]],[11,"clone",R[151],E,57,[[["self"]],["zipeq"]]],[11,"clone",E,E,58,[[["self"]],[R[182]]]],[11,"clone",E,E,59,[[["self"]],["zip"]]],[11,"clone",R[149],E,5,[[["self"]],[R[176]]]],[11,"fmt",R[151],E,34,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[149],E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[151],E,32,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[149],E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[151],E,9,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,54,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[149],E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[151],E,57,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,58,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,59,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[149],E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[151],E,33,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[3]]]],[11,"is_left",R[149],R[183],0,[[["self"]],["bool"]]],[11,"is_right",E,R[184],0,[[["self"]],["bool"]]],[11,"left",E,R[185],0,[[],[R[25]]]],[11,"right",E,R[186],0,[[],[R[25]]]],[11,"as_ref",E,R[187],0,[[["self"]],[["r"],[R[18]],["l"]]]],[11,"as_mut",E,R[188],0,[[["self"]],[[R[18]],["l"],["r"]]]],[11,"flip",E,R[189],0,[[],[R[18]]]],[11,"map_left",E,R[19],0,[[["f"]],[R[18]]]],[11,R[190],E,R[20],0,[[["f"]],[R[18]]]],[11,R[18],E,R[191],0,[[["f"],["g"]],[T]]],[11,R[192],E,R[193],0,[[["ctx"],["f"],["g"]],[T]]],[11,R[194],E,R[19],0,[[["f"]],[R[18]]]],[11,R[195],E,R[20],0,[[["f"]],[R[18]]]],[11,R[23],E,R[196],0,[[],[R[18]]]],[11,"left_or",E,R[197],0,[[["l"]],["l"]]],[11,R[198],E,R[199],0,[[],["l"]]],[11,R[200],E,R[21],0,[[["f"]],["l"]]],[11,"right_or",E,R[201],0,[[["r"]],["r"]]],[11,R[202],E,R[203],0,[[],["r"]]],[11,R[204],E,R[21],0,[[["f"]],["r"]]],[11,R[205],E,R[22],0,[[]]],[11,R[206],E,R[22],0,[[]]],[11,R[7],E,R[207],0,[[],[T]]]],"p":[[4,"Either"],[4,"Diff"],[4,R[208]],[4,"Position"],[4,R[209]],[4,R[210]],[3,"RcIter"],[3,"Unfold"],[3,"PutBack"],[3,R[211]],[3,"PutBackN"],[3,"Tuples"],[8,R[212]],[8,R[213]],[3,"Dedup"],[3,R[214]],[3,R[215]],[3,"Product"],[3,"Batching"],[3,"Step"],[3,R[216]],[3,"Merge"],[3,"MergeBy"],[3,R[217]],[3,R[218]],[3,"Coalesce"],[3,R[219]],[3,"Flatten"],[3,R[220]],[3,"Update"],[3,R[221]],[3,R[222]],[3,R[223]],[3,"Format"],[3,R[224]],[3,R[225]],[3,"Chunk"],[3,"Chunks"],[3,"GroupBy"],[3,"Group"],[3,"Groups"],[3,R[226]],[3,"KMerge"],[3,"KMergeBy"],[3,R[227]],[3,"PadUsing"],[3,R[228]],[3,R[229]],[3,"RepeatN"],[3,R[230]],[3,"Iterate"],[3,"Tee"],[3,R[231]],[3,R[232]],[3,"Unique"],[3,"UniqueBy"],[3,R[233]],[3,"ZipEq"],[3,R[234]],[3,"Zip"]]};
searchIndex["jpeg_decoder"]={"doc":"This crate contains a JPEG decoder.","i":[[3,"Decoder","jpeg_decoder",R[2076],N,N],[3,"ImageInfo",E,"Represents metadata of an image.",N,N],[12,"width",E,"The width of the image, in pixels.",0,N],[12,"height",E,"The height of the image, in pixels.",0,N],[12,"pixel_format",E,"The pixel format of the image.",0,N],[4,R[1856],E,"An enumeration over combinations of color spaces and bit…",N,N],[13,"L8",E,"Luminance (grayscale), 8 bits",1,N],[13,"RGB24",E,"RGB, 8 bits per channel",1,N],[13,"CMYK32",E,"CMYK, 8 bits per channel",1,N],[4,"Error",E,"Errors that can occur while decoding a JPEG image.",N,N],[13,"Format",E,"The image is not formatted properly. The string contains…",2,N],[13,R[2077],E,"The image makes use of a JPEG feature not (currently)…",2,N],[13,"Io",E,"An I/O error occurred while decoding the image.",2,N],[13,"Internal",E,"An internal error occurred while decoding the image.",2,N],[4,R[1857],E,"An enumeration over JPEG features (currently) unsupported…",N,N],[13,"Hierarchical",E,"Hierarchical JPEG.",3,N],[13,"Lossless",E,"Lossless JPEG.",3,N],[13,"ArithmeticEntropyCoding",E,"JPEG using arithmetic entropy coding instead of Huffman…",3,N],[13,"SamplePrecision",E,"Sample precision in bits. 8 bit sample precision is what…",3,N],[13,"ComponentCount",E,"Number of components in an image. 1, 3 and 4 components…",3,N],[13,"DNL",E,"An image can specify a zero height in the frame header and…",3,N],[13,"SubsamplingRatio",E,"Subsampling ratio.",3,N],[13,"NonIntegerSubsamplingRatio",E,"A subsampling ratio not representable as an integer.",3,N],[11,"new",E,"Creates a new `Decoder` using the reader `reader`.",4,[[["r"]],["decoder"]]],[11,"info",E,"Returns metadata about the image.",4,[[["self"]],[[R[25],[R[1854]]],[R[1854]]]]],[11,"read_info",E,"Tries to read metadata from the image without decoding it.",4,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,"Decodes the image and returns the decoded pixels if…",4,[[["self"]],[["error"],[R[3],["vec","error"]],["vec",["u8"]]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[98],E,E,2,[[["self"]],["string"]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[["ioerror"]],["error"]]],[11,"from",E,E,2,[[["recverror"]],["error"]]],[11,"from",E,E,2,[[["senderror"]],["error"]]],[11,"eq",E,E,1,[[["self"],[R[1855]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[1854]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1854]]],["bool"]]],[11,"clone",E,E,1,[[["self"]],[R[1855]]]],[11,"clone",E,E,0,[[["self"]],[R[1854]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,R[53],E,E,2,[[["self"]],["str"]]],[11,"cause",E,E,2,[[["self"]],[[R[25],[R[54]]],[R[54]]]]]],"p":[[3,"ImageInfo"],[4,R[1856]],[4,"Error"],[4,R[1857]],[3,"Decoder"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize",R[1],"Takes a shared reference to a lazy static and initializes…",N,[[[T]]]],[8,"LazyStatic",E,"Support trait for enabling a few common operation on lazy…",N,N],[14,R[1],E,E,N,N]],"p":[]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group",E,E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,"timeval",E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[434],E,E,N,N],[12,"tv_sec",E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,"rlim_cur",E,E,4,N],[12,"rlim_max",E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,R[372],E,E,N,N],[12,"ipv6mr_multiaddr",E,E,6,N],[12,"ipv6mr_interface",E,E,6,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,7,N],[12,"h_aliases",E,E,7,N],[12,"h_addrtype",E,E,7,N],[12,"h_length",E,E,7,N],[12,"h_addr_list",E,E,7,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,8,N],[12,"iov_len",E,E,8,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,9,N],[12,"events",E,E,9,N],[12,"revents",E,E,9,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,10,N],[12,"ws_col",E,E,10,N],[12,"ws_xpixel",E,E,10,N],[12,"ws_ypixel",E,E,10,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,11,N],[12,"l_linger",E,E,11,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,12,N],[3,R[373],E,E,N,N],[12,R[345],E,E,13,N],[12,"it_value",E,E,13,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,14,N],[12,"tms_stime",E,E,14,N],[12,"tms_cutime",E,E,14,N],[12,"tms_cstime",E,E,14,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,15,N],[12,"s_aliases",E,E,15,N],[12,"s_port",E,E,15,N],[12,"s_proto",E,E,15,N],[3,R[435],E,E,N,N],[12,"p_name",E,E,16,N],[12,"p_aliases",E,E,16,N],[12,"p_proto",E,E,16,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,17,N],[3,"ip_mreq",E,E,N,N],[12,"imr_multiaddr",E,E,18,N],[12,"imr_interface",E,E,18,N],[3,R[436],E,E,N,N],[12,"sa_family",E,E,19,N],[12,"sa_data",E,E,19,N],[3,R[374],E,E,N,N],[12,"sin_family",E,E,20,N],[12,"sin_port",E,E,20,N],[12,"sin_addr",E,E,20,N],[12,"sin_zero",E,E,20,N],[3,R[375],E,E,N,N],[12,"sin6_family",E,E,21,N],[12,"sin6_port",E,E,21,N],[12,"sin6_flowinfo",E,E,21,N],[12,"sin6_addr",E,E,21,N],[12,"sin6_scope_id",E,E,21,N],[3,R[437],E,E,N,N],[12,"ai_flags",E,E,22,N],[12,"ai_family",E,E,22,N],[12,"ai_socktype",E,E,22,N],[12,"ai_protocol",E,E,22,N],[12,"ai_addrlen",E,E,22,N],[12,"ai_addr",E,E,22,N],[12,"ai_canonname",E,E,22,N],[12,"ai_next",E,E,22,N],[3,R[376],E,E,N,N],[12,"sll_family",E,E,23,N],[12,"sll_protocol",E,E,23,N],[12,"sll_ifindex",E,E,23,N],[12,"sll_hatype",E,E,23,N],[12,"sll_pkttype",E,E,23,N],[12,"sll_halen",E,E,23,N],[12,"sll_addr",E,E,23,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,24,N],[12,"tm_min",E,E,24,N],[12,"tm_hour",E,E,24,N],[12,"tm_mday",E,E,24,N],[12,"tm_mon",E,E,24,N],[12,"tm_year",E,E,24,N],[12,"tm_wday",E,E,24,N],[12,"tm_yday",E,E,24,N],[12,"tm_isdst",E,E,24,N],[12,"tm_gmtoff",E,E,24,N],[12,"tm_zone",E,E,24,N],[3,R[377],E,E,N,N],[12,"sched_priority",E,E,25,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,26,N],[12,"dli_fbase",E,E,26,N],[12,"dli_sname",E,E,26,N],[12,"dli_saddr",E,E,26,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,27,N],[12,"thousands_sep",E,E,27,N],[12,"grouping",E,E,27,N],[12,"int_curr_symbol",E,E,27,N],[12,"currency_symbol",E,E,27,N],[12,"mon_decimal_point",E,E,27,N],[12,"mon_thousands_sep",E,E,27,N],[12,"mon_grouping",E,E,27,N],[12,"positive_sign",E,E,27,N],[12,"negative_sign",E,E,27,N],[12,"int_frac_digits",E,E,27,N],[12,"frac_digits",E,E,27,N],[12,"p_cs_precedes",E,E,27,N],[12,"p_sep_by_space",E,E,27,N],[12,"n_cs_precedes",E,E,27,N],[12,"n_sep_by_space",E,E,27,N],[12,"p_sign_posn",E,E,27,N],[12,"n_sign_posn",E,E,27,N],[12,"int_p_cs_precedes",E,E,27,N],[12,"int_p_sep_by_space",E,E,27,N],[12,"int_n_cs_precedes",E,E,27,N],[12,"int_n_sep_by_space",E,E,27,N],[12,"int_p_sign_posn",E,E,27,N],[12,"int_n_sign_posn",E,E,27,N],[3,R[378],E,E,N,N],[12,"ipi_ifindex",E,E,28,N],[12,"ipi_spec_dst",E,E,28,N],[12,"ipi_addr",E,E,28,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,29,N],[12,"ifa_name",E,E,29,N],[12,"ifa_flags",E,E,29,N],[12,"ifa_addr",E,E,29,N],[12,"ifa_netmask",E,E,29,N],[12,"ifa_ifu",E,E,29,N],[12,"ifa_data",E,E,29,N],[3,R[379],E,E,N,N],[3,"arpreq",E,E,N,N],[12,"arp_pa",E,E,30,N],[12,"arp_ha",E,E,30,N],[12,R[343],E,E,30,N],[12,R[344],E,E,30,N],[12,"arp_dev",E,E,30,N],[3,R[380],E,E,N,N],[12,"arp_pa",E,E,31,N],[12,"arp_ha",E,E,31,N],[12,R[343],E,E,31,N],[12,R[344],E,E,31,N],[3,"arphdr",E,E,N,N],[12,"ar_hrd",E,E,32,N],[12,"ar_pro",E,E,32,N],[12,"ar_hln",E,E,32,N],[12,"ar_pln",E,E,32,N],[12,"ar_op",E,E,32,N],[3,"mmsghdr",E,E,N,N],[12,"msg_hdr",E,E,33,N],[12,"msg_len",E,E,33,N],[3,R[381],E,E,N,N],[12,"events",E,E,34,N],[12,"u64",E,E,34,N],[3,R[382],E,E,N,N],[12,"sun_family",E,E,35,N],[12,"sun_path",E,E,35,N],[3,R[383],E,E,N,N],[12,"ss_family",E,E,36,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,37,N],[12,"nodename",E,E,37,N],[12,"release",E,E,37,N],[12,"version",E,E,37,N],[12,"machine",E,E,37,N],[12,"domainname",E,E,37,N],[3,R[438],E,E,N,N],[12,"sigev_value",E,E,38,N],[12,"sigev_signo",E,E,38,N],[12,"sigev_notify",E,E,38,N],[12,"sigev_notify_thread_id",E,E,38,N],[3,R[439],E,E,N,N],[12,"rlim_cur",E,E,39,N],[12,"rlim_max",E,E,39,N],[3,"glob_t",E,E,N,N],[12,"gl_pathc",E,E,40,N],[12,"gl_pathv",E,E,40,N],[12,"gl_offs",E,E,40,N],[12,"gl_flags",E,E,40,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,41,N],[12,"pw_passwd",E,E,41,N],[12,"pw_uid",E,E,41,N],[12,"pw_gid",E,E,41,N],[12,"pw_gecos",E,E,41,N],[12,"pw_dir",E,E,41,N],[12,"pw_shell",E,E,41,N],[3,"spwd",E,E,N,N],[12,"sp_namp",E,E,42,N],[12,"sp_pwdp",E,E,42,N],[12,"sp_lstchg",E,E,42,N],[12,"sp_min",E,E,42,N],[12,"sp_max",E,E,42,N],[12,"sp_warn",E,E,42,N],[12,"sp_inact",E,E,42,N],[12,"sp_expire",E,E,42,N],[12,"sp_flag",E,E,42,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,43,N],[12,"dqb_bsoftlimit",E,E,43,N],[12,"dqb_curspace",E,E,43,N],[12,"dqb_ihardlimit",E,E,43,N],[12,"dqb_isoftlimit",E,E,43,N],[12,"dqb_curinodes",E,E,43,N],[12,"dqb_btime",E,E,43,N],[12,"dqb_itime",E,E,43,N],[12,"dqb_valid",E,E,43,N],[3,R[384],E,E,N,N],[12,"ssi_signo",E,E,44,N],[12,"ssi_errno",E,E,44,N],[12,"ssi_code",E,E,44,N],[12,"ssi_pid",E,E,44,N],[12,"ssi_uid",E,E,44,N],[12,"ssi_fd",E,E,44,N],[12,"ssi_tid",E,E,44,N],[12,"ssi_band",E,E,44,N],[12,"ssi_overrun",E,E,44,N],[12,"ssi_trapno",E,E,44,N],[12,"ssi_status",E,E,44,N],[12,"ssi_int",E,E,44,N],[12,"ssi_ptr",E,E,44,N],[12,"ssi_utime",E,E,44,N],[12,"ssi_stime",E,E,44,N],[12,"ssi_addr",E,E,44,N],[12,"ssi_addr_lsb",E,E,44,N],[12,"ssi_syscall",E,E,44,N],[12,"ssi_call_addr",E,E,44,N],[12,"ssi_arch",E,E,44,N],[3,R[385],E,E,N,N],[12,R[345],E,E,45,N],[12,"it_value",E,E,45,N],[3,"fsid_t",E,E,N,N],[3,R[386],E,E,N,N],[12,"mr_ifindex",E,E,46,N],[12,"mr_type",E,E,46,N],[12,"mr_alen",E,E,46,N],[12,"mr_address",E,E,46,N],[3,R[367],E,E,N,N],[3,R[371],E,E,N,N],[12,"if_index",E,E,47,N],[12,"if_name",E,E,47,N],[3,"msginfo",E,E,N,N],[12,"msgpool",E,E,48,N],[12,"msgmap",E,E,48,N],[12,"msgmax",E,E,48,N],[12,"msgmnb",E,E,48,N],[12,"msgmni",E,E,48,N],[12,"msgssz",E,E,48,N],[12,"msgtql",E,E,48,N],[12,"msgseg",E,E,48,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,49,N],[12,"sem_op",E,E,49,N],[12,"sem_flg",E,E,49,N],[3,R[387],E,E,N,N],[12,"time",E,E,50,N],[12,"type_",E,E,50,N],[12,"code",E,E,50,N],[12,"value",E,E,50,N],[3,R[440],E,E,N,N],[12,"bustype",E,E,51,N],[12,"vendor",E,E,51,N],[12,"product",E,E,51,N],[12,"version",E,E,51,N],[3,R[388],E,E,N,N],[12,"value",E,E,52,N],[12,"minimum",E,E,52,N],[12,"maximum",E,E,52,N],[12,"fuzz",E,E,52,N],[12,"flat",E,E,52,N],[12,"resolution",E,E,52,N],[3,R[389],E,E,N,N],[12,"flags",E,E,53,N],[12,"len",E,E,53,N],[12,"index",E,E,53,N],[12,"keycode",E,E,53,N],[12,"scancode",E,E,53,N],[3,R[390],E,E,N,N],[12,"type_",E,E,54,N],[12,"codes_size",E,E,54,N],[12,"codes_ptr",E,E,54,N],[3,R[391],E,E,N,N],[12,"length",E,E,55,N],[12,"delay",E,E,55,N],[3,R[392],E,E,N,N],[12,"button",E,E,56,N],[12,"interval",E,E,56,N],[3,R[393],E,E,N,N],[12,"attack_length",E,E,57,N],[12,"attack_level",E,E,57,N],[12,"fade_length",E,E,57,N],[12,"fade_level",E,E,57,N],[3,R[394],E,E,N,N],[12,"level",E,E,58,N],[12,R[346],E,E,58,N],[3,R[395],E,E,N,N],[12,"start_level",E,E,59,N],[12,"end_level",E,E,59,N],[12,R[346],E,E,59,N],[3,R[396],E,E,N,N],[12,"right_saturation",E,E,60,N],[12,"left_saturation",E,E,60,N],[12,"right_coeff",E,E,60,N],[12,"left_coeff",E,E,60,N],[12,"deadband",E,E,60,N],[12,"center",E,E,60,N],[3,R[397],E,E,N,N],[12,"waveform",E,E,61,N],[12,"period",E,E,61,N],[12,"magnitude",E,E,61,N],[12,"offset",E,E,61,N],[12,"phase",E,E,61,N],[12,R[346],E,E,61,N],[12,"custom_len",E,E,61,N],[12,"custom_data",E,E,61,N],[3,R[398],E,E,N,N],[12,"strong_magnitude",E,E,62,N],[12,"weak_magnitude",E,E,62,N],[3,R[399],E,E,N,N],[12,"type_",E,E,63,N],[12,"id",E,E,63,N],[12,"direction",E,E,63,N],[12,"trigger",E,E,63,N],[12,"replay",E,E,63,N],[12,U,E,E,63,N],[3,R[400],E,E,N,N],[12,"dlpi_addr",E,E,64,N],[12,"dlpi_name",E,E,64,N],[12,"dlpi_phdr",E,E,64,N],[12,"dlpi_phnum",E,E,64,N],[12,"dlpi_adds",E,E,64,N],[12,"dlpi_subs",E,E,64,N],[12,"dlpi_tls_modid",E,E,64,N],[12,"dlpi_tls_data",E,E,64,N],[3,R[441],E,E,N,N],[12,"e_ident",E,E,65,N],[12,"e_type",E,E,65,N],[12,R[347],E,E,65,N],[12,R[348],E,E,65,N],[12,"e_entry",E,E,65,N],[12,"e_phoff",E,E,65,N],[12,"e_shoff",E,E,65,N],[12,"e_flags",E,E,65,N],[12,"e_ehsize",E,E,65,N],[12,R[349],E,E,65,N],[12,"e_phnum",E,E,65,N],[12,R[350],E,E,65,N],[12,"e_shnum",E,E,65,N],[12,R[351],E,E,65,N],[3,R[442],E,E,N,N],[12,"e_ident",E,E,66,N],[12,"e_type",E,E,66,N],[12,R[347],E,E,66,N],[12,R[348],E,E,66,N],[12,"e_entry",E,E,66,N],[12,"e_phoff",E,E,66,N],[12,"e_shoff",E,E,66,N],[12,"e_flags",E,E,66,N],[12,"e_ehsize",E,E,66,N],[12,R[349],E,E,66,N],[12,"e_phnum",E,E,66,N],[12,R[350],E,E,66,N],[12,"e_shnum",E,E,66,N],[12,R[351],E,E,66,N],[3,R[443],E,E,N,N],[12,"st_name",E,E,67,N],[12,"st_value",E,E,67,N],[12,"st_size",E,E,67,N],[12,"st_info",E,E,67,N],[12,"st_other",E,E,67,N],[12,"st_shndx",E,E,67,N],[3,R[444],E,E,N,N],[12,"st_name",E,E,68,N],[12,"st_info",E,E,68,N],[12,"st_other",E,E,68,N],[12,"st_shndx",E,E,68,N],[12,"st_value",E,E,68,N],[12,"st_size",E,E,68,N],[3,R[445],E,E,N,N],[12,"p_type",E,E,69,N],[12,"p_offset",E,E,69,N],[12,"p_vaddr",E,E,69,N],[12,"p_paddr",E,E,69,N],[12,"p_filesz",E,E,69,N],[12,"p_memsz",E,E,69,N],[12,"p_flags",E,E,69,N],[12,"p_align",E,E,69,N],[3,R[446],E,E,N,N],[12,"p_type",E,E,70,N],[12,"p_flags",E,E,70,N],[12,"p_offset",E,E,70,N],[12,"p_vaddr",E,E,70,N],[12,"p_paddr",E,E,70,N],[12,"p_filesz",E,E,70,N],[12,"p_memsz",E,E,70,N],[12,"p_align",E,E,70,N],[3,R[447],E,E,N,N],[12,"sh_name",E,E,71,N],[12,"sh_type",E,E,71,N],[12,"sh_flags",E,E,71,N],[12,"sh_addr",E,E,71,N],[12,R[352],E,E,71,N],[12,"sh_size",E,E,71,N],[12,"sh_link",E,E,71,N],[12,"sh_info",E,E,71,N],[12,R[353],E,E,71,N],[12,R[354],E,E,71,N],[3,R[448],E,E,N,N],[12,"sh_name",E,E,72,N],[12,"sh_type",E,E,72,N],[12,"sh_flags",E,E,72,N],[12,"sh_addr",E,E,72,N],[12,R[352],E,E,72,N],[12,"sh_size",E,E,72,N],[12,"sh_link",E,E,72,N],[12,"sh_info",E,E,72,N],[12,R[353],E,E,72,N],[12,R[354],E,E,72,N],[3,R[449],E,E,N,N],[12,"ch_type",E,E,73,N],[12,"ch_size",E,E,73,N],[12,R[355],E,E,73,N],[3,R[450],E,E,N,N],[12,"ch_type",E,E,74,N],[12,"ch_reserved",E,E,74,N],[12,"ch_size",E,E,74,N],[12,R[355],E,E,74,N],[3,"ucred",E,E,N,N],[12,"pid",E,E,75,N],[12,"uid",E,E,75,N],[12,"gid",E,E,75,N],[3,"mntent",E,E,N,N],[12,"mnt_fsname",E,E,76,N],[12,"mnt_dir",E,E,76,N],[12,"mnt_type",E,E,76,N],[12,"mnt_opts",E,E,76,N],[12,"mnt_freq",E,E,76,N],[12,"mnt_passno",E,E,76,N],[3,R[401],E,E,N,N],[3,R[402],E,E,N,N],[3,R[403],E,E,N,N],[12,"cmd",E,E,77,N],[12,"version",E,E,77,N],[12,"reserved",E,E,77,N],[3,R[404],E,E,N,N],[12,"ipi6_addr",E,E,78,N],[12,"ipi6_ifindex",E,E,78,N],[3,R[405],E,E,N,N],[12,"req",E,E,79,N],[12,"ip",E,E,79,N],[12,"dev",E,E,79,N],[12,"stamp",E,E,79,N],[12,"updated",E,E,79,N],[12,"ha",E,E,79,N],[3,R[406],E,E,N,N],[12,"wd",E,E,80,N],[12,"mask",E,E,80,N],[12,"cookie",E,E,80,N],[12,"len",E,E,80,N],[3,R[407],E,E,N,N],[12,"svm_family",E,E,81,N],[12,"svm_reserved1",E,E,81,N],[12,"svm_port",E,E,81,N],[12,"svm_cid",E,E,81,N],[12,"svm_zero",E,E,81,N],[3,R[408],E,E,N,N],[12,"nl_family",E,E,82,N],[12,"nl_pid",E,E,82,N],[12,"nl_groups",E,E,82,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,83,N],[12,"d_off",E,E,83,N],[12,"d_reclen",E,E,83,N],[12,"d_type",E,E,83,N],[12,"d_name",E,E,83,N],[3,R[451],E,E,N,N],[12,"d_ino",E,E,84,N],[12,"d_off",E,E,84,N],[12,"d_reclen",E,E,84,N],[12,"d_type",E,E,84,N],[12,"d_name",E,E,84,N],[3,R[409],E,E,N,N],[12,"salg_family",E,E,85,N],[12,"salg_type",E,E,85,N],[12,"salg_feat",E,E,85,N],[12,"salg_mask",E,E,85,N],[12,"salg_name",E,E,85,N],[3,R[410],E,E,N,N],[12,"ivlen",E,E,86,N],[12,"iv",E,E,86,N],[3,"mq_attr",E,E,N,N],[12,"mq_flags",E,E,87,N],[12,"mq_maxmsg",E,E,87,N],[12,"mq_msgsize",E,E,87,N],[12,"mq_curmsgs",E,E,87,N],[3,"statx",E,E,N,N],[12,"stx_mask",E,E,88,N],[12,"stx_blksize",E,E,88,N],[12,"stx_attributes",E,E,88,N],[12,"stx_nlink",E,E,88,N],[12,"stx_uid",E,E,88,N],[12,"stx_gid",E,E,88,N],[12,"stx_mode",E,E,88,N],[12,"__statx_pad1",E,E,88,N],[12,"stx_ino",E,E,88,N],[12,"stx_size",E,E,88,N],[12,"stx_blocks",E,E,88,N],[12,"stx_attributes_mask",E,E,88,N],[12,"stx_atime",E,E,88,N],[12,"stx_btime",E,E,88,N],[12,"stx_ctime",E,E,88,N],[12,"stx_mtime",E,E,88,N],[12,"stx_rdev_major",E,E,88,N],[12,"stx_rdev_minor",E,E,88,N],[12,"stx_dev_major",E,E,88,N],[12,"stx_dev_minor",E,E,88,N],[12,"__statx_pad2",E,E,88,N],[3,R[411],E,E,N,N],[12,"tv_sec",E,E,89,N],[12,"tv_nsec",E,E,89,N],[12,"__statx_timestamp_pad1",E,E,89,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,90,N],[12,"aio_lio_opcode",E,E,90,N],[12,"aio_reqprio",E,E,90,N],[12,"aio_buf",E,E,90,N],[12,"aio_nbytes",E,E,90,N],[12,"aio_sigevent",E,E,90,N],[12,"aio_offset",E,E,90,N],[3,R[412],E,E,N,N],[12,"e_termination",E,E,91,N],[12,"e_exit",E,E,91,N],[3,R[413],E,E,N,N],[12,"tv_sec",E,E,92,N],[12,"tv_usec",E,E,92,N],[3,R[452],E,E,N,N],[12,"gl_pathc",E,E,93,N],[12,"gl_pathv",E,E,93,N],[12,"gl_offs",E,E,93,N],[12,"gl_flags",E,E,93,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,94,N],[12,"msg_namelen",E,E,94,N],[12,"msg_iov",E,E,94,N],[12,"msg_iovlen",E,E,94,N],[12,"msg_control",E,E,94,N],[12,"msg_controllen",E,E,94,N],[12,"msg_flags",E,E,94,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,95,N],[12,"cmsg_level",E,E,95,N],[12,"cmsg_type",E,E,95,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,96,N],[12,"c_oflag",E,E,96,N],[12,"c_cflag",E,E,96,N],[12,"c_lflag",E,E,96,N],[12,"c_line",E,E,96,N],[12,"c_cc",E,E,96,N],[12,"c_ispeed",E,E,96,N],[12,"c_ospeed",E,E,96,N],[3,R[414],E,E,N,N],[12,"arena",E,E,97,N],[12,"ordblks",E,E,97,N],[12,"smblks",E,E,97,N],[12,"hblks",E,E,97,N],[12,"hblkhd",E,E,97,N],[12,"usmblks",E,E,97,N],[12,"fsmblks",E,E,97,N],[12,"uordblks",E,E,97,N],[12,"fordblks",E,E,97,N],[12,"keepcost",E,E,97,N],[3,R[453],E,E,N,N],[12,"nlmsg_len",E,E,98,N],[12,"nlmsg_type",E,E,98,N],[12,"nlmsg_flags",E,E,98,N],[12,"nlmsg_seq",E,E,98,N],[12,"nlmsg_pid",E,E,98,N],[3,R[454],E,E,N,N],[12,"error",E,E,99,N],[12,"msg",E,E,99,N],[3,R[415],E,E,N,N],[12,"group",E,E,100,N],[3,R[416],E,E,N,N],[12,"nm_block_size",E,E,101,N],[12,"nm_block_nr",E,E,101,N],[12,"nm_frame_size",E,E,101,N],[12,"nm_frame_nr",E,E,101,N],[3,R[417],E,E,N,N],[12,"nm_status",E,E,102,N],[12,"nm_len",E,E,102,N],[12,"nm_group",E,E,102,N],[12,"nm_pid",E,E,102,N],[12,"nm_uid",E,E,102,N],[12,"nm_gid",E,E,102,N],[3,"nlattr",E,E,N,N],[12,"nla_len",E,E,103,N],[12,"nla_type",E,E,103,N],[3,"rtentry",E,E,N,N],[12,"rt_pad1",E,E,104,N],[12,"rt_dst",E,E,104,N],[12,"rt_gateway",E,E,104,N],[12,"rt_genmask",E,E,104,N],[12,"rt_flags",E,E,104,N],[12,"rt_pad2",E,E,104,N],[12,"rt_pad3",E,E,104,N],[12,"rt_tos",E,E,104,N],[12,"rt_class",E,E,104,N],[12,"rt_pad4",E,E,104,N],[12,"rt_metric",E,E,104,N],[12,"rt_dev",E,E,104,N],[12,"rt_mtu",E,E,104,N],[12,"rt_window",E,E,104,N],[12,"rt_irtt",E,E,104,N],[3,"utmpx",E,E,N,N],[12,"ut_type",E,E,105,N],[12,"ut_pid",E,E,105,N],[12,"ut_line",E,E,105,N],[12,"ut_id",E,E,105,N],[12,"ut_user",E,E,105,N],[12,"ut_host",E,E,105,N],[12,"ut_exit",E,E,105,N],[12,"ut_session",E,E,105,N],[12,"ut_tv",E,E,105,N],[12,"ut_addr_v6",E,E,105,N],[3,R[460],E,E,N,N],[3,"sysinfo",E,E,N,N],[12,"uptime",E,E,106,N],[12,"loads",E,E,106,N],[12,"totalram",E,E,106,N],[12,"freeram",E,E,106,N],[12,"sharedram",E,E,106,N],[12,"bufferram",E,E,106,N],[12,"totalswap",E,E,106,N],[12,"freeswap",E,E,106,N],[12,"procs",E,E,106,N],[12,"pad",E,E,106,N],[12,"totalhigh",E,E,106,N],[12,"freehigh",E,E,106,N],[12,"mem_unit",E,E,106,N],[12,"_f",E,E,106,N],[3,R[455],E,E,N,N],[12,"msg_perm",E,E,107,N],[12,"msg_stime",E,E,107,N],[12,"msg_rtime",E,E,107,N],[12,"msg_ctime",E,E,107,N],[12,"msg_qnum",E,E,107,N],[12,"msg_qbytes",E,E,107,N],[12,"msg_lspid",E,E,107,N],[12,"msg_lrpid",E,E,107,N],[3,R[368],E,E,N,N],[12,"sa_sigaction",E,E,108,N],[12,"sa_mask",E,E,108,N],[12,"sa_flags",E,E,108,N],[12,"sa_restorer",E,E,108,N],[3,"statfs",E,E,N,N],[12,"f_type",E,E,109,N],[12,"f_bsize",E,E,109,N],[12,R[363],E,E,109,N],[12,"f_bfree",E,E,109,N],[12,R[364],E,E,109,N],[12,"f_files",E,E,109,N],[12,"f_ffree",E,E,109,N],[12,"f_fsid",E,E,109,N],[12,R[361],E,E,109,N],[12,R[362],E,E,109,N],[3,"flock",E,E,N,N],[12,"l_type",E,E,110,N],[12,"l_whence",E,E,110,N],[12,"l_start",E,E,110,N],[12,"l_len",E,E,110,N],[12,"l_pid",E,E,110,N],[3,R[418],E,E,N,N],[12,"si_signo",E,E,111,N],[12,"si_errno",E,E,111,N],[12,"si_code",E,E,111,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,112,N],[12,"ss_flags",E,E,112,N],[12,"ss_size",E,E,112,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,113,N],[12,"st_ino",E,E,113,N],[12,"st_nlink",E,E,113,N],[12,"st_mode",E,E,113,N],[12,"st_uid",E,E,113,N],[12,"st_gid",E,E,113,N],[12,"st_rdev",E,E,113,N],[12,"st_size",E,E,113,N],[12,R[356],E,E,113,N],[12,R[357],E,E,113,N],[12,"st_atime",E,E,113,N],[12,R[358],E,E,113,N],[12,"st_mtime",E,E,113,N],[12,R[359],E,E,113,N],[12,"st_ctime",E,E,113,N],[12,R[360],E,E,113,N],[3,"stat64",E,E,N,N],[12,"st_dev",E,E,114,N],[12,"st_ino",E,E,114,N],[12,"st_nlink",E,E,114,N],[12,"st_mode",E,E,114,N],[12,"st_uid",E,E,114,N],[12,"st_gid",E,E,114,N],[12,"st_rdev",E,E,114,N],[12,"st_size",E,E,114,N],[12,R[356],E,E,114,N],[12,R[357],E,E,114,N],[12,"st_atime",E,E,114,N],[12,R[358],E,E,114,N],[12,"st_mtime",E,E,114,N],[12,R[359],E,E,114,N],[12,"st_ctime",E,E,114,N],[12,R[360],E,E,114,N],[3,R[419],E,E,N,N],[12,"f_type",E,E,115,N],[12,"f_bsize",E,E,115,N],[12,R[363],E,E,115,N],[12,"f_bfree",E,E,115,N],[12,R[364],E,E,115,N],[12,"f_files",E,E,115,N],[12,"f_ffree",E,E,115,N],[12,"f_fsid",E,E,115,N],[12,R[361],E,E,115,N],[12,R[362],E,E,115,N],[12,"f_flags",E,E,115,N],[12,"f_spare",E,E,115,N],[3,R[370],E,E,N,N],[12,"f_bsize",E,E,116,N],[12,R[362],E,E,116,N],[12,R[363],E,E,116,N],[12,"f_bfree",E,E,116,N],[12,R[364],E,E,116,N],[12,"f_files",E,E,116,N],[12,"f_ffree",E,E,116,N],[12,"f_favail",E,E,116,N],[12,"f_fsid",E,E,116,N],[12,"f_flag",E,E,116,N],[12,R[366],E,E,116,N],[3,R[420],E,E,N,N],[3,R[421],E,E,N,N],[12,"significand",E,E,117,N],[12,"exponent",E,E,117,N],[3,R[422],E,E,N,N],[12,"element",E,E,118,N],[3,R[423],E,E,N,N],[12,"cwd",E,E,119,N],[12,"swd",E,E,119,N],[12,"ftw",E,E,119,N],[12,"fop",E,E,119,N],[12,"rip",E,E,119,N],[12,"rdp",E,E,119,N],[12,"mxcsr",E,E,119,N],[12,R[365],E,E,119,N],[12,"_st",E,E,119,N],[12,"_xmm",E,E,119,N],[3,R[424],E,E,N,N],[12,"r15",E,E,120,N],[12,"r14",E,E,120,N],[12,"r13",E,E,120,N],[12,"r12",E,E,120,N],[12,"rbp",E,E,120,N],[12,"rbx",E,E,120,N],[12,"r11",E,E,120,N],[12,"r10",E,E,120,N],[12,"r9",E,E,120,N],[12,"r8",E,E,120,N],[12,"rax",E,E,120,N],[12,"rcx",E,E,120,N],[12,"rdx",E,E,120,N],[12,"rsi",E,E,120,N],[12,"rdi",E,E,120,N],[12,"orig_rax",E,E,120,N],[12,"rip",E,E,120,N],[12,"cs",E,E,120,N],[12,"eflags",E,E,120,N],[12,"rsp",E,E,120,N],[12,"ss",E,E,120,N],[12,"fs_base",E,E,120,N],[12,"gs_base",E,E,120,N],[12,"ds",E,E,120,N],[12,"es",E,E,120,N],[12,"fs",E,E,120,N],[12,"gs",E,E,120,N],[3,"user",E,E,N,N],[12,"regs",E,E,121,N],[12,"u_fpvalid",E,E,121,N],[12,"i387",E,E,121,N],[12,"u_tsize",E,E,121,N],[12,"u_dsize",E,E,121,N],[12,"u_ssize",E,E,121,N],[12,"start_code",E,E,121,N],[12,"start_stack",E,E,121,N],[12,"signal",E,E,121,N],[12,"u_ar0",E,E,121,N],[12,"u_fpstate",E,E,121,N],[12,"magic",E,E,121,N],[12,"u_comm",E,E,121,N],[12,"u_debugreg",E,E,121,N],[3,R[425],E,E,N,N],[12,"gregs",E,E,122,N],[12,"fpregs",E,E,122,N],[3,R[456],E,E,N,N],[12,"__key",E,E,123,N],[12,"uid",E,E,123,N],[12,"gid",E,E,123,N],[12,"cuid",E,E,123,N],[12,"cgid",E,E,123,N],[12,"mode",E,E,123,N],[12,"__seq",E,E,123,N],[3,R[457],E,E,N,N],[12,"shm_perm",E,E,124,N],[12,"shm_segsz",E,E,124,N],[12,"shm_atime",E,E,124,N],[12,"shm_dtime",E,E,124,N],[12,"shm_ctime",E,E,124,N],[12,"shm_cpid",E,E,124,N],[12,"shm_lpid",E,E,124,N],[12,"shm_nattch",E,E,124,N],[3,R[458],E,E,N,N],[12,"c_iflag",E,E,125,N],[12,"c_oflag",E,E,125,N],[12,"c_cflag",E,E,125,N],[12,"c_lflag",E,E,125,N],[12,"c_line",E,E,125,N],[12,"c_cc",E,E,125,N],[12,"c_ispeed",E,E,125,N],[12,"c_ospeed",E,E,125,N],[3,R[426],E,E,N,N],[12,"cwd",E,E,126,N],[12,"swd",E,E,126,N],[12,"ftw",E,E,126,N],[12,"fop",E,E,126,N],[12,"rip",E,E,126,N],[12,"rdp",E,E,126,N],[12,"mxcsr",E,E,126,N],[12,R[365],E,E,126,N],[12,"st_space",E,E,126,N],[12,"xmm_space",E,E,126,N],[3,R[427],E,E,N,N],[12,"uc_flags",E,E,127,N],[12,"uc_link",E,E,127,N],[12,"uc_stack",E,E,127,N],[12,"uc_mcontext",E,E,127,N],[12,"uc_sigmask",E,E,127,N],[3,"statvfs",E,E,N,N],[12,"f_bsize",E,E,128,N],[12,R[362],E,E,128,N],[12,R[363],E,E,128,N],[12,"f_bfree",E,E,128,N],[12,R[364],E,E,128,N],[12,"f_files",E,E,128,N],[12,"f_ffree",E,E,128,N],[12,"f_favail",E,E,128,N],[12,"f_fsid",E,E,128,N],[12,"f_flag",E,E,128,N],[12,R[366],E,E,128,N],[3,"sem_t",E,E,N,N],[3,R[428],E,E,N,N],[3,R[429],E,E,N,N],[3,R[430],E,E,N,N],[3,R[431],E,E,N,N],[3,R[432],E,E,N,N],[3,R[433],E,E,N,N],[3,R[459],E,E,N,N],[12,"s6_addr",E,E,129,N],[4,"DIR",E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,R[461],E,E,N,N],[4,R[462],E,E,N,N],[5,"CMSG_FIRSTHDR",E,E,N,[[]]],[5,"CMSG_DATA",E,E,N,[[]]],[5,"CMSG_SPACE",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR",E,E,N,[[["c_int"]]]],[5,"FD_ISSET",E,E,N,[[["c_int"]],["bool"]]],[5,"FD_SET",E,E,N,[[["c_int"]]]],[5,"FD_ZERO",E,E,N,[[]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_ECN",E,E,N,[[["u8"]],["u8"]]],[5,"NLA_ALIGN",E,E,N,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR",E,E,N,[[]]],[5,"CPU_ZERO",E,E,N,[[[R[367]]]]],[5,"CPU_SET",E,E,N,[[[R[367]],["usize"]]]],[5,"CPU_CLR",E,E,N,[[[R[367]],["usize"]]]],[5,"CPU_ISSET",E,E,N,[[["usize"],[R[367]]],["bool"]]],[5,"CPU_EQUAL",E,E,N,[[[R[367]]],["bool"]]],[5,"major",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"minor",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"makedev",E,E,N,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC",E,E,N,[[["u8"]],["u8"]]],[5,"RT_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS",E,E,N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR",E,E,N,[[["u32"]],["bool"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strcasecmp",E,E,N,N],[5,"strncasecmp",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,"getpeername",E,E,N,N],[5,"getsockname",E,E,N,N],[5,"setsockopt",E,E,N,N],[5,"socketpair",E,E,N,N],[5,"sendto",E,E,N,N],[5,"shutdown",E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pipe",E,E,N,N],[5,"posix_memalign",E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setegid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"ttyname_r",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"killpg",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,"munlockall",E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,"if_nametoindex",E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"times",E,E,N,N],[5,"pthread_self",E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,"sched_yield",E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,"getsockopt",E,E,N,N],[5,"raise",E,E,N,N],[5,R[368],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,"gethostname",E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,"statvfs",E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,"sigprocmask",E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,"cfgetispeed",E,E,N,N],[5,"cfgetospeed",E,E,N,N],[5,"cfsetispeed",E,E,N,N],[5,"cfsetospeed",E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,"tcsendbreak",E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,"posix_openpt",E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"strcasestr",E,E,N,N],[5,"getline",E,E,N,N],[5,"getsid",E,E,N,N],[5,R[369],E,E,N,N],[5,"pause",E,E,N,N],[5,"readlinkat",E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"openat",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"readdir_r",E,"The 64-bit libc on Solaris and illumos only has readdir_r.…",N,N],[5,"cfmakeraw",E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"sem_destroy",E,E,N,N],[5,"sem_init",E,E,N,N],[5,"fdatasync",E,E,N,N],[5,"mincore",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"clock_settime",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"pthread_getattr_np",E,E,N,N],[5,"pthread_attr_getstack",E,E,N,N],[5,"memalign",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"pipe2",E,E,N,N],[5,"statfs",E,E,N,N],[5,R[419],E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"fstatfs64",E,E,N,N],[5,R[370],E,E,N,N],[5,"fstatvfs64",E,E,N,N],[5,"memrchr",E,E,N,N],[5,"posix_fadvise",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"creat64",E,E,N,N],[5,"fstat64",E,E,N,N],[5,"fstatat64",E,E,N,N],[5,"ftruncate64",E,E,N,N],[5,"lseek64",E,E,N,N],[5,"lstat64",E,E,N,N],[5,"mmap64",E,E,N,N],[5,"open64",E,E,N,N],[5,"openat64",E,E,N,N],[5,"pread64",E,E,N,N],[5,"preadv64",E,E,N,N],[5,"pwrite64",E,E,N,N],[5,"pwritev64",E,E,N,N],[5,"readdir64",E,E,N,N],[5,"readdir64_r",E,E,N,N],[5,"stat64",E,E,N,N],[5,"truncate64",E,E,N,N],[5,"mknodat",E,E,N,N],[5,"pthread_condattr_getclock",E,E,N,N],[5,"pthread_condattr_setclock",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"accept4",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,"ptsname_r",E,E,N,N],[5,"clearenv",E,E,N,N],[5,"waitid",E,E,N,N],[5,"setreuid",E,E,N,N],[5,"setregid",E,E,N,N],[5,"getresuid",E,E,N,N],[5,"getresgid",E,E,N,N],[5,"acct",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"vfork",E,E,N,N],[5,"setresgid",E,E,N,N],[5,"setresuid",E,E,N,N],[5,"wait4",E,E,N,N],[5,"openpty",E,E,N,N],[5,"forkpty",E,E,N,N],[5,"login_tty",E,E,N,N],[5,"execvpe",E,E,N,N],[5,"fexecve",E,E,N,N],[5,"getifaddrs",E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"uname",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,"aio_return",E,E,N,N],[5,"aio_suspend",E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setgrent",E,E,N,N],[5,"endgrent",E,E,N,N],[5,"getgrent",E,E,N,N],[5,"setspent",E,E,N,N],[5,"endspent",E,E,N,N],[5,"getspent",E,E,N,N],[5,"getspnam",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"shmget",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"ftok",E,E,N,N],[5,"semget",E,E,N,N],[5,"semop",E,E,N,N],[5,"semctl",E,E,N,N],[5,"msgctl",E,E,N,N],[5,"msgget",E,E,N,N],[5,"msgrcv",E,E,N,N],[5,"msgsnd",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"__errno_location",E,E,N,N],[5,"fopen64",E,E,N,N],[5,"freopen64",E,E,N,N],[5,"tmpfile64",E,E,N,N],[5,"fgetpos64",E,E,N,N],[5,"fsetpos64",E,E,N,N],[5,"fseeko64",E,E,N,N],[5,"ftello64",E,E,N,N],[5,"fallocate",E,E,N,N],[5,"fallocate64",E,E,N,N],[5,"posix_fallocate",E,E,N,N],[5,"posix_fallocate64",E,E,N,N],[5,"readahead",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"lgetxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"lsetxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"llistxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"lremovexattr",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,"signalfd",E,E,N,N],[5,"timerfd_create",E,E,N,N],[5,"timerfd_gettime",E,E,N,N],[5,"timerfd_settime",E,E,N,N],[5,"pwritev",E,E,N,N],[5,"preadv",E,E,N,N],[5,"quotactl",E,E,N,N],[5,"mq_open",E,E,N,N],[5,"mq_close",E,E,N,N],[5,"mq_unlink",E,E,N,N],[5,"mq_receive",E,E,N,N],[5,"mq_timedreceive",E,E,N,N],[5,"mq_send",E,E,N,N],[5,"mq_timedsend",E,E,N,N],[5,"mq_getattr",E,E,N,N],[5,"mq_setattr",E,E,N,N],[5,"epoll_pwait",E,E,N,N],[5,"dup3",E,E,N,N],[5,"mkostemp",E,E,N,N],[5,"mkostemps",E,E,N,N],[5,"sigtimedwait",E,E,N,N],[5,"sigwaitinfo",E,E,N,N],[5,"nl_langinfo_l",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"pthread_setschedprio",E,E,N,N],[5,"getloadavg",E,E,N,N],[5,"process_vm_readv",E,E,N,N],[5,"process_vm_writev",E,E,N,N],[5,"reboot",E,E,N,N],[5,"setfsgid",E,E,N,N],[5,"setfsuid",E,E,N,N],[5,"mkfifoat",E,E,N,N],[5,R[371],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"sync_file_range",E,E,N,N],[5,"mremap",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,"shm_unlink",E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"remap_file_pages",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"vhangup",E,E,N,N],[5,"sync",E,E,N,N],[5,"syscall",E,E,N,N],[5,"sched_getaffinity",E,E,N,N],[5,"sched_setaffinity",E,E,N,N],[5,"epoll_create",E,E,N,N],[5,"epoll_create1",E,E,N,N],[5,"epoll_wait",E,E,N,N],[5,"epoll_ctl",E,E,N,N],[5,"pthread_getschedparam",E,E,N,N],[5,"unshare",E,E,N,N],[5,"umount",E,E,N,N],[5,"sched_get_priority_max",E,E,N,N],[5,"tee",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"splice",E,E,N,N],[5,"eventfd",E,E,N,N],[5,"sched_rr_get_interval",E,E,N,N],[5,"sem_timedwait",E,E,N,N],[5,"sem_getvalue",E,E,N,N],[5,"sched_setparam",E,E,N,N],[5,"setns",E,E,N,N],[5,"swapoff",E,E,N,N],[5,"vmsplice",E,E,N,N],[5,"mount",E,E,N,N],[5,"personality",E,E,N,N],[5,"prctl",E,E,N,N],[5,"sched_getparam",E,E,N,N],[5,"ppoll",E,E,N,N],[5,"pthread_mutex_timedlock",E,E,N,N],[5,"clone",E,E,N,N],[5,"sched_getscheduler",E,E,N,N],[5,"clock_nanosleep",E,E,N,N],[5,"pthread_attr_getguardsize",E,E,N,N],[5,"sethostname",E,E,N,N],[5,"sched_get_priority_min",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,"sysinfo",E,E,N,N],[5,"umount2",E,E,N,N],[5,"pthread_setschedparam",E,E,N,N],[5,"swapon",E,E,N,N],[5,"sched_setscheduler",E,E,N,N],[5,"sendfile",E,E,N,N],[5,"sigsuspend",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,"initgroups",E,E,N,N],[5,"pthread_sigmask",E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"daemon",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,"getgrouplist",E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"dl_iterate_phdr",E,E,N,N],[5,"setmntent",E,E,N,N],[5,"getmntent",E,E,N,N],[5,"addmntent",E,E,N,N],[5,"endmntent",E,E,N,N],[5,"hasmntopt",E,E,N,N],[5,"posix_spawn",E,E,N,N],[5,"posix_spawnp",E,E,N,N],[5,"posix_spawnattr_init",E,E,N,N],[5,"posix_spawnattr_destroy",E,E,N,N],[5,"posix_spawnattr_getsigdefault",E,E,N,N],[5,"posix_spawnattr_setsigdefault",E,E,N,N],[5,"posix_spawnattr_getsigmask",E,E,N,N],[5,"posix_spawnattr_setsigmask",E,E,N,N],[5,"posix_spawnattr_getflags",E,E,N,N],[5,"posix_spawnattr_setflags",E,E,N,N],[5,"posix_spawnattr_getpgroup",E,E,N,N],[5,"posix_spawnattr_setpgroup",E,E,N,N],[5,"posix_spawnattr_getschedpolicy",E,E,N,N],[5,"posix_spawnattr_setschedpolicy",E,E,N,N],[5,"posix_spawnattr_getschedparam",E,E,N,N],[5,"posix_spawnattr_setschedparam",E,E,N,N],[5,"posix_spawn_file_actions_init",E,E,N,N],[5,"posix_spawn_file_actions_destroy",E,E,N,N],[5,"posix_spawn_file_actions_addopen",E,E,N,N],[5,"posix_spawn_file_actions_addclose",E,E,N,N],[5,"posix_spawn_file_actions_adddup2",E,E,N,N],[5,"fread_unlocked",E,E,N,N],[5,"inotify_rm_watch",E,E,N,N],[5,"inotify_init",E,E,N,N],[5,"inotify_init1",E,E,N,N],[5,"inotify_add_watch",E,E,N,N],[5,"sendmmsg",E,E,N,N],[5,"recvmmsg",E,E,N,N],[5,"getrlimit64",E,E,N,N],[5,"setrlimit64",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"prlimit",E,E,N,N],[5,"prlimit64",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"getpt",E,E,N,N],[5,"mallopt",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"statx",E,E,N,N],[5,"getrandom",E,E,N,N],[5,"ioctl",E,E,N,N],[5,"backtrace",E,E,N,N],[5,"glob64",E,E,N,N],[5,"globfree64",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"pthread_attr_getaffinity_np",E,E,N,N],[5,"pthread_attr_setaffinity_np",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"pthread_getaffinity_np",E,E,N,N],[5,"pthread_setaffinity_np",E,E,N,N],[5,"pthread_rwlockattr_getkind_np",E,E,N,N],[5,"pthread_rwlockattr_setkind_np",E,E,N,N],[5,"sched_getcpu",E,E,N,N],[5,R[414],E,E,N,N],[5,"malloc_usable_size",E,E,N,N],[5,"getauxval",E,E,N,N],[5,"getpwent_r",E,E,N,N],[5,"getgrent_r",E,E,N,N],[5,"pthread_getname_np",E,E,N,N],[5,"pthread_setname_np",E,E,N,N],[5,"getcontext",E,E,N,N],[5,"setcontext",E,E,N,N],[5,"makecontext",E,E,N,N],[5,"swapcontext",E,E,N,N],[5,"iopl",E,E,N,N],[5,"ioperm",E,E,N,N],[5,"sysctl",E,E,N,N],[11,"si_addr",E,E,111,[[["self"]]]],[11,"si_value",E,E,111,[[["self"]],["sigval"]]],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,"locale_t",E,E,N,N],[6,"sa_family_t",E,E,N,N],[6,"speed_t",E,E,N,N],[6,"tcflag_t",E,E,N,N],[6,"clockid_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"id_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"dev_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"ino64_t",E,E,N,N],[6,"off64_t",E,E,N,N],[6,"blkcnt64_t",E,E,N,N],[6,"rlim64_t",E,E,N,N],[6,"mqd_t",E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"nl_item",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"loff_t",E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"__u8",E,E,N,N],[6,"__u16",E,E,N,N],[6,"__s16",E,E,N,N],[6,"__u32",E,E,N,N],[6,"__s32",E,E,N,N],[6,"Elf32_Half",E,E,N,N],[6,"Elf32_Word",E,E,N,N],[6,"Elf32_Off",E,E,N,N],[6,"Elf32_Addr",E,E,N,N],[6,"Elf64_Half",E,E,N,N],[6,"Elf64_Word",E,E,N,N],[6,"Elf64_Off",E,E,N,N],[6,"Elf64_Addr",E,E,N,N],[6,"Elf64_Xword",E,E,N,N],[6,"Elf64_Sxword",E,E,N,N],[6,"Elf32_Section",E,E,N,N],[6,"Elf64_Section",E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"__priority_which_t",E,E,N,N],[6,"__rlimit_resource_t",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"msgqnum_t",E,E,N,N],[6,"msglen_t",E,E,N,N],[6,"fsblkcnt_t",E,E,N,N],[6,"fsfilcnt_t",E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"__fsword_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"greg_t",E,E,N,N],[6,"suseconds_t",E,E,N,N],[6,"__u64",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[17,"INT_MIN",E,E,N,N],[17,"INT_MAX",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_UNKNOWN",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,"FD_CLOEXEC",E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,"IPPROTO_TCP",E,E,N,N],[17,"IPPROTO_UDP",E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,"IPPROTO_IPV6",E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,"INADDR_BROADCAST",E,E,N,N],[17,"INADDR_NONE",E,E,N,N],[17,"ARPOP_REQUEST",E,E,N,N],[17,"ARPOP_REPLY",E,E,N,N],[17,"ATF_COM",E,E,N,N],[17,"ATF_PERM",E,E,N,N],[17,"ATF_PUBL",E,E,N,N],[17,"ATF_USETRAILERS",E,E,N,N],[17,"EXIT_FAILURE",E,E,N,N],[17,"EXIT_SUCCESS",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_SETLEASE",E,E,N,N],[17,"F_GETLEASE",E,E,N,N],[17,"F_NOTIFY",E,E,N,N],[17,"F_CANCELLK",E,E,N,N],[17,"F_DUPFD_CLOEXEC",E,E,N,N],[17,"F_SETPIPE_SZ",E,E,N,N],[17,"F_GETPIPE_SZ",E,E,N,N],[17,"F_ADD_SEALS",E,E,N,N],[17,"F_GET_SEALS",E,E,N,N],[17,"F_SEAL_SEAL",E,E,N,N],[17,"F_SEAL_SHRINK",E,E,N,N],[17,"F_SEAL_GROW",E,E,N,N],[17,"F_SEAL_WRITE",E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"CLOCK_MONOTONIC_RAW",E,E,N,N],[17,"CLOCK_REALTIME_COARSE",E,E,N,N],[17,"CLOCK_MONOTONIC_COARSE",E,E,N,N],[17,"CLOCK_BOOTTIME",E,E,N,N],[17,"CLOCK_REALTIME_ALARM",E,E,N,N],[17,"CLOCK_BOOTTIME_ALARM",E,E,N,N],[17,"TIMER_ABSTIME",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,"SOCK_CLOEXEC",E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,"MAP_PRIVATE",E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,"MS_INVALIDATE",E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,"MS_RDONLY",E,E,N,N],[17,"MS_NOSUID",E,E,N,N],[17,"MS_NODEV",E,E,N,N],[17,"MS_NOEXEC",E,E,N,N],[17,"MS_SYNCHRONOUS",E,E,N,N],[17,"MS_REMOUNT",E,E,N,N],[17,"MS_MANDLOCK",E,E,N,N],[17,"MS_DIRSYNC",E,E,N,N],[17,"MS_NOATIME",E,E,N,N],[17,"MS_NODIRATIME",E,E,N,N],[17,"MS_BIND",E,E,N,N],[17,"MS_MOVE",E,E,N,N],[17,"MS_REC",E,E,N,N],[17,"MS_SILENT",E,E,N,N],[17,"MS_POSIXACL",E,E,N,N],[17,"MS_UNBINDABLE",E,E,N,N],[17,"MS_PRIVATE",E,E,N,N],[17,"MS_SLAVE",E,E,N,N],[17,"MS_SHARED",E,E,N,N],[17,"MS_RELATIME",E,E,N,N],[17,"MS_KERNMOUNT",E,E,N,N],[17,"MS_I_VERSION",E,E,N,N],[17,"MS_STRICTATIME",E,E,N,N],[17,"MS_ACTIVE",E,E,N,N],[17,"MS_MGC_VAL",E,E,N,N],[17,"MS_MGC_MSK",E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,"EWOULDBLOCK",E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"SCM_CREDENTIALS",E,E,N,N],[17,"PROT_GROWSDOWN",E,E,N,N],[17,"PROT_GROWSUP",E,E,N,N],[17,"MAP_TYPE",E,E,N,N],[17,"MADV_NORMAL",E,E,N,N],[17,"MADV_RANDOM",E,E,N,N],[17,"MADV_SEQUENTIAL",E,E,N,N],[17,"MADV_WILLNEED",E,E,N,N],[17,"MADV_DONTNEED",E,E,N,N],[17,"MADV_FREE",E,E,N,N],[17,"MADV_REMOVE",E,E,N,N],[17,"MADV_DONTFORK",E,E,N,N],[17,"MADV_DOFORK",E,E,N,N],[17,"MADV_MERGEABLE",E,E,N,N],[17,"MADV_UNMERGEABLE",E,E,N,N],[17,"MADV_HUGEPAGE",E,E,N,N],[17,"MADV_NOHUGEPAGE",E,E,N,N],[17,"MADV_DONTDUMP",E,E,N,N],[17,"MADV_DODUMP",E,E,N,N],[17,"MADV_HWPOISON",E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,"IFF_BROADCAST",E,E,N,N],[17,"IFF_DEBUG",E,E,N,N],[17,"IFF_LOOPBACK",E,E,N,N],[17,"IFF_POINTOPOINT",E,E,N,N],[17,"IFF_NOTRAILERS",E,E,N,N],[17,"IFF_RUNNING",E,E,N,N],[17,"IFF_NOARP",E,E,N,N],[17,"IFF_PROMISC",E,E,N,N],[17,"IFF_ALLMULTI",E,E,N,N],[17,"IFF_MASTER",E,E,N,N],[17,"IFF_SLAVE",E,E,N,N],[17,"IFF_MULTICAST",E,E,N,N],[17,"IFF_PORTSEL",E,E,N,N],[17,"IFF_AUTOMEDIA",E,E,N,N],[17,"IFF_DYNAMIC",E,E,N,N],[17,"SOL_IP",E,E,N,N],[17,"SOL_TCP",E,E,N,N],[17,"SOL_UDP",E,E,N,N],[17,"SOL_IPV6",E,E,N,N],[17,"SOL_ICMPV6",E,E,N,N],[17,"SOL_RAW",E,E,N,N],[17,"SOL_DECNET",E,E,N,N],[17,"SOL_X25",E,E,N,N],[17,"SOL_PACKET",E,E,N,N],[17,"SOL_ATM",E,E,N,N],[17,"SOL_AAL",E,E,N,N],[17,"SOL_IRDA",E,E,N,N],[17,"SOL_NETBEUI",E,E,N,N],[17,"SOL_LLC",E,E,N,N],[17,"SOL_DCCP",E,E,N,N],[17,"SOL_NETLINK",E,E,N,N],[17,"SOL_TIPC",E,E,N,N],[17,"SOL_BLUETOOTH",E,E,N,N],[17,"SOL_ALG",E,E,N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_AX25",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_NETROM",E,E,N,N],[17,"AF_BRIDGE",E,E,N,N],[17,"AF_ATMPVC",E,E,N,N],[17,"AF_X25",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_ROSE",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_NETBEUI",E,E,N,N],[17,"AF_SECURITY",E,E,N,N],[17,"AF_KEY",E,E,N,N],[17,"AF_NETLINK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_PACKET",E,E,N,N],[17,"AF_ASH",E,E,N,N],[17,"AF_ECONET",E,E,N,N],[17,"AF_ATMSVC",E,E,N,N],[17,"AF_RDS",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_IRDA",E,E,N,N],[17,"AF_PPPOX",E,E,N,N],[17,"AF_WANPIPE",E,E,N,N],[17,"AF_LLC",E,E,N,N],[17,"AF_CAN",E,E,N,N],[17,"AF_TIPC",E,E,N,N],[17,"AF_BLUETOOTH",E,E,N,N],[17,"AF_IUCV",E,E,N,N],[17,"AF_RXRPC",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_PHONET",E,E,N,N],[17,"AF_IEEE802154",E,E,N,N],[17,"AF_CAIF",E,E,N,N],[17,"AF_ALG",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_AX25",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_NETROM",E,E,N,N],[17,"PF_BRIDGE",E,E,N,N],[17,"PF_ATMPVC",E,E,N,N],[17,"PF_X25",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_ROSE",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_NETBEUI",E,E,N,N],[17,"PF_SECURITY",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_NETLINK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_PACKET",E,E,N,N],[17,"PF_ASH",E,E,N,N],[17,"PF_ECONET",E,E,N,N],[17,"PF_ATMSVC",E,E,N,N],[17,"PF_RDS",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_IRDA",E,E,N,N],[17,"PF_PPPOX",E,E,N,N],[17,"PF_WANPIPE",E,E,N,N],[17,"PF_LLC",E,E,N,N],[17,"PF_CAN",E,E,N,N],[17,"PF_TIPC",E,E,N,N],[17,"PF_BLUETOOTH",E,E,N,N],[17,"PF_IUCV",E,E,N,N],[17,"PF_RXRPC",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_PHONET",E,E,N,N],[17,"PF_IEEE802154",E,E,N,N],[17,"PF_CAIF",E,E,N,N],[17,"PF_ALG",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,"MSG_DONTWAIT",E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_WAITALL",E,E,N,N],[17,"MSG_FIN",E,E,N,N],[17,"MSG_SYN",E,E,N,N],[17,"MSG_CONFIRM",E,E,N,N],[17,"MSG_RST",E,E,N,N],[17,"MSG_ERRQUEUE",E,E,N,N],[17,"MSG_NOSIGNAL",E,E,N,N],[17,"MSG_MORE",E,E,N,N],[17,"MSG_WAITFORONE",E,E,N,N],[17,"MSG_FASTOPEN",E,E,N,N],[17,"MSG_CMSG_CLOEXEC",E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"IP_MULTICAST_IF",E,E,N,N],[17,"IP_MULTICAST_TTL",E,E,N,N],[17,"IP_MULTICAST_LOOP",E,E,N,N],[17,"IP_TOS",E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,"IP_PKTINFO",E,E,N,N],[17,"IP_RECVTOS",E,E,N,N],[17,"IP_RECVERR",E,E,N,N],[17,"IP_ADD_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_MEMBERSHIP",E,E,N,N],[17,"IP_TRANSPARENT",E,E,N,N],[17,"IPV6_UNICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_IF",E,E,N,N],[17,"IPV6_MULTICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_ADD_MEMBERSHIP",E,E,N,N],[17,"IPV6_DROP_MEMBERSHIP",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"IPV6_RECVPKTINFO",E,E,N,N],[17,"IPV6_PKTINFO",E,E,N,N],[17,"IPV6_RECVTCLASS",E,E,N,N],[17,"IPV6_TCLASS",E,E,N,N],[17,"TCP_NODELAY",E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"TCP_CORK",E,E,N,N],[17,"TCP_KEEPIDLE",E,E,N,N],[17,"TCP_KEEPINTVL",E,E,N,N],[17,"TCP_KEEPCNT",E,E,N,N],[17,"TCP_SYNCNT",E,E,N,N],[17,"TCP_LINGER2",E,E,N,N],[17,"TCP_DEFER_ACCEPT",E,E,N,N],[17,"TCP_WINDOW_CLAMP",E,E,N,N],[17,"TCP_INFO",E,E,N,N],[17,"TCP_QUICKACK",E,E,N,N],[17,"TCP_CONGESTION",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,"FD_SETSIZE",E,E,N,N],[17,"EPOLLIN",E,E,N,N],[17,"EPOLLPRI",E,E,N,N],[17,"EPOLLOUT",E,E,N,N],[17,"EPOLLRDNORM",E,E,N,N],[17,"EPOLLRDBAND",E,E,N,N],[17,"EPOLLWRNORM",E,E,N,N],[17,"EPOLLWRBAND",E,E,N,N],[17,"EPOLLMSG",E,E,N,N],[17,"EPOLLERR",E,E,N,N],[17,"EPOLLHUP",E,E,N,N],[17,"EPOLLET",E,E,N,N],[17,"EPOLL_CTL_ADD",E,E,N,N],[17,"EPOLL_CTL_MOD",E,E,N,N],[17,"EPOLL_CTL_DEL",E,E,N,N],[17,"MNT_DETACH",E,E,N,N],[17,"MNT_EXPIRE",E,E,N,N],[17,"Q_GETFMT",E,E,N,N],[17,"Q_GETINFO",E,E,N,N],[17,"Q_SETINFO",E,E,N,N],[17,"QIF_BLIMITS",E,E,N,N],[17,"QIF_SPACE",E,E,N,N],[17,"QIF_ILIMITS",E,E,N,N],[17,"QIF_INODES",E,E,N,N],[17,"QIF_BTIME",E,E,N,N],[17,"QIF_ITIME",E,E,N,N],[17,"QIF_LIMITS",E,E,N,N],[17,"QIF_USAGE",E,E,N,N],[17,"QIF_TIMES",E,E,N,N],[17,"QIF_ALL",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"CR0",E,E,N,N],[17,"FF0",E,E,N,N],[17,"BS0",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"CLONE_VM",E,E,N,N],[17,"CLONE_FS",E,E,N,N],[17,"CLONE_FILES",E,E,N,N],[17,"CLONE_SIGHAND",E,E,N,N],[17,"CLONE_PTRACE",E,E,N,N],[17,"CLONE_VFORK",E,E,N,N],[17,"CLONE_PARENT",E,E,N,N],[17,"CLONE_THREAD",E,E,N,N],[17,"CLONE_NEWNS",E,E,N,N],[17,"CLONE_SYSVSEM",E,E,N,N],[17,"CLONE_SETTLS",E,E,N,N],[17,"CLONE_PARENT_SETTID",E,E,N,N],[17,"CLONE_CHILD_CLEARTID",E,E,N,N],[17,"CLONE_DETACHED",E,E,N,N],[17,"CLONE_UNTRACED",E,E,N,N],[17,"CLONE_CHILD_SETTID",E,E,N,N],[17,"CLONE_NEWUTS",E,E,N,N],[17,"CLONE_NEWIPC",E,E,N,N],[17,"CLONE_NEWUSER",E,E,N,N],[17,"CLONE_NEWPID",E,E,N,N],[17,"CLONE_NEWNET",E,E,N,N],[17,"CLONE_IO",E,E,N,N],[17,"CLONE_NEWCGROUP",E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,"PTRACE_O_TRACESYSGOOD",E,E,N,N],[17,"PTRACE_O_TRACEFORK",E,E,N,N],[17,"PTRACE_O_TRACEVFORK",E,E,N,N],[17,"PTRACE_O_TRACECLONE",E,E,N,N],[17,"PTRACE_O_TRACEEXEC",E,E,N,N],[17,"PTRACE_O_TRACEVFORKDONE",E,E,N,N],[17,"PTRACE_O_TRACEEXIT",E,E,N,N],[17,"PTRACE_O_TRACESECCOMP",E,E,N,N],[17,"PTRACE_O_EXITKILL",E,E,N,N],[17,"PTRACE_O_SUSPEND_SECCOMP",E,E,N,N],[17,"PTRACE_O_MASK",E,E,N,N],[17,"PTRACE_EVENT_FORK",E,E,N,N],[17,"PTRACE_EVENT_VFORK",E,E,N,N],[17,"PTRACE_EVENT_CLONE",E,E,N,N],[17,"PTRACE_EVENT_EXEC",E,E,N,N],[17,"PTRACE_EVENT_VFORK_DONE",E,E,N,N],[17,"PTRACE_EVENT_EXIT",E,E,N,N],[17,"PTRACE_EVENT_SECCOMP",E,E,N,N],[17,"__WNOTHREAD",E,E,N,N],[17,"__WALL",E,E,N,N],[17,"__WCLONE",E,E,N,N],[17,"SPLICE_F_MOVE",E,E,N,N],[17,"SPLICE_F_NONBLOCK",E,E,N,N],[17,"SPLICE_F_MORE",E,E,N,N],[17,"SPLICE_F_GIFT",E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"POSIX_FADV_NORMAL",E,E,N,N],[17,"POSIX_FADV_RANDOM",E,E,N,N],[17,"POSIX_FADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_FADV_WILLNEED",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,"AT_SYMLINK_NOFOLLOW",E,E,N,N],[17,"AT_REMOVEDIR",E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,"AT_NO_AUTOMOUNT",E,E,N,N],[17,"AT_EMPTY_PATH",E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"SI_LOAD_SHIFT",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"UTIME_OMIT",E,E,N,N],[17,"UTIME_NOW",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"IPTOS_LOWDELAY",E,E,N,N],[17,"IPTOS_THROUGHPUT",E,E,N,N],[17,"IPTOS_RELIABILITY",E,E,N,N],[17,"IPTOS_MINCOST",E,E,N,N],[17,"IPTOS_PREC_NETCONTROL",E,E,N,N],[17,"IPTOS_PREC_INTERNETCONTROL",E,E,N,N],[17,"IPTOS_PREC_CRITIC_ECP",E,E,N,N],[17,"IPTOS_PREC_FLASHOVERRIDE",E,E,N,N],[17,"IPTOS_PREC_FLASH",E,E,N,N],[17,"IPTOS_PREC_IMMEDIATE",E,E,N,N],[17,"IPTOS_PREC_PRIORITY",E,E,N,N],[17,"IPTOS_PREC_ROUTINE",E,E,N,N],[17,"IPTOS_ECN_MASK",E,E,N,N],[17,"IPTOS_ECN_ECT1",E,E,N,N],[17,"IPTOS_ECN_ECT0",E,E,N,N],[17,"IPTOS_ECN_CE",E,E,N,N],[17,"IPOPT_COPY",E,E,N,N],[17,"IPOPT_CLASS_MASK",E,E,N,N],[17,"IPOPT_NUMBER_MASK",E,E,N,N],[17,"IPOPT_CONTROL",E,E,N,N],[17,"IPOPT_RESERVED1",E,E,N,N],[17,"IPOPT_MEASUREMENT",E,E,N,N],[17,"IPOPT_RESERVED2",E,E,N,N],[17,"IPOPT_END",E,E,N,N],[17,"IPOPT_NOOP",E,E,N,N],[17,"IPOPT_SEC",E,E,N,N],[17,"IPOPT_LSRR",E,E,N,N],[17,"IPOPT_TIMESTAMP",E,E,N,N],[17,"IPOPT_RR",E,E,N,N],[17,"IPOPT_SID",E,E,N,N],[17,"IPOPT_SSRR",E,E,N,N],[17,"IPOPT_RA",E,E,N,N],[17,"IPVERSION",E,E,N,N],[17,"MAXTTL",E,E,N,N],[17,"IPDEFTTL",E,E,N,N],[17,"IPOPT_OPTVAL",E,E,N,N],[17,"IPOPT_OLEN",E,E,N,N],[17,"IPOPT_OFFSET",E,E,N,N],[17,"IPOPT_MINOFF",E,E,N,N],[17,"MAX_IPOPTLEN",E,E,N,N],[17,"IPOPT_NOP",E,E,N,N],[17,"IPOPT_EOL",E,E,N,N],[17,"IPOPT_TS",E,E,N,N],[17,"IPOPT_TS_TSONLY",E,E,N,N],[17,"IPOPT_TS_TSANDADDR",E,E,N,N],[17,"IPOPT_TS_PRESPEC",E,E,N,N],[17,"ARPOP_RREQUEST",E,E,N,N],[17,"ARPOP_RREPLY",E,E,N,N],[17,"ARPOP_InREQUEST",E,E,N,N],[17,"ARPOP_InREPLY",E,E,N,N],[17,"ARPOP_NAK",E,E,N,N],[17,"ATF_NETMASK",E,E,N,N],[17,"ATF_DONTPUB",E,E,N,N],[17,"ARPHRD_NETROM",E,E,N,N],[17,"ARPHRD_ETHER",E,E,N,N],[17,"ARPHRD_EETHER",E,E,N,N],[17,"ARPHRD_AX25",E,E,N,N],[17,"ARPHRD_PRONET",E,E,N,N],[17,"ARPHRD_CHAOS",E,E,N,N],[17,"ARPHRD_IEEE802",E,E,N,N],[17,"ARPHRD_ARCNET",E,E,N,N],[17,"ARPHRD_APPLETLK",E,E,N,N],[17,"ARPHRD_DLCI",E,E,N,N],[17,"ARPHRD_ATM",E,E,N,N],[17,"ARPHRD_METRICOM",E,E,N,N],[17,"ARPHRD_IEEE1394",E,E,N,N],[17,"ARPHRD_EUI64",E,E,N,N],[17,"ARPHRD_INFINIBAND",E,E,N,N],[17,"ARPHRD_SLIP",E,E,N,N],[17,"ARPHRD_CSLIP",E,E,N,N],[17,"ARPHRD_SLIP6",E,E,N,N],[17,"ARPHRD_CSLIP6",E,E,N,N],[17,"ARPHRD_RSRVD",E,E,N,N],[17,"ARPHRD_ADAPT",E,E,N,N],[17,"ARPHRD_ROSE",E,E,N,N],[17,"ARPHRD_X25",E,E,N,N],[17,"ARPHRD_HWX25",E,E,N,N],[17,"ARPHRD_PPP",E,E,N,N],[17,"ARPHRD_CISCO",E,E,N,N],[17,"ARPHRD_HDLC",E,E,N,N],[17,"ARPHRD_LAPB",E,E,N,N],[17,"ARPHRD_DDCMP",E,E,N,N],[17,"ARPHRD_RAWHDLC",E,E,N,N],[17,"ARPHRD_TUNNEL",E,E,N,N],[17,"ARPHRD_TUNNEL6",E,E,N,N],[17,"ARPHRD_FRAD",E,E,N,N],[17,"ARPHRD_SKIP",E,E,N,N],[17,"ARPHRD_LOOPBACK",E,E,N,N],[17,"ARPHRD_LOCALTLK",E,E,N,N],[17,"ARPHRD_FDDI",E,E,N,N],[17,"ARPHRD_BIF",E,E,N,N],[17,"ARPHRD_SIT",E,E,N,N],[17,"ARPHRD_IPDDP",E,E,N,N],[17,"ARPHRD_IPGRE",E,E,N,N],[17,"ARPHRD_PIMREG",E,E,N,N],[17,"ARPHRD_HIPPI",E,E,N,N],[17,"ARPHRD_ASH",E,E,N,N],[17,"ARPHRD_ECONET",E,E,N,N],[17,"ARPHRD_IRDA",E,E,N,N],[17,"ARPHRD_FCPP",E,E,N,N],[17,"ARPHRD_FCAL",E,E,N,N],[17,"ARPHRD_FCPL",E,E,N,N],[17,"ARPHRD_FCFABRIC",E,E,N,N],[17,"ARPHRD_IEEE802_TR",E,E,N,N],[17,"ARPHRD_IEEE80211",E,E,N,N],[17,"ARPHRD_IEEE80211_PRISM",E,E,N,N],[17,"ARPHRD_IEEE80211_RADIOTAP",E,E,N,N],[17,"ARPHRD_IEEE802154",E,E,N,N],[17,"ARPHRD_VOID",E,E,N,N],[17,"ARPHRD_NONE",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"RUSAGE_THREAD",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"_PC_SYNC_IO",E,E,N,N],[17,"_PC_ASYNC_IO",E,E,N,N],[17,"_PC_PRIO_IO",E,E,N,N],[17,"_PC_SOCK_MAXBUF",E,E,N,N],[17,"_PC_FILESIZEBITS",E,E,N,N],[17,"_PC_REC_INCR_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MAX_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MIN_XFER_SIZE",E,E,N,N],[17,"_PC_REC_XFER_ALIGN",E,E,N,N],[17,"_PC_ALLOC_SIZE_MIN",E,E,N,N],[17,"_PC_SYMLINK_MAX",E,E,N,N],[17,"_PC_2_SYMLINKS",E,E,N,N],[17,"MS_NOUSER",E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_UIO_MAXIOV",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"_SC_AVPHYS_PAGES",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_XOPEN_XPG2",E,E,N,N],[17,"_SC_XOPEN_XPG3",E,E,N,N],[17,"_SC_XOPEN_XPG4",E,E,N,N],[17,"_SC_NZERO",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_STREAMS",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_V7_ILP32_OFF32",E,E,N,N],[17,"_SC_V7_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V7_LP64_OFF64",E,E,N,N],[17,"_SC_V7_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT",E,E,N,N],[17,"RLIM_SAVED_MAX",E,E,N,N],[17,"RLIM_SAVED_CUR",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"F_SEAL_FUTURE_WRITE",E,E,N,N],[17,"IFF_LOWER_UP",E,E,N,N],[17,"IFF_DORMANT",E,E,N,N],[17,"IFF_ECHO",E,E,N,N],[17,"IFA_UNSPEC",E,E,N,N],[17,"IFA_ADDRESS",E,E,N,N],[17,"IFA_LOCAL",E,E,N,N],[17,"IFA_LABEL",E,E,N,N],[17,"IFA_BROADCAST",E,E,N,N],[17,"IFA_ANYCAST",E,E,N,N],[17,"IFA_CACHEINFO",E,E,N,N],[17,"IFA_MULTICAST",E,E,N,N],[17,"IFA_F_SECONDARY",E,E,N,N],[17,"IFA_F_TEMPORARY",E,E,N,N],[17,"IFA_F_NODAD",E,E,N,N],[17,"IFA_F_OPTIMISTIC",E,E,N,N],[17,"IFA_F_DADFAILED",E,E,N,N],[17,"IFA_F_HOMEADDRESS",E,E,N,N],[17,"IFA_F_DEPRECATED",E,E,N,N],[17,"IFA_F_TENTATIVE",E,E,N,N],[17,"IFA_F_PERMANENT",E,E,N,N],[17,"IFLA_UNSPEC",E,E,N,N],[17,"IFLA_ADDRESS",E,E,N,N],[17,"IFLA_BROADCAST",E,E,N,N],[17,"IFLA_IFNAME",E,E,N,N],[17,"IFLA_MTU",E,E,N,N],[17,"IFLA_LINK",E,E,N,N],[17,"IFLA_QDISC",E,E,N,N],[17,"IFLA_STATS",E,E,N,N],[17,"IFF_TUN",E,E,N,N],[17,"IFF_TAP",E,E,N,N],[17,"IFF_NO_PI",E,E,N,N],[17,"TUN_READQ_SIZE",E,E,N,N],[17,"TUN_TUN_DEV",E,E,N,N],[17,"TUN_TAP_DEV",E,E,N,N],[17,"TUN_TYPE_MASK",E,E,N,N],[17,"IFF_ONE_QUEUE",E,E,N,N],[17,"IFF_VNET_HDR",E,E,N,N],[17,"IFF_TUN_EXCL",E,E,N,N],[17,"IFF_MULTI_QUEUE",E,E,N,N],[17,"IFF_ATTACH_QUEUE",E,E,N,N],[17,"IFF_DETACH_QUEUE",E,E,N,N],[17,"IFF_PERSIST",E,E,N,N],[17,"IFF_NOFILTER",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,"ST_NODEV",E,E,N,N],[17,"ST_NOEXEC",E,E,N,N],[17,"ST_SYNCHRONOUS",E,E,N,N],[17,"ST_MANDLOCK",E,E,N,N],[17,"ST_WRITE",E,E,N,N],[17,"ST_APPEND",E,E,N,N],[17,"ST_IMMUTABLE",E,E,N,N],[17,"ST_NOATIME",E,E,N,N],[17,"ST_NODIRATIME",E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"TCP_MD5SIG",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"__SIZEOF_PTHREAD_COND_T",E,E,N,N],[17,"RENAME_NOREPLACE",E,E,N,N],[17,"RENAME_EXCHANGE",E,E,N,N],[17,"RENAME_WHITEOUT",E,E,N,N],[17,"SCHED_OTHER",E,E,N,N],[17,"SCHED_FIFO",E,E,N,N],[17,"SCHED_RR",E,E,N,N],[17,"SCHED_BATCH",E,E,N,N],[17,"SCHED_IDLE",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP",E,"DCCP",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_MTP",E,E,N,N],[17,"IPPROTO_BEETPH",E,E,N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_PIM",E,"Protocol indep. multicast",N,N],[17,"IPPROTO_COMP",E,"IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_MH",E,E,N,N],[17,"IPPROTO_UDPLITE",E,E,N,N],[17,"IPPROTO_MPLS",E,E,N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"AF_IB",E,E,N,N],[17,"AF_MPLS",E,E,N,N],[17,"AF_NFC",E,E,N,N],[17,"AF_VSOCK",E,E,N,N],[17,"AF_XDP",E,E,N,N],[17,"PF_IB",E,E,N,N],[17,"PF_MPLS",E,E,N,N],[17,"PF_NFC",E,E,N,N],[17,"PF_VSOCK",E,E,N,N],[17,"PF_XDP",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_INFO",E,E,N,N],[17,"MSG_STAT",E,E,N,N],[17,"MSG_INFO",E,E,N,N],[17,"MSG_NOERROR",E,E,N,N],[17,"MSG_EXCEPT",E,E,N,N],[17,"MSG_COPY",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHM_REMAP",E,E,N,N],[17,"SHM_EXEC",E,E,N,N],[17,"SHM_LOCK",E,E,N,N],[17,"SHM_UNLOCK",E,E,N,N],[17,"SHM_HUGETLB",E,E,N,N],[17,"SHM_NORESERVE",E,E,N,N],[17,"EPOLLRDHUP",E,E,N,N],[17,"EPOLLEXCLUSIVE",E,E,N,N],[17,"EPOLLONESHOT",E,E,N,N],[17,"QFMT_VFS_OLD",E,E,N,N],[17,"QFMT_VFS_V0",E,E,N,N],[17,"QFMT_VFS_V1",E,E,N,N],[17,"EFD_SEMAPHORE",E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,"RB_AUTOBOOT",E,E,N,N],[17,"RB_HALT_SYSTEM",E,E,N,N],[17,"RB_ENABLE_CAD",E,E,N,N],[17,"RB_DISABLE_CAD",E,E,N,N],[17,"RB_POWER_OFF",E,E,N,N],[17,"RB_SW_SUSPEND",E,E,N,N],[17,"RB_KEXEC",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE",E,E,N,N],[17,"SYNC_FILE_RANGE_WRITE",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,"LIO_WRITE",E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,"LIO_NOWAIT",E,E,N,N],[17,"MREMAP_MAYMOVE",E,E,N,N],[17,"MREMAP_FIXED",E,E,N,N],[17,"PR_SET_PDEATHSIG",E,E,N,N],[17,"PR_GET_PDEATHSIG",E,E,N,N],[17,"PR_GET_DUMPABLE",E,E,N,N],[17,"PR_SET_DUMPABLE",E,E,N,N],[17,"PR_GET_UNALIGN",E,E,N,N],[17,"PR_SET_UNALIGN",E,E,N,N],[17,"PR_UNALIGN_NOPRINT",E,E,N,N],[17,"PR_UNALIGN_SIGBUS",E,E,N,N],[17,"PR_GET_KEEPCAPS",E,E,N,N],[17,"PR_SET_KEEPCAPS",E,E,N,N],[17,"PR_GET_FPEMU",E,E,N,N],[17,"PR_SET_FPEMU",E,E,N,N],[17,"PR_FPEMU_NOPRINT",E,E,N,N],[17,"PR_FPEMU_SIGFPE",E,E,N,N],[17,"PR_GET_FPEXC",E,E,N,N],[17,"PR_SET_FPEXC",E,E,N,N],[17,"PR_FP_EXC_SW_ENABLE",E,E,N,N],[17,"PR_FP_EXC_DIV",E,E,N,N],[17,"PR_FP_EXC_OVF",E,E,N,N],[17,"PR_FP_EXC_UND",E,E,N,N],[17,"PR_FP_EXC_RES",E,E,N,N],[17,"PR_FP_EXC_INV",E,E,N,N],[17,"PR_FP_EXC_DISABLED",E,E,N,N],[17,"PR_FP_EXC_NONRECOV",E,E,N,N],[17,"PR_FP_EXC_ASYNC",E,E,N,N],[17,"PR_FP_EXC_PRECISE",E,E,N,N],[17,"PR_GET_TIMING",E,E,N,N],[17,"PR_SET_TIMING",E,E,N,N],[17,"PR_TIMING_STATISTICAL",E,E,N,N],[17,"PR_TIMING_TIMESTAMP",E,E,N,N],[17,"PR_SET_NAME",E,E,N,N],[17,"PR_GET_NAME",E,E,N,N],[17,"PR_GET_ENDIAN",E,E,N,N],[17,"PR_SET_ENDIAN",E,E,N,N],[17,"PR_ENDIAN_BIG",E,E,N,N],[17,"PR_ENDIAN_LITTLE",E,E,N,N],[17,"PR_ENDIAN_PPC_LITTLE",E,E,N,N],[17,"PR_GET_SECCOMP",E,E,N,N],[17,"PR_SET_SECCOMP",E,E,N,N],[17,"PR_CAPBSET_READ",E,E,N,N],[17,"PR_CAPBSET_DROP",E,E,N,N],[17,"PR_GET_TSC",E,E,N,N],[17,"PR_SET_TSC",E,E,N,N],[17,"PR_TSC_ENABLE",E,E,N,N],[17,"PR_TSC_SIGSEGV",E,E,N,N],[17,"PR_GET_SECUREBITS",E,E,N,N],[17,"PR_SET_SECUREBITS",E,E,N,N],[17,"PR_SET_TIMERSLACK",E,E,N,N],[17,"PR_GET_TIMERSLACK",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE",E,E,N,N],[17,"PR_MCE_KILL",E,E,N,N],[17,"PR_MCE_KILL_CLEAR",E,E,N,N],[17,"PR_MCE_KILL_SET",E,E,N,N],[17,"PR_MCE_KILL_LATE",E,E,N,N],[17,"PR_MCE_KILL_EARLY",E,E,N,N],[17,"PR_MCE_KILL_DEFAULT",E,E,N,N],[17,"PR_MCE_KILL_GET",E,E,N,N],[17,"PR_SET_MM",E,E,N,N],[17,"PR_SET_MM_START_CODE",E,E,N,N],[17,"PR_SET_MM_END_CODE",E,E,N,N],[17,"PR_SET_MM_START_DATA",E,E,N,N],[17,"PR_SET_MM_END_DATA",E,E,N,N],[17,"PR_SET_MM_START_STACK",E,E,N,N],[17,"PR_SET_MM_START_BRK",E,E,N,N],[17,"PR_SET_MM_BRK",E,E,N,N],[17,"PR_SET_MM_ARG_START",E,E,N,N],[17,"PR_SET_MM_ARG_END",E,E,N,N],[17,"PR_SET_MM_ENV_START",E,E,N,N],[17,"PR_SET_MM_ENV_END",E,E,N,N],[17,"PR_SET_MM_AUXV",E,E,N,N],[17,"PR_SET_MM_EXE_FILE",E,E,N,N],[17,"PR_SET_MM_MAP",E,E,N,N],[17,"PR_SET_MM_MAP_SIZE",E,E,N,N],[17,"PR_SET_PTRACER",E,E,N,N],[17,"PR_SET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_GET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_SET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_TID_ADDRESS",E,E,N,N],[17,"PR_SET_THP_DISABLE",E,E,N,N],[17,"PR_GET_THP_DISABLE",E,E,N,N],[17,"PR_MPX_ENABLE_MANAGEMENT",E,E,N,N],[17,"PR_MPX_DISABLE_MANAGEMENT",E,E,N,N],[17,"PR_SET_FP_MODE",E,E,N,N],[17,"PR_GET_FP_MODE",E,E,N,N],[17,"PR_FP_MODE_FR",E,E,N,N],[17,"PR_FP_MODE_FRE",E,E,N,N],[17,"PR_CAP_AMBIENT",E,E,N,N],[17,"PR_CAP_AMBIENT_IS_SET",E,E,N,N],[17,"PR_CAP_AMBIENT_RAISE",E,E,N,N],[17,"PR_CAP_AMBIENT_LOWER",E,E,N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL",E,E,N,N],[17,"GRND_NONBLOCK",E,E,N,N],[17,"GRND_RANDOM",E,E,N,N],[17,"SECCOMP_MODE_DISABLED",E,E,N,N],[17,"SECCOMP_MODE_STRICT",E,E,N,N],[17,"SECCOMP_MODE_FILTER",E,E,N,N],[17,"ITIMER_REAL",E,E,N,N],[17,"ITIMER_VIRTUAL",E,E,N,N],[17,"ITIMER_PROF",E,E,N,N],[17,"TFD_CLOEXEC",E,E,N,N],[17,"TFD_NONBLOCK",E,E,N,N],[17,"TFD_TIMER_ABSTIME",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,"_POSIX_VDISABLE",E,E,N,N],[17,"FALLOC_FL_KEEP_SIZE",E,E,N,N],[17,"FALLOC_FL_PUNCH_HOLE",E,E,N,N],[17,"FALLOC_FL_COLLAPSE_RANGE",E,E,N,N],[17,"FALLOC_FL_ZERO_RANGE",E,E,N,N],[17,"FALLOC_FL_INSERT_RANGE",E,E,N,N],[17,"FALLOC_FL_UNSHARE_RANGE",E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"SO_ORIGINAL_DST",E,E,N,N],[17,"IP_ORIGDSTADDR",E,E,N,N],[17,"IP_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_ORIGDSTADDR",E,E,N,N],[17,"IPV6_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_FLOWINFO",E,E,N,N],[17,"IPV6_FLOWLABEL_MGR",E,E,N,N],[17,"IPV6_FLOWINFO_SEND",E,E,N,N],[17,"IPV6_FLOWINFO_FLOWLABEL",E,E,N,N],[17,"IPV6_FLOWINFO_PRIORITY",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CMSPAR",E,E,N,N],[17,"MFD_CLOEXEC",E,E,N,N],[17,"MFD_ALLOW_SEALING",E,E,N,N],[17,"MFD_HUGETLB",E,E,N,N],[17,"PT_NULL",E,E,N,N],[17,"PT_LOAD",E,E,N,N],[17,"PT_DYNAMIC",E,E,N,N],[17,"PT_INTERP",E,E,N,N],[17,"PT_NOTE",E,E,N,N],[17,"PT_SHLIB",E,E,N,N],[17,"PT_PHDR",E,E,N,N],[17,"PT_TLS",E,E,N,N],[17,"PT_NUM",E,E,N,N],[17,"PT_LOOS",E,E,N,N],[17,"PT_GNU_EH_FRAME",E,E,N,N],[17,"PT_GNU_STACK",E,E,N,N],[17,"PT_GNU_RELRO",E,E,N,N],[17,"ETH_ALEN",E,E,N,N],[17,"ETH_HLEN",E,E,N,N],[17,"ETH_ZLEN",E,E,N,N],[17,"ETH_DATA_LEN",E,E,N,N],[17,"ETH_FRAME_LEN",E,E,N,N],[17,"ETH_FCS_LEN",E,E,N,N],[17,"ETH_P_LOOP",E,E,N,N],[17,"ETH_P_PUP",E,E,N,N],[17,"ETH_P_PUPAT",E,E,N,N],[17,"ETH_P_IP",E,E,N,N],[17,"ETH_P_X25",E,E,N,N],[17,"ETH_P_ARP",E,E,N,N],[17,"ETH_P_BPQ",E,E,N,N],[17,"ETH_P_IEEEPUP",E,E,N,N],[17,"ETH_P_IEEEPUPAT",E,E,N,N],[17,"ETH_P_BATMAN",E,E,N,N],[17,"ETH_P_DEC",E,E,N,N],[17,"ETH_P_DNA_DL",E,E,N,N],[17,"ETH_P_DNA_RC",E,E,N,N],[17,"ETH_P_DNA_RT",E,E,N,N],[17,"ETH_P_LAT",E,E,N,N],[17,"ETH_P_DIAG",E,E,N,N],[17,"ETH_P_CUST",E,E,N,N],[17,"ETH_P_SCA",E,E,N,N],[17,"ETH_P_TEB",E,E,N,N],[17,"ETH_P_RARP",E,E,N,N],[17,"ETH_P_ATALK",E,E,N,N],[17,"ETH_P_AARP",E,E,N,N],[17,"ETH_P_8021Q",E,E,N,N],[17,"ETH_P_IPX",E,E,N,N],[17,"ETH_P_IPV6",E,E,N,N],[17,"ETH_P_PAUSE",E,E,N,N],[17,"ETH_P_SLOW",E,E,N,N],[17,"ETH_P_WCCP",E,E,N,N],[17,"ETH_P_MPLS_UC",E,E,N,N],[17,"ETH_P_MPLS_MC",E,E,N,N],[17,"ETH_P_ATMMPOA",E,E,N,N],[17,"ETH_P_PPP_DISC",E,E,N,N],[17,"ETH_P_PPP_SES",E,E,N,N],[17,"ETH_P_LINK_CTL",E,E,N,N],[17,"ETH_P_ATMFATE",E,E,N,N],[17,"ETH_P_PAE",E,E,N,N],[17,"ETH_P_AOE",E,E,N,N],[17,"ETH_P_8021AD",E,E,N,N],[17,"ETH_P_802_EX1",E,E,N,N],[17,"ETH_P_TIPC",E,E,N,N],[17,"ETH_P_MACSEC",E,E,N,N],[17,"ETH_P_8021AH",E,E,N,N],[17,"ETH_P_MVRP",E,E,N,N],[17,"ETH_P_1588",E,E,N,N],[17,"ETH_P_PRP",E,E,N,N],[17,"ETH_P_FCOE",E,E,N,N],[17,"ETH_P_TDLS",E,E,N,N],[17,"ETH_P_FIP",E,E,N,N],[17,"ETH_P_80221",E,E,N,N],[17,"ETH_P_LOOPBACK",E,E,N,N],[17,"ETH_P_QINQ1",E,E,N,N],[17,"ETH_P_QINQ2",E,E,N,N],[17,"ETH_P_QINQ3",E,E,N,N],[17,"ETH_P_EDSA",E,E,N,N],[17,"ETH_P_AF_IUCV",E,E,N,N],[17,"ETH_P_802_3_MIN",E,E,N,N],[17,"ETH_P_802_3",E,E,N,N],[17,"ETH_P_AX25",E,E,N,N],[17,"ETH_P_ALL",E,E,N,N],[17,"ETH_P_802_2",E,E,N,N],[17,"ETH_P_SNAP",E,E,N,N],[17,"ETH_P_DDCMP",E,E,N,N],[17,"ETH_P_WAN_PPP",E,E,N,N],[17,"ETH_P_PPP_MP",E,E,N,N],[17,"ETH_P_LOCALTALK",E,E,N,N],[17,"ETH_P_CANFD",E,E,N,N],[17,"ETH_P_PPPTALK",E,E,N,N],[17,"ETH_P_TR_802_2",E,E,N,N],[17,"ETH_P_MOBITEX",E,E,N,N],[17,"ETH_P_CONTROL",E,E,N,N],[17,"ETH_P_IRDA",E,E,N,N],[17,"ETH_P_ECONET",E,E,N,N],[17,"ETH_P_HDLC",E,E,N,N],[17,"ETH_P_ARCNET",E,E,N,N],[17,"ETH_P_DSA",E,E,N,N],[17,"ETH_P_TRAILER",E,E,N,N],[17,"ETH_P_PHONET",E,E,N,N],[17,"ETH_P_IEEE802154",E,E,N,N],[17,"ETH_P_CAIF",E,E,N,N],[17,"POSIX_SPAWN_RESETIDS",E,E,N,N],[17,"POSIX_SPAWN_SETPGROUP",E,E,N,N],[17,"POSIX_SPAWN_SETSIGDEF",E,E,N,N],[17,"POSIX_SPAWN_SETSIGMASK",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDULER",E,E,N,N],[17,"NLMSG_NOOP",E,E,N,N],[17,"NLMSG_ERROR",E,E,N,N],[17,"NLMSG_DONE",E,E,N,N],[17,"NLMSG_OVERRUN",E,E,N,N],[17,"NLMSG_MIN_TYPE",E,E,N,N],[17,"GENL_NAMSIZ",E,E,N,N],[17,"GENL_MIN_ID",E,E,N,N],[17,"GENL_MAX_ID",E,E,N,N],[17,"GENL_ADMIN_PERM",E,E,N,N],[17,"GENL_CMD_CAP_DO",E,E,N,N],[17,"GENL_CMD_CAP_DUMP",E,E,N,N],[17,"GENL_CMD_CAP_HASPOL",E,E,N,N],[17,"GENL_ID_CTRL",E,E,N,N],[17,"CTRL_CMD_UNSPEC",E,E,N,N],[17,"CTRL_CMD_NEWFAMILY",E,E,N,N],[17,"CTRL_CMD_DELFAMILY",E,E,N,N],[17,"CTRL_CMD_GETFAMILY",E,E,N,N],[17,"CTRL_CMD_NEWOPS",E,E,N,N],[17,"CTRL_CMD_DELOPS",E,E,N,N],[17,"CTRL_CMD_GETOPS",E,E,N,N],[17,"CTRL_CMD_NEWMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_DELMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_GETMCAST_GRP",E,E,N,N],[17,"CTRL_ATTR_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_FAMILY_ID",E,E,N,N],[17,"CTRL_ATTR_FAMILY_NAME",E,E,N,N],[17,"CTRL_ATTR_VERSION",E,E,N,N],[17,"CTRL_ATTR_HDRSIZE",E,E,N,N],[17,"CTRL_ATTR_MAXATTR",E,E,N,N],[17,"CTRL_ATTR_OPS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GROUPS",E,E,N,N],[17,"CTRL_ATTR_OP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_OP_ID",E,E,N,N],[17,"CTRL_ATTR_OP_FLAGS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_ID",E,E,N,N],[17,"PACKET_ADD_MEMBERSHIP",E,E,N,N],[17,"PACKET_DROP_MEMBERSHIP",E,E,N,N],[17,"PACKET_MR_MULTICAST",E,E,N,N],[17,"PACKET_MR_PROMISC",E,E,N,N],[17,"PACKET_MR_ALLMULTI",E,E,N,N],[17,"PACKET_MR_UNICAST",E,E,N,N],[17,"NF_DROP",E,E,N,N],[17,"NF_ACCEPT",E,E,N,N],[17,"NF_STOLEN",E,E,N,N],[17,"NF_QUEUE",E,E,N,N],[17,"NF_REPEAT",E,E,N,N],[17,"NF_STOP",E,E,N,N],[17,"NF_MAX_VERDICT",E,E,N,N],[17,"NF_VERDICT_MASK",E,E,N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS",E,E,N,N],[17,"NF_VERDICT_QMASK",E,E,N,N],[17,"NF_VERDICT_QBITS",E,E,N,N],[17,"NF_VERDICT_BITS",E,E,N,N],[17,"NF_INET_PRE_ROUTING",E,E,N,N],[17,"NF_INET_LOCAL_IN",E,E,N,N],[17,"NF_INET_FORWARD",E,E,N,N],[17,"NF_INET_LOCAL_OUT",E,E,N,N],[17,"NF_INET_POST_ROUTING",E,E,N,N],[17,"NF_INET_NUMHOOKS",E,E,N,N],[17,"NFPROTO_UNSPEC",E,E,N,N],[17,"NFPROTO_IPV4",E,E,N,N],[17,"NFPROTO_ARP",E,E,N,N],[17,"NFPROTO_BRIDGE",E,E,N,N],[17,"NFPROTO_IPV6",E,E,N,N],[17,"NFPROTO_DECNET",E,E,N,N],[17,"NFPROTO_NUMPROTO",E,E,N,N],[17,"NF_IP_PRE_ROUTING",E,E,N,N],[17,"NF_IP_LOCAL_IN",E,E,N,N],[17,"NF_IP_FORWARD",E,E,N,N],[17,"NF_IP_LOCAL_OUT",E,E,N,N],[17,"NF_IP_POST_ROUTING",E,E,N,N],[17,"NF_IP_NUMHOOKS",E,E,N,N],[17,"NF_IP_PRI_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP_PRI_RAW",E,E,N,N],[17,"NF_IP_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP_PRI_MANGLE",E,E,N,N],[17,"NF_IP_PRI_NAT_DST",E,E,N,N],[17,"NF_IP_PRI_FILTER",E,E,N,N],[17,"NF_IP_PRI_SECURITY",E,E,N,N],[17,"NF_IP_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM",E,E,N,N],[17,"NF_IP_PRI_LAST",E,E,N,N],[17,"NF_IP6_PRE_ROUTING",E,E,N,N],[17,"NF_IP6_LOCAL_IN",E,E,N,N],[17,"NF_IP6_FORWARD",E,E,N,N],[17,"NF_IP6_LOCAL_OUT",E,E,N,N],[17,"NF_IP6_POST_ROUTING",E,E,N,N],[17,"NF_IP6_NUMHOOKS",E,E,N,N],[17,"NF_IP6_PRI_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP6_PRI_RAW",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP6_PRI_MANGLE",E,E,N,N],[17,"NF_IP6_PRI_NAT_DST",E,E,N,N],[17,"NF_IP6_PRI_FILTER",E,E,N,N],[17,"NF_IP6_PRI_SECURITY",E,E,N,N],[17,"NF_IP6_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP6_PRI_LAST",E,E,N,N],[17,"SIOCADDRT",E,E,N,N],[17,"SIOCDELRT",E,E,N,N],[17,"SIOCGIFNAME",E,E,N,N],[17,"SIOCSIFLINK",E,E,N,N],[17,"SIOCGIFCONF",E,E,N,N],[17,"SIOCGIFFLAGS",E,E,N,N],[17,"SIOCSIFFLAGS",E,E,N,N],[17,"SIOCGIFADDR",E,E,N,N],[17,"SIOCSIFADDR",E,E,N,N],[17,"SIOCGIFDSTADDR",E,E,N,N],[17,"SIOCSIFDSTADDR",E,E,N,N],[17,"SIOCGIFBRDADDR",E,E,N,N],[17,"SIOCSIFBRDADDR",E,E,N,N],[17,"SIOCGIFNETMASK",E,E,N,N],[17,"SIOCSIFNETMASK",E,E,N,N],[17,"SIOCGIFMETRIC",E,E,N,N],[17,"SIOCSIFMETRIC",E,E,N,N],[17,"SIOCGIFMEM",E,E,N,N],[17,"SIOCSIFMEM",E,E,N,N],[17,"SIOCGIFMTU",E,E,N,N],[17,"SIOCSIFMTU",E,E,N,N],[17,"SIOCSIFHWADDR",E,E,N,N],[17,"SIOCGIFENCAP",E,E,N,N],[17,"SIOCSIFENCAP",E,E,N,N],[17,"SIOCGIFHWADDR",E,E,N,N],[17,"SIOCGIFSLAVE",E,E,N,N],[17,"SIOCSIFSLAVE",E,E,N,N],[17,"SIOCADDMULTI",E,E,N,N],[17,"SIOCDELMULTI",E,E,N,N],[17,"SIOCDARP",E,E,N,N],[17,"SIOCGARP",E,E,N,N],[17,"SIOCSARP",E,E,N,N],[17,"SIOCDRARP",E,E,N,N],[17,"SIOCGRARP",E,E,N,N],[17,"SIOCSRARP",E,E,N,N],[17,"SIOCGIFMAP",E,E,N,N],[17,"SIOCSIFMAP",E,E,N,N],[17,"IPTOS_TOS_MASK",E,E,N,N],[17,"IPTOS_PREC_MASK",E,E,N,N],[17,"IPTOS_ECN_NOT_ECT",E,E,N,N],[17,"RTF_UP",E,E,N,N],[17,"RTF_GATEWAY",E,E,N,N],[17,"RTF_HOST",E,E,N,N],[17,"RTF_REINSTATE",E,E,N,N],[17,"RTF_DYNAMIC",E,E,N,N],[17,"RTF_MODIFIED",E,E,N,N],[17,"RTF_MTU",E,E,N,N],[17,"RTF_MSS",E,E,N,N],[17,"RTF_WINDOW",E,E,N,N],[17,"RTF_IRTT",E,E,N,N],[17,"RTF_REJECT",E,E,N,N],[17,"RTF_STATIC",E,E,N,N],[17,"RTF_XRESOLVE",E,E,N,N],[17,"RTF_NOFORWARD",E,E,N,N],[17,"RTF_THROW",E,E,N,N],[17,"RTF_NOPMTUDISC",E,E,N,N],[17,"RTF_DEFAULT",E,E,N,N],[17,"RTF_ALLONLINK",E,E,N,N],[17,"RTF_ADDRCONF",E,E,N,N],[17,"RTF_LINKRT",E,E,N,N],[17,"RTF_NONEXTHOP",E,E,N,N],[17,"RTF_CACHE",E,E,N,N],[17,"RTF_FLOW",E,E,N,N],[17,"RTF_POLICY",E,E,N,N],[17,"RTCF_VALVE",E,E,N,N],[17,"RTCF_MASQ",E,E,N,N],[17,"RTCF_NAT",E,E,N,N],[17,"RTCF_DOREDIRECT",E,E,N,N],[17,"RTCF_LOG",E,E,N,N],[17,"RTCF_DIRECTSRC",E,E,N,N],[17,"RTF_LOCAL",E,E,N,N],[17,"RTF_INTERFACE",E,E,N,N],[17,"RTF_MULTICAST",E,E,N,N],[17,"RTF_BROADCAST",E,E,N,N],[17,"RTF_NAT",E,E,N,N],[17,"RTF_ADDRCLASSMASK",E,E,N,N],[17,"RT_CLASS_UNSPEC",E,E,N,N],[17,"RT_CLASS_DEFAULT",E,E,N,N],[17,"RT_CLASS_MAIN",E,E,N,N],[17,"RT_CLASS_LOCAL",E,E,N,N],[17,"RT_CLASS_MAX",E,E,N,N],[17,"NUD_NONE",E,E,N,N],[17,"NUD_INCOMPLETE",E,E,N,N],[17,"NUD_REACHABLE",E,E,N,N],[17,"NUD_STALE",E,E,N,N],[17,"NUD_DELAY",E,E,N,N],[17,"NUD_PROBE",E,E,N,N],[17,"NUD_FAILED",E,E,N,N],[17,"NUD_NOARP",E,E,N,N],[17,"NUD_PERMANENT",E,E,N,N],[17,"NTF_USE",E,E,N,N],[17,"NTF_SELF",E,E,N,N],[17,"NTF_MASTER",E,E,N,N],[17,"NTF_PROXY",E,E,N,N],[17,"NTF_ROUTER",E,E,N,N],[17,"NDA_UNSPEC",E,E,N,N],[17,"NDA_DST",E,E,N,N],[17,"NDA_LLADDR",E,E,N,N],[17,"NDA_CACHEINFO",E,E,N,N],[17,"NDA_PROBES",E,E,N,N],[17,"NDA_VLAN",E,E,N,N],[17,"NDA_PORT",E,E,N,N],[17,"NDA_VNI",E,E,N,N],[17,"NDA_IFINDEX",E,E,N,N],[17,"NLA_ALIGNTO",E,E,N,N],[17,"NETLINK_ROUTE",E,E,N,N],[17,"NETLINK_UNUSED",E,E,N,N],[17,"NETLINK_USERSOCK",E,E,N,N],[17,"NETLINK_FIREWALL",E,E,N,N],[17,"NETLINK_SOCK_DIAG",E,E,N,N],[17,"NETLINK_NFLOG",E,E,N,N],[17,"NETLINK_XFRM",E,E,N,N],[17,"NETLINK_SELINUX",E,E,N,N],[17,"NETLINK_ISCSI",E,E,N,N],[17,"NETLINK_AUDIT",E,E,N,N],[17,"NETLINK_FIB_LOOKUP",E,E,N,N],[17,"NETLINK_CONNECTOR",E,E,N,N],[17,"NETLINK_NETFILTER",E,E,N,N],[17,"NETLINK_IP6_FW",E,E,N,N],[17,"NETLINK_DNRTMSG",E,E,N,N],[17,"NETLINK_KOBJECT_UEVENT",E,E,N,N],[17,"NETLINK_GENERIC",E,E,N,N],[17,"NETLINK_SCSITRANSPORT",E,E,N,N],[17,"NETLINK_ECRYPTFS",E,E,N,N],[17,"NETLINK_RDMA",E,E,N,N],[17,"NETLINK_CRYPTO",E,E,N,N],[17,"NETLINK_INET_DIAG",E,E,N,N],[17,"NLM_F_REQUEST",E,E,N,N],[17,"NLM_F_MULTI",E,E,N,N],[17,"NLM_F_ACK",E,E,N,N],[17,"NLM_F_ECHO",E,E,N,N],[17,"NLM_F_DUMP_INTR",E,E,N,N],[17,"NLM_F_DUMP_FILTERED",E,E,N,N],[17,"NLM_F_ROOT",E,E,N,N],[17,"NLM_F_MATCH",E,E,N,N],[17,"NLM_F_ATOMIC",E,E,N,N],[17,"NLM_F_DUMP",E,E,N,N],[17,"NLM_F_REPLACE",E,E,N,N],[17,"NLM_F_EXCL",E,E,N,N],[17,"NLM_F_CREATE",E,E,N,N],[17,"NLM_F_APPEND",E,E,N,N],[17,"NETLINK_ADD_MEMBERSHIP",E,E,N,N],[17,"NETLINK_DROP_MEMBERSHIP",E,E,N,N],[17,"NETLINK_PKTINFO",E,E,N,N],[17,"NETLINK_BROADCAST_ERROR",E,E,N,N],[17,"NETLINK_NO_ENOBUFS",E,E,N,N],[17,"NETLINK_RX_RING",E,E,N,N],[17,"NETLINK_TX_RING",E,E,N,N],[17,"NETLINK_LISTEN_ALL_NSID",E,E,N,N],[17,"NETLINK_LIST_MEMBERSHIPS",E,E,N,N],[17,"NETLINK_CAP_ACK",E,E,N,N],[17,"NLA_F_NESTED",E,E,N,N],[17,"NLA_F_NET_BYTEORDER",E,E,N,N],[17,"NLA_TYPE_MASK",E,E,N,N],[17,"TCA_UNSPEC",E,E,N,N],[17,"TCA_KIND",E,E,N,N],[17,"TCA_OPTIONS",E,E,N,N],[17,"TCA_STATS",E,E,N,N],[17,"TCA_XSTATS",E,E,N,N],[17,"TCA_RATE",E,E,N,N],[17,"TCA_FCNT",E,E,N,N],[17,"TCA_STATS2",E,E,N,N],[17,"TCA_STAB",E,E,N,N],[17,"RTM_NEWLINK",E,E,N,N],[17,"RTM_DELLINK",E,E,N,N],[17,"RTM_GETLINK",E,E,N,N],[17,"RTM_SETLINK",E,E,N,N],[17,"RTM_NEWADDR",E,E,N,N],[17,"RTM_DELADDR",E,E,N,N],[17,"RTM_GETADDR",E,E,N,N],[17,"RTM_NEWROUTE",E,E,N,N],[17,"RTM_DELROUTE",E,E,N,N],[17,"RTM_GETROUTE",E,E,N,N],[17,"RTM_NEWNEIGH",E,E,N,N],[17,"RTM_DELNEIGH",E,E,N,N],[17,"RTM_GETNEIGH",E,E,N,N],[17,"RTM_NEWRULE",E,E,N,N],[17,"RTM_DELRULE",E,E,N,N],[17,"RTM_GETRULE",E,E,N,N],[17,"RTM_NEWQDISC",E,E,N,N],[17,"RTM_DELQDISC",E,E,N,N],[17,"RTM_GETQDISC",E,E,N,N],[17,"RTM_NEWTCLASS",E,E,N,N],[17,"RTM_DELTCLASS",E,E,N,N],[17,"RTM_GETTCLASS",E,E,N,N],[17,"RTM_NEWTFILTER",E,E,N,N],[17,"RTM_DELTFILTER",E,E,N,N],[17,"RTM_GETTFILTER",E,E,N,N],[17,"RTM_NEWACTION",E,E,N,N],[17,"RTM_DELACTION",E,E,N,N],[17,"RTM_GETACTION",E,E,N,N],[17,"RTM_NEWPREFIX",E,E,N,N],[17,"RTM_GETMULTICAST",E,E,N,N],[17,"RTM_GETANYCAST",E,E,N,N],[17,"RTM_NEWNEIGHTBL",E,E,N,N],[17,"RTM_GETNEIGHTBL",E,E,N,N],[17,"RTM_SETNEIGHTBL",E,E,N,N],[17,"RTM_NEWNDUSEROPT",E,E,N,N],[17,"RTM_NEWADDRLABEL",E,E,N,N],[17,"RTM_DELADDRLABEL",E,E,N,N],[17,"RTM_GETADDRLABEL",E,E,N,N],[17,"RTM_GETDCB",E,E,N,N],[17,"RTM_SETDCB",E,E,N,N],[17,"RTM_NEWNETCONF",E,E,N,N],[17,"RTM_GETNETCONF",E,E,N,N],[17,"RTM_NEWMDB",E,E,N,N],[17,"RTM_DELMDB",E,E,N,N],[17,"RTM_GETMDB",E,E,N,N],[17,"RTM_NEWNSID",E,E,N,N],[17,"RTM_DELNSID",E,E,N,N],[17,"RTM_GETNSID",E,E,N,N],[17,"RTM_F_NOTIFY",E,E,N,N],[17,"RTM_F_CLONED",E,E,N,N],[17,"RTM_F_EQUALIZE",E,E,N,N],[17,"RTM_F_PREFIX",E,E,N,N],[17,"RTA_UNSPEC",E,E,N,N],[17,"RTA_DST",E,E,N,N],[17,"RTA_SRC",E,E,N,N],[17,"RTA_IIF",E,E,N,N],[17,"RTA_OIF",E,E,N,N],[17,"RTA_GATEWAY",E,E,N,N],[17,"RTA_PRIORITY",E,E,N,N],[17,"RTA_PREFSRC",E,E,N,N],[17,"RTA_METRICS",E,E,N,N],[17,"RTA_MULTIPATH",E,E,N,N],[17,"RTA_PROTOINFO",E,E,N,N],[17,"RTA_FLOW",E,E,N,N],[17,"RTA_CACHEINFO",E,E,N,N],[17,"RTA_SESSION",E,E,N,N],[17,"RTA_MP_ALGO",E,E,N,N],[17,"RTA_TABLE",E,E,N,N],[17,"RTA_MARK",E,E,N,N],[17,"RTA_MFC_STATS",E,E,N,N],[17,"RTN_UNSPEC",E,E,N,N],[17,"RTN_UNICAST",E,E,N,N],[17,"RTN_LOCAL",E,E,N,N],[17,"RTN_BROADCAST",E,E,N,N],[17,"RTN_ANYCAST",E,E,N,N],[17,"RTN_MULTICAST",E,E,N,N],[17,"RTN_BLACKHOLE",E,E,N,N],[17,"RTN_UNREACHABLE",E,E,N,N],[17,"RTN_PROHIBIT",E,E,N,N],[17,"RTN_THROW",E,E,N,N],[17,"RTN_NAT",E,E,N,N],[17,"RTN_XRESOLVE",E,E,N,N],[17,"RTPROT_UNSPEC",E,E,N,N],[17,"RTPROT_REDIRECT",E,E,N,N],[17,"RTPROT_KERNEL",E,E,N,N],[17,"RTPROT_BOOT",E,E,N,N],[17,"RTPROT_STATIC",E,E,N,N],[17,"RT_SCOPE_UNIVERSE",E,E,N,N],[17,"RT_SCOPE_SITE",E,E,N,N],[17,"RT_SCOPE_LINK",E,E,N,N],[17,"RT_SCOPE_HOST",E,E,N,N],[17,"RT_SCOPE_NOWHERE",E,E,N,N],[17,"RT_TABLE_UNSPEC",E,E,N,N],[17,"RT_TABLE_COMPAT",E,E,N,N],[17,"RT_TABLE_DEFAULT",E,E,N,N],[17,"RT_TABLE_MAIN",E,E,N,N],[17,"RT_TABLE_LOCAL",E,E,N,N],[17,"RTMSG_OVERRUN",E,E,N,N],[17,"RTMSG_NEWDEVICE",E,E,N,N],[17,"RTMSG_DELDEVICE",E,E,N,N],[17,"RTMSG_NEWROUTE",E,E,N,N],[17,"RTMSG_DELROUTE",E,E,N,N],[17,"RTMSG_NEWRULE",E,E,N,N],[17,"RTMSG_DELRULE",E,E,N,N],[17,"RTMSG_CONTROL",E,E,N,N],[17,"RTMSG_AR_FAILED",E,E,N,N],[17,"MAX_ADDR_LEN",E,E,N,N],[17,"ARPD_UPDATE",E,E,N,N],[17,"ARPD_LOOKUP",E,E,N,N],[17,"ARPD_FLUSH",E,E,N,N],[17,"ATF_MAGIC",E,E,N,N],[17,"SO_TIMESTAMPING",E,E,N,N],[17,"SCM_TIMESTAMPING",E,E,N,N],[17,"MODULE_INIT_IGNORE_MODVERSIONS",E,E,N,N],[17,"MODULE_INIT_IGNORE_VERMAGIC",E,E,N,N],[17,"SOF_TIMESTAMPING_TX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_TX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SYS_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RAW_HARDWARE",E,E,N,N],[17,"ALG_SET_KEY",E,E,N,N],[17,"ALG_SET_IV",E,E,N,N],[17,"ALG_SET_OP",E,E,N,N],[17,"ALG_SET_AEAD_ASSOCLEN",E,E,N,N],[17,"ALG_SET_AEAD_AUTHSIZE",E,E,N,N],[17,"ALG_OP_DECRYPT",E,E,N,N],[17,"ALG_OP_ENCRYPT",E,E,N,N],[17,"VMADDR_CID_ANY",E,E,N,N],[17,"VMADDR_CID_HYPERVISOR",E,E,N,N],[17,"VMADDR_CID_RESERVED",E,E,N,N],[17,"VMADDR_CID_HOST",E,E,N,N],[17,"VMADDR_PORT_ANY",E,E,N,N],[17,"IN_ACCESS",E,E,N,N],[17,"IN_MODIFY",E,E,N,N],[17,"IN_ATTRIB",E,E,N,N],[17,"IN_CLOSE_WRITE",E,E,N,N],[17,"IN_CLOSE_NOWRITE",E,E,N,N],[17,"IN_CLOSE",E,E,N,N],[17,"IN_OPEN",E,E,N,N],[17,"IN_MOVED_FROM",E,E,N,N],[17,"IN_MOVED_TO",E,E,N,N],[17,"IN_MOVE",E,E,N,N],[17,"IN_CREATE",E,E,N,N],[17,"IN_DELETE",E,E,N,N],[17,"IN_DELETE_SELF",E,E,N,N],[17,"IN_MOVE_SELF",E,E,N,N],[17,"IN_UNMOUNT",E,E,N,N],[17,"IN_Q_OVERFLOW",E,E,N,N],[17,"IN_IGNORED",E,E,N,N],[17,"IN_ONLYDIR",E,E,N,N],[17,"IN_DONT_FOLLOW",E,E,N,N],[17,"IN_ISDIR",E,E,N,N],[17,"IN_ONESHOT",E,E,N,N],[17,"IN_ALL_EVENTS",E,E,N,N],[17,"IN_CLOEXEC",E,E,N,N],[17,"IN_NONBLOCK",E,E,N,N],[17,"FUTEX_WAIT",E,E,N,N],[17,"FUTEX_WAKE",E,E,N,N],[17,"FUTEX_FD",E,E,N,N],[17,"FUTEX_REQUEUE",E,E,N,N],[17,"FUTEX_CMP_REQUEUE",E,E,N,N],[17,"FUTEX_WAKE_OP",E,E,N,N],[17,"FUTEX_LOCK_PI",E,E,N,N],[17,"FUTEX_UNLOCK_PI",E,E,N,N],[17,"FUTEX_TRYLOCK_PI",E,E,N,N],[17,"FUTEX_WAIT_BITSET",E,E,N,N],[17,"FUTEX_WAKE_BITSET",E,E,N,N],[17,"FUTEX_WAIT_REQUEUE_PI",E,E,N,N],[17,"FUTEX_CMP_REQUEUE_PI",E,E,N,N],[17,"FUTEX_PRIVATE_FLAG",E,E,N,N],[17,"FUTEX_CLOCK_REALTIME",E,E,N,N],[17,"FUTEX_CMD_MASK",E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_LOCKS",E,E,N,N],[17,"RLIMIT_SIGPENDING",E,E,N,N],[17,"RLIMIT_MSGQUEUE",E,E,N,N],[17,"RLIMIT_NICE",E,E,N,N],[17,"RLIMIT_RTPRIO",E,E,N,N],[17,"RLIMIT_RTTIME",E,E,N,N],[17,"RLIMIT_NLIMITS",E,E,N,N],[17,"MS_RMT_MASK",E,E,N,N],[17,"__UT_LINESIZE",E,E,N,N],[17,"__UT_NAMESIZE",E,E,N,N],[17,"__UT_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,"SOCK_NONBLOCK",E,E,N,N],[17,"SOL_RXRPC",E,E,N,N],[17,"SOL_PPPOL2TP",E,E,N,N],[17,"SOL_PNPIPE",E,E,N,N],[17,"SOL_RDS",E,E,N,N],[17,"SOL_IUCV",E,E,N,N],[17,"SOL_CAIF",E,E,N,N],[17,"SOL_NFC",E,E,N,N],[17,"SOL_XDP",E,E,N,N],[17,"MSG_TRYHARD",E,E,N,N],[17,"LC_PAPER",E,E,N,N],[17,"LC_NAME",E,E,N,N],[17,"LC_ADDRESS",E,E,N,N],[17,"LC_TELEPHONE",E,E,N,N],[17,"LC_MEASUREMENT",E,E,N,N],[17,"LC_IDENTIFICATION",E,E,N,N],[17,"LC_PAPER_MASK",E,E,N,N],[17,"LC_NAME_MASK",E,E,N,N],[17,"LC_ADDRESS_MASK",E,E,N,N],[17,"LC_TELEPHONE_MASK",E,E,N,N],[17,"LC_MEASUREMENT_MASK",E,E,N,N],[17,"LC_IDENTIFICATION_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"MAP_SHARED_VALIDATE",E,E,N,N],[17,"MAP_FIXED_NOREPLACE",E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,"SOCK_SEQPACKET",E,E,N,N],[17,"SOCK_DCCP",E,E,N,N],[17,"SOCK_PACKET",E,E,N,N],[17,"TCP_COOKIE_TRANSACTIONS",E,E,N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS",E,E,N,N],[17,"TCP_THIN_DUPACK",E,E,N,N],[17,"TCP_USER_TIMEOUT",E,E,N,N],[17,"TCP_REPAIR",E,E,N,N],[17,"TCP_REPAIR_QUEUE",E,E,N,N],[17,"TCP_QUEUE_SEQ",E,E,N,N],[17,"TCP_REPAIR_OPTIONS",E,E,N,N],[17,"TCP_FASTOPEN",E,E,N,N],[17,"TCP_TIMESTAMP",E,E,N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE",E,E,N,N],[17,"DCCP_SOCKOPT_SERVICE",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_L",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_R",E,E,N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS",E,E,N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT",E,E,N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS",E,E,N,N],[17,"DCCP_SOCKOPT_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_TX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_RX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO",E,E,N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN",E,"maximum number of services provided on the same listening…",N,N],[17,"SIGEV_THREAD_ID",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_EQUIV_CLASS_MAX",E,E,N,N],[17,"_SC_CHARCLASS_NAME_MAX",E,E,N,N],[17,"_SC_PII",E,E,N,N],[17,"_SC_PII_XTI",E,E,N,N],[17,"_SC_PII_SOCKET",E,E,N,N],[17,"_SC_PII_INTERNET",E,E,N,N],[17,"_SC_PII_OSI",E,E,N,N],[17,"_SC_POLL",E,E,N,N],[17,"_SC_SELECT",E,E,N,N],[17,"_SC_PII_INTERNET_STREAM",E,E,N,N],[17,"_SC_PII_INTERNET_DGRAM",E,E,N,N],[17,"_SC_PII_OSI_COTS",E,E,N,N],[17,"_SC_PII_OSI_CLTS",E,E,N,N],[17,"_SC_PII_OSI_M",E,E,N,N],[17,"_SC_T_IOV_MAX",E,E,N,N],[17,"_SC_2_C_VERSION",E,E,N,N],[17,"_SC_CHAR_BIT",E,E,N,N],[17,"_SC_CHAR_MAX",E,E,N,N],[17,"_SC_CHAR_MIN",E,E,N,N],[17,"_SC_INT_MAX",E,E,N,N],[17,"_SC_INT_MIN",E,E,N,N],[17,"_SC_LONG_BIT",E,E,N,N],[17,"_SC_WORD_BIT",E,E,N,N],[17,"_SC_MB_LEN_MAX",E,E,N,N],[17,"_SC_SSIZE_MAX",E,E,N,N],[17,"_SC_SCHAR_MAX",E,E,N,N],[17,"_SC_SCHAR_MIN",E,E,N,N],[17,"_SC_SHRT_MAX",E,E,N,N],[17,"_SC_SHRT_MIN",E,E,N,N],[17,"_SC_UCHAR_MAX",E,E,N,N],[17,"_SC_UINT_MAX",E,E,N,N],[17,"_SC_ULONG_MAX",E,E,N,N],[17,"_SC_USHRT_MAX",E,E,N,N],[17,"_SC_NL_ARGMAX",E,E,N,N],[17,"_SC_NL_LANGMAX",E,E,N,N],[17,"_SC_NL_MSGMAX",E,E,N,N],[17,"_SC_NL_NMAX",E,E,N,N],[17,"_SC_NL_SETMAX",E,E,N,N],[17,"_SC_NL_TEXTMAX",E,E,N,N],[17,"_SC_BASE",E,E,N,N],[17,"_SC_C_LANG_SUPPORT",E,E,N,N],[17,"_SC_C_LANG_SUPPORT_R",E,E,N,N],[17,"_SC_DEVICE_IO",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC_R",E,E,N,N],[17,"_SC_FD_MGMT",E,E,N,N],[17,"_SC_FIFO",E,E,N,N],[17,"_SC_PIPE",E,E,N,N],[17,"_SC_FILE_ATTRIBUTES",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_FILE_SYSTEM",E,E,N,N],[17,"_SC_MULTI_PROCESS",E,E,N,N],[17,"_SC_SINGLE_PROCESS",E,E,N,N],[17,"_SC_NETWORKING",E,E,N,N],[17,"_SC_REGEX_VERSION",E,E,N,N],[17,"_SC_SIGNALS",E,E,N,N],[17,"_SC_SYSTEM_DATABASE",E,E,N,N],[17,"_SC_SYSTEM_DATABASE_R",E,E,N,N],[17,"_SC_USER_GROUPS",E,E,N,N],[17,"_SC_USER_GROUPS_R",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE",E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,"ST_RELATIME",E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,"ADFS_SUPER_MAGIC",E,E,N,N],[17,"AFFS_SUPER_MAGIC",E,E,N,N],[17,"CODA_SUPER_MAGIC",E,E,N,N],[17,"CRAMFS_MAGIC",E,E,N,N],[17,"EFS_SUPER_MAGIC",E,E,N,N],[17,"EXT2_SUPER_MAGIC",E,E,N,N],[17,"EXT3_SUPER_MAGIC",E,E,N,N],[17,"EXT4_SUPER_MAGIC",E,E,N,N],[17,"HPFS_SUPER_MAGIC",E,E,N,N],[17,"HUGETLBFS_MAGIC",E,E,N,N],[17,"ISOFS_SUPER_MAGIC",E,E,N,N],[17,"JFFS2_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC2",E,E,N,N],[17,"MINIX2_SUPER_MAGIC",E,E,N,N],[17,"MINIX2_SUPER_MAGIC2",E,E,N,N],[17,"MSDOS_SUPER_MAGIC",E,E,N,N],[17,"NCP_SUPER_MAGIC",E,E,N,N],[17,"NFS_SUPER_MAGIC",E,E,N,N],[17,"OPENPROM_SUPER_MAGIC",E,E,N,N],[17,"PROC_SUPER_MAGIC",E,E,N,N],[17,"QNX4_SUPER_MAGIC",E,E,N,N],[17,"REISERFS_SUPER_MAGIC",E,E,N,N],[17,"SMB_SUPER_MAGIC",E,E,N,N],[17,"TMPFS_MAGIC",E,E,N,N],[17,"USBDEVICE_SUPER_MAGIC",E,E,N,N],[17,"CPU_SETSIZE",E,E,N,N],[17,"PTRACE_TRACEME",E,E,N,N],[17,"PTRACE_PEEKTEXT",E,E,N,N],[17,"PTRACE_PEEKDATA",E,E,N,N],[17,"PTRACE_PEEKUSER",E,E,N,N],[17,"PTRACE_POKETEXT",E,E,N,N],[17,"PTRACE_POKEDATA",E,E,N,N],[17,"PTRACE_POKEUSER",E,E,N,N],[17,"PTRACE_CONT",E,E,N,N],[17,"PTRACE_KILL",E,E,N,N],[17,"PTRACE_SINGLESTEP",E,E,N,N],[17,"PTRACE_ATTACH",E,E,N,N],[17,"PTRACE_SYSCALL",E,E,N,N],[17,"PTRACE_SETOPTIONS",E,E,N,N],[17,"PTRACE_GETEVENTMSG",E,E,N,N],[17,"PTRACE_GETSIGINFO",E,E,N,N],[17,"PTRACE_SETSIGINFO",E,E,N,N],[17,"PTRACE_GETREGSET",E,E,N,N],[17,"PTRACE_SETREGSET",E,E,N,N],[17,"PTRACE_SEIZE",E,E,N,N],[17,"PTRACE_INTERRUPT",E,E,N,N],[17,"PTRACE_LISTEN",E,E,N,N],[17,"PTRACE_PEEKSIGINFO",E,E,N,N],[17,"EPOLLWAKEUP",E,E,N,N],[17,"SEEK_DATA",E,E,N,N],[17,"SEEK_HOLE",E,E,N,N],[17,"LINUX_REBOOT_MAGIC1",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2A",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2B",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2C",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART",E,E,N,N],[17,"LINUX_REBOOT_CMD_HALT",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_ON",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART2",E,E,N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND",E,E,N,N],[17,"LINUX_REBOOT_CMD_KEXEC",E,E,N,N],[17,"TCA_PAD",E,E,N,N],[17,"TCA_DUMP_INVISIBLE",E,E,N,N],[17,"TCA_CHAIN",E,E,N,N],[17,"TCA_HW_OFFLOAD",E,E,N,N],[17,"RTM_DELNETCONF",E,E,N,N],[17,"RTM_NEWSTATS",E,E,N,N],[17,"RTM_GETSTATS",E,E,N,N],[17,"RTM_NEWCACHEREPORT",E,E,N,N],[17,"RTM_F_LOOKUP_TABLE",E,E,N,N],[17,"RTM_F_FIB_MATCH",E,E,N,N],[17,"RTA_VIA",E,E,N,N],[17,"RTA_NEWDST",E,E,N,N],[17,"RTA_PREF",E,E,N,N],[17,"RTA_ENCAP_TYPE",E,E,N,N],[17,"RTA_ENCAP",E,E,N,N],[17,"RTA_EXPIRES",E,E,N,N],[17,"RTA_PAD",E,E,N,N],[17,"RTA_UID",E,E,N,N],[17,"RTA_TTL_PROPAGATE",E,E,N,N],[17,"NTF_EXT_LEARNED",E,E,N,N],[17,"NTF_OFFLOADED",E,E,N,N],[17,"NDA_MASTER",E,E,N,N],[17,"NDA_LINK_NETNSID",E,E,N,N],[17,"NDA_SRC_VNI",E,E,N,N],[17,"IFA_FLAGS",E,E,N,N],[17,"IFA_F_MANAGETEMPADDR",E,E,N,N],[17,"IFA_F_NOPREFIXROUTE",E,E,N,N],[17,"IFA_F_MCAUTOJOIN",E,E,N,N],[17,"IFA_F_STABLE_PRIVACY",E,E,N,N],[17,"MAX_LINKS",E,E,N,N],[17,"GENL_UNS_ADMIN_PERM",E,E,N,N],[17,"GENL_ID_VFS_DQUOT",E,E,N,N],[17,"GENL_ID_PMCRAID",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"NF_NETDEV_INGRESS",E,E,N,N],[17,"NF_NETDEV_NUMHOOKS",E,E,N,N],[17,"NFPROTO_INET",E,E,N,N],[17,"NFPROTO_NETDEV",E,E,N,N],[17,"NFT_TABLE_MAXNAMELEN",E,E,N,N],[17,"NFT_CHAIN_MAXNAMELEN",E,E,N,N],[17,"NFT_SET_MAXNAMELEN",E,E,N,N],[17,"NFT_OBJ_MAXNAMELEN",E,E,N,N],[17,"NFT_USERDATA_MAXLEN",E,E,N,N],[17,"NFT_REG_VERDICT",E,E,N,N],[17,"NFT_REG_1",E,E,N,N],[17,"NFT_REG_2",E,E,N,N],[17,"NFT_REG_3",E,E,N,N],[17,"NFT_REG_4",E,E,N,N],[17,"__NFT_REG_MAX",E,E,N,N],[17,"NFT_REG32_00",E,E,N,N],[17,"NFT_REG32_01",E,E,N,N],[17,"NFT_REG32_02",E,E,N,N],[17,"NFT_REG32_03",E,E,N,N],[17,"NFT_REG32_04",E,E,N,N],[17,"NFT_REG32_05",E,E,N,N],[17,"NFT_REG32_06",E,E,N,N],[17,"NFT_REG32_07",E,E,N,N],[17,"NFT_REG32_08",E,E,N,N],[17,"NFT_REG32_09",E,E,N,N],[17,"NFT_REG32_10",E,E,N,N],[17,"NFT_REG32_11",E,E,N,N],[17,"NFT_REG32_12",E,E,N,N],[17,"NFT_REG32_13",E,E,N,N],[17,"NFT_REG32_14",E,E,N,N],[17,"NFT_REG32_15",E,E,N,N],[17,"NFT_REG_SIZE",E,E,N,N],[17,"NFT_REG32_SIZE",E,E,N,N],[17,"NFT_CONTINUE",E,E,N,N],[17,"NFT_BREAK",E,E,N,N],[17,"NFT_JUMP",E,E,N,N],[17,"NFT_GOTO",E,E,N,N],[17,"NFT_RETURN",E,E,N,N],[17,"NFT_MSG_NEWTABLE",E,E,N,N],[17,"NFT_MSG_GETTABLE",E,E,N,N],[17,"NFT_MSG_DELTABLE",E,E,N,N],[17,"NFT_MSG_NEWCHAIN",E,E,N,N],[17,"NFT_MSG_GETCHAIN",E,E,N,N],[17,"NFT_MSG_DELCHAIN",E,E,N,N],[17,"NFT_MSG_NEWRULE",E,E,N,N],[17,"NFT_MSG_GETRULE",E,E,N,N],[17,"NFT_MSG_DELRULE",E,E,N,N],[17,"NFT_MSG_NEWSET",E,E,N,N],[17,"NFT_MSG_GETSET",E,E,N,N],[17,"NFT_MSG_DELSET",E,E,N,N],[17,"NFT_MSG_NEWSETELEM",E,E,N,N],[17,"NFT_MSG_GETSETELEM",E,E,N,N],[17,"NFT_MSG_DELSETELEM",E,E,N,N],[17,"NFT_MSG_NEWGEN",E,E,N,N],[17,"NFT_MSG_GETGEN",E,E,N,N],[17,"NFT_MSG_TRACE",E,E,N,N],[17,"NFT_MSG_NEWOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ",E,E,N,N],[17,"NFT_MSG_DELOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ_RESET",E,E,N,N],[17,"NFT_MSG_MAX",E,E,N,N],[17,"NFT_SET_ANONYMOUS",E,E,N,N],[17,"NFT_SET_CONSTANT",E,E,N,N],[17,"NFT_SET_INTERVAL",E,E,N,N],[17,"NFT_SET_MAP",E,E,N,N],[17,"NFT_SET_TIMEOUT",E,E,N,N],[17,"NFT_SET_EVAL",E,E,N,N],[17,"NFT_SET_POL_PERFORMANCE",E,E,N,N],[17,"NFT_SET_POL_MEMORY",E,E,N,N],[17,"NFT_SET_ELEM_INTERVAL_END",E,E,N,N],[17,"NFT_DATA_VALUE",E,E,N,N],[17,"NFT_DATA_VERDICT",E,E,N,N],[17,"NFT_DATA_RESERVED_MASK",E,E,N,N],[17,"NFT_DATA_VALUE_MAXLEN",E,E,N,N],[17,"NFT_BYTEORDER_NTOH",E,E,N,N],[17,"NFT_BYTEORDER_HTON",E,E,N,N],[17,"NFT_CMP_EQ",E,E,N,N],[17,"NFT_CMP_NEQ",E,E,N,N],[17,"NFT_CMP_LT",E,E,N,N],[17,"NFT_CMP_LTE",E,E,N,N],[17,"NFT_CMP_GT",E,E,N,N],[17,"NFT_CMP_GTE",E,E,N,N],[17,"NFT_RANGE_EQ",E,E,N,N],[17,"NFT_RANGE_NEQ",E,E,N,N],[17,"NFT_LOOKUP_F_INV",E,E,N,N],[17,"NFT_DYNSET_OP_ADD",E,E,N,N],[17,"NFT_DYNSET_OP_UPDATE",E,E,N,N],[17,"NFT_DYNSET_F_INV",E,E,N,N],[17,"NFT_PAYLOAD_LL_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_NONE",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_INET",E,E,N,N],[17,"NFT_META_LEN",E,E,N,N],[17,"NFT_META_PROTOCOL",E,E,N,N],[17,"NFT_META_PRIORITY",E,E,N,N],[17,"NFT_META_MARK",E,E,N,N],[17,"NFT_META_IIF",E,E,N,N],[17,"NFT_META_OIF",E,E,N,N],[17,"NFT_META_IIFNAME",E,E,N,N],[17,"NFT_META_OIFNAME",E,E,N,N],[17,"NFT_META_IIFTYPE",E,E,N,N],[17,"NFT_META_OIFTYPE",E,E,N,N],[17,"NFT_META_SKUID",E,E,N,N],[17,"NFT_META_SKGID",E,E,N,N],[17,"NFT_META_NFTRACE",E,E,N,N],[17,"NFT_META_RTCLASSID",E,E,N,N],[17,"NFT_META_SECMARK",E,E,N,N],[17,"NFT_META_NFPROTO",E,E,N,N],[17,"NFT_META_L4PROTO",E,E,N,N],[17,"NFT_META_BRI_IIFNAME",E,E,N,N],[17,"NFT_META_BRI_OIFNAME",E,E,N,N],[17,"NFT_META_PKTTYPE",E,E,N,N],[17,"NFT_META_CPU",E,E,N,N],[17,"NFT_META_IIFGROUP",E,E,N,N],[17,"NFT_META_OIFGROUP",E,E,N,N],[17,"NFT_META_CGROUP",E,E,N,N],[17,"NFT_META_PRANDOM",E,E,N,N],[17,"NFT_CT_STATE",E,E,N,N],[17,"NFT_CT_DIRECTION",E,E,N,N],[17,"NFT_CT_STATUS",E,E,N,N],[17,"NFT_CT_MARK",E,E,N,N],[17,"NFT_CT_SECMARK",E,E,N,N],[17,"NFT_CT_EXPIRATION",E,E,N,N],[17,"NFT_CT_HELPER",E,E,N,N],[17,"NFT_CT_L3PROTOCOL",E,E,N,N],[17,"NFT_CT_SRC",E,E,N,N],[17,"NFT_CT_DST",E,E,N,N],[17,"NFT_CT_PROTOCOL",E,E,N,N],[17,"NFT_CT_PROTO_SRC",E,E,N,N],[17,"NFT_CT_PROTO_DST",E,E,N,N],[17,"NFT_CT_LABELS",E,E,N,N],[17,"NFT_CT_PKTS",E,E,N,N],[17,"NFT_CT_BYTES",E,E,N,N],[17,"NFT_LIMIT_PKTS",E,E,N,N],[17,"NFT_LIMIT_PKT_BYTES",E,E,N,N],[17,"NFT_LIMIT_F_INV",E,E,N,N],[17,"NFT_QUEUE_FLAG_BYPASS",E,E,N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT",E,E,N,N],[17,"NFT_QUEUE_FLAG_MASK",E,E,N,N],[17,"NFT_QUOTA_F_INV",E,E,N,N],[17,"NFT_REJECT_ICMP_UNREACH",E,E,N,N],[17,"NFT_REJECT_TCP_RST",E,E,N,N],[17,"NFT_REJECT_ICMPX_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE",E,E,N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED",E,E,N,N],[17,"NFT_NAT_SNAT",E,E,N,N],[17,"NFT_NAT_DNAT",E,E,N,N],[17,"NFT_TRACETYPE_UNSPEC",E,E,N,N],[17,"NFT_TRACETYPE_POLICY",E,E,N,N],[17,"NFT_TRACETYPE_RETURN",E,E,N,N],[17,"NFT_TRACETYPE_RULE",E,E,N,N],[17,"NFT_NG_INCREMENTAL",E,E,N,N],[17,"NFT_NG_RANDOM",E,E,N,N],[17,"M_MXFAST",E,E,N,N],[17,"M_NLBLKS",E,E,N,N],[17,"M_GRAIN",E,E,N,N],[17,"M_KEEP",E,E,N,N],[17,"M_TRIM_THRESHOLD",E,E,N,N],[17,"M_TOP_PAD",E,E,N,N],[17,"M_MMAP_THRESHOLD",E,E,N,N],[17,"M_MMAP_MAX",E,E,N,N],[17,"M_CHECK_ACTION",E,E,N,N],[17,"M_PERTURB",E,E,N,N],[17,"M_ARENA_TEST",E,E,N,N],[17,"M_ARENA_MAX",E,E,N,N],[17,"AT_STATX_SYNC_TYPE",E,E,N,N],[17,"AT_STATX_SYNC_AS_STAT",E,E,N,N],[17,"AT_STATX_FORCE_SYNC",E,E,N,N],[17,"AT_STATX_DONT_SYNC",E,E,N,N],[17,"STATX_TYPE",E,E,N,N],[17,"STATX_MODE",E,E,N,N],[17,"STATX_NLINK",E,E,N,N],[17,"STATX_UID",E,E,N,N],[17,"STATX_GID",E,E,N,N],[17,"STATX_ATIME",E,E,N,N],[17,"STATX_MTIME",E,E,N,N],[17,"STATX_CTIME",E,E,N,N],[17,"STATX_INO",E,E,N,N],[17,"STATX_SIZE",E,E,N,N],[17,"STATX_BLOCKS",E,E,N,N],[17,"STATX_BASIC_STATS",E,E,N,N],[17,"STATX_BTIME",E,E,N,N],[17,"STATX_ALL",E,E,N,N],[17,"STATX__RESERVED",E,E,N,N],[17,"STATX_ATTR_COMPRESSED",E,E,N,N],[17,"STATX_ATTR_IMMUTABLE",E,E,N,N],[17,"STATX_ATTR_APPEND",E,E,N,N],[17,"STATX_ATTR_NODUMP",E,E,N,N],[17,"STATX_ATTR_ENCRYPTED",E,E,N,N],[17,"STATX_ATTR_AUTOMOUNT",E,E,N,N],[17,"PTHREAD_STACK_MIN",E,E,N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T",E,E,N,N],[17,"O_LARGEFILE",E,E,N,N],[17,"POSIX_FADV_DONTNEED",E,E,N,N],[17,"POSIX_FADV_NOREUSE",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"RTLD_DEEPBIND",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"TIOCGSOFTCAR",E,E,N,N],[17,"TIOCSSOFTCAR",E,E,N,N],[17,"TIOCGRS485",E,E,N,N],[17,"TIOCSRS485",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,"O_NONBLOCK",E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_RSYNC",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,"O_NOATIME",E,E,N,N],[17,"O_PATH",E,E,N,N],[17,"O_TMPFILE",E,E,N,N],[17,"MADV_SOFT_OFFLINE",E,E,N,N],[17,"MAP_GROWSDOWN",E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,"ENAMETOOLONG",E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,"ENOTEMPTY",E,E,N,N],[17,"ELOOP",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ECHRNG",E,E,N,N],[17,"EL2NSYNC",E,E,N,N],[17,"EL3HLT",E,E,N,N],[17,"EL3RST",E,E,N,N],[17,"ELNRNG",E,E,N,N],[17,"EUNATCH",E,E,N,N],[17,"ENOCSI",E,E,N,N],[17,"EL2HLT",E,E,N,N],[17,"EBADE",E,E,N,N],[17,"EBADR",E,E,N,N],[17,"EXFULL",E,E,N,N],[17,"ENOANO",E,E,N,N],[17,"EBADRQC",E,E,N,N],[17,"EBADSLT",E,E,N,N],[17,"EMULTIHOP",E,E,N,N],[17,"EOVERFLOW",E,E,N,N],[17,"ENOTUNIQ",E,E,N,N],[17,"EBADFD",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EREMCHG",E,E,N,N],[17,"ELIBACC",E,E,N,N],[17,"ELIBBAD",E,E,N,N],[17,"ELIBSCN",E,E,N,N],[17,"ELIBMAX",E,E,N,N],[17,"ELIBEXEC",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ERESTART",E,E,N,N],[17,"ESTRPIPE",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,"EDESTADDRREQ",E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,"EPROTOTYPE",E,E,N,N],[17,"ENOPROTOOPT",E,E,N,N],[17,"EPROTONOSUPPORT",E,E,N,N],[17,"ESOCKTNOSUPPORT",E,E,N,N],[17,"EOPNOTSUPP",E,E,N,N],[17,"EPFNOSUPPORT",E,E,N,N],[17,"EAFNOSUPPORT",E,E,N,N],[17,"EADDRINUSE",E,E,N,N],[17,"EADDRNOTAVAIL",E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,"ENETUNREACH",E,E,N,N],[17,"ENETRESET",E,E,N,N],[17,"ECONNABORTED",E,E,N,N],[17,"ECONNRESET",E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,"ESHUTDOWN",E,E,N,N],[17,"ETOOMANYREFS",E,E,N,N],[17,"ETIMEDOUT",E,E,N,N],[17,"ECONNREFUSED",E,E,N,N],[17,"EHOSTDOWN",E,E,N,N],[17,"EHOSTUNREACH",E,E,N,N],[17,"EALREADY",E,E,N,N],[17,"EINPROGRESS",E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,"ENOMEDIUM",E,E,N,N],[17,"EMEDIUMTYPE",E,E,N,N],[17,"ECANCELED",E,E,N,N],[17,"ENOKEY",E,E,N,N],[17,"EKEYEXPIRED",E,E,N,N],[17,"EKEYREVOKED",E,E,N,N],[17,"EKEYREJECTED",E,E,N,N],[17,"EOWNERDEAD",E,E,N,N],[17,"ENOTRECOVERABLE",E,E,N,N],[17,"EHWPOISON",E,E,N,N],[17,"ERFKILL",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SO_REUSEADDR",E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,"SO_DONTROUTE",E,E,N,N],[17,"SO_BROADCAST",E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,"SO_SNDBUFFORCE",E,E,N,N],[17,"SO_RCVBUFFORCE",E,E,N,N],[17,"SO_KEEPALIVE",E,E,N,N],[17,"SO_OOBINLINE",E,E,N,N],[17,"SO_NO_CHECK",E,E,N,N],[17,"SO_PRIORITY",E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_BSDCOMPAT",E,E,N,N],[17,"SO_REUSEPORT",E,E,N,N],[17,"SO_PASSCRED",E,E,N,N],[17,"SO_PEERCRED",E,E,N,N],[17,"SO_RCVLOWAT",E,E,N,N],[17,"SO_SNDLOWAT",E,E,N,N],[17,"SO_RCVTIMEO",E,E,N,N],[17,"SO_SNDTIMEO",E,E,N,N],[17,"SO_SECURITY_AUTHENTICATION",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK",E,E,N,N],[17,"SO_BINDTODEVICE",E,E,N,N],[17,"SO_ATTACH_FILTER",E,E,N,N],[17,"SO_DETACH_FILTER",E,E,N,N],[17,"SO_GET_FILTER",E,E,N,N],[17,"SO_PEERNAME",E,E,N,N],[17,"SO_TIMESTAMP",E,E,N,N],[17,"SO_ACCEPTCONN",E,E,N,N],[17,"SO_PEERSEC",E,E,N,N],[17,"SO_PASSSEC",E,E,N,N],[17,"SO_TIMESTAMPNS",E,E,N,N],[17,"SCM_TIMESTAMPNS",E,E,N,N],[17,"SO_MARK",E,E,N,N],[17,"SO_PROTOCOL",E,E,N,N],[17,"SO_DOMAIN",E,E,N,N],[17,"SO_RXQ_OVFL",E,E,N,N],[17,"SO_WIFI_STATUS",E,E,N,N],[17,"SCM_WIFI_STATUS",E,E,N,N],[17,"SO_PEEK_OFF",E,E,N,N],[17,"SO_NOFCS",E,E,N,N],[17,"SO_LOCK_FILTER",E,E,N,N],[17,"SO_SELECT_ERR_QUEUE",E,E,N,N],[17,"SO_BUSY_POLL",E,E,N,N],[17,"SO_MAX_PACING_RATE",E,E,N,N],[17,"SO_BPF_EXTENSIONS",E,E,N,N],[17,"SO_INCOMING_CPU",E,E,N,N],[17,"SO_ATTACH_BPF",E,E,N,N],[17,"SO_DETACH_BPF",E,E,N,N],[17,"SOCK_STREAM",E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,"SA_NOCLDWAIT",E,E,N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGSTKFLT",E,E,N,N],[17,"SIGUNUSED",E,E,N,N],[17,"SIGPOLL",E,E,N,N],[17,"SIGPWR",E,E,N,N],[17,"SIG_SETMASK",E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,"SIG_UNBLOCK",E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,"PTRACE_DETACH",E,E,N,N],[17,"EFD_NONBLOCK",E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"F_RDLCK",E,E,N,N],[17,"F_WRLCK",E,E,N,N],[17,"F_UNLCK",E,E,N,N],[17,"SFD_NONBLOCK",E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"TIOCLINUX",E,E,N,N],[17,"TIOCGSERIAL",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,"SFD_CLOEXEC",E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,"EBFONT",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENONET",E,E,N,N],[17,"ENOPKG",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"EADV",E,E,N,N],[17,"ESRMNT",E,E,N,N],[17,"ECOMM",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"EDOTDOT",E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,"SA_RESETHAND",E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,"SA_NOCLDSTOP",E,E,N,N],[17,"EPOLL_CLOEXEC",E,E,N,N],[17,"EFD_CLOEXEC",E,E,N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T",E,E,N,N],[17,"O_DIRECT",E,E,N,N],[17,"O_DIRECTORY",E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,"MAP_HUGETLB",E,E,N,N],[17,"MAP_LOCKED",E,E,N,N],[17,"MAP_NORESERVE",E,E,N,N],[17,"MAP_32BIT",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,"MAP_ANONYMOUS",E,E,N,N],[17,"MAP_DENYWRITE",E,E,N,N],[17,"MAP_EXECUTABLE",E,E,N,N],[17,"MAP_POPULATE",E,E,N,N],[17,"MAP_NONBLOCK",E,E,N,N],[17,"MAP_STACK",E,E,N,N],[17,"EDEADLOCK",E,E,N,N],[17,"EUCLEAN",E,E,N,N],[17,"ENOTNAM",E,E,N,N],[17,"ENAVAIL",E,E,N,N],[17,"EISNAM",E,E,N,N],[17,"EREMOTEIO",E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONCLEX",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,"PTRACE_GETFPREGS",E,E,N,N],[17,"PTRACE_SETFPREGS",E,E,N,N],[17,"PTRACE_GETFPXREGS",E,E,N,N],[17,"PTRACE_SETFPXREGS",E,E,N,N],[17,"PTRACE_GETREGS",E,E,N,N],[17,"PTRACE_SETREGS",E,E,N,N],[17,"PTRACE_PEEKSIGINFO_SHARED",E,E,N,N],[17,"MCL_CURRENT",E,E,N,N],[17,"MCL_FUTURE",E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,"MINSIGSTKSZ",E,E,N,N],[17,"CBAUD",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS1",E,E,N,N],[17,"VT1",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"CIBAUD",E,E,N,N],[17,"CBAUDEX",E,E,N,N],[17,"VSWTC",E,E,N,N],[17,"OLCUC",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"XTABS",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"BOTHER",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"B460800",E,E,N,N],[17,"B500000",E,E,N,N],[17,"B576000",E,E,N,N],[17,"B921600",E,E,N,N],[17,"B1000000",E,E,N,N],[17,"B1152000",E,E,N,N],[17,"B1500000",E,E,N,N],[17,"B2000000",E,E,N,N],[17,"B2500000",E,E,N,N],[17,"B3000000",E,E,N,N],[17,"B3500000",E,E,N,N],[17,"B4000000",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TCGETS",E,E,N,N],[17,"TCSETS",E,E,N,N],[17,"TCSETSW",E,E,N,N],[17,"TCSETSF",E,E,N,N],[17,"TCGETA",E,E,N,N],[17,"TCSETA",E,E,N,N],[17,"TCSETAW",E,E,N,N],[17,"TCSETAF",E,E,N,N],[17,"TCSBRK",E,E,N,N],[17,"TCXONC",E,E,N,N],[17,"TCFLSH",E,E,N,N],[17,"TIOCINQ",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"R15",E,E,N,N],[17,"R14",E,E,N,N],[17,"R13",E,E,N,N],[17,"R12",E,E,N,N],[17,"RBP",E,E,N,N],[17,"RBX",E,E,N,N],[17,"R11",E,E,N,N],[17,"R10",E,E,N,N],[17,"R9",E,E,N,N],[17,"R8",E,E,N,N],[17,"RAX",E,E,N,N],[17,"RCX",E,E,N,N],[17,"RDX",E,E,N,N],[17,"RSI",E,E,N,N],[17,"RDI",E,E,N,N],[17,"ORIG_RAX",E,E,N,N],[17,"RIP",E,E,N,N],[17,"CS",E,E,N,N],[17,"EFLAGS",E,E,N,N],[17,"RSP",E,E,N,N],[17,"SS",E,E,N,N],[17,"FS_BASE",E,E,N,N],[17,"GS_BASE",E,E,N,N],[17,"DS",E,E,N,N],[17,"ES",E,E,N,N],[17,"FS",E,E,N,N],[17,"GS",E,E,N,N],[17,"REG_R8",E,E,N,N],[17,"REG_R9",E,E,N,N],[17,"REG_R10",E,E,N,N],[17,"REG_R11",E,E,N,N],[17,"REG_R12",E,E,N,N],[17,"REG_R13",E,E,N,N],[17,"REG_R14",E,E,N,N],[17,"REG_R15",E,E,N,N],[17,"REG_RDI",E,E,N,N],[17,"REG_RSI",E,E,N,N],[17,"REG_RBP",E,E,N,N],[17,"REG_RBX",E,E,N,N],[17,"REG_RDX",E,E,N,N],[17,"REG_RAX",E,E,N,N],[17,"REG_RCX",E,E,N,N],[17,"REG_RSP",E,E,N,N],[17,"REG_RIP",E,E,N,N],[17,"REG_EFL",E,E,N,N],[17,"REG_CSGSFS",E,E,N,N],[17,"REG_ERR",E,E,N,N],[17,"REG_TRAPNO",E,E,N,N],[17,"REG_OLDMASK",E,E,N,N],[17,"REG_CR2",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T",E,E,N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"SYS_read",E,E,N,N],[17,"SYS_write",E,E,N,N],[17,"SYS_open",E,E,N,N],[17,"SYS_close",E,E,N,N],[17,"SYS_stat",E,E,N,N],[17,"SYS_fstat",E,E,N,N],[17,"SYS_lstat",E,E,N,N],[17,"SYS_poll",E,E,N,N],[17,"SYS_lseek",E,E,N,N],[17,"SYS_mmap",E,E,N,N],[17,"SYS_mprotect",E,E,N,N],[17,"SYS_munmap",E,E,N,N],[17,"SYS_brk",E,E,N,N],[17,"SYS_rt_sigaction",E,E,N,N],[17,"SYS_rt_sigprocmask",E,E,N,N],[17,"SYS_rt_sigreturn",E,E,N,N],[17,"SYS_ioctl",E,E,N,N],[17,"SYS_pread64",E,E,N,N],[17,"SYS_pwrite64",E,E,N,N],[17,"SYS_readv",E,E,N,N],[17,"SYS_writev",E,E,N,N],[17,"SYS_access",E,E,N,N],[17,"SYS_pipe",E,E,N,N],[17,"SYS_select",E,E,N,N],[17,"SYS_sched_yield",E,E,N,N],[17,"SYS_mremap",E,E,N,N],[17,"SYS_msync",E,E,N,N],[17,"SYS_mincore",E,E,N,N],[17,"SYS_madvise",E,E,N,N],[17,"SYS_shmget",E,E,N,N],[17,"SYS_shmat",E,E,N,N],[17,"SYS_shmctl",E,E,N,N],[17,"SYS_dup",E,E,N,N],[17,"SYS_dup2",E,E,N,N],[17,"SYS_pause",E,E,N,N],[17,"SYS_nanosleep",E,E,N,N],[17,"SYS_getitimer",E,E,N,N],[17,"SYS_alarm",E,E,N,N],[17,"SYS_setitimer",E,E,N,N],[17,"SYS_getpid",E,E,N,N],[17,"SYS_sendfile",E,E,N,N],[17,"SYS_socket",E,E,N,N],[17,"SYS_connect",E,E,N,N],[17,"SYS_accept",E,E,N,N],[17,"SYS_sendto",E,E,N,N],[17,"SYS_recvfrom",E,E,N,N],[17,"SYS_sendmsg",E,E,N,N],[17,"SYS_recvmsg",E,E,N,N],[17,"SYS_shutdown",E,E,N,N],[17,"SYS_bind",E,E,N,N],[17,"SYS_listen",E,E,N,N],[17,"SYS_getsockname",E,E,N,N],[17,"SYS_getpeername",E,E,N,N],[17,"SYS_socketpair",E,E,N,N],[17,"SYS_setsockopt",E,E,N,N],[17,"SYS_getsockopt",E,E,N,N],[17,"SYS_clone",E,E,N,N],[17,"SYS_fork",E,E,N,N],[17,"SYS_vfork",E,E,N,N],[17,"SYS_execve",E,E,N,N],[17,"SYS_exit",E,E,N,N],[17,"SYS_wait4",E,E,N,N],[17,"SYS_kill",E,E,N,N],[17,"SYS_uname",E,E,N,N],[17,"SYS_semget",E,E,N,N],[17,"SYS_semop",E,E,N,N],[17,"SYS_semctl",E,E,N,N],[17,"SYS_shmdt",E,E,N,N],[17,"SYS_msgget",E,E,N,N],[17,"SYS_msgsnd",E,E,N,N],[17,"SYS_msgrcv",E,E,N,N],[17,"SYS_msgctl",E,E,N,N],[17,"SYS_fcntl",E,E,N,N],[17,"SYS_flock",E,E,N,N],[17,"SYS_fsync",E,E,N,N],[17,"SYS_fdatasync",E,E,N,N],[17,"SYS_truncate",E,E,N,N],[17,"SYS_ftruncate",E,E,N,N],[17,"SYS_getdents",E,E,N,N],[17,"SYS_getcwd",E,E,N,N],[17,"SYS_chdir",E,E,N,N],[17,"SYS_fchdir",E,E,N,N],[17,"SYS_rename",E,E,N,N],[17,"SYS_mkdir",E,E,N,N],[17,"SYS_rmdir",E,E,N,N],[17,"SYS_creat",E,E,N,N],[17,"SYS_link",E,E,N,N],[17,"SYS_unlink",E,E,N,N],[17,"SYS_symlink",E,E,N,N],[17,"SYS_readlink",E,E,N,N],[17,"SYS_chmod",E,E,N,N],[17,"SYS_fchmod",E,E,N,N],[17,"SYS_chown",E,E,N,N],[17,"SYS_fchown",E,E,N,N],[17,"SYS_lchown",E,E,N,N],[17,"SYS_umask",E,E,N,N],[17,"SYS_gettimeofday",E,E,N,N],[17,"SYS_getrlimit",E,E,N,N],[17,"SYS_getrusage",E,E,N,N],[17,"SYS_sysinfo",E,E,N,N],[17,"SYS_times",E,E,N,N],[17,"SYS_ptrace",E,E,N,N],[17,"SYS_getuid",E,E,N,N],[17,"SYS_syslog",E,E,N,N],[17,"SYS_getgid",E,E,N,N],[17,"SYS_setuid",E,E,N,N],[17,"SYS_setgid",E,E,N,N],[17,"SYS_geteuid",E,E,N,N],[17,"SYS_getegid",E,E,N,N],[17,"SYS_setpgid",E,E,N,N],[17,"SYS_getppid",E,E,N,N],[17,"SYS_getpgrp",E,E,N,N],[17,"SYS_setsid",E,E,N,N],[17,"SYS_setreuid",E,E,N,N],[17,"SYS_setregid",E,E,N,N],[17,"SYS_getgroups",E,E,N,N],[17,"SYS_setgroups",E,E,N,N],[17,"SYS_setresuid",E,E,N,N],[17,"SYS_getresuid",E,E,N,N],[17,"SYS_setresgid",E,E,N,N],[17,"SYS_getresgid",E,E,N,N],[17,"SYS_getpgid",E,E,N,N],[17,"SYS_setfsuid",E,E,N,N],[17,"SYS_setfsgid",E,E,N,N],[17,"SYS_getsid",E,E,N,N],[17,"SYS_capget",E,E,N,N],[17,"SYS_capset",E,E,N,N],[17,"SYS_rt_sigpending",E,E,N,N],[17,"SYS_rt_sigtimedwait",E,E,N,N],[17,"SYS_rt_sigqueueinfo",E,E,N,N],[17,"SYS_rt_sigsuspend",E,E,N,N],[17,"SYS_sigaltstack",E,E,N,N],[17,"SYS_utime",E,E,N,N],[17,"SYS_mknod",E,E,N,N],[17,"SYS_uselib",E,E,N,N],[17,"SYS_personality",E,E,N,N],[17,"SYS_ustat",E,E,N,N],[17,"SYS_statfs",E,E,N,N],[17,"SYS_fstatfs",E,E,N,N],[17,"SYS_sysfs",E,E,N,N],[17,"SYS_getpriority",E,E,N,N],[17,"SYS_setpriority",E,E,N,N],[17,"SYS_sched_setparam",E,E,N,N],[17,"SYS_sched_getparam",E,E,N,N],[17,"SYS_sched_setscheduler",E,E,N,N],[17,"SYS_sched_getscheduler",E,E,N,N],[17,"SYS_sched_get_priority_max",E,E,N,N],[17,"SYS_sched_get_priority_min",E,E,N,N],[17,"SYS_sched_rr_get_interval",E,E,N,N],[17,"SYS_mlock",E,E,N,N],[17,"SYS_munlock",E,E,N,N],[17,"SYS_mlockall",E,E,N,N],[17,"SYS_munlockall",E,E,N,N],[17,"SYS_vhangup",E,E,N,N],[17,"SYS_modify_ldt",E,E,N,N],[17,"SYS_pivot_root",E,E,N,N],[17,"SYS__sysctl",E,E,N,N],[17,"SYS_prctl",E,E,N,N],[17,"SYS_arch_prctl",E,E,N,N],[17,"SYS_adjtimex",E,E,N,N],[17,"SYS_setrlimit",E,E,N,N],[17,"SYS_chroot",E,E,N,N],[17,"SYS_sync",E,E,N,N],[17,"SYS_acct",E,E,N,N],[17,"SYS_settimeofday",E,E,N,N],[17,"SYS_mount",E,E,N,N],[17,"SYS_umount2",E,E,N,N],[17,"SYS_swapon",E,E,N,N],[17,"SYS_swapoff",E,E,N,N],[17,"SYS_reboot",E,E,N,N],[17,"SYS_sethostname",E,E,N,N],[17,"SYS_setdomainname",E,E,N,N],[17,"SYS_iopl",E,E,N,N],[17,"SYS_ioperm",E,E,N,N],[17,"SYS_create_module",E,E,N,N],[17,"SYS_init_module",E,E,N,N],[17,"SYS_delete_module",E,E,N,N],[17,"SYS_get_kernel_syms",E,E,N,N],[17,"SYS_query_module",E,E,N,N],[17,"SYS_quotactl",E,E,N,N],[17,"SYS_nfsservctl",E,E,N,N],[17,"SYS_getpmsg",E,E,N,N],[17,"SYS_putpmsg",E,E,N,N],[17,"SYS_afs_syscall",E,E,N,N],[17,"SYS_tuxcall",E,E,N,N],[17,"SYS_security",E,E,N,N],[17,"SYS_gettid",E,E,N,N],[17,"SYS_readahead",E,E,N,N],[17,"SYS_setxattr",E,E,N,N],[17,"SYS_lsetxattr",E,E,N,N],[17,"SYS_fsetxattr",E,E,N,N],[17,"SYS_getxattr",E,E,N,N],[17,"SYS_lgetxattr",E,E,N,N],[17,"SYS_fgetxattr",E,E,N,N],[17,"SYS_listxattr",E,E,N,N],[17,"SYS_llistxattr",E,E,N,N],[17,"SYS_flistxattr",E,E,N,N],[17,"SYS_removexattr",E,E,N,N],[17,"SYS_lremovexattr",E,E,N,N],[17,"SYS_fremovexattr",E,E,N,N],[17,"SYS_tkill",E,E,N,N],[17,"SYS_time",E,E,N,N],[17,"SYS_futex",E,E,N,N],[17,"SYS_sched_setaffinity",E,E,N,N],[17,"SYS_sched_getaffinity",E,E,N,N],[17,"SYS_set_thread_area",E,E,N,N],[17,"SYS_io_setup",E,E,N,N],[17,"SYS_io_destroy",E,E,N,N],[17,"SYS_io_getevents",E,E,N,N],[17,"SYS_io_submit",E,E,N,N],[17,"SYS_io_cancel",E,E,N,N],[17,"SYS_get_thread_area",E,E,N,N],[17,"SYS_lookup_dcookie",E,E,N,N],[17,"SYS_epoll_create",E,E,N,N],[17,"SYS_epoll_ctl_old",E,E,N,N],[17,"SYS_epoll_wait_old",E,E,N,N],[17,"SYS_remap_file_pages",E,E,N,N],[17,"SYS_getdents64",E,E,N,N],[17,"SYS_set_tid_address",E,E,N,N],[17,"SYS_restart_syscall",E,E,N,N],[17,"SYS_semtimedop",E,E,N,N],[17,"SYS_fadvise64",E,E,N,N],[17,"SYS_timer_create",E,E,N,N],[17,"SYS_timer_settime",E,E,N,N],[17,"SYS_timer_gettime",E,E,N,N],[17,"SYS_timer_getoverrun",E,E,N,N],[17,"SYS_timer_delete",E,E,N,N],[17,"SYS_clock_settime",E,E,N,N],[17,"SYS_clock_gettime",E,E,N,N],[17,"SYS_clock_getres",E,E,N,N],[17,"SYS_clock_nanosleep",E,E,N,N],[17,"SYS_exit_group",E,E,N,N],[17,"SYS_epoll_wait",E,E,N,N],[17,"SYS_epoll_ctl",E,E,N,N],[17,"SYS_tgkill",E,E,N,N],[17,"SYS_utimes",E,E,N,N],[17,"SYS_vserver",E,E,N,N],[17,"SYS_mbind",E,E,N,N],[17,"SYS_set_mempolicy",E,E,N,N],[17,"SYS_get_mempolicy",E,E,N,N],[17,"SYS_mq_open",E,E,N,N],[17,"SYS_mq_unlink",E,E,N,N],[17,"SYS_mq_timedsend",E,E,N,N],[17,"SYS_mq_timedreceive",E,E,N,N],[17,"SYS_mq_notify",E,E,N,N],[17,"SYS_mq_getsetattr",E,E,N,N],[17,"SYS_kexec_load",E,E,N,N],[17,"SYS_waitid",E,E,N,N],[17,"SYS_add_key",E,E,N,N],[17,"SYS_request_key",E,E,N,N],[17,"SYS_keyctl",E,E,N,N],[17,"SYS_ioprio_set",E,E,N,N],[17,"SYS_ioprio_get",E,E,N,N],[17,"SYS_inotify_init",E,E,N,N],[17,"SYS_inotify_add_watch",E,E,N,N],[17,"SYS_inotify_rm_watch",E,E,N,N],[17,"SYS_migrate_pages",E,E,N,N],[17,"SYS_openat",E,E,N,N],[17,"SYS_mkdirat",E,E,N,N],[17,"SYS_mknodat",E,E,N,N],[17,"SYS_fchownat",E,E,N,N],[17,"SYS_futimesat",E,E,N,N],[17,"SYS_newfstatat",E,E,N,N],[17,"SYS_unlinkat",E,E,N,N],[17,"SYS_renameat",E,E,N,N],[17,"SYS_linkat",E,E,N,N],[17,"SYS_symlinkat",E,E,N,N],[17,"SYS_readlinkat",E,E,N,N],[17,"SYS_fchmodat",E,E,N,N],[17,"SYS_faccessat",E,E,N,N],[17,"SYS_pselect6",E,E,N,N],[17,"SYS_ppoll",E,E,N,N],[17,"SYS_unshare",E,E,N,N],[17,"SYS_set_robust_list",E,E,N,N],[17,"SYS_get_robust_list",E,E,N,N],[17,"SYS_splice",E,E,N,N],[17,"SYS_tee",E,E,N,N],[17,"SYS_sync_file_range",E,E,N,N],[17,"SYS_vmsplice",E,E,N,N],[17,"SYS_move_pages",E,E,N,N],[17,"SYS_utimensat",E,E,N,N],[17,"SYS_epoll_pwait",E,E,N,N],[17,"SYS_signalfd",E,E,N,N],[17,"SYS_timerfd_create",E,E,N,N],[17,"SYS_eventfd",E,E,N,N],[17,"SYS_fallocate",E,E,N,N],[17,"SYS_timerfd_settime",E,E,N,N],[17,"SYS_timerfd_gettime",E,E,N,N],[17,"SYS_accept4",E,E,N,N],[17,"SYS_signalfd4",E,E,N,N],[17,"SYS_eventfd2",E,E,N,N],[17,"SYS_epoll_create1",E,E,N,N],[17,"SYS_dup3",E,E,N,N],[17,"SYS_pipe2",E,E,N,N],[17,"SYS_inotify_init1",E,E,N,N],[17,"SYS_preadv",E,E,N,N],[17,"SYS_pwritev",E,E,N,N],[17,"SYS_rt_tgsigqueueinfo",E,E,N,N],[17,"SYS_perf_event_open",E,E,N,N],[17,"SYS_recvmmsg",E,E,N,N],[17,"SYS_fanotify_init",E,E,N,N],[17,"SYS_fanotify_mark",E,E,N,N],[17,"SYS_prlimit64",E,E,N,N],[17,"SYS_name_to_handle_at",E,E,N,N],[17,"SYS_open_by_handle_at",E,E,N,N],[17,"SYS_clock_adjtime",E,E,N,N],[17,"SYS_syncfs",E,E,N,N],[17,"SYS_sendmmsg",E,E,N,N],[17,"SYS_setns",E,E,N,N],[17,"SYS_getcpu",E,E,N,N],[17,"SYS_process_vm_readv",E,E,N,N],[17,"SYS_process_vm_writev",E,E,N,N],[17,"SYS_kcmp",E,E,N,N],[17,"SYS_finit_module",E,E,N,N],[17,"SYS_sched_setattr",E,E,N,N],[17,"SYS_sched_getattr",E,E,N,N],[17,"SYS_renameat2",E,E,N,N],[17,"SYS_seccomp",E,E,N,N],[17,"SYS_getrandom",E,E,N,N],[17,"SYS_memfd_create",E,E,N,N],[17,"SYS_kexec_file_load",E,E,N,N],[17,"SYS_bpf",E,E,N,N],[17,"SYS_execveat",E,E,N,N],[17,"SYS_userfaultfd",E,E,N,N],[17,"SYS_membarrier",E,E,N,N],[17,"SYS_mlock2",E,E,N,N],[17,"SYS_copy_file_range",E,E,N,N],[17,"SYS_preadv2",E,E,N,N],[17,"SYS_pwritev2",E,E,N,N],[17,"SYS_pkey_mprotect",E,E,N,N],[17,"SYS_pkey_alloc",E,E,N,N],[17,"SYS_pkey_free",E,E,N,N],[17,"SYS_statx",E,E,N,N],[11,R[8],E,E,130,[[[U]],[R[3]]]],[11,"into",E,E,130,[[],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[9],E,E,130,[[],[R[3]]]],[11,R[28],E,E,130,[[["self"]],[T]]],[11,R[10],E,E,130,[[["self"]],[T]]],[11,R[11],E,E,130,[[["self"]],[R[29]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,R[8],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,R[8],E,E,9,[[[U]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[9],E,E,9,[[],[R[3]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,R[8],E,E,10,[[[U]],[R[3]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,R[8],E,E,11,[[[U]],[R[3]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[9],E,E,11,[[],[R[3]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,R[8],E,E,12,[[[U]],[R[3]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[9],E,E,12,[[],[R[3]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,R[8],E,E,13,[[[U]],[R[3]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[9],E,E,13,[[],[R[3]]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,R[8],E,E,14,[[[U]],[R[3]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[9],E,E,14,[[],[R[3]]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,R[8],E,E,15,[[[U]],[R[3]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[9],E,E,15,[[],[R[3]]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,R[8],E,E,16,[[[U]],[R[3]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[9],E,E,16,[[],[R[3]]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,R[8],E,E,17,[[[U]],[R[3]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[9],E,E,17,[[],[R[3]]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,R[8],E,E,18,[[[U]],[R[3]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[9],E,E,18,[[],[R[3]]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,R[8],E,E,19,[[[U]],[R[3]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[9],E,E,19,[[],[R[3]]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,R[8],E,E,20,[[[U]],[R[3]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[9],E,E,20,[[],[R[3]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,R[8],E,E,21,[[[U]],[R[3]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[9],E,E,21,[[],[R[3]]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,R[8],E,E,22,[[[U]],[R[3]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[9],E,E,22,[[],[R[3]]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,R[8],E,E,23,[[[U]],[R[3]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[9],E,E,23,[[],[R[3]]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,R[8],E,E,131,[[[U]],[R[3]]]],[11,"into",E,E,131,[[],[U]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[9],E,E,131,[[],[R[3]]]],[11,R[28],E,E,131,[[["self"]],[T]]],[11,R[10],E,E,131,[[["self"]],[T]]],[11,R[11],E,E,131,[[["self"]],[R[29]]]],[11,R[8],E,E,24,[[[U]],[R[3]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[9],E,E,24,[[],[R[3]]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,R[8],E,E,25,[[[U]],[R[3]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[9],E,E,25,[[],[R[3]]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,R[8],E,E,26,[[[U]],[R[3]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[9],E,E,26,[[],[R[3]]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,R[8],E,E,27,[[[U]],[R[3]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[9],E,E,27,[[],[R[3]]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,R[8],E,E,28,[[[U]],[R[3]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[9],E,E,28,[[],[R[3]]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,R[8],E,E,29,[[[U]],[R[3]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[9],E,E,29,[[],[R[3]]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[29]]]],[11,R[8],E,E,132,[[[U]],[R[3]]]],[11,"into",E,E,132,[[],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[9],E,E,132,[[],[R[3]]]],[11,R[28],E,E,132,[[["self"]],[T]]],[11,R[10],E,E,132,[[["self"]],[T]]],[11,R[11],E,E,132,[[["self"]],[R[29]]]],[11,R[8],E,E,30,[[[U]],[R[3]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[9],E,E,30,[[],[R[3]]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,R[8],E,E,31,[[[U]],[R[3]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[9],E,E,31,[[],[R[3]]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[29]]]],[11,R[8],E,E,32,[[[U]],[R[3]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[9],E,E,32,[[],[R[3]]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[29]]]],[11,R[8],E,E,33,[[[U]],[R[3]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[9],E,E,33,[[],[R[3]]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[29]]]],[11,R[8],E,E,34,[[[U]],[R[3]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[9],E,E,34,[[],[R[3]]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[29]]]],[11,R[8],E,E,35,[[[U]],[R[3]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[9],E,E,35,[[],[R[3]]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[29]]]],[11,R[8],E,E,36,[[[U]],[R[3]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[9],E,E,36,[[],[R[3]]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[29]]]],[11,R[8],E,E,37,[[[U]],[R[3]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[9],E,E,37,[[],[R[3]]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[29]]]],[11,R[8],E,E,38,[[[U]],[R[3]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[9],E,E,38,[[],[R[3]]]],[11,R[28],E,E,38,[[["self"]],[T]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[29]]]],[11,R[8],E,E,39,[[[U]],[R[3]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[9],E,E,39,[[],[R[3]]]],[11,R[28],E,E,39,[[["self"]],[T]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[29]]]],[11,R[8],E,E,40,[[[U]],[R[3]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[9],E,E,40,[[],[R[3]]]],[11,R[28],E,E,40,[[["self"]],[T]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[29]]]],[11,R[8],E,E,41,[[[U]],[R[3]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[9],E,E,41,[[],[R[3]]]],[11,R[28],E,E,41,[[["self"]],[T]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[29]]]],[11,R[8],E,E,42,[[[U]],[R[3]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[9],E,E,42,[[],[R[3]]]],[11,R[28],E,E,42,[[["self"]],[T]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[29]]]],[11,R[8],E,E,43,[[[U]],[R[3]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[9],E,E,43,[[],[R[3]]]],[11,R[28],E,E,43,[[["self"]],[T]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[29]]]],[11,R[8],E,E,44,[[[U]],[R[3]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[9],E,E,44,[[],[R[3]]]],[11,R[28],E,E,44,[[["self"]],[T]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[29]]]],[11,R[8],E,E,45,[[[U]],[R[3]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[9],E,E,45,[[],[R[3]]]],[11,R[28],E,E,45,[[["self"]],[T]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[29]]]],[11,R[8],E,E,133,[[[U]],[R[3]]]],[11,"into",E,E,133,[[],[U]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[9],E,E,133,[[],[R[3]]]],[11,R[28],E,E,133,[[["self"]],[T]]],[11,R[10],E,E,133,[[["self"]],[T]]],[11,R[11],E,E,133,[[["self"]],[R[29]]]],[11,R[8],E,E,46,[[[U]],[R[3]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[9],E,E,46,[[],[R[3]]]],[11,R[28],E,E,46,[[["self"]],[T]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[29]]]],[11,R[8],E,E,134,[[[U]],[R[3]]]],[11,"into",E,E,134,[[],[U]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[9],E,E,134,[[],[R[3]]]],[11,R[28],E,E,134,[[["self"]],[T]]],[11,R[10],E,E,134,[[["self"]],[T]]],[11,R[11],E,E,134,[[["self"]],[R[29]]]],[11,R[8],E,E,47,[[[U]],[R[3]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[9],E,E,47,[[],[R[3]]]],[11,R[28],E,E,47,[[["self"]],[T]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[29]]]],[11,R[8],E,E,48,[[[U]],[R[3]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[9],E,E,48,[[],[R[3]]]],[11,R[28],E,E,48,[[["self"]],[T]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[29]]]],[11,R[8],E,E,49,[[[U]],[R[3]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[9],E,E,49,[[],[R[3]]]],[11,R[28],E,E,49,[[["self"]],[T]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[29]]]],[11,R[8],E,E,50,[[[U]],[R[3]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[9],E,E,50,[[],[R[3]]]],[11,R[28],E,E,50,[[["self"]],[T]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[29]]]],[11,R[8],E,E,51,[[[U]],[R[3]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[9],E,E,51,[[],[R[3]]]],[11,R[28],E,E,51,[[["self"]],[T]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[29]]]],[11,R[8],E,E,52,[[[U]],[R[3]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[9],E,E,52,[[],[R[3]]]],[11,R[28],E,E,52,[[["self"]],[T]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[29]]]],[11,R[8],E,E,53,[[[U]],[R[3]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[9],E,E,53,[[],[R[3]]]],[11,R[28],E,E,53,[[["self"]],[T]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[29]]]],[11,R[8],E,E,54,[[[U]],[R[3]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[9],E,E,54,[[],[R[3]]]],[11,R[28],E,E,54,[[["self"]],[T]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[29]]]],[11,R[8],E,E,55,[[[U]],[R[3]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[9],E,E,55,[[],[R[3]]]],[11,R[28],E,E,55,[[["self"]],[T]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[29]]]],[11,R[8],E,E,56,[[[U]],[R[3]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[9],E,E,56,[[],[R[3]]]],[11,R[28],E,E,56,[[["self"]],[T]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[29]]]],[11,R[8],E,E,57,[[[U]],[R[3]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[9],E,E,57,[[],[R[3]]]],[11,R[28],E,E,57,[[["self"]],[T]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[29]]]],[11,R[8],E,E,58,[[[U]],[R[3]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[9],E,E,58,[[],[R[3]]]],[11,R[28],E,E,58,[[["self"]],[T]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[29]]]],[11,R[8],E,E,59,[[[U]],[R[3]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[9],E,E,59,[[],[R[3]]]],[11,R[28],E,E,59,[[["self"]],[T]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[29]]]],[11,R[8],E,E,60,[[[U]],[R[3]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[9],E,E,60,[[],[R[3]]]],[11,R[28],E,E,60,[[["self"]],[T]]],[11,R[10],E,E,60,[[["self"]],[T]]],[11,R[11],E,E,60,[[["self"]],[R[29]]]],[11,R[8],E,E,61,[[[U]],[R[3]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[9],E,E,61,[[],[R[3]]]],[11,R[28],E,E,61,[[["self"]],[T]]],[11,R[10],E,E,61,[[["self"]],[T]]],[11,R[11],E,E,61,[[["self"]],[R[29]]]],[11,R[8],E,E,62,[[[U]],[R[3]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[9],E,E,62,[[],[R[3]]]],[11,R[28],E,E,62,[[["self"]],[T]]],[11,R[10],E,E,62,[[["self"]],[T]]],[11,R[11],E,E,62,[[["self"]],[R[29]]]],[11,R[8],E,E,63,[[[U]],[R[3]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[9],E,E,63,[[],[R[3]]]],[11,R[28],E,E,63,[[["self"]],[T]]],[11,R[10],E,E,63,[[["self"]],[T]]],[11,R[11],E,E,63,[[["self"]],[R[29]]]],[11,R[8],E,E,64,[[[U]],[R[3]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[9],E,E,64,[[],[R[3]]]],[11,R[28],E,E,64,[[["self"]],[T]]],[11,R[10],E,E,64,[[["self"]],[T]]],[11,R[11],E,E,64,[[["self"]],[R[29]]]],[11,R[8],E,E,65,[[[U]],[R[3]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[9],E,E,65,[[],[R[3]]]],[11,R[28],E,E,65,[[["self"]],[T]]],[11,R[10],E,E,65,[[["self"]],[T]]],[11,R[11],E,E,65,[[["self"]],[R[29]]]],[11,R[8],E,E,66,[[[U]],[R[3]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[9],E,E,66,[[],[R[3]]]],[11,R[28],E,E,66,[[["self"]],[T]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[11],E,E,66,[[["self"]],[R[29]]]],[11,R[8],E,E,67,[[[U]],[R[3]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[9],E,E,67,[[],[R[3]]]],[11,R[28],E,E,67,[[["self"]],[T]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[11],E,E,67,[[["self"]],[R[29]]]],[11,R[8],E,E,68,[[[U]],[R[3]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[9],E,E,68,[[],[R[3]]]],[11,R[28],E,E,68,[[["self"]],[T]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[11],E,E,68,[[["self"]],[R[29]]]],[11,R[8],E,E,69,[[[U]],[R[3]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[9],E,E,69,[[],[R[3]]]],[11,R[28],E,E,69,[[["self"]],[T]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[11],E,E,69,[[["self"]],[R[29]]]],[11,R[8],E,E,70,[[[U]],[R[3]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[9],E,E,70,[[],[R[3]]]],[11,R[28],E,E,70,[[["self"]],[T]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[11],E,E,70,[[["self"]],[R[29]]]],[11,R[8],E,E,71,[[[U]],[R[3]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[9],E,E,71,[[],[R[3]]]],[11,R[28],E,E,71,[[["self"]],[T]]],[11,R[10],E,E,71,[[["self"]],[T]]],[11,R[11],E,E,71,[[["self"]],[R[29]]]],[11,R[8],E,E,72,[[[U]],[R[3]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[9],E,E,72,[[],[R[3]]]],[11,R[28],E,E,72,[[["self"]],[T]]],[11,R[10],E,E,72,[[["self"]],[T]]],[11,R[11],E,E,72,[[["self"]],[R[29]]]],[11,R[8],E,E,73,[[[U]],[R[3]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[9],E,E,73,[[],[R[3]]]],[11,R[28],E,E,73,[[["self"]],[T]]],[11,R[10],E,E,73,[[["self"]],[T]]],[11,R[11],E,E,73,[[["self"]],[R[29]]]],[11,R[8],E,E,74,[[[U]],[R[3]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[9],E,E,74,[[],[R[3]]]],[11,R[28],E,E,74,[[["self"]],[T]]],[11,R[10],E,E,74,[[["self"]],[T]]],[11,R[11],E,E,74,[[["self"]],[R[29]]]],[11,R[8],E,E,75,[[[U]],[R[3]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[9],E,E,75,[[],[R[3]]]],[11,R[28],E,E,75,[[["self"]],[T]]],[11,R[10],E,E,75,[[["self"]],[T]]],[11,R[11],E,E,75,[[["self"]],[R[29]]]],[11,R[8],E,E,76,[[[U]],[R[3]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[9],E,E,76,[[],[R[3]]]],[11,R[28],E,E,76,[[["self"]],[T]]],[11,R[10],E,E,76,[[["self"]],[T]]],[11,R[11],E,E,76,[[["self"]],[R[29]]]],[11,R[8],E,E,135,[[[U]],[R[3]]]],[11,"into",E,E,135,[[],[U]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[9],E,E,135,[[],[R[3]]]],[11,R[28],E,E,135,[[["self"]],[T]]],[11,R[10],E,E,135,[[["self"]],[T]]],[11,R[11],E,E,135,[[["self"]],[R[29]]]],[11,R[8],E,E,136,[[[U]],[R[3]]]],[11,"into",E,E,136,[[],[U]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[9],E,E,136,[[],[R[3]]]],[11,R[28],E,E,136,[[["self"]],[T]]],[11,R[10],E,E,136,[[["self"]],[T]]],[11,R[11],E,E,136,[[["self"]],[R[29]]]],[11,R[8],E,E,77,[[[U]],[R[3]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[9],E,E,77,[[],[R[3]]]],[11,R[28],E,E,77,[[["self"]],[T]]],[11,R[10],E,E,77,[[["self"]],[T]]],[11,R[11],E,E,77,[[["self"]],[R[29]]]],[11,R[8],E,E,78,[[[U]],[R[3]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[9],E,E,78,[[],[R[3]]]],[11,R[28],E,E,78,[[["self"]],[T]]],[11,R[10],E,E,78,[[["self"]],[T]]],[11,R[11],E,E,78,[[["self"]],[R[29]]]],[11,R[8],E,E,79,[[[U]],[R[3]]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[9],E,E,79,[[],[R[3]]]],[11,R[28],E,E,79,[[["self"]],[T]]],[11,R[10],E,E,79,[[["self"]],[T]]],[11,R[11],E,E,79,[[["self"]],[R[29]]]],[11,R[8],E,E,80,[[[U]],[R[3]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[9],E,E,80,[[],[R[3]]]],[11,R[28],E,E,80,[[["self"]],[T]]],[11,R[10],E,E,80,[[["self"]],[T]]],[11,R[11],E,E,80,[[["self"]],[R[29]]]],[11,R[8],E,E,81,[[[U]],[R[3]]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[9],E,E,81,[[],[R[3]]]],[11,R[28],E,E,81,[[["self"]],[T]]],[11,R[10],E,E,81,[[["self"]],[T]]],[11,R[11],E,E,81,[[["self"]],[R[29]]]],[11,R[8],E,E,82,[[[U]],[R[3]]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[9],E,E,82,[[],[R[3]]]],[11,R[28],E,E,82,[[["self"]],[T]]],[11,R[10],E,E,82,[[["self"]],[T]]],[11,R[11],E,E,82,[[["self"]],[R[29]]]],[11,R[8],E,E,83,[[[U]],[R[3]]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[9],E,E,83,[[],[R[3]]]],[11,R[28],E,E,83,[[["self"]],[T]]],[11,R[10],E,E,83,[[["self"]],[T]]],[11,R[11],E,E,83,[[["self"]],[R[29]]]],[11,R[8],E,E,84,[[[U]],[R[3]]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[9],E,E,84,[[],[R[3]]]],[11,R[28],E,E,84,[[["self"]],[T]]],[11,R[10],E,E,84,[[["self"]],[T]]],[11,R[11],E,E,84,[[["self"]],[R[29]]]],[11,R[8],E,E,85,[[[U]],[R[3]]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[9],E,E,85,[[],[R[3]]]],[11,R[28],E,E,85,[[["self"]],[T]]],[11,R[10],E,E,85,[[["self"]],[T]]],[11,R[11],E,E,85,[[["self"]],[R[29]]]],[11,R[8],E,E,86,[[[U]],[R[3]]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[9],E,E,86,[[],[R[3]]]],[11,R[28],E,E,86,[[["self"]],[T]]],[11,R[10],E,E,86,[[["self"]],[T]]],[11,R[11],E,E,86,[[["self"]],[R[29]]]],[11,R[8],E,E,87,[[[U]],[R[3]]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[9],E,E,87,[[],[R[3]]]],[11,R[28],E,E,87,[[["self"]],[T]]],[11,R[10],E,E,87,[[["self"]],[T]]],[11,R[11],E,E,87,[[["self"]],[R[29]]]],[11,R[8],E,E,88,[[[U]],[R[3]]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[9],E,E,88,[[],[R[3]]]],[11,R[28],E,E,88,[[["self"]],[T]]],[11,R[10],E,E,88,[[["self"]],[T]]],[11,R[11],E,E,88,[[["self"]],[R[29]]]],[11,R[8],E,E,89,[[[U]],[R[3]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[9],E,E,89,[[],[R[3]]]],[11,R[28],E,E,89,[[["self"]],[T]]],[11,R[10],E,E,89,[[["self"]],[T]]],[11,R[11],E,E,89,[[["self"]],[R[29]]]],[11,R[8],E,E,90,[[[U]],[R[3]]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[9],E,E,90,[[],[R[3]]]],[11,R[28],E,E,90,[[["self"]],[T]]],[11,R[10],E,E,90,[[["self"]],[T]]],[11,R[11],E,E,90,[[["self"]],[R[29]]]],[11,R[8],E,E,91,[[[U]],[R[3]]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[9],E,E,91,[[],[R[3]]]],[11,R[28],E,E,91,[[["self"]],[T]]],[11,R[10],E,E,91,[[["self"]],[T]]],[11,R[11],E,E,91,[[["self"]],[R[29]]]],[11,R[8],E,E,92,[[[U]],[R[3]]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[9],E,E,92,[[],[R[3]]]],[11,R[28],E,E,92,[[["self"]],[T]]],[11,R[10],E,E,92,[[["self"]],[T]]],[11,R[11],E,E,92,[[["self"]],[R[29]]]],[11,R[8],E,E,93,[[[U]],[R[3]]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[9],E,E,93,[[],[R[3]]]],[11,R[28],E,E,93,[[["self"]],[T]]],[11,R[10],E,E,93,[[["self"]],[T]]],[11,R[11],E,E,93,[[["self"]],[R[29]]]],[11,R[8],E,E,94,[[[U]],[R[3]]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[9],E,E,94,[[],[R[3]]]],[11,R[28],E,E,94,[[["self"]],[T]]],[11,R[10],E,E,94,[[["self"]],[T]]],[11,R[11],E,E,94,[[["self"]],[R[29]]]],[11,R[8],E,E,95,[[[U]],[R[3]]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[9],E,E,95,[[],[R[3]]]],[11,R[28],E,E,95,[[["self"]],[T]]],[11,R[10],E,E,95,[[["self"]],[T]]],[11,R[11],E,E,95,[[["self"]],[R[29]]]],[11,R[8],E,E,96,[[[U]],[R[3]]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[9],E,E,96,[[],[R[3]]]],[11,R[28],E,E,96,[[["self"]],[T]]],[11,R[10],E,E,96,[[["self"]],[T]]],[11,R[11],E,E,96,[[["self"]],[R[29]]]],[11,R[8],E,E,97,[[[U]],[R[3]]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[9],E,E,97,[[],[R[3]]]],[11,R[28],E,E,97,[[["self"]],[T]]],[11,R[10],E,E,97,[[["self"]],[T]]],[11,R[11],E,E,97,[[["self"]],[R[29]]]],[11,R[8],E,E,98,[[[U]],[R[3]]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[9],E,E,98,[[],[R[3]]]],[11,R[28],E,E,98,[[["self"]],[T]]],[11,R[10],E,E,98,[[["self"]],[T]]],[11,R[11],E,E,98,[[["self"]],[R[29]]]],[11,R[8],E,E,99,[[[U]],[R[3]]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[9],E,E,99,[[],[R[3]]]],[11,R[28],E,E,99,[[["self"]],[T]]],[11,R[10],E,E,99,[[["self"]],[T]]],[11,R[11],E,E,99,[[["self"]],[R[29]]]],[11,R[8],E,E,100,[[[U]],[R[3]]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[9],E,E,100,[[],[R[3]]]],[11,R[28],E,E,100,[[["self"]],[T]]],[11,R[10],E,E,100,[[["self"]],[T]]],[11,R[11],E,E,100,[[["self"]],[R[29]]]],[11,R[8],E,E,101,[[[U]],[R[3]]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[9],E,E,101,[[],[R[3]]]],[11,R[28],E,E,101,[[["self"]],[T]]],[11,R[10],E,E,101,[[["self"]],[T]]],[11,R[11],E,E,101,[[["self"]],[R[29]]]],[11,R[8],E,E,102,[[[U]],[R[3]]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[9],E,E,102,[[],[R[3]]]],[11,R[28],E,E,102,[[["self"]],[T]]],[11,R[10],E,E,102,[[["self"]],[T]]],[11,R[11],E,E,102,[[["self"]],[R[29]]]],[11,R[8],E,E,103,[[[U]],[R[3]]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[9],E,E,103,[[],[R[3]]]],[11,R[28],E,E,103,[[["self"]],[T]]],[11,R[10],E,E,103,[[["self"]],[T]]],[11,R[11],E,E,103,[[["self"]],[R[29]]]],[11,R[8],E,E,104,[[[U]],[R[3]]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[9],E,E,104,[[],[R[3]]]],[11,R[28],E,E,104,[[["self"]],[T]]],[11,R[10],E,E,104,[[["self"]],[T]]],[11,R[11],E,E,104,[[["self"]],[R[29]]]],[11,R[8],E,E,105,[[[U]],[R[3]]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[9],E,E,105,[[],[R[3]]]],[11,R[28],E,E,105,[[["self"]],[T]]],[11,R[10],E,E,105,[[["self"]],[T]]],[11,R[11],E,E,105,[[["self"]],[R[29]]]],[11,R[8],E,E,137,[[[U]],[R[3]]]],[11,"into",E,E,137,[[],[U]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[9],E,E,137,[[],[R[3]]]],[11,R[28],E,E,137,[[["self"]],[T]]],[11,R[10],E,E,137,[[["self"]],[T]]],[11,R[11],E,E,137,[[["self"]],[R[29]]]],[11,R[8],E,E,106,[[[U]],[R[3]]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[9],E,E,106,[[],[R[3]]]],[11,R[28],E,E,106,[[["self"]],[T]]],[11,R[10],E,E,106,[[["self"]],[T]]],[11,R[11],E,E,106,[[["self"]],[R[29]]]],[11,R[8],E,E,107,[[[U]],[R[3]]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[9],E,E,107,[[],[R[3]]]],[11,R[28],E,E,107,[[["self"]],[T]]],[11,R[10],E,E,107,[[["self"]],[T]]],[11,R[11],E,E,107,[[["self"]],[R[29]]]],[11,R[8],E,E,108,[[[U]],[R[3]]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[9],E,E,108,[[],[R[3]]]],[11,R[28],E,E,108,[[["self"]],[T]]],[11,R[10],E,E,108,[[["self"]],[T]]],[11,R[11],E,E,108,[[["self"]],[R[29]]]],[11,R[8],E,E,109,[[[U]],[R[3]]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[9],E,E,109,[[],[R[3]]]],[11,R[28],E,E,109,[[["self"]],[T]]],[11,R[10],E,E,109,[[["self"]],[T]]],[11,R[11],E,E,109,[[["self"]],[R[29]]]],[11,R[8],E,E,110,[[[U]],[R[3]]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[9],E,E,110,[[],[R[3]]]],[11,R[28],E,E,110,[[["self"]],[T]]],[11,R[10],E,E,110,[[["self"]],[T]]],[11,R[11],E,E,110,[[["self"]],[R[29]]]],[11,R[8],E,E,111,[[[U]],[R[3]]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[9],E,E,111,[[],[R[3]]]],[11,R[28],E,E,111,[[["self"]],[T]]],[11,R[10],E,E,111,[[["self"]],[T]]],[11,R[11],E,E,111,[[["self"]],[R[29]]]],[11,R[8],E,E,112,[[[U]],[R[3]]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[9],E,E,112,[[],[R[3]]]],[11,R[28],E,E,112,[[["self"]],[T]]],[11,R[10],E,E,112,[[["self"]],[T]]],[11,R[11],E,E,112,[[["self"]],[R[29]]]],[11,R[8],E,E,113,[[[U]],[R[3]]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[9],E,E,113,[[],[R[3]]]],[11,R[28],E,E,113,[[["self"]],[T]]],[11,R[10],E,E,113,[[["self"]],[T]]],[11,R[11],E,E,113,[[["self"]],[R[29]]]],[11,R[8],E,E,114,[[[U]],[R[3]]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[9],E,E,114,[[],[R[3]]]],[11,R[28],E,E,114,[[["self"]],[T]]],[11,R[10],E,E,114,[[["self"]],[T]]],[11,R[11],E,E,114,[[["self"]],[R[29]]]],[11,R[8],E,E,115,[[[U]],[R[3]]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[9],E,E,115,[[],[R[3]]]],[11,R[28],E,E,115,[[["self"]],[T]]],[11,R[10],E,E,115,[[["self"]],[T]]],[11,R[11],E,E,115,[[["self"]],[R[29]]]],[11,R[8],E,E,116,[[[U]],[R[3]]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[9],E,E,116,[[],[R[3]]]],[11,R[28],E,E,116,[[["self"]],[T]]],[11,R[10],E,E,116,[[["self"]],[T]]],[11,R[11],E,E,116,[[["self"]],[R[29]]]],[11,R[8],E,E,138,[[[U]],[R[3]]]],[11,"into",E,E,138,[[],[U]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[9],E,E,138,[[],[R[3]]]],[11,R[28],E,E,138,[[["self"]],[T]]],[11,R[10],E,E,138,[[["self"]],[T]]],[11,R[11],E,E,138,[[["self"]],[R[29]]]],[11,R[8],E,E,117,[[[U]],[R[3]]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[9],E,E,117,[[],[R[3]]]],[11,R[28],E,E,117,[[["self"]],[T]]],[11,R[10],E,E,117,[[["self"]],[T]]],[11,R[11],E,E,117,[[["self"]],[R[29]]]],[11,R[8],E,E,118,[[[U]],[R[3]]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[9],E,E,118,[[],[R[3]]]],[11,R[28],E,E,118,[[["self"]],[T]]],[11,R[10],E,E,118,[[["self"]],[T]]],[11,R[11],E,E,118,[[["self"]],[R[29]]]],[11,R[8],E,E,119,[[[U]],[R[3]]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[9],E,E,119,[[],[R[3]]]],[11,R[28],E,E,119,[[["self"]],[T]]],[11,R[10],E,E,119,[[["self"]],[T]]],[11,R[11],E,E,119,[[["self"]],[R[29]]]],[11,R[8],E,E,120,[[[U]],[R[3]]]],[11,"into",E,E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[9],E,E,120,[[],[R[3]]]],[11,R[28],E,E,120,[[["self"]],[T]]],[11,R[10],E,E,120,[[["self"]],[T]]],[11,R[11],E,E,120,[[["self"]],[R[29]]]],[11,R[8],E,E,121,[[[U]],[R[3]]]],[11,"into",E,E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[9],E,E,121,[[],[R[3]]]],[11,R[28],E,E,121,[[["self"]],[T]]],[11,R[10],E,E,121,[[["self"]],[T]]],[11,R[11],E,E,121,[[["self"]],[R[29]]]],[11,R[8],E,E,122,[[[U]],[R[3]]]],[11,"into",E,E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[9],E,E,122,[[],[R[3]]]],[11,R[28],E,E,122,[[["self"]],[T]]],[11,R[10],E,E,122,[[["self"]],[T]]],[11,R[11],E,E,122,[[["self"]],[R[29]]]],[11,R[8],E,E,123,[[[U]],[R[3]]]],[11,"into",E,E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[9],E,E,123,[[],[R[3]]]],[11,R[28],E,E,123,[[["self"]],[T]]],[11,R[10],E,E,123,[[["self"]],[T]]],[11,R[11],E,E,123,[[["self"]],[R[29]]]],[11,R[8],E,E,124,[[[U]],[R[3]]]],[11,"into",E,E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[9],E,E,124,[[],[R[3]]]],[11,R[28],E,E,124,[[["self"]],[T]]],[11,R[10],E,E,124,[[["self"]],[T]]],[11,R[11],E,E,124,[[["self"]],[R[29]]]],[11,R[8],E,E,125,[[[U]],[R[3]]]],[11,"into",E,E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[9],E,E,125,[[],[R[3]]]],[11,R[28],E,E,125,[[["self"]],[T]]],[11,R[10],E,E,125,[[["self"]],[T]]],[11,R[11],E,E,125,[[["self"]],[R[29]]]],[11,R[8],E,E,126,[[[U]],[R[3]]]],[11,"into",E,E,126,[[],[U]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[9],E,E,126,[[],[R[3]]]],[11,R[28],E,E,126,[[["self"]],[T]]],[11,R[10],E,E,126,[[["self"]],[T]]],[11,R[11],E,E,126,[[["self"]],[R[29]]]],[11,R[8],E,E,127,[[[U]],[R[3]]]],[11,"into",E,E,127,[[],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[9],E,E,127,[[],[R[3]]]],[11,R[28],E,E,127,[[["self"]],[T]]],[11,R[10],E,E,127,[[["self"]],[T]]],[11,R[11],E,E,127,[[["self"]],[R[29]]]],[11,R[8],E,E,128,[[[U]],[R[3]]]],[11,"into",E,E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[9],E,E,128,[[],[R[3]]]],[11,R[28],E,E,128,[[["self"]],[T]]],[11,R[10],E,E,128,[[["self"]],[T]]],[11,R[11],E,E,128,[[["self"]],[R[29]]]],[11,R[8],E,E,139,[[[U]],[R[3]]]],[11,"into",E,E,139,[[],[U]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[9],E,E,139,[[],[R[3]]]],[11,R[28],E,E,139,[[["self"]],[T]]],[11,R[10],E,E,139,[[["self"]],[T]]],[11,R[11],E,E,139,[[["self"]],[R[29]]]],[11,R[8],E,E,140,[[[U]],[R[3]]]],[11,"into",E,E,140,[[],[U]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[9],E,E,140,[[],[R[3]]]],[11,R[28],E,E,140,[[["self"]],[T]]],[11,R[10],E,E,140,[[["self"]],[T]]],[11,R[11],E,E,140,[[["self"]],[R[29]]]],[11,R[8],E,E,141,[[[U]],[R[3]]]],[11,"into",E,E,141,[[],[U]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[9],E,E,141,[[],[R[3]]]],[11,R[28],E,E,141,[[["self"]],[T]]],[11,R[10],E,E,141,[[["self"]],[T]]],[11,R[11],E,E,141,[[["self"]],[R[29]]]],[11,R[8],E,E,142,[[[U]],[R[3]]]],[11,"into",E,E,142,[[],[U]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[9],E,E,142,[[],[R[3]]]],[11,R[28],E,E,142,[[["self"]],[T]]],[11,R[10],E,E,142,[[["self"]],[T]]],[11,R[11],E,E,142,[[["self"]],[R[29]]]],[11,R[8],E,E,143,[[[U]],[R[3]]]],[11,"into",E,E,143,[[],[U]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[9],E,E,143,[[],[R[3]]]],[11,R[28],E,E,143,[[["self"]],[T]]],[11,R[10],E,E,143,[[["self"]],[T]]],[11,R[11],E,E,143,[[["self"]],[R[29]]]],[11,R[8],E,E,144,[[[U]],[R[3]]]],[11,"into",E,E,144,[[],[U]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[9],E,E,144,[[],[R[3]]]],[11,R[28],E,E,144,[[["self"]],[T]]],[11,R[10],E,E,144,[[["self"]],[T]]],[11,R[11],E,E,144,[[["self"]],[R[29]]]],[11,R[8],E,E,145,[[[U]],[R[3]]]],[11,"into",E,E,145,[[],[U]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[9],E,E,145,[[],[R[3]]]],[11,R[28],E,E,145,[[["self"]],[T]]],[11,R[10],E,E,145,[[["self"]],[T]]],[11,R[11],E,E,145,[[["self"]],[R[29]]]],[11,R[8],E,E,129,[[[U]],[R[3]]]],[11,"into",E,E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[9],E,E,129,[[],[R[3]]]],[11,R[28],E,E,129,[[["self"]],[T]]],[11,R[10],E,E,129,[[["self"]],[T]]],[11,R[11],E,E,129,[[["self"]],[R[29]]]],[11,R[8],E,E,146,[[[U]],[R[3]]]],[11,"into",E,E,146,[[],[U]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[9],E,E,146,[[],[R[3]]]],[11,R[28],E,E,146,[[["self"]],[T]]],[11,R[10],E,E,146,[[["self"]],[T]]],[11,R[11],E,E,146,[[["self"]],[R[29]]]],[11,R[8],E,E,147,[[[U]],[R[3]]]],[11,"into",E,E,147,[[],[U]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[9],E,E,147,[[],[R[3]]]],[11,R[28],E,E,147,[[["self"]],[T]]],[11,R[10],E,E,147,[[["self"]],[T]]],[11,R[11],E,E,147,[[["self"]],[R[29]]]],[11,R[8],E,E,148,[[[U]],[R[3]]]],[11,"into",E,E,148,[[],[U]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[9],E,E,148,[[],[R[3]]]],[11,R[28],E,E,148,[[["self"]],[T]]],[11,R[10],E,E,148,[[["self"]],[T]]],[11,R[11],E,E,148,[[["self"]],[R[29]]]],[11,R[8],E,E,149,[[[U]],[R[3]]]],[11,"into",E,E,149,[[],[U]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[9],E,E,149,[[],[R[3]]]],[11,R[28],E,E,149,[[["self"]],[T]]],[11,R[10],E,E,149,[[["self"]],[T]]],[11,R[11],E,E,149,[[["self"]],[R[29]]]],[11,R[8],E,E,150,[[[U]],[R[3]]]],[11,"into",E,E,150,[[],[U]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[9],E,E,150,[[],[R[3]]]],[11,R[28],E,E,150,[[["self"]],[T]]],[11,R[10],E,E,150,[[["self"]],[T]]],[11,R[11],E,E,150,[[["self"]],[R[29]]]],[11,"fmt",E,E,130,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"clone",E,E,146,[[["self"]],["dir"]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],["timeval"]]],[11,"clone",E,E,3,[[["self"]],[R[434]]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],[R[372]]]],[11,"clone",E,E,7,[[["self"]],["hostent"]]],[11,"clone",E,E,8,[[["self"]],["iovec"]]],[11,"clone",E,E,9,[[["self"]],["pollfd"]]],[11,"clone",E,E,10,[[["self"]],["winsize"]]],[11,"clone",E,E,11,[[["self"]],["linger"]]],[11,"clone",E,E,12,[[["self"]],["sigval"]]],[11,"clone",E,E,13,[[["self"]],[R[373]]]],[11,"clone",E,E,14,[[["self"]],["tms"]]],[11,"clone",E,E,15,[[["self"]],["servent"]]],[11,"clone",E,E,16,[[["self"]],[R[435]]]],[11,"clone",E,E,147,[[["self"]],["file"]]],[11,"clone",E,E,148,[[["self"]],["fpos_t"]]],[11,"clone",E,E,149,[[["self"]],[R[461]]]],[11,"clone",E,E,17,[[["self"]],["in_addr"]]],[11,"clone",E,E,18,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,19,[[["self"]],[R[436]]]],[11,"clone",E,E,20,[[["self"]],[R[374]]]],[11,"clone",E,E,21,[[["self"]],[R[375]]]],[11,"clone",E,E,22,[[["self"]],[R[437]]]],[11,"clone",E,E,23,[[["self"]],[R[376]]]],[11,"clone",E,E,131,[[["self"]],["fd_set"]]],[11,"clone",E,E,24,[[["self"]],["tm"]]],[11,"clone",E,E,25,[[["self"]],[R[377]]]],[11,"clone",E,E,26,[[["self"]],["dl_info"]]],[11,"clone",E,E,27,[[["self"]],["lconv"]]],[11,"clone",E,E,28,[[["self"]],[R[378]]]],[11,"clone",E,E,29,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,132,[[["self"]],[R[379]]]],[11,"clone",E,E,30,[[["self"]],["arpreq"]]],[11,"clone",E,E,31,[[["self"]],[R[380]]]],[11,"clone",E,E,32,[[["self"]],["arphdr"]]],[11,"clone",E,E,33,[[["self"]],["mmsghdr"]]],[11,"clone",E,E,34,[[["self"]],[R[381]]]],[11,"clone",E,E,35,[[["self"]],[R[382]]]],[11,"clone",E,E,36,[[["self"]],[R[383]]]],[11,"clone",E,E,37,[[["self"]],["utsname"]]],[11,"clone",E,E,38,[[["self"]],[R[438]]]],[11,"clone",E,E,150,[[["self"]],[R[462]]]],[11,"clone",E,E,39,[[["self"]],[R[439]]]],[11,"clone",E,E,40,[[["self"]],["glob_t"]]],[11,"clone",E,E,41,[[["self"]],["passwd"]]],[11,"clone",E,E,42,[[["self"]],["spwd"]]],[11,"clone",E,E,43,[[["self"]],["dqblk"]]],[11,"clone",E,E,44,[[["self"]],[R[384]]]],[11,"clone",E,E,45,[[["self"]],[R[385]]]],[11,"clone",E,E,133,[[["self"]],["fsid_t"]]],[11,"clone",E,E,46,[[["self"]],[R[386]]]],[11,"clone",E,E,134,[[["self"]],[R[367]]]],[11,"clone",E,E,47,[[["self"]],[R[371]]]],[11,"clone",E,E,48,[[["self"]],["msginfo"]]],[11,"clone",E,E,49,[[["self"]],["sembuf"]]],[11,"clone",E,E,50,[[["self"]],[R[387]]]],[11,"clone",E,E,51,[[["self"]],[R[440]]]],[11,"clone",E,E,52,[[["self"]],[R[388]]]],[11,"clone",E,E,53,[[["self"]],[R[389]]]],[11,"clone",E,E,54,[[["self"]],[R[390]]]],[11,"clone",E,E,55,[[["self"]],[R[391]]]],[11,"clone",E,E,56,[[["self"]],[R[392]]]],[11,"clone",E,E,57,[[["self"]],[R[393]]]],[11,"clone",E,E,58,[[["self"]],[R[394]]]],[11,"clone",E,E,59,[[["self"]],[R[395]]]],[11,"clone",E,E,60,[[["self"]],[R[396]]]],[11,"clone",E,E,61,[[["self"]],[R[397]]]],[11,"clone",E,E,62,[[["self"]],[R[398]]]],[11,"clone",E,E,63,[[["self"]],[R[399]]]],[11,"clone",E,E,64,[[["self"]],[R[400]]]],[11,"clone",E,E,65,[[["self"]],["elf32_ehdr"]]],[11,"clone",E,E,66,[[["self"]],["elf64_ehdr"]]],[11,"clone",E,E,67,[[["self"]],["elf32_sym"]]],[11,"clone",E,E,68,[[["self"]],["elf64_sym"]]],[11,"clone",E,E,69,[[["self"]],["elf32_phdr"]]],[11,"clone",E,E,70,[[["self"]],["elf64_phdr"]]],[11,"clone",E,E,71,[[["self"]],["elf32_shdr"]]],[11,"clone",E,E,72,[[["self"]],["elf64_shdr"]]],[11,"clone",E,E,73,[[["self"]],["elf32_chdr"]]],[11,"clone",E,E,74,[[["self"]],["elf64_chdr"]]],[11,"clone",E,E,75,[[["self"]],["ucred"]]],[11,"clone",E,E,76,[[["self"]],["mntent"]]],[11,"clone",E,E,135,[[["self"]],[R[401]]]],[11,"clone",E,E,136,[[["self"]],[R[402]]]],[11,"clone",E,E,77,[[["self"]],[R[403]]]],[11,"clone",E,E,78,[[["self"]],[R[404]]]],[11,"clone",E,E,79,[[["self"]],[R[405]]]],[11,"clone",E,E,80,[[["self"]],[R[406]]]],[11,"clone",E,E,81,[[["self"]],[R[407]]]],[11,"clone",E,E,82,[[["self"]],[R[408]]]],[11,"clone",E,E,83,[[["self"]],["dirent"]]],[11,"clone",E,E,84,[[["self"]],[R[451]]]],[11,"clone",E,E,85,[[["self"]],[R[409]]]],[11,"clone",E,E,86,[[["self"]],[R[410]]]],[11,"clone",E,E,87,[[["self"]],["mq_attr"]]],[11,"clone",E,E,88,[[["self"]],["statx"]]],[11,"clone",E,E,89,[[["self"]],[R[411]]]],[11,"clone",E,E,90,[[["self"]],["aiocb"]]],[11,"clone",E,E,91,[[["self"]],[R[412]]]],[11,"clone",E,E,92,[[["self"]],[R[413]]]],[11,"clone",E,E,93,[[["self"]],[R[452]]]],[11,"clone",E,E,94,[[["self"]],["msghdr"]]],[11,"clone",E,E,95,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,96,[[["self"]],["termios"]]],[11,"clone",E,E,97,[[["self"]],[R[414]]]],[11,"clone",E,E,98,[[["self"]],[R[453]]]],[11,"clone",E,E,99,[[["self"]],[R[454]]]],[11,"clone",E,E,100,[[["self"]],[R[415]]]],[11,"clone",E,E,101,[[["self"]],[R[416]]]],[11,"clone",E,E,102,[[["self"]],[R[417]]]],[11,"clone",E,E,103,[[["self"]],["nlattr"]]],[11,"clone",E,E,104,[[["self"]],["rtentry"]]],[11,"clone",E,E,105,[[["self"]],["utmpx"]]],[11,"clone",E,E,137,[[["self"]],[R[460]]]],[11,"clone",E,E,106,[[["self"]],["sysinfo"]]],[11,"clone",E,E,107,[[["self"]],[R[455]]]],[11,"clone",E,E,108,[[["self"]],[R[368]]]],[11,"clone",E,E,109,[[["self"]],["statfs"]]],[11,"clone",E,E,110,[[["self"]],["flock"]]],[11,"clone",E,E,111,[[["self"]],[R[418]]]],[11,"clone",E,E,112,[[["self"]],["stack_t"]]],[11,"clone",E,E,113,[[["self"]],["stat"]]],[11,"clone",E,E,114,[[["self"]],["stat64"]]],[11,"clone",E,E,115,[[["self"]],[R[419]]]],[11,"clone",E,E,116,[[["self"]],[R[370]]]],[11,"clone",E,E,138,[[["self"]],[R[420]]]],[11,"clone",E,E,117,[[["self"]],[R[421]]]],[11,"clone",E,E,118,[[["self"]],[R[422]]]],[11,"clone",E,E,119,[[["self"]],[R[423]]]],[11,"clone",E,E,120,[[["self"]],[R[424]]]],[11,"clone",E,E,121,[[["self"]],["user"]]],[11,"clone",E,E,122,[[["self"]],[R[425]]]],[11,"clone",E,E,123,[[["self"]],[R[456]]]],[11,"clone",E,E,124,[[["self"]],[R[457]]]],[11,"clone",E,E,125,[[["self"]],[R[458]]]],[11,"clone",E,E,126,[[["self"]],[R[426]]]],[11,"clone",E,E,127,[[["self"]],[R[427]]]],[11,"clone",E,E,128,[[["self"]],["statvfs"]]],[11,"clone",E,E,139,[[["self"]],["sem_t"]]],[11,"clone",E,E,140,[[["self"]],[R[428]]]],[11,"clone",E,E,141,[[["self"]],[R[429]]]],[11,"clone",E,E,142,[[["self"]],[R[430]]]],[11,"clone",E,E,143,[[["self"]],[R[431]]]],[11,"clone",E,E,144,[[["self"]],[R[432]]]],[11,"clone",E,E,145,[[["self"]],[R[433]]]],[11,"clone",E,E,129,[[["self"]],[R[459]]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,R[434]],[3,"rlimit"],[3,"rusage"],[3,R[372]],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,R[373]],[3,"tms"],[3,"servent"],[3,R[435]],[3,"in_addr"],[3,"ip_mreq"],[3,R[436]],[3,R[374]],[3,R[375]],[3,R[437]],[3,R[376]],[3,"tm"],[3,R[377]],[3,"Dl_info"],[3,"lconv"],[3,R[378]],[3,"ifaddrs"],[3,"arpreq"],[3,R[380]],[3,"arphdr"],[3,"mmsghdr"],[3,R[381]],[3,R[382]],[3,R[383]],[3,"utsname"],[3,R[438]],[3,R[439]],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,R[384]],[3,R[385]],[3,R[386]],[3,R[371]],[3,"msginfo"],[3,"sembuf"],[3,R[387]],[3,R[440]],[3,R[388]],[3,R[389]],[3,R[390]],[3,R[391]],[3,R[392]],[3,R[393]],[3,R[394]],[3,R[395]],[3,R[396]],[3,R[397]],[3,R[398]],[3,R[399]],[3,R[400]],[3,R[441]],[3,R[442]],[3,R[443]],[3,R[444]],[3,R[445]],[3,R[446]],[3,R[447]],[3,R[448]],[3,R[449]],[3,R[450]],[3,"ucred"],[3,"mntent"],[3,R[403]],[3,R[404]],[3,R[405]],[3,R[406]],[3,R[407]],[3,R[408]],[3,"dirent"],[3,R[451]],[3,R[409]],[3,R[410]],[3,"mq_attr"],[3,"statx"],[3,R[411]],[3,"aiocb"],[3,R[412]],[3,R[413]],[3,R[452]],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,R[414]],[3,R[453]],[3,R[454]],[3,R[415]],[3,R[416]],[3,R[417]],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,R[455]],[3,R[368]],[3,"statfs"],[3,"flock"],[3,R[418]],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,R[419]],[3,R[370]],[3,R[421]],[3,R[422]],[3,R[423]],[3,R[424]],[3,"user"],[3,R[425]],[3,R[456]],[3,R[457]],[3,R[458]],[3,R[426]],[3,R[427]],[3,"statvfs"],[3,R[459]],[4,"c_void"],[3,"fd_set"],[3,R[379]],[3,"fsid_t"],[3,R[367]],[3,R[401]],[3,R[402]],[3,R[460]],[3,R[420]],[3,"sem_t"],[3,R[428]],[3,R[429]],[3,R[430]],[3,R[431]],[3,R[432]],[3,R[433]],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,R[461]],[4,R[462]]]};
searchIndex["lzw"]={"doc":"LZW decoder and encoder","i":[[3,"Decoder","lzw","Decoder for a LZW compressed stream (this algorithm is…",N,N],[3,R[66],E,"Decoder for a LZW compressed stream using an “early…",N,N],[3,"Encoder",E,"LZW encoder using the algorithm of GIF files.",N,N],[3,R[67],E,"Reads bits from a byte stream, LSB first.",N,N],[3,R[69],E,"Writes bits to a byte stream, LSB first.",N,N],[3,R[68],E,"Reads bits from a byte stream, MSB first.",N,N],[3,R[70],E,"Writes bits to a byte stream, MSB first.",N,N],[4,"Bits",E,"Containes either the consumed bytes and reconstructed bits…",N,N],[13,"Some",E,"Consumed bytes, reconstructed bits",0,N],[13,"None",E,"Consumed bytes",0,N],[5,"encode",E,"Convenience function that reads and compresses all bytes…",N,[[["w"],["u8"],["r"]],[R[3]]]],[11,"new",E,R[60],1,[[["u8"],["r"]],["decoder"]]],[11,R[61],E,R[62],1,[[["self"]],[R[3]]]],[11,"new",E,R[60],2,[[["u8"],["r"]],["decoderearlychange"]]],[11,R[61],E,R[62],2,[[["self"]],[R[3]]]],[11,"new",E,"Creates a new LZW encoder.",3,[[["w"],["u8"]],[["encoder"],[R[3],["encoder"]]]]],[11,"encode_bytes",E,"Compresses `bytes` and writes the result into the writer.",3,[[["self"]],[R[3]]]],[11,"new",E,R[63],4,[[],["lsbreader"]]],[11,"new",E,R[63],5,[[],["msbreader"]]],[11,"new",E,R[63],6,[[["w"]],["lsbwriter"]]],[11,"new",E,R[63],7,[[["w"]],["msbwriter"]]],[8,R[71],E,"A bit reader.",N,N],[10,R[64],E,"Returns the next `n` bits.",8,[[["self"],["u8"]],["bits"]]],[8,R[72],E,"A bit writer.",N,N],[10,R[65],E,"Writes the next `n` bits.",9,[[["self"],["u16"],["u8"]],[R[3]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[64],E,E,4,[[["self"],["u8"]],["bits"]]],[11,R[64],E,E,5,[[["self"],["u8"]],["bits"]]],[11,R[65],E,E,6,[[["self"],["u16"],["u8"]],[R[3]]]],[11,R[65],E,E,7,[[["self"],["u16"],["u8"]],[R[3]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"write",E,E,6,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,E,6,[[["self"]],[R[3]]]],[11,"write",E,E,7,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,E,7,[[["self"]],[R[3]]]]],"p":[[4,"Bits"],[3,"Decoder"],[3,R[66]],[3,"Encoder"],[3,R[67]],[3,R[68]],[3,R[69]],[3,R[70]],[8,R[71]],[8,R[72]]]};
searchIndex["matrixmultiply"]={"doc":"General matrix multiplication for f32, f64 matrices.","i":[[5,"sgemm","matrixmultiply","General matrix multiplication (f32)",N,[[["f32"],["usize"],["isize"]]]],[5,"dgemm",E,"General matrix multiplication (f64)",N,[[["usize"],["isize"],["f64"]]]]],"p":[]};
searchIndex["memoffset"]={"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the…",N,N],[14,"span_of",E,"Produces a range instance representing the sub-slice…",N,N]],"p":[]};
searchIndex["nodrop"]={"doc":"The nodrop crate has the following cargo feature flags:","i":[[3,R[4],R[2],"A type holding T that will not call its destructor on drop",N,N],[11,"new",E,"Create a new NoDrop.",0,[[[T]],[R[2]]]],[11,R[7],E,"Extract the inner value.",0,[[],[T]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"deref",E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,"drop",E,E,0,[[["self"]]]]],"p":[[3,R[4]]]};
searchIndex["num"]={"doc":"A collection of numeric types and traits for Rust.","i":[[3,"BigInt","num",R[1512],N,N],[3,"BigUint",E,R[1511],N,N],[3,"Complex",E,R[1513],N,N],[12,"re",E,R[1514],0,N],[12,"im",E,R[1515],0,N],[6,"Rational",E,R[1516],N,N],[6,R[1517],E,R[1518],N,N],[8,"Integer",E,E,N,N],[10,R[750],E,R[1288],1,[[["self"]],["self"]]],[10,R[751],E,R[1289],1,[[["self"]],["self"]]],[11,"div_ceil",E,R[1290],1,[[["self"]],["self"]]],[10,"gcd",E,R[1291],1,[[["self"]],["self"]]],[10,"lcm",E,R[1292],1,[[["self"]],["self"]]],[11,"gcd_lcm",E,R[1293],1,[[["self"]]]],[11,R[1294],E,R[1295],1,[[["self"]],[R[753]]]],[11,R[1296],E,R[1297],1,[[["self"]]]],[10,"divides",E,R[1206],1,[[["self"]],["bool"]]],[10,R[1207],E,R[1298],1,[[["self"]],["bool"]]],[10,"is_even",E,R[1299],1,[[["self"]],["bool"]]],[10,"is_odd",E,R[1300],1,[[["self"]],["bool"]]],[10,"div_rem",E,R[1301],1,[[["self"]]]],[11,R[752],E,R[1302],1,[[["self"]]]],[11,R[1303],E,R[1304],1,[[["self"]],["self"]]],[11,R[1305],E,R[1306],1,[[["self"]],["self"]]],[5,"range",E,R[1307],N,[[["a"]],["range"]]],[5,R[1308],E,R[1309],N,[[["a"]],[R[1169]]]],[5,R[1399],E,R[1310],N,[[["a"]],[R[1400]]]],[5,R[1311],E,R[1312],N,[[["a"]],[R[1170]]]],[8,"Num",E,R[1375],N,N],[16,R[1376],E,E,2,N],[10,R[771],E,R[1377],2,[[["u32"],["str"]],[R[3]]]],[8,"Zero",E,R[1327],N,N],[10,"zero",E,R[1328],3,[[],["self"]]],[11,R[1609],E,R[1329],3,[[["self"]]]],[10,"is_zero",E,R[1330],3,[[["self"]],["bool"]]],[8,"One",E,R[1331],N,N],[10,"one",E,R[1332],4,[[],["self"]]],[11,"set_one",E,R[1333],4,[[["self"]]]],[11,"is_one",E,R[1334],4,[[["self"]],["bool"]]],[8,"Signed",E,R[1371],N,N],[10,"abs",E,R[675],5,[[["self"]],["self"]]],[10,"abs_sub",E,R[656],5,[[["self"]],["self"]]],[10,"signum",E,R[676],5,[[["self"]],["self"]]],[10,R[790],E,R[1372],5,[[["self"]],["bool"]]],[10,R[791],E,R[1373],5,[[["self"]],["bool"]]],[8,"Unsigned",E,R[1374],N,N],[8,"Bounded",E,R[1313],N,N],[10,R[607],E,R[1314],6,[[],["self"]]],[10,R[608],E,R[1315],6,[[],["self"]]],[5,"one",E,R[1336],N,[[],[T]]],[5,"zero",E,R[1335],N,[[],[T]]],[5,"abs",E,R[675],N,[[[T]],[T]]],[5,"abs_sub",E,R[656],N,[[[T]],[T]]],[5,"signum",E,R[676],N,[[[T]],[T]]],[8,R[693],E,R[1364],N,N],[10,R[1365],E,R[1366],7,[[],["self"]]],[10,R[1367],E,R[1368],7,[[],["self"]]],[8,R[684],E,R[1355],N,N],[10,R[1214],E,R[1356],8,[[["self"]],[R[25]]]],[8,R[685],E,R[1357],N,N],[10,R[1215],E,R[1358],9,[[["self"]],[R[25]]]],[8,R[686],E,R[1359],N,N],[10,R[1212],E,R[1360],10,[[["self"]],[R[25]]]],[8,R[687],E,R[1361],N,N],[10,R[1213],E,R[1362],11,[[["self"]],[R[25]]]],[8,"PrimInt",E,R[1337],N,N],[10,R[1432],E,R[1338],12,[[],["u32"]]],[10,R[1339],E,R[1340],12,[[],["u32"]]],[10,R[1341],E,R[1342],12,[[],["u32"]]],[10,R[1343],E,R[1344],12,[[],["u32"]]],[10,R[1345],E,R[637],12,[[["u32"]],["self"]]],[10,R[1346],E,R[638],12,[[["u32"]],["self"]]],[10,R[1433],E,R[637],12,[[["u32"]],["self"]]],[10,R[1434],E,R[638],12,[[["u32"]],["self"]]],[10,R[1347],E,R[637],12,[[["u32"]],["self"]]],[10,R[1348],E,R[638],12,[[["u32"]],["self"]]],[10,R[1435],E,R[1349],12,[[],["self"]]],[10,"from_be",E,R[1350],12,[[],["self"]]],[10,"from_le",E,R[1351],12,[[],["self"]]],[10,"to_be",E,R[1352],12,[[],["self"]]],[10,"to_le",E,R[1353],12,[[],["self"]]],[10,"pow",E,R[1354],12,[[["u32"]],["self"]]],[8,R[679],E,R[1252],N,N],[11,R[779],E,R[1253],13,[[["self"]],[["isize"],[R[25],["isize"]]]]],[11,"to_i8",E,R[1254],13,[[["self"]],[[R[25],["i8"]],["i8"]]]],[11,"to_i16",E,R[1255],13,[[["self"]],[[R[25],["i16"]],["i16"]]]],[11,"to_i32",E,R[1256],13,[[["self"]],[[R[25],["i32"]],["i32"]]]],[10,"to_i64",E,R[1257],13,[[["self"]],[[R[25],["i64"]],["i64"]]]],[11,"to_i128",E,R[1258],13,[[["self"]],[[R[25],["i128"]],["i128"]]]],[11,R[780],E,R[1259],13,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,"to_u8",E,R[1260],13,[[["self"]],[[R[25],["u8"]],["u8"]]]],[11,"to_u16",E,R[1261],13,[[["self"]],[["u16"],[R[25],["u16"]]]]],[11,"to_u32",E,R[1262],13,[[["self"]],[[R[25],["u32"]],["u32"]]]],[10,"to_u64",E,R[1263],13,[[["self"]],[["u64"],[R[25],["u64"]]]]],[11,"to_u128",E,R[1264],13,[[["self"]],[[R[25],["u128"]],["u128"]]]],[11,"to_f32",E,R[1265],13,[[["self"]],[["f32"],[R[25],["f32"]]]]],[11,"to_f64",E,R[1266],13,[[["self"]],[["f64"],[R[25],["f64"]]]]],[8,R[680],E,R[1267],N,N],[11,R[766],E,R[1268],14,[[["isize"]],[R[25]]]],[11,"from_i8",E,R[1269],14,[[["i8"]],[R[25]]]],[11,R[783],E,R[1270],14,[[["i16"]],[R[25]]]],[11,R[784],E,R[1271],14,[[["i32"]],[R[25]]]],[10,R[781],E,R[1272],14,[[["i64"]],[R[25]]]],[11,R[767],E,R[1273],14,[[["i128"]],[R[25]]]],[11,R[768],E,R[1274],14,[[["usize"]],[R[25]]]],[11,R[785],E,R[1275],14,[[["u8"]],[R[25]]]],[11,R[786],E,R[1276],14,[[["u16"]],[R[25]]]],[11,R[787],E,R[1277],14,[[["u32"]],[R[25]]]],[10,R[782],E,R[1278],14,[[["u64"]],[R[25]]]],[11,R[769],E,R[1279],14,[[["u128"]],[R[25]]]],[11,R[788],E,R[1280],14,[[["f32"]],[R[25]]]],[11,R[789],E,R[1281],14,[[["f64"]],[R[25]]]],[8,"NumCast",E,R[1282],N,N],[10,"from",E,R[1283],15,[[[T]],[R[25]]]],[0,"cast",E,E,N,N],[8,R[679],"num::cast",R[1252],N,N],[11,R[779],E,R[1253],13,[[["self"]],[["isize"],[R[25],["isize"]]]]],[11,"to_i8",E,R[1254],13,[[["self"]],[[R[25],["i8"]],["i8"]]]],[11,"to_i16",E,R[1255],13,[[["self"]],[[R[25],["i16"]],["i16"]]]],[11,"to_i32",E,R[1256],13,[[["self"]],[[R[25],["i32"]],["i32"]]]],[10,"to_i64",E,R[1257],13,[[["self"]],[[R[25],["i64"]],["i64"]]]],[11,"to_i128",E,R[1258],13,[[["self"]],[[R[25],["i128"]],["i128"]]]],[11,R[780],E,R[1259],13,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,"to_u8",E,R[1260],13,[[["self"]],[[R[25],["u8"]],["u8"]]]],[11,"to_u16",E,R[1261],13,[[["self"]],[["u16"],[R[25],["u16"]]]]],[11,"to_u32",E,R[1262],13,[[["self"]],[[R[25],["u32"]],["u32"]]]],[10,"to_u64",E,R[1263],13,[[["self"]],[["u64"],[R[25],["u64"]]]]],[11,"to_u128",E,R[1264],13,[[["self"]],[[R[25],["u128"]],["u128"]]]],[11,"to_f32",E,R[1265],13,[[["self"]],[["f32"],[R[25],["f32"]]]]],[11,"to_f64",E,R[1266],13,[[["self"]],[["f64"],[R[25],["f64"]]]]],[8,R[680],E,R[1267],N,N],[11,R[766],E,R[1268],14,[[["isize"]],[R[25]]]],[11,"from_i8",E,R[1269],14,[[["i8"]],[R[25]]]],[11,R[783],E,R[1270],14,[[["i16"]],[R[25]]]],[11,R[784],E,R[1271],14,[[["i32"]],[R[25]]]],[10,R[781],E,R[1272],14,[[["i64"]],[R[25]]]],[11,R[767],E,R[1273],14,[[["i128"]],[R[25]]]],[11,R[768],E,R[1274],14,[[["usize"]],[R[25]]]],[11,R[785],E,R[1275],14,[[["u8"]],[R[25]]]],[11,R[786],E,R[1276],14,[[["u16"]],[R[25]]]],[11,R[787],E,R[1277],14,[[["u32"]],[R[25]]]],[10,R[782],E,R[1278],14,[[["u64"]],[R[25]]]],[11,R[769],E,R[1279],14,[[["u128"]],[R[25]]]],[11,R[788],E,R[1280],14,[[["f32"]],[R[25]]]],[11,R[789],E,R[1281],14,[[["f64"]],[R[25]]]],[5,"cast",E,R[1284],N,[[[T]],[R[25]]]],[8,"NumCast",E,R[1282],N,N],[10,"from",E,R[1283],15,[[[T]],[R[25]]]],[8,R[681],E,R[1317],N,N],[10,"as_",E,R[1318],16,[[],[T]]],[5,"cast","num",R[1284],N,[[[T]],[R[25]]]],[0,"pow",E,E,N,N],[8,"Pow","num::pow",R[1369],N,N],[16,"Output",E,R[643],17,N],[10,"pow",E,R[1370],17,[[["rhs"]]]],[5,"pow",E,R[1285],N,[[[T],["usize"]],[T]]],[5,R[1286],E,R[1287],N,[[[T],["usize"]],[R[25]]]],[5,"pow","num",R[1285],N,[[[T],["usize"]],[T]]],[5,R[1286],E,R[1287],N,[[[T],["usize"]],[R[25]]]],[5,"clamp",E,R[1378],N,[[[T]],[T]]],[8,"Float",E,R[1319],N,N],[10,"nan",E,R[1320],18,[[],["self"]]],[10,"infinity",E,R[1321],18,[[],["self"]]],[10,R[606],E,R[1322],18,[[],["self"]]],[10,"neg_zero",E,R[609],18,[[],["self"]]],[10,R[607],E,R[610],18,[[],["self"]]],[10,R[611],E,R[612],18,[[],["self"]]],[11,R[802],E,R[613],18,[[],["self"]]],[10,R[608],E,R[614],18,[[],["self"]]],[10,"is_nan",E,R[1323],18,[[],["bool"]]],[10,R[615],E,R[1324],18,[[],["bool"]]],[10,R[616],E,R[1325],18,[[],["bool"]]],[10,R[617],E,R[618],18,[[],["bool"]]],[10,"classify",E,R[619],18,[[],[R[620]]]],[10,"floor",E,R[621],18,[[],["self"]]],[10,"ceil",E,R[622],18,[[],["self"]]],[10,"round",E,R[623],18,[[],["self"]]],[10,"trunc",E,R[624],18,[[],["self"]]],[10,"fract",E,R[625],18,[[],["self"]]],[10,"abs",E,R[626],18,[[],["self"]]],[10,"signum",E,R[627],18,[[],["self"]]],[10,R[628],E,R[644],18,[[],["bool"]]],[10,R[629],E,R[645],18,[[],["bool"]]],[10,"mul_add",E,R[640],18,[[],["self"]]],[10,"recip",E,R[646],18,[[],["self"]]],[10,"powi",E,R[630],18,[[["i32"]],["self"]]],[10,"powf",E,R[1326],18,[[],["self"]]],[10,"sqrt",E,R[647],18,[[],["self"]]],[10,"exp",E,R[648],18,[[],["self"]]],[10,"exp2",E,R[649],18,[[],["self"]]],[10,"ln",E,R[650],18,[[],["self"]]],[10,"log",E,R[651],18,[[],["self"]]],[10,"log2",E,R[652],18,[[],["self"]]],[10,"log10",E,R[653],18,[[],["self"]]],[11,R[631],E,R[654],18,[[],["self"]]],[11,R[632],E,R[655],18,[[],["self"]]],[10,"max",E,R[633],18,[[],["self"]]],[10,"min",E,R[634],18,[[],["self"]]],[10,"abs_sub",E,R[656],18,[[],["self"]]],[10,"cbrt",E,R[657],18,[[],["self"]]],[10,"hypot",E,R[658],18,[[],["self"]]],[10,"sin",E,R[659],18,[[],["self"]]],[10,"cos",E,R[660],18,[[],["self"]]],[10,"tan",E,R[661],18,[[],["self"]]],[10,"asin",E,R[662],18,[[],["self"]]],[10,"acos",E,R[663],18,[[],["self"]]],[10,"atan",E,R[664],18,[[],["self"]]],[10,"atan2",E,R[665],18,[[],["self"]]],[10,"sin_cos",E,R[666],18,[[]]],[10,"exp_m1",E,R[667],18,[[],["self"]]],[10,"ln_1p",E,R[668],18,[[],["self"]]],[10,"sinh",E,R[669],18,[[],["self"]]],[10,"cosh",E,R[670],18,[[],["self"]]],[10,"tanh",E,R[671],18,[[],["self"]]],[10,"asinh",E,R[672],18,[[],["self"]]],[10,"acosh",E,R[673],18,[[],["self"]]],[10,"atanh",E,R[674],18,[[],["self"]]],[10,R[635],E,R[636],18,[[]]],[0,"bigint",E,E,N,N],[3,R[1216],R[1519],E,N,N],[8,R[1544],E,R[1536],N,N],[10,R[1199],E,R[1537],19,[[["self"]],[[R[25],["biguint"]],["biguint"]]]],[8,"ToBigInt",E,R[1538],N,N],[10,R[1539],E,R[1540],20,[[["self"]],[[R[25],["bigint"]],["bigint"]]]],[4,"Sign",E,R[1522],N,N],[13,"Minus",E,E,21,N],[13,"NoSign",E,E,21,N],[13,"Plus",E,E,21,N],[3,"BigUint",E,R[1511],N,N],[3,"BigInt",E,R[1512],N,N],[0,R[756],"num",E,N,N],[3,"Complex",R[1520],R[1513],N,N],[12,"re",E,R[1514],0,N],[12,"im",E,R[1515],0,N],[6,"Complex32",E,E,N,N],[6,"Complex64",E,E,N,N],[3,R[765],E,E,N,N],[0,R[746],"num",E,N,N],[8,"Integer",R[1379],E,N,N],[10,R[750],E,R[1288],1,[[["self"]],["self"]]],[10,R[751],E,R[1289],1,[[["self"]],["self"]]],[11,"div_ceil",E,R[1290],1,[[["self"]],["self"]]],[10,"gcd",E,R[1291],1,[[["self"]],["self"]]],[10,"lcm",E,R[1292],1,[[["self"]],["self"]]],[11,"gcd_lcm",E,R[1293],1,[[["self"]]]],[11,R[1294],E,R[1295],1,[[["self"]],[R[753]]]],[11,R[1296],E,R[1297],1,[[["self"]]]],[10,"divides",E,R[1206],1,[[["self"]],["bool"]]],[10,R[1207],E,R[1298],1,[[["self"]],["bool"]]],[10,"is_even",E,R[1299],1,[[["self"]],["bool"]]],[10,"is_odd",E,R[1300],1,[[["self"]],["bool"]]],[10,"div_rem",E,R[1301],1,[[["self"]]]],[11,R[752],E,R[1302],1,[[["self"]]]],[11,R[1303],E,R[1304],1,[[["self"]],["self"]]],[11,R[1305],E,R[1306],1,[[["self"]],["self"]]],[3,R[754],E,R[1380],N,N],[12,"gcd",E,E,22,N],[12,"x",E,E,22,N],[12,"y",E,E,22,N],[5,"div_rem",E,R[1383],N,[[[T]]]],[5,R[750],E,R[1384],N,[[[T]],[T]]],[5,R[751],E,R[1385],N,[[[T]],[T]]],[5,R[752],E,R[1386],N,[[[T]]]],[5,"div_ceil",E,R[1387],N,[[[T]],[T]]],[5,"gcd",E,R[1204],N,[[[T]],[T]]],[5,"lcm",E,R[1205],N,[[[T]],[T]]],[5,"gcd_lcm",E,R[1388],N,[[[T]]]],[3,R[755],E,R[1381],N,N],[5,"binomial",E,R[1389],N,[[[T]],[T]]],[5,R[1390],E,R[1391],N,[[],[T]]],[5,R[1382],E,R[747],N,[[["u32"],[T]],[T]]],[8,"Roots",E,R[1392],N,N],[10,R[1382],E,R[747],23,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,R[748],23,[[["self"]],["self"]]],[11,"cbrt",E,R[749],23,[[["self"]],["self"]]],[5,"cbrt",E,R[749],N,[[[T]],[T]]],[5,"sqrt",E,R[748],N,[[[T]],[T]]],[0,"iter","num",E,N,N],[3,"Range","num::iter",R[1395],N,N],[5,"range",E,R[1307],N,[[["a"]],["range"]]],[3,R[1171],E,R[1396],N,N],[5,R[1308],E,R[1309],N,[[["a"]],[R[1169]]]],[3,R[1401],E,R[1397],N,N],[5,R[1399],E,R[1310],N,[[["a"]],[R[1400]]]],[3,R[1172],E,R[1398],N,N],[5,R[1311],E,R[1312],N,[[["a"]],[R[1170]]]],[0,"traits","num",E,N,N],[0,"bounds",R[1316],E,N,N],[8,"Bounded","num::traits::bounds",R[1313],N,N],[10,R[607],E,R[1314],6,[[],["self"]]],[10,R[608],E,R[1315],6,[[],["self"]]],[0,"cast",R[1316],E,N,N],[8,R[679],"num::traits::cast",R[1252],N,N],[11,R[779],E,R[1253],13,[[["self"]],[["isize"],[R[25],["isize"]]]]],[11,"to_i8",E,R[1254],13,[[["self"]],[[R[25],["i8"]],["i8"]]]],[11,"to_i16",E,R[1255],13,[[["self"]],[[R[25],["i16"]],["i16"]]]],[11,"to_i32",E,R[1256],13,[[["self"]],[[R[25],["i32"]],["i32"]]]],[10,"to_i64",E,R[1257],13,[[["self"]],[[R[25],["i64"]],["i64"]]]],[11,"to_i128",E,R[1258],13,[[["self"]],[[R[25],["i128"]],["i128"]]]],[11,R[780],E,R[1259],13,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,"to_u8",E,R[1260],13,[[["self"]],[[R[25],["u8"]],["u8"]]]],[11,"to_u16",E,R[1261],13,[[["self"]],[["u16"],[R[25],["u16"]]]]],[11,"to_u32",E,R[1262],13,[[["self"]],[[R[25],["u32"]],["u32"]]]],[10,"to_u64",E,R[1263],13,[[["self"]],[["u64"],[R[25],["u64"]]]]],[11,"to_u128",E,R[1264],13,[[["self"]],[[R[25],["u128"]],["u128"]]]],[11,"to_f32",E,R[1265],13,[[["self"]],[["f32"],[R[25],["f32"]]]]],[11,"to_f64",E,R[1266],13,[[["self"]],[["f64"],[R[25],["f64"]]]]],[8,R[680],E,R[1267],N,N],[11,R[766],E,R[1268],14,[[["isize"]],[R[25]]]],[11,"from_i8",E,R[1269],14,[[["i8"]],[R[25]]]],[11,R[783],E,R[1270],14,[[["i16"]],[R[25]]]],[11,R[784],E,R[1271],14,[[["i32"]],[R[25]]]],[10,R[781],E,R[1272],14,[[["i64"]],[R[25]]]],[11,R[767],E,R[1273],14,[[["i128"]],[R[25]]]],[11,R[768],E,R[1274],14,[[["usize"]],[R[25]]]],[11,R[785],E,R[1275],14,[[["u8"]],[R[25]]]],[11,R[786],E,R[1276],14,[[["u16"]],[R[25]]]],[11,R[787],E,R[1277],14,[[["u32"]],[R[25]]]],[10,R[782],E,R[1278],14,[[["u64"]],[R[25]]]],[11,R[769],E,R[1279],14,[[["u128"]],[R[25]]]],[11,R[788],E,R[1280],14,[[["f32"]],[R[25]]]],[11,R[789],E,R[1281],14,[[["f64"]],[R[25]]]],[5,"cast",E,R[1284],N,[[[T]],[R[25]]]],[8,"NumCast",E,R[1282],N,N],[10,"from",E,R[1283],15,[[[T]],[R[25]]]],[8,R[681],E,R[1317],N,N],[10,"as_",E,R[1318],16,[[],[T]]],[0,"float",R[1316],E,N,N],[8,R[682],"num::traits::float",R[1402],N,N],[10,"infinity",E,R[1403],24,[[],["self"]]],[10,R[606],E,R[1404],24,[[],["self"]]],[10,"nan",E,R[1405],24,[[],["self"]]],[10,"neg_zero",E,R[609],24,[[],["self"]]],[10,R[607],E,R[610],24,[[],["self"]]],[10,R[611],E,R[612],24,[[],["self"]]],[10,R[802],E,R[613],24,[[],["self"]]],[10,R[608],E,R[614],24,[[],["self"]]],[11,"is_nan",E,R[1406],24,[[],["bool"]]],[11,R[615],E,R[1407],24,[[],["bool"]]],[11,R[616],E,R[1408],24,[[],["bool"]]],[11,R[617],E,R[618],24,[[],["bool"]]],[10,"classify",E,R[619],24,[[],[R[620]]]],[11,"floor",E,R[621],24,[[],["self"]]],[11,"ceil",E,R[622],24,[[],["self"]]],[11,"round",E,R[623],24,[[],["self"]]],[11,"trunc",E,R[624],24,[[],["self"]]],[11,"fract",E,R[625],24,[[],["self"]]],[11,"abs",E,R[626],24,[[],["self"]]],[11,"signum",E,R[627],24,[[],["self"]]],[11,R[628],E,R[1409],24,[[],["bool"]]],[11,R[629],E,R[1410],24,[[],["bool"]]],[11,"min",E,R[634],24,[[],["self"]]],[11,"max",E,R[633],24,[[],["self"]]],[11,"recip",E,R[1411],24,[[],["self"]]],[11,"powi",E,R[630],24,[[["i32"]],["self"]]],[10,R[631],E,R[1412],24,[[],["self"]]],[10,R[632],E,R[1413],24,[[],["self"]]],[10,R[635],E,R[636],24,[[]]],[8,"Float",E,R[1319],N,N],[10,"nan",E,R[1320],18,[[],["self"]]],[10,"infinity",E,R[1321],18,[[],["self"]]],[10,R[606],E,R[1322],18,[[],["self"]]],[10,"neg_zero",E,R[609],18,[[],["self"]]],[10,R[607],E,R[610],18,[[],["self"]]],[10,R[611],E,R[612],18,[[],["self"]]],[11,R[802],E,R[613],18,[[],["self"]]],[10,R[608],E,R[614],18,[[],["self"]]],[10,"is_nan",E,R[1323],18,[[],["bool"]]],[10,R[615],E,R[1324],18,[[],["bool"]]],[10,R[616],E,R[1325],18,[[],["bool"]]],[10,R[617],E,R[618],18,[[],["bool"]]],[10,"classify",E,R[619],18,[[],[R[620]]]],[10,"floor",E,R[621],18,[[],["self"]]],[10,"ceil",E,R[622],18,[[],["self"]]],[10,"round",E,R[623],18,[[],["self"]]],[10,"trunc",E,R[624],18,[[],["self"]]],[10,"fract",E,R[625],18,[[],["self"]]],[10,"abs",E,R[626],18,[[],["self"]]],[10,"signum",E,R[627],18,[[],["self"]]],[10,R[628],E,R[644],18,[[],["bool"]]],[10,R[629],E,R[645],18,[[],["bool"]]],[10,"mul_add",E,R[640],18,[[],["self"]]],[10,"recip",E,R[646],18,[[],["self"]]],[10,"powi",E,R[630],18,[[["i32"]],["self"]]],[10,"powf",E,R[1326],18,[[],["self"]]],[10,"sqrt",E,R[647],18,[[],["self"]]],[10,"exp",E,R[648],18,[[],["self"]]],[10,"exp2",E,R[649],18,[[],["self"]]],[10,"ln",E,R[650],18,[[],["self"]]],[10,"log",E,R[651],18,[[],["self"]]],[10,"log2",E,R[652],18,[[],["self"]]],[10,"log10",E,R[653],18,[[],["self"]]],[11,R[631],E,R[654],18,[[],["self"]]],[11,R[632],E,R[655],18,[[],["self"]]],[10,"max",E,R[633],18,[[],["self"]]],[10,"min",E,R[634],18,[[],["self"]]],[10,"abs_sub",E,R[656],18,[[],["self"]]],[10,"cbrt",E,R[657],18,[[],["self"]]],[10,"hypot",E,R[658],18,[[],["self"]]],[10,"sin",E,R[659],18,[[],["self"]]],[10,"cos",E,R[660],18,[[],["self"]]],[10,"tan",E,R[661],18,[[],["self"]]],[10,"asin",E,R[662],18,[[],["self"]]],[10,"acos",E,R[663],18,[[],["self"]]],[10,"atan",E,R[664],18,[[],["self"]]],[10,"atan2",E,R[665],18,[[],["self"]]],[10,"sin_cos",E,R[666],18,[[]]],[10,"exp_m1",E,R[667],18,[[],["self"]]],[10,"ln_1p",E,R[668],18,[[],["self"]]],[10,"sinh",E,R[669],18,[[],["self"]]],[10,"cosh",E,R[670],18,[[],["self"]]],[10,"tanh",E,R[671],18,[[],["self"]]],[10,"asinh",E,R[672],18,[[],["self"]]],[10,"acosh",E,R[673],18,[[],["self"]]],[10,"atanh",E,R[674],18,[[],["self"]]],[10,R[635],E,R[636],18,[[]]],[8,R[683],E,E,N,N],[10,"E",E,R[1414],25,[[],["self"]]],[10,"FRAC_1_PI",E,R[1415],25,[[],["self"]]],[10,R[1416],E,R[1417],25,[[],["self"]]],[10,"FRAC_2_PI",E,R[1418],25,[[],["self"]]],[10,R[1419],E,R[1420],25,[[],["self"]]],[10,"FRAC_PI_2",E,R[1421],25,[[],["self"]]],[10,"FRAC_PI_3",E,R[1422],25,[[],["self"]]],[10,"FRAC_PI_4",E,R[1423],25,[[],["self"]]],[10,"FRAC_PI_6",E,R[1424],25,[[],["self"]]],[10,"FRAC_PI_8",E,R[1425],25,[[],["self"]]],[10,"LN_10",E,R[1426],25,[[],["self"]]],[10,"LN_2",E,R[1427],25,[[],["self"]]],[10,"LOG10_E",E,R[1428],25,[[],["self"]]],[10,"LOG2_E",E,R[1429],25,[[],["self"]]],[10,"PI",E,R[1430],25,[[],["self"]]],[10,"SQRT_2",E,R[1431],25,[[],["self"]]],[0,"identities",R[1316],E,N,N],[8,"Zero","num::traits::identities",R[1327],N,N],[10,"zero",E,R[1328],3,[[],["self"]]],[11,R[1609],E,R[1329],3,[[["self"]]]],[10,"is_zero",E,R[1330],3,[[["self"]],["bool"]]],[8,"One",E,R[1331],N,N],[10,"one",E,R[1332],4,[[],["self"]]],[11,"set_one",E,R[1333],4,[[["self"]]]],[11,"is_one",E,R[1334],4,[[["self"]],["bool"]]],[5,"zero",E,R[1335],N,[[],[T]]],[5,"one",E,R[1336],N,[[],[T]]],[0,"int",R[1316],E,N,N],[8,"PrimInt","num::traits::int",R[1337],N,N],[10,R[1432],E,R[1338],12,[[],["u32"]]],[10,R[1339],E,R[1340],12,[[],["u32"]]],[10,R[1341],E,R[1342],12,[[],["u32"]]],[10,R[1343],E,R[1344],12,[[],["u32"]]],[10,R[1345],E,R[637],12,[[["u32"]],["self"]]],[10,R[1346],E,R[638],12,[[["u32"]],["self"]]],[10,R[1433],E,R[637],12,[[["u32"]],["self"]]],[10,R[1434],E,R[638],12,[[["u32"]],["self"]]],[10,R[1347],E,R[637],12,[[["u32"]],["self"]]],[10,R[1348],E,R[638],12,[[["u32"]],["self"]]],[10,R[1435],E,R[1349],12,[[],["self"]]],[10,"from_be",E,R[1350],12,[[],["self"]]],[10,"from_le",E,R[1351],12,[[],["self"]]],[10,"to_be",E,R[1352],12,[[],["self"]]],[10,"to_le",E,R[1353],12,[[],["self"]]],[10,"pow",E,R[1354],12,[[["u32"]],["self"]]],[0,"ops",R[1316],E,N,N],[0,"checked",R[1363],E,N,N],[8,R[684],"num::traits::ops::checked",R[1355],N,N],[10,R[1214],E,R[1356],8,[[["self"]],[R[25]]]],[8,R[685],E,R[1357],N,N],[10,R[1215],E,R[1358],9,[[["self"]],[R[25]]]],[8,R[686],E,R[1359],N,N],[10,R[1212],E,R[1360],10,[[["self"]],[R[25]]]],[8,R[687],E,R[1361],N,N],[10,R[1213],E,R[1362],11,[[["self"]],[R[25]]]],[8,R[688],E,R[1436],N,N],[10,R[1437],E,R[1438],26,[[["self"]],[R[25]]]],[8,R[689],E,R[1439],N,N],[10,R[1440],E,R[1441],27,[[["self"]],[R[25]]]],[8,R[690],E,R[1442],N,N],[10,R[1443],E,R[1444],28,[[["self"],["u32"]],[R[25]]]],[8,R[691],E,R[1445],N,N],[10,R[1446],E,R[1447],29,[[["self"],["u32"]],[R[25]]]],[0,"inv",R[1363],E,N,N],[8,"Inv","num::traits::ops::inv",R[1448],N,N],[16,"Output",E,R[643],30,N],[10,"inv",E,R[1449],30,[[]]],[0,"mul_add",R[1363],E,N,N],[8,"MulAdd","num::traits::ops::mul_add",R[640],N,N],[16,"Output",E,R[1450],31,N],[10,"mul_add",E,R[641],31,[[["a"],["b"]]]],[8,R[692],E,R[1451],N,N],[10,R[764],E,R[641],32,[[["self"],["a"],["b"]]]],[0,"saturating",R[1363],E,N,N],[8,R[693],"num::traits::ops::saturating",R[1364],N,N],[10,R[1365],E,R[1366],7,[[],["self"]]],[10,R[1367],E,R[1368],7,[[],["self"]]],[0,"wrapping",R[1363],E,N,N],[8,R[694],"num::traits::ops::wrapping",R[1452],N,N],[10,R[1453],E,R[1454],33,[[["self"]],["self"]]],[8,R[695],E,R[1455],N,N],[10,R[1456],E,R[1457],34,[[["self"]],["self"]]],[8,R[696],E,R[1458],N,N],[10,R[1459],E,R[1460],35,[[["self"]],["self"]]],[8,R[697],E,R[1461],N,N],[10,R[1462],E,R[1463],36,[[["self"],["u32"]],["self"]]],[8,R[698],E,R[1464],N,N],[10,R[1465],E,R[1466],37,[[["self"],["u32"]],["self"]]],[0,"pow",R[1316],E,N,N],[8,"Pow","num::traits::pow",R[1369],N,N],[16,"Output",E,R[643],17,N],[10,"pow",E,R[1370],17,[[["rhs"]]]],[5,"pow",E,R[1285],N,[[[T],["usize"]],[T]]],[5,R[1286],E,R[1287],N,[[[T],["usize"]],[R[25]]]],[0,"real",R[1316],E,N,N],[8,"Real","num::traits::real",R[1467],N,N],[10,R[607],E,R[610],38,[[],["self"]]],[10,R[611],E,R[612],38,[[],["self"]]],[10,R[802],E,R[613],38,[[],["self"]]],[10,R[608],E,R[614],38,[[],["self"]]],[10,"floor",E,R[621],38,[[],["self"]]],[10,"ceil",E,R[622],38,[[],["self"]]],[10,"round",E,R[623],38,[[],["self"]]],[10,"trunc",E,R[624],38,[[],["self"]]],[10,"fract",E,R[625],38,[[],["self"]]],[10,"abs",E,R[626],38,[[],["self"]]],[10,"signum",E,R[627],38,[[],["self"]]],[10,R[628],E,R[644],38,[[],["bool"]]],[10,R[629],E,R[645],38,[[],["bool"]]],[10,"mul_add",E,R[640],38,[[],["self"]]],[10,"recip",E,R[646],38,[[],["self"]]],[10,"powi",E,R[630],38,[[["i32"]],["self"]]],[10,"powf",E,R[1468],38,[[],["self"]]],[10,"sqrt",E,R[647],38,[[],["self"]]],[10,"exp",E,R[648],38,[[],["self"]]],[10,"exp2",E,R[649],38,[[],["self"]]],[10,"ln",E,R[650],38,[[],["self"]]],[10,"log",E,R[651],38,[[],["self"]]],[10,"log2",E,R[652],38,[[],["self"]]],[10,"log10",E,R[653],38,[[],["self"]]],[10,R[631],E,R[654],38,[[],["self"]]],[10,R[632],E,R[655],38,[[],["self"]]],[10,"max",E,R[633],38,[[],["self"]]],[10,"min",E,R[634],38,[[],["self"]]],[10,"abs_sub",E,R[656],38,[[],["self"]]],[10,"cbrt",E,R[657],38,[[],["self"]]],[10,"hypot",E,R[658],38,[[],["self"]]],[10,"sin",E,R[659],38,[[],["self"]]],[10,"cos",E,R[660],38,[[],["self"]]],[10,"tan",E,R[661],38,[[],["self"]]],[10,"asin",E,R[662],38,[[],["self"]]],[10,"acos",E,R[663],38,[[],["self"]]],[10,"atan",E,R[664],38,[[],["self"]]],[10,"atan2",E,R[665],38,[[],["self"]]],[10,"sin_cos",E,R[666],38,[[]]],[10,"exp_m1",E,R[667],38,[[],["self"]]],[10,"ln_1p",E,R[668],38,[[],["self"]]],[10,"sinh",E,R[669],38,[[],["self"]]],[10,"cosh",E,R[670],38,[[],["self"]]],[10,"tanh",E,R[671],38,[[],["self"]]],[10,"asinh",E,R[672],38,[[],["self"]]],[10,"acosh",E,R[673],38,[[],["self"]]],[10,"atanh",E,R[674],38,[[],["self"]]],[0,"sign",R[1316],E,N,N],[8,"Signed","num::traits::sign",R[1371],N,N],[10,"abs",E,R[675],5,[[["self"]],["self"]]],[10,"abs_sub",E,R[656],5,[[["self"]],["self"]]],[10,"signum",E,R[676],5,[[["self"]],["self"]]],[10,R[790],E,R[1372],5,[[["self"]],["bool"]]],[10,R[791],E,R[1373],5,[[["self"]],["bool"]]],[5,"abs",E,R[675],N,[[[T]],[T]]],[5,"abs_sub",E,R[656],N,[[[T]],[T]]],[5,"signum",E,R[676],N,[[[T]],[T]]],[8,"Unsigned",E,R[1374],N,N],[8,"Num",R[1316],R[1375],N,N],[16,R[1376],E,E,2,N],[10,R[771],E,R[1377],2,[[["u32"],["str"]],[R[3]]]],[8,"NumOps",E,R[1469],N,N],[8,"NumRef",E,R[1470],N,N],[8,"RefNum",E,R[1471],N,N],[8,R[1472],E,R[1473],N,N],[8,"NumAssign",E,R[1474],N,N],[8,R[1475],E,R[1476],N,N],[4,R[678],E,E,N,N],[13,"Empty",E,E,39,N],[13,"Invalid",E,E,39,N],[3,R[677],E,E,N,N],[12,"kind",E,E,40,N],[5,"clamp",E,R[1378],N,[[[T]],[T]]],[0,"rational","num",E,N,N],[3,"Ratio",R[1521],R[1585],N,N],[6,"Rational",E,R[1516],N,N],[6,"Rational32",E,R[1586],N,N],[6,"Rational64",E,R[1587],N,N],[6,R[1517],E,R[1518],N,N],[3,R[1479],E,E,N,N],[11,R[8],R[1519],E,41,[[[U]],[R[3]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[9],E,E,41,[[],[R[3]]]],[11,R[28],E,E,41,[[["self"]],[T]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[29]]]],[11,R[98],E,E,41,[[["self"]],["string"]]],[11,R[41],E,E,41,[[["self"]],[T]]],[11,R[42],E,E,41,[[["self"],[T]]]],[11,R[8],E,E,42,[[[U]],[R[3]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[9],E,E,42,[[],[R[3]]]],[11,R[28],E,E,42,[[["self"]],[T]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[29]]]],[11,R[98],E,E,42,[[["self"]],["string"]]],[11,R[41],E,E,42,[[["self"]],[T]]],[11,R[42],E,E,42,[[["self"],[T]]]],[11,R[8],R[1520],E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[98],E,E,0,[[["self"]],["string"]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],R[1519],E,43,[[[U]],[R[3]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[9],E,E,43,[[],[R[3]]]],[11,R[28],E,E,43,[[["self"]],[T]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[29]]]],[11,R[98],E,E,43,[[["self"]],["string"]]],[11,R[41],E,E,43,[[["self"]],[T]]],[11,R[42],E,E,43,[[["self"],[T]]]],[11,R[8],E,E,21,[[[U]],[R[3]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[9],E,E,21,[[],[R[3]]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[42],E,E,21,[[["self"],[T]]]],[11,R[8],R[1520],E,44,[[[U]],[R[3]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[9],E,E,44,[[],[R[3]]]],[11,R[28],E,E,44,[[["self"]],[T]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[29]]]],[11,R[98],E,E,44,[[["self"]],["string"]]],[11,R[8],R[1379],E,22,[[[U]],[R[3]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[9],E,E,22,[[],[R[3]]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[42],E,E,22,[[["self"],[T]]]],[11,R[8],E,E,45,[[[U]],[R[3]]]],[11,R[23],E,E,45,[[],["i"]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[9],E,E,45,[[],[R[3]]]],[11,R[28],E,E,45,[[["self"]],[T]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[29]]]],[11,R[8],"num::iter",E,46,[[[U]],[R[3]]]],[11,R[23],E,E,46,[[],["i"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[9],E,E,46,[[],[R[3]]]],[11,R[28],E,E,46,[[["self"]],[T]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[29]]]],[11,R[41],E,E,46,[[["self"]],[T]]],[11,R[42],E,E,46,[[["self"],[T]]]],[11,R[8],E,E,47,[[[U]],[R[3]]]],[11,R[23],E,E,47,[[],["i"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[9],E,E,47,[[],[R[3]]]],[11,R[28],E,E,47,[[["self"]],[T]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[29]]]],[11,R[41],E,E,47,[[["self"]],[T]]],[11,R[42],E,E,47,[[["self"],[T]]]],[11,R[8],E,E,48,[[[U]],[R[3]]]],[11,R[23],E,E,48,[[],["i"]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[9],E,E,48,[[],[R[3]]]],[11,R[28],E,E,48,[[["self"]],[T]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[29]]]],[11,R[41],E,E,48,[[["self"]],[T]]],[11,R[42],E,E,48,[[["self"],[T]]]],[11,R[8],E,E,49,[[[U]],[R[3]]]],[11,R[23],E,E,49,[[],["i"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[9],E,E,49,[[],[R[3]]]],[11,R[28],E,E,49,[[["self"]],[T]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[29]]]],[11,R[41],E,E,49,[[["self"]],[T]]],[11,R[42],E,E,49,[[["self"],[T]]]],[11,R[8],R[1316],E,39,[[[U]],[R[3]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[9],E,E,39,[[],[R[3]]]],[11,R[28],E,E,39,[[["self"]],[T]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[29]]]],[11,R[8],E,E,40,[[[U]],[R[3]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[9],E,E,40,[[],[R[3]]]],[11,R[28],E,E,40,[[["self"]],[T]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[29]]]],[11,R[98],E,E,40,[[["self"]],["string"]]],[11,R[8],R[1521],E,50,[[[U]],[R[3]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[9],E,E,50,[[],[R[3]]]],[11,R[28],E,E,50,[[["self"]],[T]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[29]]]],[11,R[98],E,E,50,[[["self"]],["string"]]],[11,R[41],E,E,50,[[["self"]],[T]]],[11,R[42],E,E,50,[[["self"],[T]]]],[11,R[8],E,E,51,[[[U]],[R[3]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[9],E,E,51,[[],[R[3]]]],[11,R[28],E,E,51,[[["self"]],[T]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[29]]]],[11,R[98],E,E,51,[[["self"]],["string"]]],[11,R[41],E,E,51,[[["self"]],[T]]],[11,R[42],E,E,51,[[["self"],[T]]]],[11,"product",R[1519],E,41,[[["i"]],["bigint"]]],[11,"product",E,E,42,[[["i"]],["biguint"]]],[11,R[1213],E,E,42,[[["self"],["biguint"]],[[R[25],["biguint"]],["biguint"]]]],[11,R[1213],E,E,41,[[["self"],["bigint"]],[[R[25],["bigint"]],["bigint"]]]],[11,"bitxor",E,E,41,[[["bigint"]],["bigint"]]],[11,"bitxor",E,E,41,[[["bigint"]],["bigint"]]],[11,"bitxor",E,E,42,[[["biguint"]],["biguint"]]],[11,"bitxor",E,E,42,[[["biguint"]],["biguint"]]],[11,"not",E,E,41,[[],["bigint"]]],[11,"shl",E,E,42,[[["usize"]],["biguint"]]],[11,"shl",E,E,41,[[["usize"]],["bigint"]]],[11,R[1201],E,E,41,[[["self"],["bigint"]]]],[11,R[1201],E,E,42,[[["self"],["biguint"]]]],[11,R[1201],E,E,42,[[["self"],["biguint"]]]],[11,R[1201],E,E,41,[[["self"],["bigint"]]]],[11,R[762],E,E,41,[[["self"],["bigint"]]]],[11,R[762],E,E,41,[[["self"],["u8"]]]],[11,R[762],E,E,42,[[["self"],["u128"]]]],[11,R[762],E,E,42,[[["self"],["biguint"]]]],[11,R[762],E,E,41,[[["self"],["i16"]]]],[11,R[762],E,E,41,[[["self"],["i8"]]]],[11,R[762],E,E,41,[[["self"],["u16"]]]],[11,R[762],E,E,42,[[["self"],["biguint"]]]],[11,R[762],E,E,42,[[["self"],["u32"]]]],[11,R[762],E,E,41,[[["self"],["usize"]]]],[11,R[762],E,E,41,[[["self"],["bigint"]]]],[11,R[762],E,E,42,[[["self"],["u64"]]]],[11,R[762],E,E,41,[[["self"],["i64"]]]],[11,R[762],E,E,41,[[["self"],["isize"]]]],[11,R[762],E,E,41,[[["self"],["i128"]]]],[11,R[762],E,E,41,[[["self"],["u32"]]]],[11,R[762],E,E,41,[[["self"],["u64"]]]],[11,R[762],E,E,41,[[["self"],["i32"]]]],[11,R[762],E,E,42,[[["self"],["u8"]]]],[11,R[762],E,E,42,[[["self"],["u16"]]]],[11,R[762],E,E,42,[[["self"],["usize"]]]],[11,R[762],E,E,41,[[["self"],["u128"]]]],[11,R[771],E,R[1211],41,[[["u32"],["str"]],[["bigint"],[R[3],["bigint",R[1200]]],[R[1200]]]]],[11,R[771],E,R[1178],42,[[["u32"],["str"]],[[R[1200]],["biguint"],[R[3],["biguint",R[1200]]]]]],[11,R[1543],E,E,41,[[["self"],["usize"]]]],[11,R[1543],E,E,42,[[["self"],["usize"]]]],[11,"add",E,E,42,[[["biguint"]],["biguint"]]],[11,"add",E,E,41,[[["u64"]],["bigint"]]],[11,"add",E,E,42,[[["usize"]],["biguint"]]],[11,"add",E,E,42,[[["u16"]],["biguint"]]],[11,"add",E,E,41,[[["usize"]],["bigint"]]],[11,"add",E,E,42,[[["u16"]],["biguint"]]],[11,"add",E,E,41,[[["bigint"]],["bigint"]]],[11,"add",E,E,41,[[["i128"]],["bigint"]]],[11,"add",E,E,41,[[["bigint"]],["bigint"]]],[11,"add",E,E,41,[[["i8"]],["bigint"]]],[11,"add",E,E,41,[[["i64"]],["bigint"]]],[11,"add",E,E,42,[[["biguint"]],["biguint"]]],[11,"add",E,E,42,[[["u128"]],["biguint"]]],[11,"add",E,E,41,[[["u64"]],["bigint"]]],[11,"add",E,E,42,[[["u32"]],["biguint"]]],[11,"add",E,E,41,[[["u128"]],["bigint"]]],[11,"add",E,E,41,[[["i32"]],["bigint"]]],[11,"add",E,E,42,[[["u32"]],["biguint"]]],[11,"add",E,E,41,[[["u8"]],["bigint"]]],[11,"add",E,E,41,[[["i32"]],["bigint"]]],[11,"add",E,E,41,[[["i128"]],["bigint"]]],[11,"add",E,E,41,[[["u16"]],["bigint"]]],[11,"add",E,E,42,[[["u64"]],["biguint"]]],[11,"add",E,E,41,[[["usize"]],["bigint"]]],[11,"add",E,E,41,[[["u16"]],["bigint"]]],[11,"add",E,E,42,[[["u64"]],["biguint"]]],[11,"add",E,E,41,[[["i64"]],["bigint"]]],[11,"add",E,E,41,[[["isize"]],["bigint"]]],[11,"add",E,E,42,[[["u128"]],["biguint"]]],[11,"add",E,E,41,[[["i16"]],["bigint"]]],[11,"add",E,E,42,[[["u8"]],["biguint"]]],[11,"add",E,E,41,[[["i8"]],["bigint"]]],[11,"add",E,E,41,[[["u8"]],["bigint"]]],[11,"add",E,E,42,[[["u8"]],["biguint"]]],[11,"add",E,E,41,[[["isize"]],["bigint"]]],[11,"add",E,E,41,[[["u32"]],["bigint"]]],[11,"add",E,E,42,[[["usize"]],["biguint"]]],[11,"add",E,E,41,[[["u128"]],["bigint"]]],[11,"add",E,E,41,[[["i16"]],["bigint"]]],[11,"add",E,E,41,[[["u32"]],["bigint"]]],[11,"zero",E,E,41,[[],["bigint"]]],[11,"is_zero",E,E,41,[[["self"]],["bool"]]],[11,"zero",E,E,42,[[],["biguint"]]],[11,"is_zero",E,E,42,[[["self"]],["bool"]]],[11,R[1199],E,E,41,[[["self"]],[[R[25],["biguint"]],["biguint"]]]],[11,R[1199],E,E,42,[[["self"]],[[R[25],["biguint"]],["biguint"]]]],[11,R[1382],E,E,42,[[["self"],["u32"]],["biguint"]]],[11,"sqrt",E,E,42,[[["self"]],["biguint"]]],[11,"cbrt",E,E,42,[[["self"]],["biguint"]]],[11,R[1382],E,E,41,[[["self"],["u32"]],["bigint"]]],[11,"sqrt",E,E,41,[[["self"]],["bigint"]]],[11,"cbrt",E,E,41,[[["self"]],["bigint"]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,43,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"sub",E,E,41,[[["u128"]],["bigint"]]],[11,"sub",E,E,41,[[["usize"]],["bigint"]]],[11,"sub",E,E,41,[[["isize"]],["bigint"]]],[11,"sub",E,E,41,[[["i64"]],["bigint"]]],[11,"sub",E,E,41,[[["u8"]],["bigint"]]],[11,"sub",E,E,41,[[["i16"]],["bigint"]]],[11,"sub",E,E,42,[[["u8"]],["biguint"]]],[11,"sub",E,E,42,[[["u16"]],["biguint"]]],[11,"sub",E,E,41,[[["u32"]],["bigint"]]],[11,"sub",E,E,42,[[["u16"]],["biguint"]]],[11,"sub",E,E,41,[[["i128"]],["bigint"]]],[11,"sub",E,E,41,[[["i128"]],["bigint"]]],[11,"sub",E,E,42,[[["u128"]],["biguint"]]],[11,"sub",E,E,42,[[["biguint"]],["biguint"]]],[11,"sub",E,E,41,[[["i64"]],["bigint"]]],[11,"sub",E,E,42,[[["u8"]],["biguint"]]],[11,"sub",E,E,42,[[["u32"]],["biguint"]]],[11,"sub",E,E,41,[[["isize"]],["bigint"]]],[11,"sub",E,E,41,[[["i8"]],["bigint"]]],[11,"sub",E,E,42,[[["biguint"]],["biguint"]]],[11,"sub",E,E,42,[[["u64"]],["biguint"]]],[11,"sub",E,E,41,[[["usize"]],["bigint"]]],[11,"sub",E,E,41,[[["u64"]],["bigint"]]],[11,"sub",E,E,42,[[["u64"]],["biguint"]]],[11,"sub",E,E,41,[[["u16"]],["bigint"]]],[11,"sub",E,E,42,[[["u32"]],["biguint"]]],[11,"sub",E,E,41,[[["i32"]],["bigint"]]],[11,"sub",E,E,41,[[["u32"]],["bigint"]]],[11,"sub",E,E,41,[[["u64"]],["bigint"]]],[11,"sub",E,E,41,[[["i8"]],["bigint"]]],[11,"sub",E,E,41,[[["u128"]],["bigint"]]],[11,"sub",E,E,41,[[["bigint"]],["bigint"]]],[11,"sub",E,E,41,[[["bigint"]],["bigint"]]],[11,"sub",E,E,41,[[["u8"]],["bigint"]]],[11,"sub",E,E,41,[[["i16"]],["bigint"]]],[11,"sub",E,E,41,[[["u16"]],["bigint"]]],[11,"sub",E,E,42,[[["usize"]],["biguint"]]],[11,"sub",E,E,42,[[["usize"]],["biguint"]]],[11,"sub",E,E,42,[[["u128"]],["biguint"]]],[11,"sub",E,E,41,[[["i32"]],["bigint"]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"div_rem",E,E,42,[[["self"],["biguint"]]]],[11,R[750],E,E,42,[[["self"],["biguint"]],["biguint"]]],[11,R[751],E,E,42,[[["self"],["biguint"]],["biguint"]]],[11,R[752],E,E,42,[[["self"],["biguint"]]]],[11,"gcd",E,R[1204],42,[[["self"],["biguint"]],["biguint"]]],[11,"lcm",E,R[1205],42,[[["self"],["biguint"]],["biguint"]]],[11,"divides",E,R[1206],42,[[["self"],["biguint"]],["bool"]]],[11,R[1207],E,R[1208],42,[[["self"],["biguint"]],["bool"]]],[11,"is_even",E,R[1209],42,[[["self"]],["bool"]]],[11,"is_odd",E,R[1210],42,[[["self"]],["bool"]]],[11,"div_rem",E,E,41,[[["self"],["bigint"]]]],[11,R[750],E,E,41,[[["self"],["bigint"]],["bigint"]]],[11,R[751],E,E,41,[[["self"],["bigint"]],["bigint"]]],[11,R[752],E,E,41,[[["self"],["bigint"]]]],[11,"gcd",E,R[1204],41,[[["self"],["bigint"]],["bigint"]]],[11,"lcm",E,R[1205],41,[[["self"],["bigint"]],["bigint"]]],[11,"divides",E,R[1206],41,[[["self"],["bigint"]],["bool"]]],[11,R[1207],E,R[1208],41,[[["self"],["bigint"]],["bool"]]],[11,"is_even",E,R[1209],41,[[["self"]],["bool"]]],[11,"is_odd",E,R[1210],41,[[["self"]],["bool"]]],[11,R[758],E,E,42,[[["self"],["u32"]]]],[11,R[758],E,E,41,[[["self"],["usize"]]]],[11,R[758],E,E,41,[[["self"],["i8"]]]],[11,R[758],E,E,42,[[["self"],["usize"]]]],[11,R[758],E,E,42,[[["self"],["biguint"]]]],[11,R[758],E,E,41,[[["self"],["bigint"]]]],[11,R[758],E,E,42,[[["self"],["u8"]]]],[11,R[758],E,E,42,[[["self"],["biguint"]]]],[11,R[758],E,E,42,[[["self"],["u128"]]]],[11,R[758],E,E,41,[[["self"],["u64"]]]],[11,R[758],E,E,42,[[["self"],["u16"]]]],[11,R[758],E,E,41,[[["self"],["i32"]]]],[11,R[758],E,E,41,[[["self"],["i64"]]]],[11,R[758],E,E,41,[[["self"],["u128"]]]],[11,R[758],E,E,41,[[["self"],["i128"]]]],[11,R[758],E,E,41,[[["self"],["u16"]]]],[11,R[758],E,E,41,[[["self"],["u8"]]]],[11,R[758],E,E,41,[[["self"],["u32"]]]],[11,R[758],E,E,41,[[["self"],["i16"]]]],[11,R[758],E,E,41,[[["self"],["isize"]]]],[11,R[758],E,E,42,[[["self"],["u64"]]]],[11,R[758],E,E,41,[[["self"],["bigint"]]]],[11,"cmp",E,E,21,[[["self"],["sign"]],[R[24]]]],[11,"cmp",E,E,42,[[["self"],["biguint"]],[R[24]]]],[11,"cmp",E,E,41,[[["self"],["bigint"]],[R[24]]]],[11,"neg",E,E,41,[[],["bigint"]]],[11,"neg",E,R[1541],21,[[],["sign"]]],[11,"neg",E,E,42,[[],["biguint"]]],[11,R[1212],E,E,41,[[["self"],["bigint"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[1212],E,E,42,[[["self"],["biguint"]],[[R[25],["biguint"]],["biguint"]]]],[11,R[1215],E,E,42,[[["self"],["biguint"]],[[R[25],["biguint"]],["biguint"]]]],[11,R[1215],E,E,41,[[["self"],["bigint"]],[[R[25],["bigint"]],["bigint"]]]],[11,"clone",E,E,41,[[["self"]],["bigint"]]],[11,"clone",E,E,43,[[["self"]],[R[1200]]]],[11,"clone",E,E,42,[[["self"]],["biguint"]]],[11,"clone",E,E,21,[[["self"]],["sign"]]],[11,"bitand",E,E,42,[[["biguint"]],["biguint"]]],[11,"bitand",E,E,41,[[["bigint"]],["bigint"]]],[11,"bitand",E,E,42,[[["biguint"]],["biguint"]]],[11,"bitand",E,E,41,[[["bigint"]],["bigint"]]],[11,"shr",E,E,42,[[["usize"]],["biguint"]]],[11,"shr",E,E,41,[[["usize"]],["bigint"]]],[11,R[327],E,E,41,[[],["bigint"]]],[11,R[327],E,E,42,[[],["biguint"]]],[11,"hash",E,E,42,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",E,E,21,[[["self"],["__h"]]]],[11,R[1203],E,E,42,[[["self"],["biguint"]]]],[11,R[1203],E,E,41,[[["self"],["bigint"]]]],[11,R[1203],E,E,41,[[["self"],["bigint"]]]],[11,R[1203],E,E,42,[[["self"],["biguint"]]]],[11,"to_i64",E,E,41,[[["self"]],[[R[25],["i64"]],["i64"]]]],[11,"to_i128",E,E,41,[[["self"]],[[R[25],["i128"]],["i128"]]]],[11,"to_u64",E,E,41,[[["self"]],[["u64"],[R[25],["u64"]]]]],[11,"to_u128",E,E,41,[[["self"]],[[R[25],["u128"]],["u128"]]]],[11,"to_f32",E,E,41,[[["self"]],[["f32"],[R[25],["f32"]]]]],[11,"to_f64",E,E,41,[[["self"]],[["f64"],[R[25],["f64"]]]]],[11,"to_i64",E,E,42,[[["self"]],[[R[25],["i64"]],["i64"]]]],[11,"to_i128",E,E,42,[[["self"]],[[R[25],["i128"]],["i128"]]]],[11,"to_u64",E,E,42,[[["self"]],[["u64"],[R[25],["u64"]]]]],[11,"to_u128",E,E,42,[[["self"]],[[R[25],["u128"]],["u128"]]]],[11,"to_f32",E,E,42,[[["self"]],[["f32"],[R[25],["f32"]]]]],[11,"to_f64",E,E,42,[[["self"]],[["f64"],[R[25],["f64"]]]]],[11,R[1202],E,E,42,[[["self"],["biguint"]]]],[11,R[1202],E,E,41,[[["self"],["bigint"]]]],[11,R[1202],E,E,41,[[["self"],["bigint"]]]],[11,R[1202],E,E,42,[[["self"],["biguint"]]]],[11,"one",E,E,42,[[],["biguint"]]],[11,"is_one",E,E,42,[[["self"]],["bool"]]],[11,"one",E,E,41,[[],["bigint"]]],[11,"is_one",E,E,41,[[["self"]],["bool"]]],[11,R[759],E,E,42,[[["self"],["biguint"]]]],[11,R[759],E,E,42,[[["self"],["u128"]]]],[11,R[759],E,E,41,[[["self"],["i128"]]]],[11,R[759],E,E,42,[[["self"],["biguint"]]]],[11,R[759],E,E,41,[[["self"],["u128"]]]],[11,R[759],E,E,42,[[["self"],["u64"]]]],[11,R[759],E,E,41,[[["self"],["u16"]]]],[11,R[759],E,E,41,[[["self"],["bigint"]]]],[11,R[759],E,E,41,[[["self"],["u32"]]]],[11,R[759],E,E,42,[[["self"],["usize"]]]],[11,R[759],E,E,41,[[["self"],["bigint"]]]],[11,R[759],E,E,41,[[["self"],["i64"]]]],[11,R[759],E,E,42,[[["self"],["u16"]]]],[11,R[759],E,E,41,[[["self"],["i8"]]]],[11,R[759],E,E,41,[[["self"],["u8"]]]],[11,R[759],E,E,41,[[["self"],["u64"]]]],[11,R[759],E,E,42,[[["self"],["u8"]]]],[11,R[759],E,E,41,[[["self"],["i32"]]]],[11,R[759],E,E,41,[[["self"],["isize"]]]],[11,R[759],E,E,41,[[["self"],["i16"]]]],[11,R[759],E,E,42,[[["self"],["u32"]]]],[11,R[759],E,E,41,[[["self"],["usize"]]]],[11,"bitor",E,E,41,[[["bigint"]],["bigint"]]],[11,"bitor",E,E,41,[[["bigint"]],["bigint"]]],[11,"bitor",E,E,42,[[["biguint"]],["biguint"]]],[11,"bitor",E,E,42,[[["biguint"]],["biguint"]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,R[777],E,E,41,[[["str"]],[["bigint"],[R[3],["bigint",R[1200]]],[R[1200]]]]],[11,R[777],E,E,42,[[["str"]],[[R[1200]],["biguint"],[R[3],["biguint",R[1200]]]]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"rem",E,E,41,[[["u16"]],["bigint"]]],[11,"rem",E,E,41,[[["u32"]],["bigint"]]],[11,"rem",E,E,41,[[["u32"]],["bigint"]]],[11,"rem",E,E,41,[[["i32"]],["bigint"]]],[11,"rem",E,E,42,[[["u128"]],["biguint"]]],[11,"rem",E,E,41,[[["isize"]],["bigint"]]],[11,"rem",E,E,41,[[["usize"]],["bigint"]]],[11,"rem",E,E,41,[[["i8"]],["bigint"]]],[11,"rem",E,E,42,[[["u128"]],["biguint"]]],[11,"rem",E,E,42,[[["u8"]],["biguint"]]],[11,"rem",E,E,41,[[["i32"]],["bigint"]]],[11,"rem",E,E,41,[[["i16"]],["bigint"]]],[11,"rem",E,E,41,[[["i128"]],["bigint"]]],[11,"rem",E,E,41,[[["u16"]],["bigint"]]],[11,"rem",E,E,42,[[["usize"]],["biguint"]]],[11,"rem",E,E,41,[[["isize"]],["bigint"]]],[11,"rem",E,E,41,[[["u64"]],["bigint"]]],[11,"rem",E,E,41,[[["bigint"]],["bigint"]]],[11,"rem",E,E,42,[[["u64"]],["biguint"]]],[11,"rem",E,E,42,[[["usize"]],["biguint"]]],[11,"rem",E,E,41,[[["usize"]],["bigint"]]],[11,"rem",E,E,41,[[["i128"]],["bigint"]]],[11,"rem",E,E,41,[[["i8"]],["bigint"]]],[11,"rem",E,E,41,[[["i16"]],["bigint"]]],[11,"rem",E,E,41,[[["i64"]],["bigint"]]],[11,"rem",E,E,41,[[["u64"]],["bigint"]]],[11,"rem",E,E,41,[[["u8"]],["bigint"]]],[11,"rem",E,E,42,[[["u32"]],["biguint"]]],[11,"rem",E,E,41,[[["u128"]],["bigint"]]],[11,"rem",E,E,41,[[["u8"]],["bigint"]]],[11,"rem",E,E,41,[[["u128"]],["bigint"]]],[11,"rem",E,E,42,[[["u16"]],["biguint"]]],[11,"rem",E,E,41,[[["bigint"]],["bigint"]]],[11,"rem",E,E,42,[[["u64"]],["biguint"]]],[11,"rem",E,E,42,[[["u8"]],["biguint"]]],[11,"rem",E,E,42,[[["biguint"]],["biguint"]]],[11,"rem",E,E,42,[[["biguint"]],["biguint"]]],[11,"rem",E,E,41,[[["i64"]],["bigint"]]],[11,"rem",E,E,42,[[["u32"]],["biguint"]]],[11,"rem",E,E,42,[[["u16"]],["biguint"]]],[11,"abs",E,E,41,[[["self"]],["bigint"]]],[11,"abs_sub",E,E,41,[[["self"],["bigint"]],["bigint"]]],[11,"signum",E,E,41,[[["self"]],["bigint"]]],[11,R[790],E,E,41,[[["self"]],["bool"]]],[11,R[791],E,E,41,[[["self"]],["bool"]]],[11,"eq",E,E,43,[[["self"],[R[1200]]],["bool"]]],[11,"ne",E,E,43,[[["self"],[R[1200]]],["bool"]]],[11,"eq",E,E,42,[[["self"],["biguint"]],["bool"]]],[11,"eq",E,E,41,[[["self"],["bigint"]],["bool"]]],[11,"eq",E,E,21,[[["self"],["sign"]],["bool"]]],[11,"mul",E,E,41,[[["u16"]],["bigint"]]],[11,"mul",E,E,41,[[["usize"]],["bigint"]]],[11,"mul",E,E,42,[[["u128"]],["biguint"]]],[11,"mul",E,E,41,[[["u128"]],["bigint"]]],[11,"mul",E,E,41,[[["i128"]],["bigint"]]],[11,"mul",E,E,42,[[["usize"]],["biguint"]]],[11,"mul",E,E,41,[[["bigint"]],["bigint"]]],[11,"mul",E,E,42,[[["u16"]],["biguint"]]],[11,"mul",E,E,41,[[["i32"]],["bigint"]]],[11,"mul",E,E,42,[[["u32"]],["biguint"]]],[11,"mul",E,E,42,[[["biguint"]],["biguint"]]],[11,"mul",E,E,41,[[["u64"]],["bigint"]]],[11,"mul",E,E,41,[[["i32"]],["bigint"]]],[11,"mul",E,E,42,[[["u16"]],["biguint"]]],[11,"mul",E,E,41,[[["isize"]],["bigint"]]],[11,"mul",E,E,41,[[["i16"]],["bigint"]]],[11,"mul",E,E,41,[[["i8"]],["bigint"]]],[11,"mul",E,E,41,[[["u64"]],["bigint"]]],[11,"mul",E,E,42,[[["usize"]],["biguint"]]],[11,"mul",E,E,41,[[["u16"]],["bigint"]]],[11,"mul",E,E,42,[[["u64"]],["biguint"]]],[11,"mul",E,E,42,[[["biguint"]],["biguint"]]],[11,"mul",E,E,41,[[["u128"]],["bigint"]]],[11,"mul",E,E,41,[[["bigint"]],["bigint"]]],[11,"mul",E,E,41,[[["i16"]],["bigint"]]],[11,"mul",E,E,21,[[["sign"]],["sign"]]],[11,"mul",E,E,42,[[["u32"]],["biguint"]]],[11,"mul",E,E,42,[[["u128"]],["biguint"]]],[11,"mul",E,E,42,[[["u64"]],["biguint"]]],[11,"mul",E,E,41,[[["u32"]],["bigint"]]],[11,"mul",E,E,41,[[["u8"]],["bigint"]]],[11,"mul",E,E,41,[[["usize"]],["bigint"]]],[11,"mul",E,E,41,[[["i64"]],["bigint"]]],[11,"mul",E,E,41,[[["isize"]],["bigint"]]],[11,"mul",E,E,41,[[["i128"]],["bigint"]]],[11,"mul",E,E,41,[[["i64"]],["bigint"]]],[11,"mul",E,E,42,[[["u8"]],["biguint"]]],[11,"mul",E,E,41,[[["u8"]],["bigint"]]],[11,"mul",E,E,42,[[["u8"]],["biguint"]]],[11,"mul",E,E,41,[[["u32"]],["bigint"]]],[11,"mul",E,E,41,[[["i8"]],["bigint"]]],[11,"sum",E,E,42,[[["i"]],["biguint"]]],[11,"sum",E,E,41,[[["i"]],["bigint"]]],[11,R[172],E,E,21,[[["self"],["sign"]],[[R[24]],[R[25],[R[24]]]]]],[11,R[172],E,E,42,[[["self"],["biguint"]],[[R[24]],[R[25],[R[24]]]]]],[11,R[172],E,E,41,[[["self"],["bigint"]],[[R[24]],[R[25],[R[24]]]]]],[11,R[1542],E,E,42,[[["self"],["usize"]]]],[11,R[1542],E,E,41,[[["self"],["usize"]]]],[11,R[1539],E,E,42,[[["self"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[1539],E,E,41,[[["self"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[761],E,E,42,[[["self"],["u16"]]]],[11,R[761],E,E,41,[[["self"],["u128"]]]],[11,R[761],E,E,42,[[["self"],["u128"]]]],[11,R[761],E,E,42,[[["self"],["biguint"]]]],[11,R[761],E,E,41,[[["self"],["u8"]]]],[11,R[761],E,E,41,[[["self"],["i32"]]]],[11,R[761],E,E,41,[[["self"],["i8"]]]],[11,R[761],E,E,41,[[["self"],["i128"]]]],[11,R[761],E,E,41,[[["self"],["i64"]]]],[11,R[761],E,E,42,[[["self"],["u32"]]]],[11,R[761],E,E,41,[[["self"],["bigint"]]]],[11,R[761],E,E,42,[[["self"],["u64"]]]],[11,R[761],E,E,41,[[["self"],["isize"]]]],[11,R[761],E,E,41,[[["self"],["u16"]]]],[11,R[761],E,E,42,[[["self"],["u8"]]]],[11,R[761],E,E,41,[[["self"],["bigint"]]]],[11,R[761],E,E,42,[[["self"],["biguint"]]]],[11,R[761],E,E,41,[[["self"],["u32"]]]],[11,R[761],E,E,42,[[["self"],["usize"]]]],[11,R[761],E,E,41,[[["self"],["u64"]]]],[11,R[761],E,E,41,[[["self"],["i16"]]]],[11,R[761],E,E,41,[[["self"],["usize"]]]],[11,R[53],E,E,43,[[["self"]],["str"]]],[11,R[760],E,E,41,[[["self"],["u32"]]]],[11,R[760],E,E,42,[[["self"],["u32"]]]],[11,R[760],E,E,41,[[["self"],["u128"]]]],[11,R[760],E,E,41,[[["self"],["u64"]]]],[11,R[760],E,E,41,[[["self"],["i64"]]]],[11,R[760],E,E,41,[[["self"],["u8"]]]],[11,R[760],E,E,41,[[["self"],["u16"]]]],[11,R[760],E,E,42,[[["self"],["usize"]]]],[11,R[760],E,E,41,[[["self"],["bigint"]]]],[11,R[760],E,E,41,[[["self"],["i8"]]]],[11,R[760],E,E,42,[[["self"],["biguint"]]]],[11,R[760],E,E,42,[[["self"],["u128"]]]],[11,R[760],E,E,41,[[["self"],["bigint"]]]],[11,R[760],E,E,41,[[["self"],["i128"]]]],[11,R[760],E,E,41,[[["self"],["usize"]]]],[11,R[760],E,E,41,[[["self"],["isize"]]]],[11,R[760],E,E,42,[[["self"],["u16"]]]],[11,R[760],E,E,42,[[["self"],["u8"]]]],[11,R[760],E,E,42,[[["self"],["u64"]]]],[11,R[760],E,E,42,[[["self"],["biguint"]]]],[11,R[760],E,E,41,[[["self"],["i32"]]]],[11,R[760],E,E,41,[[["self"],["i16"]]]],[11,R[1214],E,E,41,[[["self"],["bigint"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[1214],E,E,42,[[["self"],["biguint"]],[[R[25],["biguint"]],["biguint"]]]],[11,"fmt",E,E,43,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,21,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"div",E,E,42,[[["u16"]],["biguint"]]],[11,"div",E,E,42,[[["biguint"]],["biguint"]]],[11,"div",E,E,41,[[["i128"]],["bigint"]]],[11,"div",E,E,41,[[["usize"]],["bigint"]]],[11,"div",E,E,41,[[["i32"]],["bigint"]]],[11,"div",E,E,41,[[["bigint"]],["bigint"]]],[11,"div",E,E,42,[[["usize"]],["biguint"]]],[11,"div",E,E,41,[[["i8"]],["bigint"]]],[11,"div",E,E,41,[[["i16"]],["bigint"]]],[11,"div",E,E,41,[[["u32"]],["bigint"]]],[11,"div",E,E,41,[[["i128"]],["bigint"]]],[11,"div",E,E,41,[[["u8"]],["bigint"]]],[11,"div",E,E,42,[[["u8"]],["biguint"]]],[11,"div",E,E,42,[[["biguint"]],["biguint"]]],[11,"div",E,E,41,[[["i64"]],["bigint"]]],[11,"div",E,E,41,[[["i16"]],["bigint"]]],[11,"div",E,E,41,[[["isize"]],["bigint"]]],[11,"div",E,E,41,[[["u128"]],["bigint"]]],[11,"div",E,E,41,[[["u64"]],["bigint"]]],[11,"div",E,E,41,[[["u32"]],["bigint"]]],[11,"div",E,E,42,[[["u128"]],["biguint"]]],[11,"div",E,E,42,[[["u32"]],["biguint"]]],[11,"div",E,E,41,[[["usize"]],["bigint"]]],[11,"div",E,E,41,[[["u64"]],["bigint"]]],[11,"div",E,E,41,[[["i32"]],["bigint"]]],[11,"div",E,E,42,[[["u64"]],["biguint"]]],[11,"div",E,E,41,[[["u128"]],["bigint"]]],[11,"div",E,E,41,[[["u16"]],["bigint"]]],[11,"div",E,E,41,[[["u8"]],["bigint"]]],[11,"div",E,E,41,[[["i64"]],["bigint"]]],[11,"div",E,E,42,[[["u128"]],["biguint"]]],[11,"div",E,E,42,[[["u32"]],["biguint"]]],[11,"div",E,E,41,[[["isize"]],["bigint"]]],[11,"div",E,E,42,[[["u64"]],["biguint"]]],[11,"div",E,E,42,[[["u8"]],["biguint"]]],[11,"div",E,E,42,[[["u16"]],["biguint"]]],[11,"div",E,E,41,[[["i8"]],["bigint"]]],[11,"div",E,E,41,[[["u16"]],["bigint"]]],[11,"div",E,E,42,[[["usize"]],["biguint"]]],[11,"div",E,E,41,[[["bigint"]],["bigint"]]],[11,R[781],E,E,41,[[["i64"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[767],E,E,41,[[["i128"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[782],E,E,41,[[["u64"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[769],E,E,41,[[["u128"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[789],E,E,41,[[["f64"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[781],E,E,42,[[["i64"]],[[R[25],["biguint"]],["biguint"]]]],[11,R[767],E,E,42,[[["i128"]],[[R[25],["biguint"]],["biguint"]]]],[11,R[782],E,E,42,[[["u64"]],[[R[25],["biguint"]],["biguint"]]]],[11,R[769],E,E,42,[[["u128"]],[[R[25],["biguint"]],["biguint"]]]],[11,R[789],E,E,42,[[["f64"]],[[R[25],["biguint"]],["biguint"]]]],[11,"from",E,E,41,[[["i32"]],["bigint"]]],[11,"from",E,E,42,[[["usize"]],["biguint"]]],[11,"from",E,E,41,[[["isize"]],["bigint"]]],[11,"from",E,E,41,[[["u16"]],["bigint"]]],[11,"from",E,E,42,[[["u8"]],["biguint"]]],[11,"from",E,E,41,[[["u64"]],["bigint"]]],[11,"from",E,E,41,[[["i16"]],["bigint"]]],[11,"from",E,E,41,[[["u32"]],["bigint"]]],[11,"from",E,E,41,[[["biguint"]],["bigint"]]],[11,"from",E,E,42,[[["u64"]],["biguint"]]],[11,"from",E,E,42,[[["u128"]],["biguint"]]],[11,"from",E,E,41,[[["u128"]],["bigint"]]],[11,"from",E,E,41,[[["i64"]],["bigint"]]],[11,"from",E,E,42,[[["u32"]],["biguint"]]],[11,"from",E,E,42,[[["u16"]],["biguint"]]],[11,"from",E,E,41,[[["usize"]],["bigint"]]],[11,"from",E,E,41,[[["u8"]],["bigint"]]],[11,"from",E,E,41,[[["i8"]],["bigint"]]],[11,"from",E,E,41,[[["i128"]],["bigint"]]],[11,"eq",R[1379],E,22,[[["self"],[R[753]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[753]]],["bool"]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"next",E,E,45,[[["self"]],[R[25]]]],[11,"clone",E,E,22,[[["self"]],[R[753]]]],[11,"fmt",R[1316],E,40,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,39,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,40,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"one",R[1520],E,0,[[],[R[756]]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,"set_one",E,E,0,[[["self"]]]],[11,"rem",E,E,0,[[[T]]]],[11,"rem",E,E,0,[[[R[756]]]]],[11,"rem",E,E,0,[[[T]]]],[11,"rem",E,E,0,[[[R[756]]]]],[11,"from",E,E,0,[[[T]],[R[756]]]],[11,"from",E,E,0,[[[T]],[R[756]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,R[764],E,E,0,[[["self"],[R[756]]]]],[11,R[764],E,E,0,[[["self"],[R[756]]]]],[11,R[777],E,R[763],0,[[["str"]],[[R[3],[R[756]]],[R[756]]]]],[11,R[768],E,E,0,[[["usize"]],[[R[756]],[R[25],[R[756]]]]]],[11,R[766],E,E,0,[[["isize"]],[[R[756]],[R[25],[R[756]]]]]],[11,R[785],E,E,0,[[["u8"]],[[R[756]],[R[25],[R[756]]]]]],[11,R[786],E,E,0,[[["u16"]],[[R[756]],[R[25],[R[756]]]]]],[11,R[787],E,E,0,[[["u32"]],[[R[756]],[R[25],[R[756]]]]]],[11,R[782],E,E,0,[[["u64"]],[[R[756]],[R[25],[R[756]]]]]],[11,"from_i8",E,E,0,[[["i8"]],[[R[756]],[R[25],[R[756]]]]]],[11,R[783],E,E,0,[[["i16"]],[[R[756]],[R[25],[R[756]]]]]],[11,R[784],E,E,0,[[["i32"]],[[R[756]],[R[25],[R[756]]]]]],[11,R[781],E,E,0,[[["i64"]],[[R[756]],[R[25],[R[756]]]]]],[11,R[769],E,E,0,[[["u128"]],[[R[756]],[R[25],[R[756]]]]]],[11,R[767],E,E,0,[[["i128"]],[[R[756]],[R[25],[R[756]]]]]],[11,R[788],E,E,0,[[["f32"]],[[R[756]],[R[25],[R[756]]]]]],[11,R[789],E,E,0,[[["f64"]],[[R[756]],[R[25],[R[756]]]]]],[11,"clone",E,E,0,[[["self"]],[R[756]]]],[11,"zero",E,E,0,[[],[R[756]]]],[11,"is_zero",E,E,0,[[["self"]],["bool"]]],[11,R[1609],E,E,0,[[["self"]]]],[11,R[759],E,E,0,[[["self"],[T]]]],[11,R[759],E,E,0,[[["self"],[R[756]]]]],[11,R[759],E,E,0,[[["self"],[T]]]],[11,R[759],E,E,0,[[["self"],[R[756]]]]],[11,"inv",E,E,0,[[]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"sum",E,E,0,[[["i"]],[R[756]]]],[11,"sum",E,E,0,[[["i"]],[R[756]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"mul",E,E,0,[[[R[756]]]]],[11,"mul",E,E,0,[[[T]]]],[11,"mul",E,E,0,[[[T]]]],[11,"mul",E,E,0,[[[R[756]]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,44,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,R[327],E,E,0,[[],[R[756]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"pow",E,E,0,[[["f64"]]]],[11,"pow",E,E,0,[[[R[756]]]]],[11,"pow",E,E,0,[[["f32"]]]],[11,"pow",E,E,0,[[[R[756]]]]],[11,"pow",E,E,0,[[["f64"]]]],[11,"pow",E,E,0,[[["f32"]]]],[11,"eq",E,E,0,[[["self"],[R[756]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[756]]],["bool"]]],[11,"eq",E,E,44,[[["self"],[R[757]]],["bool"]]],[11,"ne",E,E,44,[[["self"],[R[757]]],["bool"]]],[11,"div",E,E,0,[[[T]]]],[11,"div",E,E,0,[[[R[756]]]]],[11,"div",E,E,0,[[[T]]]],[11,"div",E,E,0,[[[R[756]]]]],[11,"fmt",E,E,44,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"add",E,E,0,[[[T]]]],[11,"add",E,E,0,[[[T]]]],[11,"add",E,E,0,[[[R[756]]]]],[11,"add",E,E,0,[[[R[756]]]]],[11,R[760],E,E,0,[[["self"],[R[756]]]]],[11,R[760],E,E,0,[[["self"],[R[756]]]]],[11,R[760],E,E,0,[[["self"],[T]]]],[11,R[760],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[U]],[[R[756]],[R[25],[R[756]]]]]],[11,R[761],E,E,0,[[["self"],[T]]]],[11,R[761],E,E,0,[[["self"],[T]]]],[11,R[761],E,E,0,[[["self"],[R[756]]]]],[11,R[761],E,E,0,[[["self"],[R[756]]]]],[11,R[771],E,R[763],0,[[["u32"],["str"]],[[R[3],[R[756]]],[R[756]]]]],[11,"neg",E,E,0,[[]]],[11,R[780],E,E,0,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[779],E,E,0,[[["self"]],[["isize"],[R[25],["isize"]]]]],[11,"to_u8",E,E,0,[[["self"]],[[R[25],["u8"]],["u8"]]]],[11,"to_u16",E,E,0,[[["self"]],[["u16"],[R[25],["u16"]]]]],[11,"to_u32",E,E,0,[[["self"]],[[R[25],["u32"]],["u32"]]]],[11,"to_u64",E,E,0,[[["self"]],[["u64"],[R[25],["u64"]]]]],[11,"to_i8",E,E,0,[[["self"]],[[R[25],["i8"]],["i8"]]]],[11,"to_i16",E,E,0,[[["self"]],[[R[25],["i16"]],["i16"]]]],[11,"to_i32",E,E,0,[[["self"]],[[R[25],["i32"]],["i32"]]]],[11,"to_i64",E,E,0,[[["self"]],[[R[25],["i64"]],["i64"]]]],[11,"to_u128",E,E,0,[[["self"]],[[R[25],["u128"]],["u128"]]]],[11,"to_i128",E,E,0,[[["self"]],[[R[25],["i128"]],["i128"]]]],[11,"to_f32",E,E,0,[[["self"]],[["f32"],[R[25],["f32"]]]]],[11,"to_f64",E,E,0,[[["self"]],[["f64"],[R[25],["f64"]]]]],[11,R[758],E,E,0,[[["self"],[R[756]]]]],[11,R[758],E,E,0,[[["self"],[T]]]],[11,R[758],E,E,0,[[["self"],[T]]]],[11,R[758],E,E,0,[[["self"],[R[756]]]]],[11,"mul_add",E,E,0,[[[R[756]]],[R[756]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"sub",E,E,0,[[[R[756]]]]],[11,"sub",E,E,0,[[[T]]]],[11,"sub",E,E,0,[[[R[756]]]]],[11,"sub",E,E,0,[[[T]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,R[53],E,E,44,[[["self"]],["str"]]],[11,"product",E,E,0,[[["i"]],[R[756]]]],[11,"product",E,E,0,[[["i"]],[R[756]]]],[11,R[762],E,E,0,[[["self"],[T]]]],[11,R[762],E,E,0,[[["self"],[R[756]]]]],[11,R[762],E,E,0,[[["self"],[R[756]]]]],[11,R[762],E,E,0,[[["self"],[T]]]],[11,"as_",E,E,0,[[],[U]]],[11,"next","num::iter",E,48,[[["self"]],[R[25]]]],[11,"next",E,E,49,[[["self"]],[R[25]]]],[11,"next",E,E,47,[[["self"]],[R[25]]]],[11,R[174],E,E,47,[[["self"]]]],[11,"next",E,E,46,[[["self"]],[R[25]]]],[11,R[174],E,E,46,[[["self"]]]],[11,"clone",E,E,48,[[["self"]],[R[1400]]]],[11,"clone",E,E,46,[[["self"]],["range"]]],[11,"clone",E,E,49,[[["self"]],[R[1170]]]],[11,"clone",E,E,47,[[["self"]],[R[1169]]]],[11,R[173],E,E,46,[[["self"]],[R[25]]]],[11,R[173],E,E,47,[[["self"]],[R[25]]]],[11,"rem",R[1521],E,50,[[[T]],["ratio"]]],[11,"rem",E,E,50,[[["ratio"]],["ratio"]]],[11,"rem",E,E,50,[[[T]],["ratio"]]],[11,"rem",E,E,50,[[["ratio"]],["ratio"]]],[11,"from",E,E,50,[[[T]],["ratio"]]],[11,"from",E,E,50,[[],["ratio"]]],[11,R[781],E,E,50,[[["i64"]],[["ratio",["u128"]],[R[25],["ratio"]]]]],[11,R[767],E,E,50,[[["i128"]],[["ratio",["u128"]],[R[25],["ratio"]]]]],[11,R[782],E,E,50,[[["u64"]],[["ratio",["u128"]],[R[25],["ratio"]]]]],[11,R[769],E,E,50,[[["u128"]],[["ratio",["u128"]],[R[25],["ratio"]]]]],[11,R[788],E,E,50,[[["f32"]],[["ratio",["u128"]],[R[25],["ratio"]]]]],[11,R[789],E,E,50,[[["f64"]],[["ratio",["u128"]],[R[25],["ratio"]]]]],[11,R[781],E,E,50,[[["i64"]],[[R[25],["ratio"]],["ratio",["u64"]]]]],[11,R[767],E,E,50,[[["i128"]],[[R[25],["ratio"]],["ratio",["u64"]]]]],[11,R[782],E,E,50,[[["u64"]],[[R[25],["ratio"]],["ratio",["u64"]]]]],[11,R[769],E,E,50,[[["u128"]],[[R[25],["ratio"]],["ratio",["u64"]]]]],[11,R[788],E,E,50,[[["f32"]],[[R[25],["ratio"]],["ratio",["u64"]]]]],[11,R[789],E,E,50,[[["f64"]],[[R[25],["ratio"]],["ratio",["u64"]]]]],[11,R[781],E,E,50,[[["i64"]],[["ratio",["i32"]],[R[25],["ratio"]]]]],[11,R[767],E,E,50,[[["i128"]],[["ratio",["i32"]],[R[25],["ratio"]]]]],[11,R[782],E,E,50,[[["u64"]],[["ratio",["i32"]],[R[25],["ratio"]]]]],[11,R[769],E,E,50,[[["u128"]],[["ratio",["i32"]],[R[25],["ratio"]]]]],[11,R[788],E,E,50,[[["f32"]],[["ratio",["i32"]],[R[25],["ratio"]]]]],[11,R[789],E,E,50,[[["f64"]],[["ratio",["i32"]],[R[25],["ratio"]]]]],[11,R[781],E,E,50,[[["i64"]],[[R[25],["ratio"]],["ratio",["u32"]]]]],[11,R[767],E,E,50,[[["i128"]],[[R[25],["ratio"]],["ratio",["u32"]]]]],[11,R[782],E,E,50,[[["u64"]],[[R[25],["ratio"]],["ratio",["u32"]]]]],[11,R[769],E,E,50,[[["u128"]],[[R[25],["ratio"]],["ratio",["u32"]]]]],[11,R[788],E,E,50,[[["f32"]],[[R[25],["ratio"]],["ratio",["u32"]]]]],[11,R[789],E,E,50,[[["f64"]],[[R[25],["ratio"]],["ratio",["u32"]]]]],[11,R[781],E,E,50,[[["i64"]],[[R[25],["ratio"]],["ratio",["i8"]]]]],[11,R[767],E,E,50,[[["i128"]],[[R[25],["ratio"]],["ratio",["i8"]]]]],[11,R[782],E,E,50,[[["u64"]],[[R[25],["ratio"]],["ratio",["i8"]]]]],[11,R[769],E,E,50,[[["u128"]],[[R[25],["ratio"]],["ratio",["i8"]]]]],[11,R[788],E,E,50,[[["f32"]],[[R[25],["ratio"]],["ratio",["i8"]]]]],[11,R[789],E,E,50,[[["f64"]],[[R[25],["ratio"]],["ratio",["i8"]]]]],[11,R[781],E,E,50,[[["i64"]],[[R[25],["ratio"]],["ratio",["usize"]]]]],[11,R[767],E,E,50,[[["i128"]],[[R[25],["ratio"]],["ratio",["usize"]]]]],[11,R[782],E,E,50,[[["u64"]],[[R[25],["ratio"]],["ratio",["usize"]]]]],[11,R[769],E,E,50,[[["u128"]],[[R[25],["ratio"]],["ratio",["usize"]]]]],[11,R[788],E,E,50,[[["f32"]],[[R[25],["ratio"]],["ratio",["usize"]]]]],[11,R[789],E,E,50,[[["f64"]],[[R[25],["ratio"]],["ratio",["usize"]]]]],[11,R[781],E,E,50,[[["i64"]],[[R[25],["ratio"]],["ratio",["u8"]]]]],[11,R[767],E,E,50,[[["i128"]],[[R[25],["ratio"]],["ratio",["u8"]]]]],[11,R[782],E,E,50,[[["u64"]],[[R[25],["ratio"]],["ratio",["u8"]]]]],[11,R[769],E,E,50,[[["u128"]],[[R[25],["ratio"]],["ratio",["u8"]]]]],[11,R[788],E,E,50,[[["f32"]],[[R[25],["ratio"]],["ratio",["u8"]]]]],[11,R[789],E,E,50,[[["f64"]],[[R[25],["ratio"]],["ratio",["u8"]]]]],[11,R[781],E,E,50,[[["i64"]],[["ratio",["i128"]],[R[25],["ratio"]]]]],[11,R[767],E,E,50,[[["i128"]],[["ratio",["i128"]],[R[25],["ratio"]]]]],[11,R[782],E,E,50,[[["u64"]],[["ratio",["i128"]],[R[25],["ratio"]]]]],[11,R[769],E,E,50,[[["u128"]],[["ratio",["i128"]],[R[25],["ratio"]]]]],[11,R[788],E,E,50,[[["f32"]],[["ratio",["i128"]],[R[25],["ratio"]]]]],[11,R[789],E,E,50,[[["f64"]],[["ratio",["i128"]],[R[25],["ratio"]]]]],[11,R[781],E,E,50,[[["i64"]],[[R[25],["ratio"]],["ratio",["u16"]]]]],[11,R[767],E,E,50,[[["i128"]],[[R[25],["ratio"]],["ratio",["u16"]]]]],[11,R[782],E,E,50,[[["u64"]],[[R[25],["ratio"]],["ratio",["u16"]]]]],[11,R[769],E,E,50,[[["u128"]],[[R[25],["ratio"]],["ratio",["u16"]]]]],[11,R[788],E,E,50,[[["f32"]],[[R[25],["ratio"]],["ratio",["u16"]]]]],[11,R[789],E,E,50,[[["f64"]],[[R[25],["ratio"]],["ratio",["u16"]]]]],[11,R[781],E,E,50,[[["i64"]],[[R[25],["ratio"]],["ratio",["i16"]]]]],[11,R[767],E,E,50,[[["i128"]],[[R[25],["ratio"]],["ratio",["i16"]]]]],[11,R[782],E,E,50,[[["u64"]],[[R[25],["ratio"]],["ratio",["i16"]]]]],[11,R[769],E,E,50,[[["u128"]],[[R[25],["ratio"]],["ratio",["i16"]]]]],[11,R[788],E,E,50,[[["f32"]],[[R[25],["ratio"]],["ratio",["i16"]]]]],[11,R[789],E,E,50,[[["f64"]],[[R[25],["ratio"]],["ratio",["i16"]]]]],[11,R[781],E,E,50,[[["i64"]],[[R[25],["ratio"]],["ratio",["i64"]]]]],[11,R[767],E,E,50,[[["i128"]],[[R[25],["ratio"]],["ratio",["i64"]]]]],[11,R[782],E,E,50,[[["u64"]],[[R[25],["ratio"]],["ratio",["i64"]]]]],[11,R[769],E,E,50,[[["u128"]],[[R[25],["ratio"]],["ratio",["i64"]]]]],[11,R[788],E,E,50,[[["f32"]],[[R[25],["ratio"]],["ratio",["i64"]]]]],[11,R[789],E,E,50,[[["f64"]],[[R[25],["ratio"]],["ratio",["i64"]]]]],[11,R[781],E,E,50,[[["i64"]],[[R[25],["ratio"]],["ratio",["bigint"]]]]],[11,R[767],E,E,50,[[["i128"]],[[R[25],["ratio"]],["ratio",["bigint"]]]]],[11,R[782],E,E,50,[[["u64"]],[[R[25],["ratio"]],["ratio",["bigint"]]]]],[11,R[769],E,E,50,[[["u128"]],[[R[25],["ratio"]],["ratio",["bigint"]]]]],[11,R[788],E,E,50,[[["f32"]],[[R[25],["ratio"]],["ratio",["bigint"]]]]],[11,R[789],E,E,50,[[["f64"]],[[R[25],["ratio"]],["ratio",["bigint"]]]]],[11,R[781],E,E,50,[[["i64"]],[[R[25],["ratio"]],["ratio",["isize"]]]]],[11,R[767],E,E,50,[[["i128"]],[[R[25],["ratio"]],["ratio",["isize"]]]]],[11,R[782],E,E,50,[[["u64"]],[[R[25],["ratio"]],["ratio",["isize"]]]]],[11,R[769],E,E,50,[[["u128"]],[[R[25],["ratio"]],["ratio",["isize"]]]]],[11,R[788],E,E,50,[[["f32"]],[[R[25],["ratio"]],["ratio",["isize"]]]]],[11,R[789],E,E,50,[[["f64"]],[[R[25],["ratio"]],["ratio",["isize"]]]]],[11,"inv",E,E,50,[[],["ratio"]]],[11,R[777],E,R[1607],50,[[["str"]],[[R[3],["ratio",R[1478]]],["ratio"],[R[1478]]]]],[11,R[1215],E,E,50,[[["self"],["ratio"]],[[R[25],["ratio"]],["ratio"]]]],[11,R[1212],E,E,50,[[["self"],["ratio"]],[[R[25],["ratio"]],["ratio"]]]],[11,"clone",E,E,51,[[["self"]],[R[1478]]]],[11,"clone",E,E,50,[[["self"]],["ratio"]]],[11,R[759],E,E,50,[[["self"],[T]]]],[11,R[759],E,E,50,[[["self"],["ratio"]]]],[11,R[759],E,E,50,[[["self"],["ratio"]]]],[11,R[759],E,E,50,[[["self"],[T]]]],[11,"cmp",E,E,50,[[["self"],["ratio"]],[R[24]]]],[11,"pow",E,E,50,[[["u16"]],["ratio"]]],[11,"pow",E,E,50,[[["u16"]],["ratio"]]],[11,"pow",E,E,50,[[["i32"]],["ratio"]]],[11,"pow",E,E,50,[[["u8"]],["ratio"]]],[11,"pow",E,E,50,[[["i64"]],["ratio"]]],[11,"pow",E,E,50,[[["isize"]],["ratio"]]],[11,"pow",E,E,50,[[["u8"]],["ratio"]]],[11,"pow",E,E,50,[[["u64"]],["ratio"]]],[11,"pow",E,E,50,[[["i8"]],["ratio"]]],[11,"pow",E,E,50,[[["usize"]],["ratio"]]],[11,"pow",E,E,50,[[["i64"]],["ratio"]]],[11,"pow",E,E,50,[[["i8"]],["ratio"]]],[11,"pow",E,E,50,[[["usize"]],["ratio"]]],[11,"pow",E,E,50,[[["u32"]],["ratio"]]],[11,"pow",E,E,50,[[["u64"]],["ratio"]]],[11,"pow",E,E,50,[[["i16"]],["ratio"]]],[11,"pow",E,E,50,[[["u32"]],["ratio"]]],[11,"pow",E,E,50,[[["i32"]],["ratio"]]],[11,"pow",E,E,50,[[["isize"]],["ratio"]]],[11,"pow",E,E,50,[[["i16"]],["ratio"]]],[11,"sum",E,E,50,[[["i"]],["ratio"]]],[11,"sum",E,E,50,[[["i"]],["ratio"]]],[11,"mul",E,E,50,[[[T]],["ratio"]]],[11,"mul",E,E,50,[[["ratio"]],["ratio"]]],[11,"mul",E,E,50,[[["ratio"]],["ratio"]]],[11,"mul",E,E,50,[[[T]],["ratio"]]],[11,"hash",E,E,50,[[["self"],["h"]]]],[11,"fmt",E,E,51,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,R[1606],50,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"div",E,E,50,[[["ratio"]],["ratio"]]],[11,"div",E,E,50,[[[T]],["ratio"]]],[11,"div",E,E,50,[[["ratio"]],["ratio"]]],[11,"div",E,E,50,[[[T]],["ratio"]]],[11,"eq",E,E,51,[[["self"],[R[1478]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[1478]]],["bool"]]],[11,"eq",E,E,50,[[["self"],["ratio"]],["bool"]]],[11,R[771],E,R[1608],50,[[["u32"],["str"]],[[R[3],["ratio",R[1478]]],["ratio"],[R[1478]]]]],[11,"fmt",E,E,50,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,51,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"add",E,E,50,[[["ratio"]],["ratio"]]],[11,"add",E,E,50,[[["ratio"]],["ratio"]]],[11,"add",E,E,50,[[[T]],["ratio"]]],[11,"add",E,E,50,[[[T]],["ratio"]]],[11,R[760],E,E,50,[[["self"],["ratio"]]]],[11,R[760],E,E,50,[[["self"],["ratio"]]]],[11,R[760],E,E,50,[[["self"],[T]]]],[11,R[760],E,E,50,[[["self"],[T]]]],[11,R[761],E,E,50,[[["self"],[T]]]],[11,R[761],E,E,50,[[["self"],["ratio"]]]],[11,R[761],E,E,50,[[["self"],[T]]]],[11,R[761],E,E,50,[[["self"],["ratio"]]]],[11,R[1214],E,E,50,[[["self"],["ratio"]],[[R[25],["ratio"]],["ratio"]]]],[11,"neg",E,E,50,[[],["ratio"]]],[11,R[172],E,E,50,[[["self"],["ratio"]],[[R[24]],[R[25],[R[24]]]]]],[11,R[758],E,E,50,[[["self"],["ratio"]]]],[11,R[758],E,E,50,[[["self"],["ratio"]]]],[11,R[758],E,E,50,[[["self"],[T]]]],[11,R[758],E,E,50,[[["self"],[T]]]],[11,"into",E,E,50,[[]]],[11,"sub",E,E,50,[[["ratio"]],["ratio"]]],[11,"sub",E,E,50,[[[T]],["ratio"]]],[11,"sub",E,E,50,[[["ratio"]],["ratio"]]],[11,"sub",E,E,50,[[[T]],["ratio"]]],[11,R[53],E,E,51,[[["self"]],["str"]]],[11,R[1213],E,E,50,[[["self"],["ratio"]],[[R[25],["ratio"]],["ratio"]]]],[11,"one",E,E,50,[[],["ratio"]]],[11,"is_one",E,E,50,[[["self"]],["bool"]]],[11,"set_one",E,E,50,[[["self"]]]],[11,"abs",E,E,50,[[["self"]],["ratio"]]],[11,"abs_sub",E,E,50,[[["self"],["ratio"]],["ratio"]]],[11,"signum",E,E,50,[[["self"]],["ratio"]]],[11,R[790],E,E,50,[[["self"]],["bool"]]],[11,R[791],E,E,50,[[["self"]],["bool"]]],[11,"product",E,E,50,[[["i"]],["ratio"]]],[11,"product",E,E,50,[[["i"]],["ratio"]]],[11,R[762],E,E,50,[[["self"],[T]]]],[11,R[762],E,E,50,[[["self"],["ratio"]]]],[11,R[762],E,E,50,[[["self"],["ratio"]]]],[11,R[762],E,E,50,[[["self"],[T]]]],[11,"zero",E,E,50,[[],["ratio"]]],[11,"is_zero",E,E,50,[[["self"]],["bool"]]],[11,R[1609],E,E,50,[[["self"]]]],[11,"new",R[1519],R[1211],41,[[["sign"],["u32"],["vec",["u32"]]],["bigint"]]],[11,R[1523],E,R[1173],41,[[["sign"],["biguint"]],["bigint"]]],[11,R[1524],E,R[1173],41,[[["sign"]],["bigint"]]],[11,R[1179],E,R[1525],41,[[["self"],["sign"]]]],[11,R[1180],E,R[1173],41,[[["sign"]],["bigint"]]],[11,R[1181],E,R[1173],41,[[["sign"]],["bigint"]]],[11,R[1526],E,R[1174],41,[[],["bigint"]]],[11,R[1527],E,R[1174],41,[[],["bigint"]]],[11,R[1182],E,R[1173],41,[[["u32"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[1183],E,R[1175],41,[[["sign"],["u32"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[1184],E,R[1175],41,[[["sign"],["u32"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[1186],E,R[1176],41,[[["self"]]]],[11,R[1187],E,R[1176],41,[[["self"]]]],[11,R[1528],E,R[1177],41,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1529],E,R[1177],41,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1189],E,R[1190],41,[[["self"],["u32"]],["string"]]],[11,R[1191],E,R[1192],41,[[["self"],["u32"]]]],[11,R[1193],E,R[1194],41,[[["self"],["u32"]]]],[11,"sign",E,R[1530],41,[[["self"]],["sign"]]],[11,"bits",E,R[1195],41,[[["self"]],["usize"]]],[11,R[1199],E,R[1531],41,[[["self"]],[[R[25],["biguint"]],["biguint"]]]],[11,R[1214],E,E,41,[[["self"],["bigint"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[1215],E,E,41,[[["self"],["bigint"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[1212],E,E,41,[[["self"],["bigint"]],[[R[25],["bigint"]],["bigint"]]]],[11,R[1213],E,E,41,[[["self"],["bigint"]],[[R[25],["bigint"]],["bigint"]]]],[11,"modpow",E,R[1532],41,[[["self"],["bigint"]],["bigint"]]],[11,"sqrt",E,R[1196],41,[[["self"]],["bigint"]]],[11,"cbrt",E,R[1197],41,[[["self"]],["bigint"]]],[11,R[1382],E,R[1198],41,[[["self"],["u32"]],["bigint"]]],[11,"new",E,R[1178],42,[[["u32"],["vec",["u32"]]],["biguint"]]],[11,R[1524],E,R[1178],42,[[],["biguint"]]],[11,R[1179],E,R[1533],42,[[["self"]]]],[11,R[1180],E,R[1178],42,[[],["biguint"]]],[11,R[1181],E,R[1178],42,[[],["biguint"]]],[11,R[1182],E,R[1534],42,[[["u32"]],[[R[25],["biguint"]],["biguint"]]]],[11,R[1183],E,R[1185],42,[[["u32"]],[[R[25],["biguint"]],["biguint"]]]],[11,R[1184],E,R[1185],42,[[["u32"]],[[R[25],["biguint"]],["biguint"]]]],[11,R[1186],E,R[1188],42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1187],E,R[1188],42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1189],E,R[1190],42,[[["self"],["u32"]],["string"]]],[11,R[1191],E,R[1192],42,[[["self"],["u32"]],[["vec",["u8"]],["u8"]]]],[11,R[1193],E,R[1194],42,[[["self"],["u32"]],[["vec",["u8"]],["u8"]]]],[11,"bits",E,R[1195],42,[[["self"]],["usize"]]],[11,"modpow",E,R[1535],42,[[["self"],["biguint"]],["biguint"]]],[11,"sqrt",E,R[1196],42,[[["self"]],["biguint"]]],[11,"cbrt",E,R[1197],42,[[["self"]],["biguint"]]],[11,R[1382],E,R[1198],42,[[["self"],["u32"]],["biguint"]]],[11,"new",R[1520],R[1545],0,[[[T]],[R[756]]]],[11,"i",E,R[1546],0,[[],[R[756]]]],[11,"norm_sqr",E,R[1547],0,[[["self"]],[T]]],[11,"scale",E,R[1548],0,[[["self"],[T]],[R[756]]]],[11,"unscale",E,R[1549],0,[[["self"],[T]],[R[756]]]],[11,"powu",E,R[1550],0,[[["self"],["u32"]],[R[756]]]],[11,"conj",E,R[1551],0,[[["self"]],[R[756]]]],[11,"inv",E,R[1552],0,[[["self"]],[R[756]]]],[11,"powi",E,R[1553],0,[[["self"],["i32"]],[R[756]]]],[11,"l1_norm",E,R[1554],0,[[["self"]],[T]]],[11,"norm",E,R[1555],0,[[["self"]],[T]]],[11,"arg",E,R[1556],0,[[["self"]],[T]]],[11,"to_polar",E,R[1557],0,[[["self"]]]],[11,"from_polar",E,R[1558],0,[[[T]],[R[756]]]],[11,"exp",E,R[1559],0,[[["self"]],[R[756]]]],[11,"ln",E,R[1560],0,[[["self"]],[R[756]]]],[11,"sqrt",E,R[1561],0,[[["self"]],[R[756]]]],[11,"cbrt",E,R[1562],0,[[["self"]],[R[756]]]],[11,"powf",E,R[1563],0,[[["self"],[T]],[R[756]]]],[11,"log",E,R[1564],0,[[["self"],[T]],[R[756]]]],[11,"powc",E,R[1565],0,[[["self"],[R[756]]],[R[756]]]],[11,"expf",E,R[1566],0,[[["self"],[T]],[R[756]]]],[11,"sin",E,R[1567],0,[[["self"]],[R[756]]]],[11,"cos",E,R[1568],0,[[["self"]],[R[756]]]],[11,"tan",E,R[1569],0,[[["self"]],[R[756]]]],[11,"asin",E,R[1570],0,[[["self"]],[R[756]]]],[11,"acos",E,R[1571],0,[[["self"]],[R[756]]]],[11,"atan",E,R[1572],0,[[["self"]],[R[756]]]],[11,"sinh",E,R[1573],0,[[["self"]],[R[756]]]],[11,"cosh",E,R[1574],0,[[["self"]],[R[756]]]],[11,"tanh",E,R[1575],0,[[["self"]],[R[756]]]],[11,"asinh",E,R[1576],0,[[["self"]],[R[756]]]],[11,"acosh",E,R[1577],0,[[["self"]],[R[756]]]],[11,"atanh",E,R[1578],0,[[["self"]],[R[756]]]],[11,"finv",E,R[1579],0,[[["self"]],[R[756]]]],[11,"fdiv",E,R[1580],0,[[["self"],[R[756]]],[R[756]]]],[11,"is_nan",E,R[1581],0,[[],["bool"]]],[11,R[615],E,R[1582],0,[[],["bool"]]],[11,R[616],E,R[1583],0,[[],["bool"]]],[11,R[617],E,R[1584],0,[[],["bool"]]],[11,"new",R[1379],R[1393],45,[[[T]],[R[1394]]]],[11,"new",R[1521],R[1588],50,[[[T]],["ratio"]]],[11,R[1589],E,R[1590],50,[[[T]],["ratio"]]],[11,"new_raw",E,R[1591],50,[[[T]],["ratio"]]],[11,"to_integer",E,R[1592],50,[[["self"]],[T]]],[11,"numer",E,R[1593],50,[[["self"]],[T]]],[11,"denom",E,R[1594],50,[[["self"]],[T]]],[11,"is_integer",E,R[1595],50,[[["self"]],["bool"]]],[11,"reduced",E,R[1596],50,[[["self"]],["ratio"]]],[11,"recip",E,R[1597],50,[[["self"]],["ratio"]]],[11,"floor",E,R[1598],50,[[["self"]],["ratio"]]],[11,"ceil",E,R[1599],50,[[["self"]],["ratio"]]],[11,"round",E,R[1600],50,[[["self"]],["ratio"]]],[11,"trunc",E,R[1601],50,[[["self"]],["ratio"]]],[11,"fract",E,R[1602],50,[[["self"]],["ratio"]]],[11,"pow",E,R[1603],50,[[["self"],["i32"]],["ratio"]]],[11,"from_float",E,R[1604],50,[[[T]],[[R[25],["ratio"]],["ratio",["bigint"]]]]],[11,R[1605],E,E,50,[[["f"]],[[R[25],["ratio"]],["ratio"]]]]],"p":[[3,"Complex"],[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,R[693]],[8,R[684]],[8,R[685]],[8,R[686]],[8,R[687]],[8,"PrimInt"],[8,R[679]],[8,R[680]],[8,"NumCast"],[8,R[681]],[8,"Pow"],[8,"Float"],[8,R[1544]],[8,"ToBigInt"],[4,"Sign"],[3,R[754]],[8,"Roots"],[8,R[682]],[8,R[683]],[8,R[688]],[8,R[689]],[8,R[690]],[8,R[691]],[8,"Inv"],[8,"MulAdd"],[8,R[692]],[8,R[694]],[8,R[695]],[8,R[696]],[8,R[697]],[8,R[698]],[8,"Real"],[4,R[678]],[3,R[677]],[3,"BigInt"],[3,"BigUint"],[3,R[1216]],[3,R[765]],[3,R[755]],[3,"Range"],[3,R[1171]],[3,R[1401]],[3,R[1172]],[3,"Ratio"],[3,R[1479]]]};
searchIndex["num_bigint"]={"doc":"A Big integer (signed version: `BigInt`, unsigned version:…","i":[[3,R[1216],"num_bigint",E,N,N],[3,"BigUint",E,R[1511],N,N],[3,"BigInt",E,R[1512],N,N],[4,"Sign",E,R[1522],N,N],[13,"Minus",E,E,0,N],[13,"NoSign",E,E,0,N],[13,"Plus",E,E,0,N],[11,"new",E,R[1211],1,[[["vec",["u32"]],["u32"],["sign"]],["bigint"]]],[11,R[1523],E,R[1173],1,[[["biguint"],["sign"]],["bigint"]]],[11,R[1524],E,R[1173],1,[[["sign"]],["bigint"]]],[11,R[1179],E,R[1525],1,[[["self"],["sign"]]]],[11,R[1180],E,R[1173],1,[[["sign"]],["bigint"]]],[11,R[1181],E,R[1173],1,[[["sign"]],["bigint"]]],[11,R[1526],E,R[1174],1,[[],["bigint"]]],[11,R[1527],E,R[1174],1,[[],["bigint"]]],[11,R[1182],E,R[1173],1,[[["u32"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[1183],E,R[1175],1,[[["u32"],["sign"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[1184],E,R[1175],1,[[["u32"],["sign"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[1186],E,R[1176],1,[[["self"]]]],[11,R[1187],E,R[1176],1,[[["self"]]]],[11,R[1528],E,R[1177],1,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1529],E,R[1177],1,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1189],E,R[1190],1,[[["self"],["u32"]],["string"]]],[11,R[1191],E,R[1192],1,[[["self"],["u32"]]]],[11,R[1193],E,R[1194],1,[[["self"],["u32"]]]],[11,"sign",E,R[1530],1,[[["self"]],["sign"]]],[11,"bits",E,R[1195],1,[[["self"]],["usize"]]],[11,R[1199],E,R[1531],1,[[["self"]],[["biguint"],[R[25],["biguint"]]]]],[11,R[1214],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[1215],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[1212],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[1213],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[25],["bigint"]]]]],[11,"modpow",E,R[1532],1,[[["self"]],["self"]]],[11,"sqrt",E,R[1196],1,[[["self"]],["self"]]],[11,"cbrt",E,R[1197],1,[[["self"]],["self"]]],[11,R[1382],E,R[1198],1,[[["self"],["u32"]],["self"]]],[11,"new",E,R[1178],2,[[["vec",["u32"]],["u32"]],["biguint"]]],[11,R[1524],E,R[1178],2,[[],["biguint"]]],[11,R[1179],E,R[1533],2,[[["self"]]]],[11,R[1180],E,R[1178],2,[[],["biguint"]]],[11,R[1181],E,R[1178],2,[[],["biguint"]]],[11,R[1182],E,R[1534],2,[[["u32"]],[["biguint"],[R[25],["biguint"]]]]],[11,R[1183],E,R[1185],2,[[["u32"]],[["biguint"],[R[25],["biguint"]]]]],[11,R[1184],E,R[1185],2,[[["u32"]],[["biguint"],[R[25],["biguint"]]]]],[11,R[1186],E,R[1188],2,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1187],E,R[1188],2,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1189],E,R[1190],2,[[["self"],["u32"]],["string"]]],[11,R[1191],E,R[1192],2,[[["self"],["u32"]],[["u8"],["vec",["u8"]]]]],[11,R[1193],E,R[1194],2,[[["self"],["u32"]],[["u8"],["vec",["u8"]]]]],[11,"bits",E,R[1195],2,[[["self"]],["usize"]]],[11,"modpow",E,R[1535],2,[[["self"]],["self"]]],[11,"sqrt",E,R[1196],2,[[["self"]],["self"]]],[11,"cbrt",E,R[1197],2,[[["self"]],["self"]]],[11,R[1382],E,R[1198],2,[[["self"],["u32"]],["self"]]],[8,R[1544],E,R[1536],N,N],[10,R[1199],E,R[1537],3,[[["self"]],[["biguint"],[R[25],["biguint"]]]]],[8,"ToBigInt",E,R[1538],N,N],[10,R[1539],E,R[1540],4,[[["self"]],[["bigint"],[R[25],["bigint"]]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[98],E,E,5,[[["self"]],["string"]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"],[T]]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[98],E,E,2,[[["self"]],["string"]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[98],E,E,1,[[["self"]],["string"]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[1539],E,E,1,[[["self"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[1539],E,E,2,[[["self"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[1199],E,E,1,[[["self"]],[["biguint"],[R[25],["biguint"]]]]],[11,R[1199],E,E,2,[[["self"]],[["biguint"],[R[25],["biguint"]]]]],[11,"from",E,E,1,[[["i64"]],["self"]]],[11,"from",E,E,1,[[["i128"]],["self"]]],[11,"from",E,E,1,[[["i8"]],["self"]]],[11,"from",E,E,1,[[["i16"]],["self"]]],[11,"from",E,E,1,[[["i32"]],["self"]]],[11,"from",E,E,1,[[["isize"]],["self"]]],[11,"from",E,E,1,[[["u64"]],["self"]]],[11,"from",E,E,1,[[["u128"]],["self"]]],[11,"from",E,E,1,[[["u8"]],["self"]]],[11,"from",E,E,1,[[["u16"]],["self"]]],[11,"from",E,E,1,[[["u32"]],["self"]]],[11,"from",E,E,1,[[["usize"]],["self"]]],[11,"from",E,E,1,[[["biguint"]],["self"]]],[11,"from",E,E,2,[[["u64"]],["self"]]],[11,"from",E,E,2,[[["u128"]],["self"]]],[11,"from",E,E,2,[[["u8"]],["self"]]],[11,"from",E,E,2,[[["u16"]],["self"]]],[11,"from",E,E,2,[[["u32"]],["self"]]],[11,"from",E,E,2,[[["usize"]],["self"]]],[11,"cmp",E,E,0,[[["self"],["sign"]],[R[24]]]],[11,"cmp",E,E,1,[[["self"],["bigint"]],[R[24]]]],[11,"cmp",E,E,2,[[["self"],["biguint"]],[R[24]]]],[11,R[172],E,E,0,[[["self"],["sign"]],[[R[25],[R[24]]],[R[24]]]]],[11,R[172],E,E,1,[[["self"],["bigint"]],[[R[25],[R[24]]],[R[24]]]]],[11,R[172],E,E,2,[[["self"],["biguint"]],[[R[25],[R[24]]],[R[24]]]]],[11,"eq",E,E,0,[[["self"],["sign"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["bigint"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["biguint"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1200]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[1200]]],["bool"]]],[11,R[327],E,E,1,[[],["bigint"]]],[11,R[327],E,E,2,[[],["biguint"]]],[11,"clone",E,E,0,[[["self"]],["sign"]]],[11,"clone",E,E,1,[[["self"]],["bigint"]]],[11,"clone",E,E,2,[[["self"]],["biguint"]]],[11,"clone",E,E,5,[[["self"]],[R[1200]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"rem",E,E,1,[[["bigint"]],["bigint"]]],[11,"rem",E,E,1,[[["bigint"]],["bigint"]]],[11,"rem",E,E,1,[[["u8"]],["bigint"]]],[11,"rem",E,E,1,[[["u8"]],["bigint"]]],[11,"rem",E,E,1,[[["u16"]],["bigint"]]],[11,"rem",E,E,1,[[["u16"]],["bigint"]]],[11,"rem",E,E,1,[[["usize"]],["bigint"]]],[11,"rem",E,E,1,[[["usize"]],["bigint"]]],[11,"rem",E,E,1,[[["i8"]],["bigint"]]],[11,"rem",E,E,1,[[["i8"]],["bigint"]]],[11,"rem",E,E,1,[[["i16"]],["bigint"]]],[11,"rem",E,E,1,[[["i16"]],["bigint"]]],[11,"rem",E,E,1,[[["isize"]],["bigint"]]],[11,"rem",E,E,1,[[["isize"]],["bigint"]]],[11,"rem",E,E,1,[[["u32"]],["bigint"]]],[11,"rem",E,E,1,[[["u64"]],["bigint"]]],[11,"rem",E,E,1,[[["u128"]],["bigint"]]],[11,"rem",E,E,1,[[["u32"]],["bigint"]]],[11,"rem",E,E,1,[[["u64"]],["bigint"]]],[11,"rem",E,E,1,[[["u128"]],["bigint"]]],[11,"rem",E,E,1,[[["i32"]],["bigint"]]],[11,"rem",E,E,1,[[["i64"]],["bigint"]]],[11,"rem",E,E,1,[[["i128"]],["bigint"]]],[11,"rem",E,E,1,[[["i32"]],["bigint"]]],[11,"rem",E,E,1,[[["i64"]],["bigint"]]],[11,"rem",E,E,1,[[["i128"]],["bigint"]]],[11,"rem",E,E,2,[[["biguint"]],["biguint"]]],[11,"rem",E,E,2,[[["biguint"]],["biguint"]]],[11,"rem",E,E,2,[[["u8"]],["biguint"]]],[11,"rem",E,E,2,[[["u8"]],["biguint"]]],[11,"rem",E,E,2,[[["u16"]],["biguint"]]],[11,"rem",E,E,2,[[["u16"]],["biguint"]]],[11,"rem",E,E,2,[[["usize"]],["biguint"]]],[11,"rem",E,E,2,[[["usize"]],["biguint"]]],[11,"rem",E,E,2,[[["u32"]],["biguint"]]],[11,"rem",E,E,2,[[["u64"]],["biguint"]]],[11,"rem",E,E,2,[[["u128"]],["biguint"]]],[11,"rem",E,E,2,[[["u32"]],["biguint"]]],[11,"rem",E,E,2,[[["u64"]],["biguint"]]],[11,"rem",E,E,2,[[["u128"]],["biguint"]]],[11,"sub",E,E,1,[[["bigint"]],["bigint"]]],[11,"sub",E,E,1,[[["bigint"]],["bigint"]]],[11,"sub",E,E,1,[[["u8"]],["bigint"]]],[11,"sub",E,E,1,[[["u8"]],["bigint"]]],[11,"sub",E,E,1,[[["u16"]],["bigint"]]],[11,"sub",E,E,1,[[["u16"]],["bigint"]]],[11,"sub",E,E,1,[[["usize"]],["bigint"]]],[11,"sub",E,E,1,[[["usize"]],["bigint"]]],[11,"sub",E,E,1,[[["i8"]],["bigint"]]],[11,"sub",E,E,1,[[["i8"]],["bigint"]]],[11,"sub",E,E,1,[[["i16"]],["bigint"]]],[11,"sub",E,E,1,[[["i16"]],["bigint"]]],[11,"sub",E,E,1,[[["isize"]],["bigint"]]],[11,"sub",E,E,1,[[["isize"]],["bigint"]]],[11,"sub",E,E,1,[[["u32"]],["bigint"]]],[11,"sub",E,E,1,[[["u64"]],["bigint"]]],[11,"sub",E,E,1,[[["u128"]],["bigint"]]],[11,"sub",E,E,1,[[["u32"]],["bigint"]]],[11,"sub",E,E,1,[[["u64"]],["bigint"]]],[11,"sub",E,E,1,[[["u128"]],["bigint"]]],[11,"sub",E,E,1,[[["i32"]],["bigint"]]],[11,"sub",E,E,1,[[["i64"]],["bigint"]]],[11,"sub",E,E,1,[[["i128"]],["bigint"]]],[11,"sub",E,E,1,[[["i32"]],["bigint"]]],[11,"sub",E,E,1,[[["i64"]],["bigint"]]],[11,"sub",E,E,1,[[["i128"]],["bigint"]]],[11,"sub",E,E,2,[[["biguint"]],["biguint"]]],[11,"sub",E,E,2,[[["biguint"]],["biguint"]]],[11,"sub",E,E,2,[[["u8"]],["biguint"]]],[11,"sub",E,E,2,[[["u8"]],["biguint"]]],[11,"sub",E,E,2,[[["u16"]],["biguint"]]],[11,"sub",E,E,2,[[["u16"]],["biguint"]]],[11,"sub",E,E,2,[[["usize"]],["biguint"]]],[11,"sub",E,E,2,[[["usize"]],["biguint"]]],[11,"sub",E,E,2,[[["u32"]],["biguint"]]],[11,"sub",E,E,2,[[["u64"]],["biguint"]]],[11,"sub",E,E,2,[[["u128"]],["biguint"]]],[11,"sub",E,E,2,[[["u32"]],["biguint"]]],[11,"sub",E,E,2,[[["u64"]],["biguint"]]],[11,"sub",E,E,2,[[["u128"]],["biguint"]]],[11,R[777],E,E,1,[[["str"]],[["bigint"],[R[1200]],[R[3],["bigint",R[1200]]]]]],[11,R[777],E,E,2,[[["str"]],[[R[3],["biguint",R[1200]]],["biguint"],[R[1200]]]]],[11,"add",E,E,1,[[["bigint"]],["bigint"]]],[11,"add",E,E,1,[[["bigint"]],["bigint"]]],[11,"add",E,E,1,[[["u8"]],["bigint"]]],[11,"add",E,E,1,[[["u8"]],["bigint"]]],[11,"add",E,E,1,[[["u16"]],["bigint"]]],[11,"add",E,E,1,[[["u16"]],["bigint"]]],[11,"add",E,E,1,[[["usize"]],["bigint"]]],[11,"add",E,E,1,[[["usize"]],["bigint"]]],[11,"add",E,E,1,[[["i8"]],["bigint"]]],[11,"add",E,E,1,[[["i8"]],["bigint"]]],[11,"add",E,E,1,[[["i16"]],["bigint"]]],[11,"add",E,E,1,[[["i16"]],["bigint"]]],[11,"add",E,E,1,[[["isize"]],["bigint"]]],[11,"add",E,E,1,[[["isize"]],["bigint"]]],[11,"add",E,E,1,[[["u32"]],["bigint"]]],[11,"add",E,E,1,[[["u64"]],["bigint"]]],[11,"add",E,E,1,[[["u128"]],["bigint"]]],[11,"add",E,E,1,[[["u32"]],["bigint"]]],[11,"add",E,E,1,[[["u64"]],["bigint"]]],[11,"add",E,E,1,[[["u128"]],["bigint"]]],[11,"add",E,E,1,[[["i32"]],["bigint"]]],[11,"add",E,E,1,[[["i64"]],["bigint"]]],[11,"add",E,E,1,[[["i128"]],["bigint"]]],[11,"add",E,E,1,[[["i32"]],["bigint"]]],[11,"add",E,E,1,[[["i64"]],["bigint"]]],[11,"add",E,E,1,[[["i128"]],["bigint"]]],[11,"add",E,E,2,[[["biguint"]],["biguint"]]],[11,"add",E,E,2,[[["biguint"]],["biguint"]]],[11,"add",E,E,2,[[["u8"]],["biguint"]]],[11,"add",E,E,2,[[["u8"]],["biguint"]]],[11,"add",E,E,2,[[["u16"]],["biguint"]]],[11,"add",E,E,2,[[["u16"]],["biguint"]]],[11,"add",E,E,2,[[["usize"]],["biguint"]]],[11,"add",E,E,2,[[["usize"]],["biguint"]]],[11,"add",E,E,2,[[["u32"]],["biguint"]]],[11,"add",E,E,2,[[["u64"]],["biguint"]]],[11,"add",E,E,2,[[["u128"]],["biguint"]]],[11,"add",E,E,2,[[["u32"]],["biguint"]]],[11,"add",E,E,2,[[["u64"]],["biguint"]]],[11,"add",E,E,2,[[["u128"]],["biguint"]]],[11,"mul",E,E,0,[[["sign"]],["sign"]]],[11,"mul",E,E,1,[[["bigint"]],["bigint"]]],[11,"mul",E,E,1,[[["bigint"]],["bigint"]]],[11,"mul",E,E,1,[[["u8"]],["bigint"]]],[11,"mul",E,E,1,[[["u8"]],["bigint"]]],[11,"mul",E,E,1,[[["u16"]],["bigint"]]],[11,"mul",E,E,1,[[["u16"]],["bigint"]]],[11,"mul",E,E,1,[[["usize"]],["bigint"]]],[11,"mul",E,E,1,[[["usize"]],["bigint"]]],[11,"mul",E,E,1,[[["i8"]],["bigint"]]],[11,"mul",E,E,1,[[["i8"]],["bigint"]]],[11,"mul",E,E,1,[[["i16"]],["bigint"]]],[11,"mul",E,E,1,[[["i16"]],["bigint"]]],[11,"mul",E,E,1,[[["isize"]],["bigint"]]],[11,"mul",E,E,1,[[["isize"]],["bigint"]]],[11,"mul",E,E,1,[[["u32"]],["bigint"]]],[11,"mul",E,E,1,[[["u64"]],["bigint"]]],[11,"mul",E,E,1,[[["u128"]],["bigint"]]],[11,"mul",E,E,1,[[["u32"]],["bigint"]]],[11,"mul",E,E,1,[[["u64"]],["bigint"]]],[11,"mul",E,E,1,[[["u128"]],["bigint"]]],[11,"mul",E,E,1,[[["i32"]],["bigint"]]],[11,"mul",E,E,1,[[["i64"]],["bigint"]]],[11,"mul",E,E,1,[[["i128"]],["bigint"]]],[11,"mul",E,E,1,[[["i32"]],["bigint"]]],[11,"mul",E,E,1,[[["i64"]],["bigint"]]],[11,"mul",E,E,1,[[["i128"]],["bigint"]]],[11,"mul",E,E,2,[[["biguint"]],["biguint"]]],[11,"mul",E,E,2,[[["biguint"]],["biguint"]]],[11,"mul",E,E,2,[[["u8"]],["biguint"]]],[11,"mul",E,E,2,[[["u8"]],["biguint"]]],[11,"mul",E,E,2,[[["u16"]],["biguint"]]],[11,"mul",E,E,2,[[["u16"]],["biguint"]]],[11,"mul",E,E,2,[[["usize"]],["biguint"]]],[11,"mul",E,E,2,[[["usize"]],["biguint"]]],[11,"mul",E,E,2,[[["u32"]],["biguint"]]],[11,"mul",E,E,2,[[["u64"]],["biguint"]]],[11,"mul",E,E,2,[[["u128"]],["biguint"]]],[11,"mul",E,E,2,[[["u32"]],["biguint"]]],[11,"mul",E,E,2,[[["u64"]],["biguint"]]],[11,"mul",E,E,2,[[["u128"]],["biguint"]]],[11,"div",E,E,1,[[["bigint"]],["bigint"]]],[11,"div",E,E,1,[[["bigint"]],["bigint"]]],[11,"div",E,E,1,[[["u8"]],["bigint"]]],[11,"div",E,E,1,[[["u8"]],["bigint"]]],[11,"div",E,E,1,[[["u16"]],["bigint"]]],[11,"div",E,E,1,[[["u16"]],["bigint"]]],[11,"div",E,E,1,[[["usize"]],["bigint"]]],[11,"div",E,E,1,[[["usize"]],["bigint"]]],[11,"div",E,E,1,[[["i8"]],["bigint"]]],[11,"div",E,E,1,[[["i8"]],["bigint"]]],[11,"div",E,E,1,[[["i16"]],["bigint"]]],[11,"div",E,E,1,[[["i16"]],["bigint"]]],[11,"div",E,E,1,[[["isize"]],["bigint"]]],[11,"div",E,E,1,[[["isize"]],["bigint"]]],[11,"div",E,E,1,[[["u32"]],["bigint"]]],[11,"div",E,E,1,[[["u64"]],["bigint"]]],[11,"div",E,E,1,[[["u128"]],["bigint"]]],[11,"div",E,E,1,[[["u32"]],["bigint"]]],[11,"div",E,E,1,[[["u64"]],["bigint"]]],[11,"div",E,E,1,[[["u128"]],["bigint"]]],[11,"div",E,E,1,[[["i32"]],["bigint"]]],[11,"div",E,E,1,[[["i64"]],["bigint"]]],[11,"div",E,E,1,[[["i128"]],["bigint"]]],[11,"div",E,E,1,[[["i32"]],["bigint"]]],[11,"div",E,E,1,[[["i64"]],["bigint"]]],[11,"div",E,E,1,[[["i128"]],["bigint"]]],[11,"div",E,E,2,[[["biguint"]],["biguint"]]],[11,"div",E,E,2,[[["biguint"]],["biguint"]]],[11,"div",E,E,2,[[["u8"]],["biguint"]]],[11,"div",E,E,2,[[["u8"]],["biguint"]]],[11,"div",E,E,2,[[["u16"]],["biguint"]]],[11,"div",E,E,2,[[["u16"]],["biguint"]]],[11,"div",E,E,2,[[["usize"]],["biguint"]]],[11,"div",E,E,2,[[["usize"]],["biguint"]]],[11,"div",E,E,2,[[["u32"]],["biguint"]]],[11,"div",E,E,2,[[["u64"]],["biguint"]]],[11,"div",E,E,2,[[["u128"]],["biguint"]]],[11,"div",E,E,2,[[["u32"]],["biguint"]]],[11,"div",E,E,2,[[["u64"]],["biguint"]]],[11,"div",E,E,2,[[["u128"]],["biguint"]]],[11,"neg",E,R[1541],0,[[],["sign"]]],[11,"neg",E,E,1,[[],["bigint"]]],[11,"neg",E,E,2,[[],["biguint"]]],[11,R[758],E,E,1,[[["self"],["bigint"]]]],[11,R[758],E,E,1,[[["self"],["bigint"]]]],[11,R[758],E,E,1,[[["self"],["u8"]]]],[11,R[758],E,E,1,[[["self"],["u16"]]]],[11,R[758],E,E,1,[[["self"],["usize"]]]],[11,R[758],E,E,1,[[["self"],["i8"]]]],[11,R[758],E,E,1,[[["self"],["i16"]]]],[11,R[758],E,E,1,[[["self"],["isize"]]]],[11,R[758],E,E,1,[[["self"],["u32"]]]],[11,R[758],E,E,1,[[["self"],["u64"]]]],[11,R[758],E,E,1,[[["self"],["u128"]]]],[11,R[758],E,E,1,[[["self"],["i32"]]]],[11,R[758],E,E,1,[[["self"],["i64"]]]],[11,R[758],E,E,1,[[["self"],["i128"]]]],[11,R[758],E,E,2,[[["self"],["biguint"]]]],[11,R[758],E,E,2,[[["self"],["biguint"]]]],[11,R[758],E,E,2,[[["self"],["u8"]]]],[11,R[758],E,E,2,[[["self"],["u16"]]]],[11,R[758],E,E,2,[[["self"],["usize"]]]],[11,R[758],E,E,2,[[["self"],["u32"]]]],[11,R[758],E,E,2,[[["self"],["u64"]]]],[11,R[758],E,E,2,[[["self"],["u128"]]]],[11,R[759],E,E,1,[[["self"],["bigint"]]]],[11,R[759],E,E,1,[[["self"],["bigint"]]]],[11,R[759],E,E,1,[[["self"],["u8"]]]],[11,R[759],E,E,1,[[["self"],["u16"]]]],[11,R[759],E,E,1,[[["self"],["usize"]]]],[11,R[759],E,E,1,[[["self"],["i8"]]]],[11,R[759],E,E,1,[[["self"],["i16"]]]],[11,R[759],E,E,1,[[["self"],["isize"]]]],[11,R[759],E,E,1,[[["self"],["u32"]]]],[11,R[759],E,E,1,[[["self"],["u64"]]]],[11,R[759],E,E,1,[[["self"],["u128"]]]],[11,R[759],E,E,1,[[["self"],["i32"]]]],[11,R[759],E,E,1,[[["self"],["i64"]]]],[11,R[759],E,E,1,[[["self"],["i128"]]]],[11,R[759],E,E,2,[[["self"],["biguint"]]]],[11,R[759],E,E,2,[[["self"],["biguint"]]]],[11,R[759],E,E,2,[[["self"],["u8"]]]],[11,R[759],E,E,2,[[["self"],["u16"]]]],[11,R[759],E,E,2,[[["self"],["usize"]]]],[11,R[759],E,E,2,[[["self"],["u32"]]]],[11,R[759],E,E,2,[[["self"],["u64"]]]],[11,R[759],E,E,2,[[["self"],["u128"]]]],[11,R[760],E,E,1,[[["self"],["bigint"]]]],[11,R[760],E,E,1,[[["self"],["bigint"]]]],[11,R[760],E,E,1,[[["self"],["u8"]]]],[11,R[760],E,E,1,[[["self"],["u16"]]]],[11,R[760],E,E,1,[[["self"],["usize"]]]],[11,R[760],E,E,1,[[["self"],["i8"]]]],[11,R[760],E,E,1,[[["self"],["i16"]]]],[11,R[760],E,E,1,[[["self"],["isize"]]]],[11,R[760],E,E,1,[[["self"],["u32"]]]],[11,R[760],E,E,1,[[["self"],["u64"]]]],[11,R[760],E,E,1,[[["self"],["u128"]]]],[11,R[760],E,E,1,[[["self"],["i32"]]]],[11,R[760],E,E,1,[[["self"],["i64"]]]],[11,R[760],E,E,1,[[["self"],["i128"]]]],[11,R[760],E,E,2,[[["self"],["biguint"]]]],[11,R[760],E,E,2,[[["self"],["biguint"]]]],[11,R[760],E,E,2,[[["self"],["u8"]]]],[11,R[760],E,E,2,[[["self"],["u16"]]]],[11,R[760],E,E,2,[[["self"],["usize"]]]],[11,R[760],E,E,2,[[["self"],["u32"]]]],[11,R[760],E,E,2,[[["self"],["u64"]]]],[11,R[760],E,E,2,[[["self"],["u128"]]]],[11,R[761],E,E,1,[[["self"],["bigint"]]]],[11,R[761],E,E,1,[[["self"],["bigint"]]]],[11,R[761],E,E,1,[[["self"],["u8"]]]],[11,R[761],E,E,1,[[["self"],["u16"]]]],[11,R[761],E,E,1,[[["self"],["usize"]]]],[11,R[761],E,E,1,[[["self"],["i8"]]]],[11,R[761],E,E,1,[[["self"],["i16"]]]],[11,R[761],E,E,1,[[["self"],["isize"]]]],[11,R[761],E,E,1,[[["self"],["u32"]]]],[11,R[761],E,E,1,[[["self"],["u64"]]]],[11,R[761],E,E,1,[[["self"],["u128"]]]],[11,R[761],E,E,1,[[["self"],["i32"]]]],[11,R[761],E,E,1,[[["self"],["i64"]]]],[11,R[761],E,E,1,[[["self"],["i128"]]]],[11,R[761],E,E,2,[[["self"],["biguint"]]]],[11,R[761],E,E,2,[[["self"],["biguint"]]]],[11,R[761],E,E,2,[[["self"],["u8"]]]],[11,R[761],E,E,2,[[["self"],["u16"]]]],[11,R[761],E,E,2,[[["self"],["usize"]]]],[11,R[761],E,E,2,[[["self"],["u32"]]]],[11,R[761],E,E,2,[[["self"],["u64"]]]],[11,R[761],E,E,2,[[["self"],["u128"]]]],[11,R[762],E,E,1,[[["self"],["bigint"]]]],[11,R[762],E,E,1,[[["self"],["bigint"]]]],[11,R[762],E,E,1,[[["self"],["u8"]]]],[11,R[762],E,E,1,[[["self"],["u16"]]]],[11,R[762],E,E,1,[[["self"],["usize"]]]],[11,R[762],E,E,1,[[["self"],["i8"]]]],[11,R[762],E,E,1,[[["self"],["i16"]]]],[11,R[762],E,E,1,[[["self"],["isize"]]]],[11,R[762],E,E,1,[[["self"],["u32"]]]],[11,R[762],E,E,1,[[["self"],["u64"]]]],[11,R[762],E,E,1,[[["self"],["u128"]]]],[11,R[762],E,E,1,[[["self"],["i32"]]]],[11,R[762],E,E,1,[[["self"],["i64"]]]],[11,R[762],E,E,1,[[["self"],["i128"]]]],[11,R[762],E,E,2,[[["self"],["biguint"]]]],[11,R[762],E,E,2,[[["self"],["biguint"]]]],[11,R[762],E,E,2,[[["self"],["u8"]]]],[11,R[762],E,E,2,[[["self"],["u16"]]]],[11,R[762],E,E,2,[[["self"],["usize"]]]],[11,R[762],E,E,2,[[["self"],["u32"]]]],[11,R[762],E,E,2,[[["self"],["u64"]]]],[11,R[762],E,E,2,[[["self"],["u128"]]]],[11,"not",E,E,1,[[],["bigint"]]],[11,"bitand",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitand",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitand",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitand",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitor",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitor",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitxor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitxor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitxor",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitxor",E,E,2,[[["biguint"]],["biguint"]]],[11,"shl",E,E,1,[[["usize"]],["bigint"]]],[11,"shl",E,E,2,[[["usize"]],["biguint"]]],[11,"shr",E,E,1,[[["usize"]],["bigint"]]],[11,"shr",E,E,2,[[["usize"]],["biguint"]]],[11,R[1201],E,E,1,[[["self"],["bigint"]]]],[11,R[1201],E,E,1,[[["self"],["bigint"]]]],[11,R[1201],E,E,2,[[["self"],["biguint"]]]],[11,R[1201],E,E,2,[[["self"],["biguint"]]]],[11,R[1202],E,E,1,[[["self"],["bigint"]]]],[11,R[1202],E,E,1,[[["self"],["bigint"]]]],[11,R[1202],E,E,2,[[["self"],["biguint"]]]],[11,R[1202],E,E,2,[[["self"],["biguint"]]]],[11,R[1203],E,E,1,[[["self"],["bigint"]]]],[11,R[1203],E,E,1,[[["self"],["bigint"]]]],[11,R[1203],E,E,2,[[["self"],["biguint"]]]],[11,R[1203],E,E,2,[[["self"],["biguint"]]]],[11,R[1542],E,E,1,[[["self"],["usize"]]]],[11,R[1542],E,E,2,[[["self"],["usize"]]]],[11,R[1543],E,E,1,[[["self"],["usize"]]]],[11,R[1543],E,E,2,[[["self"],["usize"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"product",E,E,1,[[["i"]],["self"]]],[11,"product",E,E,2,[[["i"]],["self"]]],[11,"sum",E,E,1,[[["i"]],["self"]]],[11,"sum",E,E,2,[[["i"]],["self"]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,R[53],E,E,5,[[["self"]],["str"]]],[11,R[1382],E,E,1,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,E,1,[[["self"]],["self"]]],[11,"cbrt",E,E,1,[[["self"]],["self"]]],[11,R[1382],E,E,2,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,E,2,[[["self"]],["self"]]],[11,"cbrt",E,E,2,[[["self"]],["self"]]],[11,"div_rem",E,E,1,[[["self"],["bigint"]]]],[11,R[750],E,E,1,[[["self"],["bigint"]],["bigint"]]],[11,R[751],E,E,1,[[["self"],["bigint"]],["bigint"]]],[11,R[752],E,E,1,[[["self"],["bigint"]]]],[11,"gcd",E,R[1204],1,[[["self"],["bigint"]],["bigint"]]],[11,"lcm",E,R[1205],1,[[["self"],["bigint"]],["bigint"]]],[11,"divides",E,R[1206],1,[[["self"],["bigint"]],["bool"]]],[11,R[1207],E,R[1208],1,[[["self"],["bigint"]],["bool"]]],[11,"is_even",E,R[1209],1,[[["self"]],["bool"]]],[11,"is_odd",E,R[1210],1,[[["self"]],["bool"]]],[11,"div_rem",E,E,2,[[["self"],["biguint"]]]],[11,R[750],E,E,2,[[["self"],["biguint"]],["biguint"]]],[11,R[751],E,E,2,[[["self"],["biguint"]],["biguint"]]],[11,R[752],E,E,2,[[["self"],["biguint"]]]],[11,"gcd",E,R[1204],2,[[["self"]],["self"]]],[11,"lcm",E,R[1205],2,[[["self"],["biguint"]],["biguint"]]],[11,"divides",E,R[1206],2,[[["self"],["biguint"]],["bool"]]],[11,R[1207],E,R[1208],2,[[["self"],["biguint"]],["bool"]]],[11,"is_even",E,R[1209],2,[[["self"]],["bool"]]],[11,"is_odd",E,R[1210],2,[[["self"]],["bool"]]],[11,"to_i64",E,E,1,[[["self"]],[[R[25],["i64"]],["i64"]]]],[11,"to_i128",E,E,1,[[["self"]],[[R[25],["i128"]],["i128"]]]],[11,"to_u64",E,E,1,[[["self"]],[["u64"],[R[25],["u64"]]]]],[11,"to_u128",E,E,1,[[["self"]],[["u128"],[R[25],["u128"]]]]],[11,"to_f32",E,E,1,[[["self"]],[["f32"],[R[25],["f32"]]]]],[11,"to_f64",E,E,1,[[["self"]],[["f64"],[R[25],["f64"]]]]],[11,"to_i64",E,E,2,[[["self"]],[[R[25],["i64"]],["i64"]]]],[11,"to_i128",E,E,2,[[["self"]],[[R[25],["i128"]],["i128"]]]],[11,"to_u64",E,E,2,[[["self"]],[["u64"],[R[25],["u64"]]]]],[11,"to_u128",E,E,2,[[["self"]],[["u128"],[R[25],["u128"]]]]],[11,"to_f32",E,E,2,[[["self"]],[["f32"],[R[25],["f32"]]]]],[11,"to_f64",E,E,2,[[["self"]],[["f64"],[R[25],["f64"]]]]],[11,R[781],E,E,1,[[["i64"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[767],E,E,1,[[["i128"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[782],E,E,1,[[["u64"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[769],E,E,1,[[["u128"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[789],E,E,1,[[["f64"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[781],E,E,2,[[["i64"]],[["biguint"],[R[25],["biguint"]]]]],[11,R[767],E,E,2,[[["i128"]],[["biguint"],[R[25],["biguint"]]]]],[11,R[782],E,E,2,[[["u64"]],[["biguint"],[R[25],["biguint"]]]]],[11,R[769],E,E,2,[[["u128"]],[["biguint"],[R[25],["biguint"]]]]],[11,R[789],E,E,2,[[["f64"]],[["biguint"],[R[25],["biguint"]]]]],[11,R[771],E,R[1211],1,[[["u32"],["str"]],[["bigint"],[R[1200]],[R[3],["bigint",R[1200]]]]]],[11,R[771],E,R[1178],2,[[["u32"],["str"]],[[R[3],["biguint",R[1200]]],["biguint"],[R[1200]]]]],[11,"zero",E,E,1,[[],["bigint"]]],[11,"is_zero",E,E,1,[[["self"]],["bool"]]],[11,"zero",E,E,2,[[],["biguint"]]],[11,"is_zero",E,E,2,[[["self"]],["bool"]]],[11,"one",E,E,1,[[],["bigint"]]],[11,"is_one",E,E,1,[[["self"]],["bool"]]],[11,"one",E,E,2,[[],["biguint"]]],[11,"is_one",E,E,2,[[["self"]],["bool"]]],[11,R[1212],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[1212],E,E,2,[[["self"],["biguint"]],[["biguint"],[R[25],["biguint"]]]]],[11,R[1213],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[1213],E,E,2,[[["self"],["biguint"]],[["biguint"],[R[25],["biguint"]]]]],[11,R[1214],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[1214],E,E,2,[[["self"],["biguint"]],[["biguint"],[R[25],["biguint"]]]]],[11,R[1215],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[25],["bigint"]]]]],[11,R[1215],E,E,2,[[["self"],["biguint"]],[["biguint"],[R[25],["biguint"]]]]],[11,"abs",E,E,1,[[["self"]],["bigint"]]],[11,"abs_sub",E,E,1,[[["self"],["bigint"]],["bigint"]]],[11,"signum",E,E,1,[[["self"]],["bigint"]]],[11,R[790],E,E,1,[[["self"]],["bool"]]],[11,R[791],E,E,1,[[["self"]],["bool"]]]],"p":[[4,"Sign"],[3,"BigInt"],[3,"BigUint"],[8,R[1544]],[8,"ToBigInt"],[3,R[1216]]]};
searchIndex["num_complex"]={"doc":"Complex numbers.","i":[[3,"Complex","num_complex",R[1513],N,N],[12,"re",E,R[1514],0,N],[12,"im",E,R[1515],0,N],[3,R[765],E,E,N,N],[6,"Complex32",E,E,N,N],[6,"Complex64",E,E,N,N],[11,"new",E,R[1545],0,[[[T]],["self"]]],[11,"i",E,R[1546],0,[[],["self"]]],[11,"norm_sqr",E,R[1547],0,[[["self"]],[T]]],[11,"scale",E,R[1548],0,[[["self"],[T]],["self"]]],[11,"unscale",E,R[1549],0,[[["self"],[T]],["self"]]],[11,"powu",E,R[1550],0,[[["self"],["u32"]],["self"]]],[11,"conj",E,R[1551],0,[[["self"]],["self"]]],[11,"inv",E,R[1552],0,[[["self"]],["self"]]],[11,"powi",E,R[1553],0,[[["self"],["i32"]],["self"]]],[11,"l1_norm",E,R[1554],0,[[["self"]],[T]]],[11,"norm",E,R[1555],0,[[["self"]],[T]]],[11,"arg",E,R[1556],0,[[["self"]],[T]]],[11,"to_polar",E,R[1557],0,[[["self"]]]],[11,"from_polar",E,R[1558],0,[[[T]],["self"]]],[11,"exp",E,R[1559],0,[[["self"]],["self"]]],[11,"ln",E,R[1560],0,[[["self"]],["self"]]],[11,"sqrt",E,R[1561],0,[[["self"]],["self"]]],[11,"cbrt",E,R[1562],0,[[["self"]],["self"]]],[11,"powf",E,R[1563],0,[[["self"],[T]],["self"]]],[11,"log",E,R[1564],0,[[["self"],[T]],["self"]]],[11,"powc",E,R[1565],0,[[["self"]],["self"]]],[11,"expf",E,R[1566],0,[[["self"],[T]],["self"]]],[11,"sin",E,R[1567],0,[[["self"]],["self"]]],[11,"cos",E,R[1568],0,[[["self"]],["self"]]],[11,"tan",E,R[1569],0,[[["self"]],["self"]]],[11,"asin",E,R[1570],0,[[["self"]],["self"]]],[11,"acos",E,R[1571],0,[[["self"]],["self"]]],[11,"atan",E,R[1572],0,[[["self"]],["self"]]],[11,"sinh",E,R[1573],0,[[["self"]],["self"]]],[11,"cosh",E,R[1574],0,[[["self"]],["self"]]],[11,"tanh",E,R[1575],0,[[["self"]],["self"]]],[11,"asinh",E,R[1576],0,[[["self"]],["self"]]],[11,"acosh",E,R[1577],0,[[["self"]],["self"]]],[11,"atanh",E,R[1578],0,[[["self"]],["self"]]],[11,"finv",E,R[1579],0,[[["self"]],[R[756]]]],[11,"fdiv",E,R[1580],0,[[["self"],[R[756]]],[R[756]]]],[11,"is_nan",E,R[1581],0,[[],["bool"]]],[11,R[615],E,R[1582],0,[[],["bool"]]],[11,R[616],E,R[1583],0,[[],["bool"]]],[11,R[617],E,R[1584],0,[[],["bool"]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[98],E,E,0,[[["self"]],["string"]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[98],E,E,1,[[["self"]],["string"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"rem",E,E,0,[[[R[756]]]]],[11,"rem",E,E,0,[[]]],[11,"rem",E,E,0,[[[T]]]],[11,"rem",E,E,0,[[[T]]]],[11,"sub",E,E,0,[[[R[756]]]]],[11,"sub",E,E,0,[[]]],[11,"sub",E,E,0,[[[T]]]],[11,"sub",E,E,0,[[[T]]]],[11,"eq",E,E,0,[[["self"],[R[756]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[756]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[757]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[757]]],["bool"]]],[11,R[777],E,R[763],0,[[["str"]],[R[3]]]],[11,"add",E,E,0,[[[R[756]]]]],[11,"add",E,E,0,[[]]],[11,"add",E,E,0,[[[T]]]],[11,"add",E,E,0,[[[T]]]],[11,"mul",E,E,0,[[[R[756]]]]],[11,"mul",E,E,0,[[]]],[11,"mul",E,E,0,[[[T]]]],[11,"mul",E,E,0,[[[T]]]],[11,"div",E,E,0,[[[R[756]]]]],[11,"div",E,E,0,[[]]],[11,"div",E,E,0,[[[T]]]],[11,"div",E,E,0,[[[T]]]],[11,"neg",E,E,0,[[]]],[11,R[758],E,E,0,[[["self"]]]],[11,R[758],E,E,0,[[["self"],[T]]]],[11,R[758],E,E,0,[[["self"],["self"]]]],[11,R[758],E,E,0,[[["self"],[T]]]],[11,R[759],E,E,0,[[["self"]]]],[11,R[759],E,E,0,[[["self"],[T]]]],[11,R[759],E,E,0,[[["self"],["self"]]]],[11,R[759],E,E,0,[[["self"],[T]]]],[11,R[760],E,E,0,[[["self"]]]],[11,R[760],E,E,0,[[["self"],[T]]]],[11,R[760],E,E,0,[[["self"],["self"]]]],[11,R[760],E,E,0,[[["self"],[T]]]],[11,R[761],E,E,0,[[["self"]]]],[11,R[761],E,E,0,[[["self"],[T]]]],[11,R[761],E,E,0,[[["self"],["self"]]]],[11,R[761],E,E,0,[[["self"],[T]]]],[11,R[762],E,E,0,[[["self"]]]],[11,R[762],E,E,0,[[["self"],[T]]]],[11,R[762],E,E,0,[[["self"],["self"]]]],[11,R[762],E,E,0,[[["self"],[T]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"product",E,E,0,[[["i"]],["self"]]],[11,"product",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"from",E,E,0,[[[T]],["self"]]],[11,"from",E,E,0,[[[T]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"clone",E,E,0,[[["self"]],[R[756]]]],[11,R[327],E,E,0,[[],[R[756]]]],[11,R[53],E,E,1,[[["self"]],["str"]]],[11,R[780],E,E,0,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[779],E,E,0,[[["self"]],[[R[25],["isize"]],["isize"]]]],[11,"to_u8",E,E,0,[[["self"]],[[R[25],["u8"]],["u8"]]]],[11,"to_u16",E,E,0,[[["self"]],[["u16"],[R[25],["u16"]]]]],[11,"to_u32",E,E,0,[[["self"]],[["u32"],[R[25],["u32"]]]]],[11,"to_u64",E,E,0,[[["self"]],[["u64"],[R[25],["u64"]]]]],[11,"to_i8",E,E,0,[[["self"]],[["i8"],[R[25],["i8"]]]]],[11,"to_i16",E,E,0,[[["self"]],[["i16"],[R[25],["i16"]]]]],[11,"to_i32",E,E,0,[[["self"]],[["i32"],[R[25],["i32"]]]]],[11,"to_i64",E,E,0,[[["self"]],[[R[25],["i64"]],["i64"]]]],[11,"to_u128",E,E,0,[[["self"]],[["u128"],[R[25],["u128"]]]]],[11,"to_i128",E,E,0,[[["self"]],[[R[25],["i128"]],["i128"]]]],[11,"to_f32",E,E,0,[[["self"]],[["f32"],[R[25],["f32"]]]]],[11,"to_f64",E,E,0,[[["self"]],[[R[25],["f64"]],["f64"]]]],[11,R[768],E,E,0,[[["usize"]],[R[25]]]],[11,R[766],E,E,0,[[["isize"]],[R[25]]]],[11,R[785],E,E,0,[[["u8"]],[R[25]]]],[11,R[786],E,E,0,[[["u16"]],[R[25]]]],[11,R[787],E,E,0,[[["u32"]],[R[25]]]],[11,R[782],E,E,0,[[["u64"]],[R[25]]]],[11,"from_i8",E,E,0,[[["i8"]],[R[25]]]],[11,R[783],E,E,0,[[["i16"]],[R[25]]]],[11,R[784],E,E,0,[[["i32"]],[R[25]]]],[11,R[781],E,E,0,[[["i64"]],[R[25]]]],[11,R[769],E,E,0,[[["u128"]],[R[25]]]],[11,R[767],E,E,0,[[["i128"]],[R[25]]]],[11,R[788],E,E,0,[[["f32"]],[R[25]]]],[11,R[789],E,E,0,[[["f64"]],[R[25]]]],[11,"from",E,E,0,[[[R[770]]],[R[25]]]],[11,"as_",E,E,0,[[],[U]]],[11,R[771],E,R[763],0,[[["u32"],["str"]],[R[3]]]],[11,"zero",E,E,0,[[],["self"]]],[11,"is_zero",E,E,0,[[["self"]],["bool"]]],[11,R[1609],E,E,0,[[["self"]]]],[11,"one",E,E,0,[[],["self"]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,"set_one",E,E,0,[[["self"]]]],[11,"inv",E,E,0,[[]]],[11,"mul_add",E,E,0,[[[R[756]]],[R[756]]]],[11,R[764],E,E,0,[[["self"],[R[756]]]]],[11,R[764],E,E,0,[[["self"],[R[756]]]]],[11,"pow",E,E,0,[[["f32"]]]],[11,"pow",E,E,0,[[["f32"]]]],[11,"pow",E,E,0,[[["f64"]]]],[11,"pow",E,E,0,[[["f64"]]]],[11,"pow",E,E,0,[[[R[756]]]]],[11,"pow",E,E,0,[[[R[756]]]]]],"p":[[3,"Complex"],[3,R[765]]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical",E,"Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"p":[]};
searchIndex["num_derive"]={"doc":"Procedural macros to derive numeric traits in Rust.","i":[[24,R[680],"num_derive","Derives [`num_traits::FromPrimitive`][from] for simple…",N,N],[24,R[679],E,"Derives [`num_traits::ToPrimitive`][to] for simple enums…",N,N],[24,"NumOps",E,"Derives [`num_traits::NumOps`][num_ops] for newtypes. The…",N,N],[24,"NumCast",E,"Derives [`num_traits::NumCast`][num_cast] for newtypes.…",N,N],[24,"Zero",E,"Derives [`num_traits::Zero`][zero] for newtypes. The inner…",N,N],[24,"One",E,"Derives [`num_traits::One`][one] for newtypes. The inner…",N,N],[24,"Num",E,"Derives [`num_traits::Num`][num] for newtypes. The inner…",N,N],[24,"Float",E,"Derives [`num_traits::Float`][float] for newtypes. The…",N,N]],"p":[]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","i":[[3,R[754],"num_integer",R[1380],N,N],[12,"gcd",E,E,0,N],[12,"x",E,E,0,N],[12,"y",E,E,0,N],[3,R[755],E,R[1381],N,N],[5,"cbrt",E,R[749],N,[[["roots"]],["roots"]]],[5,R[1382],E,R[747],N,[[["u32"],["roots"]],["roots"]]],[5,"sqrt",E,R[748],N,[[["roots"]],["roots"]]],[5,"div_rem",E,R[1383],N,[[[R[746]]]]],[5,R[750],E,R[1384],N,[[[R[746]]],[R[746]]]],[5,R[751],E,R[1385],N,[[[R[746]]],[R[746]]]],[5,R[752],E,R[1386],N,[[[R[746]]]]],[5,"div_ceil",E,R[1387],N,[[[R[746]]],[R[746]]]],[5,"gcd",E,R[1204],N,[[[R[746]]],[R[746]]]],[5,"lcm",E,R[1205],N,[[[R[746]]],[R[746]]]],[5,"gcd_lcm",E,R[1388],N,[[[R[746]]]]],[5,"binomial",E,R[1389],N,[[["clone"],[R[746]]],[["clone"],[R[746]]]]],[5,R[1390],E,R[1391],N,[[],[["clone"],[R[746]]]]],[8,"Roots",E,R[1392],N,N],[10,R[1382],E,R[747],1,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,R[748],1,[[["self"]],["self"]]],[11,"cbrt",E,R[749],1,[[["self"]],["self"]]],[8,"Integer",E,E,N,N],[10,R[750],E,R[1288],2,[[["self"]],["self"]]],[10,R[751],E,R[1289],2,[[["self"]],["self"]]],[11,"div_ceil",E,R[1290],2,[[["self"]],["self"]]],[10,"gcd",E,R[1291],2,[[["self"]],["self"]]],[10,"lcm",E,R[1292],2,[[["self"]],["self"]]],[11,"gcd_lcm",E,R[1293],2,[[["self"]]]],[11,R[1294],E,R[1295],2,[[["self"]],[R[753]]]],[11,R[1296],E,R[1297],2,[[["self"]]]],[10,"divides",E,R[1206],2,[[["self"]],["bool"]]],[10,R[1207],E,R[1298],2,[[["self"]],["bool"]]],[10,"is_even",E,R[1299],2,[[["self"]],["bool"]]],[10,"is_odd",E,R[1300],2,[[["self"]],["bool"]]],[10,"div_rem",E,R[1301],2,[[["self"]]]],[11,R[752],E,R[1302],2,[[["self"]]]],[11,R[1303],E,R[1304],2,[[["self"]],["self"]]],[11,R[1305],E,R[1306],2,[[["self"]],["self"]]],[11,"new",E,R[1393],3,[[[T]],[R[1394]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[23],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"eq",E,E,0,[[["self"],[R[753]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[753]]],["bool"]]],[11,"next",E,E,3,[[["self"]],[R[25]]]],[11,"clone",E,E,0,[[["self"]],[R[753]]]],[11,"sqrt",E,R[748],1,[[["self"]],["self"]]],[11,"cbrt",E,R[749],1,[[["self"]],["self"]]]],"p":[[3,R[754]],[8,"Roots"],[8,"Integer"],[3,R[755]]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter",R[1395],N,N],[3,R[1171],E,R[1396],N,N],[3,R[1401],E,R[1397],N,N],[3,R[1172],E,R[1398],N,N],[5,"range",E,R[1307],N,[[["a"]],["range"]]],[5,R[1308],E,R[1309],N,[[["a"]],[R[1169]]]],[5,R[1399],E,R[1310],N,[[["a"]],[R[1400]]]],[5,R[1311],E,R[1312],N,[[["a"]],[R[1170]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[23],E,E,0,[[],["i"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[23],E,E,1,[[],["i"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[23],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[23],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[173],E,E,0,[[["self"]],[R[25]]]],[11,R[173],E,E,1,[[["self"]],[R[25]]]],[11,"next",E,E,0,[[["self"]],[R[25]]]],[11,R[174],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[R[25]]]],[11,R[174],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[R[25]]]],[11,"next",E,E,3,[[["self"]],[R[25]]]],[11,"clone",E,E,0,[[["self"]],["range"]]],[11,"clone",E,E,1,[[["self"]],[R[1169]]]],[11,"clone",E,E,2,[[["self"]],[R[1400]]]],[11,"clone",E,E,3,[[["self"]],[R[1170]]]]],"p":[[3,"Range"],[3,R[1171]],[3,R[1401]],[3,R[1172]]]};
searchIndex["num_rational"]={"doc":"Rational numbers","i":[[3,"Ratio","num_rational",R[1585],N,N],[3,R[1479],E,E,N,N],[6,"Rational",E,R[1516],N,N],[6,"Rational32",E,R[1586],N,N],[6,"Rational64",E,R[1587],N,N],[6,R[1517],E,R[1518],N,N],[11,"new",E,R[1588],0,[[[T]],["ratio"]]],[11,R[1589],E,R[1590],0,[[[T]],["ratio"]]],[11,"new_raw",E,R[1591],0,[[[T]],["ratio"]]],[11,"to_integer",E,R[1592],0,[[["self"]],[T]]],[11,"numer",E,R[1593],0,[[["self"]],[T]]],[11,"denom",E,R[1594],0,[[["self"]],[T]]],[11,"is_integer",E,R[1595],0,[[["self"]],["bool"]]],[11,"reduced",E,R[1596],0,[[["self"]],["ratio"]]],[11,"recip",E,R[1597],0,[[["self"]],["ratio"]]],[11,"floor",E,R[1598],0,[[["self"]],["ratio"]]],[11,"ceil",E,R[1599],0,[[["self"]],["ratio"]]],[11,"round",E,R[1600],0,[[["self"]],["ratio"]]],[11,"trunc",E,R[1601],0,[[["self"]],["ratio"]]],[11,"fract",E,R[1602],0,[[["self"]],["ratio"]]],[11,"pow",E,R[1603],0,[[["self"],["i32"]],["ratio"]]],[11,"from_float",E,R[1604],0,[[["floatcore"]],[[R[25],[R[1477]]],[R[1477]]]]],[11,R[1605],E,E,0,[[["numcast"],["floatcore"]],[[R[25],["ratio"]],["ratio"]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[98],E,E,0,[[["self"]],["string"]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[98],E,E,1,[[["self"]],["string"]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,"fmt",E,R[1606],0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[1478]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1478]]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[24]]]],[11,R[172],E,E,0,[[["self"]],[[R[25],[R[24]]],[R[24]]]]],[11,R[777],E,R[1607],0,[[["str"]],[[R[1478]],[R[3],["ratio",R[1478]]],["ratio"]]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"neg",E,E,0,[[],["ratio"]]],[11,R[758],E,E,0,[[["self"],["ratio"]]]],[11,R[758],E,E,0,[[["self"],[T]]]],[11,R[758],E,E,0,[[["self"],["ratio"]]]],[11,R[758],E,E,0,[[["self"],[T]]]],[11,R[759],E,E,0,[[["self"],["ratio"]]]],[11,R[759],E,E,0,[[["self"],[T]]]],[11,R[759],E,E,0,[[["self"],["ratio"]]]],[11,R[759],E,E,0,[[["self"],[T]]]],[11,R[760],E,E,0,[[["self"],["ratio"]]]],[11,R[760],E,E,0,[[["self"],[T]]]],[11,R[760],E,E,0,[[["self"],["ratio"]]]],[11,R[760],E,E,0,[[["self"],[T]]]],[11,R[761],E,E,0,[[["self"],["ratio"]]]],[11,R[761],E,E,0,[[["self"],[T]]]],[11,R[761],E,E,0,[[["self"],["ratio"]]]],[11,R[761],E,E,0,[[["self"],[T]]]],[11,R[762],E,E,0,[[["self"],["ratio"]]]],[11,R[762],E,E,0,[[["self"],[T]]]],[11,R[762],E,E,0,[[["self"],["ratio"]]]],[11,R[762],E,E,0,[[["self"],[T]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"product",E,E,0,[[["i"]],["self"]]],[11,"product",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"into",E,E,0,[[]]],[11,"from",E,E,0,[[[T]],["ratio"]]],[11,"from",E,E,0,[[],["ratio"]]],[11,"clone",E,E,0,[[["self"]],["ratio"]]],[11,"clone",E,E,1,[[["self"]],[R[1478]]]],[11,"zero",E,E,0,[[],["ratio"]]],[11,"is_zero",E,E,0,[[["self"]],["bool"]]],[11,R[1609],E,E,0,[[["self"]]]],[11,"one",E,E,0,[[],["ratio"]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,"set_one",E,E,0,[[["self"]]]],[11,R[781],E,E,0,[[["i64"]],[R[25]]]],[11,R[767],E,E,0,[[["i128"]],[R[25]]]],[11,R[782],E,E,0,[[["u64"]],[R[25]]]],[11,R[769],E,E,0,[[["u128"]],[R[25]]]],[11,R[788],E,E,0,[[["f32"]],[R[25]]]],[11,R[789],E,E,0,[[["f64"]],[R[25]]]],[11,R[781],E,E,0,[[["i64"]],[R[25]]]],[11,R[767],E,E,0,[[["i128"]],[R[25]]]],[11,R[782],E,E,0,[[["u64"]],[R[25]]]],[11,R[769],E,E,0,[[["u128"]],[R[25]]]],[11,R[788],E,E,0,[[["f32"]],[R[25]]]],[11,R[789],E,E,0,[[["f64"]],[R[25]]]],[11,R[781],E,E,0,[[["i64"]],[R[25]]]],[11,R[767],E,E,0,[[["i128"]],[R[25]]]],[11,R[782],E,E,0,[[["u64"]],[R[25]]]],[11,R[769],E,E,0,[[["u128"]],[R[25]]]],[11,R[788],E,E,0,[[["f32"]],[R[25]]]],[11,R[789],E,E,0,[[["f64"]],[R[25]]]],[11,R[781],E,E,0,[[["i64"]],[R[25]]]],[11,R[767],E,E,0,[[["i128"]],[R[25]]]],[11,R[782],E,E,0,[[["u64"]],[R[25]]]],[11,R[769],E,E,0,[[["u128"]],[R[25]]]],[11,R[788],E,E,0,[[["f32"]],[R[25]]]],[11,R[789],E,E,0,[[["f64"]],[R[25]]]],[11,R[781],E,E,0,[[["i64"]],[R[25]]]],[11,R[767],E,E,0,[[["i128"]],[R[25]]]],[11,R[782],E,E,0,[[["u64"]],[R[25]]]],[11,R[769],E,E,0,[[["u128"]],[R[25]]]],[11,R[788],E,E,0,[[["f32"]],[R[25]]]],[11,R[789],E,E,0,[[["f64"]],[R[25]]]],[11,R[781],E,E,0,[[["i64"]],[R[25]]]],[11,R[767],E,E,0,[[["i128"]],[R[25]]]],[11,R[782],E,E,0,[[["u64"]],[R[25]]]],[11,R[769],E,E,0,[[["u128"]],[R[25]]]],[11,R[788],E,E,0,[[["f32"]],[R[25]]]],[11,R[789],E,E,0,[[["f64"]],[R[25]]]],[11,R[781],E,E,0,[[["i64"]],[R[25]]]],[11,R[767],E,E,0,[[["i128"]],[R[25]]]],[11,R[782],E,E,0,[[["u64"]],[R[25]]]],[11,R[769],E,E,0,[[["u128"]],[R[25]]]],[11,R[788],E,E,0,[[["f32"]],[R[25]]]],[11,R[789],E,E,0,[[["f64"]],[R[25]]]],[11,R[781],E,E,0,[[["i64"]],[R[25]]]],[11,R[767],E,E,0,[[["i128"]],[R[25]]]],[11,R[782],E,E,0,[[["u64"]],[R[25]]]],[11,R[769],E,E,0,[[["u128"]],[R[25]]]],[11,R[788],E,E,0,[[["f32"]],[R[25]]]],[11,R[789],E,E,0,[[["f64"]],[R[25]]]],[11,R[781],E,E,0,[[["i64"]],[R[25]]]],[11,R[767],E,E,0,[[["i128"]],[R[25]]]],[11,R[782],E,E,0,[[["u64"]],[R[25]]]],[11,R[769],E,E,0,[[["u128"]],[R[25]]]],[11,R[788],E,E,0,[[["f32"]],[R[25]]]],[11,R[789],E,E,0,[[["f64"]],[R[25]]]],[11,R[781],E,E,0,[[["i64"]],[R[25]]]],[11,R[767],E,E,0,[[["i128"]],[R[25]]]],[11,R[782],E,E,0,[[["u64"]],[R[25]]]],[11,R[769],E,E,0,[[["u128"]],[R[25]]]],[11,R[788],E,E,0,[[["f32"]],[R[25]]]],[11,R[789],E,E,0,[[["f64"]],[R[25]]]],[11,R[781],E,E,0,[[["i64"]],[R[25]]]],[11,R[767],E,E,0,[[["i128"]],[R[25]]]],[11,R[782],E,E,0,[[["u64"]],[R[25]]]],[11,R[769],E,E,0,[[["u128"]],[R[25]]]],[11,R[788],E,E,0,[[["f32"]],[R[25]]]],[11,R[789],E,E,0,[[["f64"]],[R[25]]]],[11,R[781],E,E,0,[[["i64"]],[R[25]]]],[11,R[767],E,E,0,[[["i128"]],[R[25]]]],[11,R[782],E,E,0,[[["u64"]],[R[25]]]],[11,R[769],E,E,0,[[["u128"]],[R[25]]]],[11,R[788],E,E,0,[[["f32"]],[R[25]]]],[11,R[789],E,E,0,[[["f64"]],[R[25]]]],[11,R[781],E,E,0,[[["i64"]],[R[25]]]],[11,R[767],E,E,0,[[["i128"]],[R[25]]]],[11,R[782],E,E,0,[[["u64"]],[R[25]]]],[11,R[769],E,E,0,[[["u128"]],[R[25]]]],[11,R[788],E,E,0,[[["f32"]],[R[25]]]],[11,R[789],E,E,0,[[["f64"]],[R[25]]]],[11,R[771],E,R[1608],0,[[["u32"],["str"]],[[R[1478]],[R[3],["ratio",R[1478]]],["ratio"]]]],[11,R[1212],E,E,0,[[["self"],["ratio"]],[[R[25],["ratio"]],["ratio"]]]],[11,R[1213],E,E,0,[[["self"],["ratio"]],[[R[25],["ratio"]],["ratio"]]]],[11,R[1214],E,E,0,[[["self"],["ratio"]],[[R[25],["ratio"]],["ratio"]]]],[11,R[1215],E,E,0,[[["self"],["ratio"]],[[R[25],["ratio"]],["ratio"]]]],[11,"inv",E,E,0,[[],["ratio"]]],[11,"pow",E,E,0,[[["i8"]],["ratio"]]],[11,"pow",E,E,0,[[["i8"]],["ratio"]]],[11,"pow",E,E,0,[[["i16"]],["ratio"]]],[11,"pow",E,E,0,[[["i16"]],["ratio"]]],[11,"pow",E,E,0,[[["i32"]],["ratio"]]],[11,"pow",E,E,0,[[["i32"]],["ratio"]]],[11,"pow",E,E,0,[[["i64"]],["ratio"]]],[11,"pow",E,E,0,[[["i64"]],["ratio"]]],[11,"pow",E,E,0,[[["isize"]],["ratio"]]],[11,"pow",E,E,0,[[["isize"]],["ratio"]]],[11,"pow",E,E,0,[[["u8"]],["ratio"]]],[11,"pow",E,E,0,[[["u8"]],["ratio"]]],[11,"pow",E,E,0,[[["u16"]],["ratio"]]],[11,"pow",E,E,0,[[["u16"]],["ratio"]]],[11,"pow",E,E,0,[[["u32"]],["ratio"]]],[11,"pow",E,E,0,[[["u32"]],["ratio"]]],[11,"pow",E,E,0,[[["u64"]],["ratio"]]],[11,"pow",E,E,0,[[["u64"]],["ratio"]]],[11,"pow",E,E,0,[[["usize"]],["ratio"]]],[11,"pow",E,E,0,[[["usize"]],["ratio"]]],[11,"abs",E,E,0,[[["self"]],["ratio"]]],[11,"abs_sub",E,E,0,[[["self"],["ratio"]],["ratio"]]],[11,"signum",E,E,0,[[["self"]],["ratio"]]],[11,R[790],E,E,0,[[["self"]],["bool"]]],[11,R[791],E,E,0,[[["self"]],["bool"]]],[11,R[53],E,E,1,[[["self"]],["str"]]]],"p":[[3,"Ratio"],[3,R[1479]]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","i":[[3,R[677],R[605],E,N,N],[12,"kind",E,E,0,N],[4,R[678],E,E,N,N],[13,"Empty",E,E,1,N],[13,"Invalid",E,E,1,N],[5,"clamp",E,R[1378],N,[[[R[604]]],[R[604]]]],[0,"bounds",E,E,N,N],[8,"Bounded","num_traits::bounds",R[1313],N,N],[10,R[607],E,R[1314],2,[[],["self"]]],[10,R[608],E,R[1315],2,[[],["self"]]],[0,"cast",R[605],E,N,N],[5,"cast","num_traits::cast",R[1284],N,[[["numcast"]],[[R[25]],["numcast"]]]],[8,R[679],E,R[1252],N,N],[11,R[779],E,R[1253],3,[[["self"]],[[R[25],["isize"]],["isize"]]]],[11,"to_i8",E,R[1254],3,[[["self"]],[["i8"],[R[25],["i8"]]]]],[11,"to_i16",E,R[1255],3,[[["self"]],[["i16"],[R[25],["i16"]]]]],[11,"to_i32",E,R[1256],3,[[["self"]],[["i32"],[R[25],["i32"]]]]],[10,"to_i64",E,R[1257],3,[[["self"]],[[R[25],["i64"]],["i64"]]]],[11,"to_i128",E,R[1258],3,[[["self"]],[[R[25],["i128"]],["i128"]]]],[11,R[780],E,R[1259],3,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,"to_u8",E,R[1260],3,[[["self"]],[[R[25],["u8"]],["u8"]]]],[11,"to_u16",E,R[1261],3,[[["self"]],[["u16"],[R[25],["u16"]]]]],[11,"to_u32",E,R[1262],3,[[["self"]],[["u32"],[R[25],["u32"]]]]],[10,"to_u64",E,R[1263],3,[[["self"]],[["u64"],[R[25],["u64"]]]]],[11,"to_u128",E,R[1264],3,[[["self"]],[["u128"],[R[25],["u128"]]]]],[11,"to_f32",E,R[1265],3,[[["self"]],[["f32"],[R[25],["f32"]]]]],[11,"to_f64",E,R[1266],3,[[["self"]],[[R[25],["f64"]],["f64"]]]],[8,R[680],E,R[1267],N,N],[11,R[766],E,R[1268],4,[[["isize"]],[R[25]]]],[11,"from_i8",E,R[1269],4,[[["i8"]],[R[25]]]],[11,R[783],E,R[1270],4,[[["i16"]],[R[25]]]],[11,R[784],E,R[1271],4,[[["i32"]],[R[25]]]],[10,R[781],E,R[1272],4,[[["i64"]],[R[25]]]],[11,R[767],E,R[1273],4,[[["i128"]],[R[25]]]],[11,R[768],E,R[1274],4,[[["usize"]],[R[25]]]],[11,R[785],E,R[1275],4,[[["u8"]],[R[25]]]],[11,R[786],E,R[1276],4,[[["u16"]],[R[25]]]],[11,R[787],E,R[1277],4,[[["u32"]],[R[25]]]],[10,R[782],E,R[1278],4,[[["u64"]],[R[25]]]],[11,R[769],E,R[1279],4,[[["u128"]],[R[25]]]],[11,R[788],E,R[1280],4,[[["f32"]],[R[25]]]],[11,R[789],E,R[1281],4,[[["f64"]],[R[25]]]],[8,"NumCast",E,R[1282],N,N],[10,"from",E,R[1283],5,[[[R[770]]],[R[25]]]],[8,R[681],E,R[1317],N,N],[10,"as_",E,R[1318],6,[[],[T]]],[0,"float",R[605],E,N,N],[8,R[682],"num_traits::float",R[1402],N,N],[10,"infinity",E,R[1403],7,[[],["self"]]],[10,R[606],E,R[1404],7,[[],["self"]]],[10,"nan",E,R[1405],7,[[],["self"]]],[10,"neg_zero",E,R[609],7,[[],["self"]]],[10,R[607],E,R[610],7,[[],["self"]]],[10,R[611],E,R[612],7,[[],["self"]]],[10,R[802],E,R[613],7,[[],["self"]]],[10,R[608],E,R[614],7,[[],["self"]]],[11,"is_nan",E,R[1406],7,[[],["bool"]]],[11,R[615],E,R[1407],7,[[],["bool"]]],[11,R[616],E,R[1408],7,[[],["bool"]]],[11,R[617],E,R[618],7,[[],["bool"]]],[10,"classify",E,R[619],7,[[],[R[620]]]],[11,"floor",E,R[621],7,[[],["self"]]],[11,"ceil",E,R[622],7,[[],["self"]]],[11,"round",E,R[623],7,[[],["self"]]],[11,"trunc",E,R[624],7,[[],["self"]]],[11,"fract",E,R[625],7,[[],["self"]]],[11,"abs",E,R[626],7,[[],["self"]]],[11,"signum",E,R[627],7,[[],["self"]]],[11,R[628],E,R[1409],7,[[],["bool"]]],[11,R[629],E,R[1410],7,[[],["bool"]]],[11,"min",E,R[634],7,[[],["self"]]],[11,"max",E,R[633],7,[[],["self"]]],[11,"recip",E,R[1411],7,[[],["self"]]],[11,"powi",E,R[630],7,[[["i32"]],["self"]]],[10,R[631],E,R[1412],7,[[],["self"]]],[10,R[632],E,R[1413],7,[[],["self"]]],[10,R[635],E,R[636],7,[[]]],[8,"Float",E,R[1319],N,N],[10,"nan",E,R[1320],8,[[],["self"]]],[10,"infinity",E,R[1321],8,[[],["self"]]],[10,R[606],E,R[1322],8,[[],["self"]]],[10,"neg_zero",E,R[609],8,[[],["self"]]],[10,R[607],E,R[610],8,[[],["self"]]],[10,R[611],E,R[612],8,[[],["self"]]],[11,R[802],E,R[613],8,[[],["self"]]],[10,R[608],E,R[614],8,[[],["self"]]],[10,"is_nan",E,R[1323],8,[[],["bool"]]],[10,R[615],E,R[1324],8,[[],["bool"]]],[10,R[616],E,R[1325],8,[[],["bool"]]],[10,R[617],E,R[618],8,[[],["bool"]]],[10,"classify",E,R[619],8,[[],[R[620]]]],[10,"floor",E,R[621],8,[[],["self"]]],[10,"ceil",E,R[622],8,[[],["self"]]],[10,"round",E,R[623],8,[[],["self"]]],[10,"trunc",E,R[624],8,[[],["self"]]],[10,"fract",E,R[625],8,[[],["self"]]],[10,"abs",E,R[626],8,[[],["self"]]],[10,"signum",E,R[627],8,[[],["self"]]],[10,R[628],E,R[644],8,[[],["bool"]]],[10,R[629],E,R[645],8,[[],["bool"]]],[10,"mul_add",E,R[640],8,[[],["self"]]],[10,"recip",E,R[646],8,[[],["self"]]],[10,"powi",E,R[630],8,[[["i32"]],["self"]]],[10,"powf",E,R[1326],8,[[],["self"]]],[10,"sqrt",E,R[647],8,[[],["self"]]],[10,"exp",E,R[648],8,[[],["self"]]],[10,"exp2",E,R[649],8,[[],["self"]]],[10,"ln",E,R[650],8,[[],["self"]]],[10,"log",E,R[651],8,[[],["self"]]],[10,"log2",E,R[652],8,[[],["self"]]],[10,"log10",E,R[653],8,[[],["self"]]],[11,R[631],E,R[654],8,[[],["self"]]],[11,R[632],E,R[655],8,[[],["self"]]],[10,"max",E,R[633],8,[[],["self"]]],[10,"min",E,R[634],8,[[],["self"]]],[10,"abs_sub",E,R[656],8,[[],["self"]]],[10,"cbrt",E,R[657],8,[[],["self"]]],[10,"hypot",E,R[658],8,[[],["self"]]],[10,"sin",E,R[659],8,[[],["self"]]],[10,"cos",E,R[660],8,[[],["self"]]],[10,"tan",E,R[661],8,[[],["self"]]],[10,"asin",E,R[662],8,[[],["self"]]],[10,"acos",E,R[663],8,[[],["self"]]],[10,"atan",E,R[664],8,[[],["self"]]],[10,"atan2",E,R[665],8,[[],["self"]]],[10,"sin_cos",E,R[666],8,[[]]],[10,"exp_m1",E,R[667],8,[[],["self"]]],[10,"ln_1p",E,R[668],8,[[],["self"]]],[10,"sinh",E,R[669],8,[[],["self"]]],[10,"cosh",E,R[670],8,[[],["self"]]],[10,"tanh",E,R[671],8,[[],["self"]]],[10,"asinh",E,R[672],8,[[],["self"]]],[10,"acosh",E,R[673],8,[[],["self"]]],[10,"atanh",E,R[674],8,[[],["self"]]],[10,R[635],E,R[636],8,[[]]],[8,R[683],E,E,N,N],[10,"E",E,R[1414],9,[[],["self"]]],[10,"FRAC_1_PI",E,R[1415],9,[[],["self"]]],[10,R[1416],E,R[1417],9,[[],["self"]]],[10,"FRAC_2_PI",E,R[1418],9,[[],["self"]]],[10,R[1419],E,R[1420],9,[[],["self"]]],[10,"FRAC_PI_2",E,R[1421],9,[[],["self"]]],[10,"FRAC_PI_3",E,R[1422],9,[[],["self"]]],[10,"FRAC_PI_4",E,R[1423],9,[[],["self"]]],[10,"FRAC_PI_6",E,R[1424],9,[[],["self"]]],[10,"FRAC_PI_8",E,R[1425],9,[[],["self"]]],[10,"LN_10",E,R[1426],9,[[],["self"]]],[10,"LN_2",E,R[1427],9,[[],["self"]]],[10,"LOG10_E",E,R[1428],9,[[],["self"]]],[10,"LOG2_E",E,R[1429],9,[[],["self"]]],[10,"PI",E,R[1430],9,[[],["self"]]],[10,"SQRT_2",E,R[1431],9,[[],["self"]]],[0,"identities",R[605],E,N,N],[5,"zero","num_traits::identities",R[1335],N,[[],["zero"]]],[5,"one",E,R[1336],N,[[],["one"]]],[8,"Zero",E,R[1327],N,N],[10,"zero",E,R[1328],10,[[],["self"]]],[11,R[1609],E,R[1329],10,[[["self"]]]],[10,"is_zero",E,R[1330],10,[[["self"]],["bool"]]],[8,"One",E,R[1331],N,N],[10,"one",E,R[1332],11,[[],["self"]]],[11,"set_one",E,R[1333],11,[[["self"]]]],[11,"is_one",E,R[1334],11,[[["self"]],["bool"]]],[0,"int",R[605],E,N,N],[8,"PrimInt","num_traits::int",R[1337],N,N],[10,R[1432],E,R[1338],12,[[],["u32"]]],[10,R[1339],E,R[1340],12,[[],["u32"]]],[10,R[1341],E,R[1342],12,[[],["u32"]]],[10,R[1343],E,R[1344],12,[[],["u32"]]],[10,R[1345],E,R[637],12,[[["u32"]],["self"]]],[10,R[1346],E,R[638],12,[[["u32"]],["self"]]],[10,R[1433],E,R[637],12,[[["u32"]],["self"]]],[10,R[1434],E,R[638],12,[[["u32"]],["self"]]],[10,R[1347],E,R[637],12,[[["u32"]],["self"]]],[10,R[1348],E,R[638],12,[[["u32"]],["self"]]],[10,R[1435],E,R[1349],12,[[],["self"]]],[10,"from_be",E,R[1350],12,[[],["self"]]],[10,"from_le",E,R[1351],12,[[],["self"]]],[10,"to_be",E,R[1352],12,[[],["self"]]],[10,"to_le",E,R[1353],12,[[],["self"]]],[10,"pow",E,R[1354],12,[[["u32"]],["self"]]],[0,"ops",R[605],E,N,N],[0,"checked",R[639],E,N,N],[8,R[684],"num_traits::ops::checked",R[1355],N,N],[10,R[1214],E,R[1356],13,[[["self"]],[R[25]]]],[8,R[685],E,R[1357],N,N],[10,R[1215],E,R[1358],14,[[["self"]],[R[25]]]],[8,R[686],E,R[1359],N,N],[10,R[1212],E,R[1360],15,[[["self"]],[R[25]]]],[8,R[687],E,R[1361],N,N],[10,R[1213],E,R[1362],16,[[["self"]],[R[25]]]],[8,R[688],E,R[1436],N,N],[10,R[1437],E,R[1438],17,[[["self"]],[R[25]]]],[8,R[689],E,R[1439],N,N],[10,R[1440],E,R[1441],18,[[["self"]],[R[25]]]],[8,R[690],E,R[1442],N,N],[10,R[1443],E,R[1444],19,[[["self"],["u32"]],[R[25]]]],[8,R[691],E,R[1445],N,N],[10,R[1446],E,R[1447],20,[[["self"],["u32"]],[R[25]]]],[0,"inv",R[639],E,N,N],[8,"Inv","num_traits::ops::inv",R[1448],N,N],[16,"Output",E,R[643],21,N],[10,"inv",E,R[1449],21,[[]]],[0,"mul_add",R[639],E,N,N],[8,"MulAdd","num_traits::ops::mul_add",R[640],N,N],[16,"Output",E,R[1450],22,N],[10,"mul_add",E,R[641],22,[[["a"],["b"]]]],[8,R[692],E,R[1451],N,N],[10,R[764],E,R[641],23,[[["self"],["a"],["b"]]]],[0,"saturating",R[639],E,N,N],[8,R[693],"num_traits::ops::saturating",R[1364],N,N],[10,R[1365],E,R[1366],24,[[],["self"]]],[10,R[1367],E,R[1368],24,[[],["self"]]],[0,"wrapping",R[639],E,N,N],[8,R[694],"num_traits::ops::wrapping",R[1452],N,N],[10,R[1453],E,R[1454],25,[[["self"]],["self"]]],[8,R[695],E,R[1455],N,N],[10,R[1456],E,R[1457],26,[[["self"]],["self"]]],[8,R[696],E,R[1458],N,N],[10,R[1459],E,R[1460],27,[[["self"]],["self"]]],[8,R[697],E,R[1461],N,N],[10,R[1462],E,R[1463],28,[[["self"],["u32"]],["self"]]],[8,R[698],E,R[1464],N,N],[10,R[1465],E,R[1466],29,[[["self"],["u32"]],["self"]]],[0,"pow",R[605],E,N,N],[5,"pow","num_traits::pow",R[1285],N,[[["usize"],["one"],["clone"],["mul"]],[["one"],["clone"],["mul"]]]],[5,R[1286],E,R[1287],N,[[[R[642]],["one"],["clone"],["usize"]],[[R[642]],["one"],["clone"],[R[25]]]]],[8,"Pow",E,R[1369],N,N],[16,"Output",E,R[643],30,N],[10,"pow",E,R[1370],30,[[["rhs"]]]],[0,"real",R[605],E,N,N],[8,"Real","num_traits::real",R[1467],N,N],[10,R[607],E,R[610],31,[[],["self"]]],[10,R[611],E,R[612],31,[[],["self"]]],[10,R[802],E,R[613],31,[[],["self"]]],[10,R[608],E,R[614],31,[[],["self"]]],[10,"floor",E,R[621],31,[[],["self"]]],[10,"ceil",E,R[622],31,[[],["self"]]],[10,"round",E,R[623],31,[[],["self"]]],[10,"trunc",E,R[624],31,[[],["self"]]],[10,"fract",E,R[625],31,[[],["self"]]],[10,"abs",E,R[626],31,[[],["self"]]],[10,"signum",E,R[627],31,[[],["self"]]],[10,R[628],E,R[644],31,[[],["bool"]]],[10,R[629],E,R[645],31,[[],["bool"]]],[10,"mul_add",E,R[640],31,[[],["self"]]],[10,"recip",E,R[646],31,[[],["self"]]],[10,"powi",E,R[630],31,[[["i32"]],["self"]]],[10,"powf",E,R[1468],31,[[],["self"]]],[10,"sqrt",E,R[647],31,[[],["self"]]],[10,"exp",E,R[648],31,[[],["self"]]],[10,"exp2",E,R[649],31,[[],["self"]]],[10,"ln",E,R[650],31,[[],["self"]]],[10,"log",E,R[651],31,[[],["self"]]],[10,"log2",E,R[652],31,[[],["self"]]],[10,"log10",E,R[653],31,[[],["self"]]],[10,R[631],E,R[654],31,[[],["self"]]],[10,R[632],E,R[655],31,[[],["self"]]],[10,"max",E,R[633],31,[[],["self"]]],[10,"min",E,R[634],31,[[],["self"]]],[10,"abs_sub",E,R[656],31,[[],["self"]]],[10,"cbrt",E,R[657],31,[[],["self"]]],[10,"hypot",E,R[658],31,[[],["self"]]],[10,"sin",E,R[659],31,[[],["self"]]],[10,"cos",E,R[660],31,[[],["self"]]],[10,"tan",E,R[661],31,[[],["self"]]],[10,"asin",E,R[662],31,[[],["self"]]],[10,"acos",E,R[663],31,[[],["self"]]],[10,"atan",E,R[664],31,[[],["self"]]],[10,"atan2",E,R[665],31,[[],["self"]]],[10,"sin_cos",E,R[666],31,[[]]],[10,"exp_m1",E,R[667],31,[[],["self"]]],[10,"ln_1p",E,R[668],31,[[],["self"]]],[10,"sinh",E,R[669],31,[[],["self"]]],[10,"cosh",E,R[670],31,[[],["self"]]],[10,"tanh",E,R[671],31,[[],["self"]]],[10,"asinh",E,R[672],31,[[],["self"]]],[10,"acosh",E,R[673],31,[[],["self"]]],[10,"atanh",E,R[674],31,[[],["self"]]],[0,"sign",R[605],E,N,N],[5,"abs","num_traits::sign",R[675],N,[[["signed"]],["signed"]]],[5,"abs_sub",E,R[656],N,[[["signed"]],["signed"]]],[5,"signum",E,R[676],N,[[["signed"]],["signed"]]],[8,"Signed",E,R[1371],N,N],[10,"abs",E,R[675],32,[[["self"]],["self"]]],[10,"abs_sub",E,R[656],32,[[["self"]],["self"]]],[10,"signum",E,R[676],32,[[["self"]],["self"]]],[10,R[790],E,R[1372],32,[[["self"]],["bool"]]],[10,R[791],E,R[1373],32,[[["self"]],["bool"]]],[8,"Unsigned",E,R[1374],N,N],[8,"Num",R[605],R[1375],N,N],[16,R[1376],E,E,33,N],[10,R[771],E,R[1377],33,[[["u32"],["str"]],[R[3]]]],[8,"NumOps",E,R[1469],N,N],[8,"NumRef",E,R[1470],N,N],[8,"RefNum",E,R[1471],N,N],[8,R[1472],E,R[1473],N,N],[8,"NumAssign",E,R[1474],N,N],[8,R[1475],E,R[1476],N,N],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[98],E,E,0,[[["self"]],["string"]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]]],"p":[[3,R[677]],[4,R[678]],[8,"Bounded"],[8,R[679]],[8,R[680]],[8,"NumCast"],[8,R[681]],[8,R[682]],[8,"Float"],[8,R[683]],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,R[684]],[8,R[685]],[8,R[686]],[8,R[687]],[8,R[688]],[8,R[689]],[8,R[690]],[8,R[691]],[8,"Inv"],[8,"MulAdd"],[8,R[692]],[8,R[693]],[8,R[694]],[8,R[695]],[8,R[696]],[8,R[697]],[8,R[698]],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["ordered_float"]={"doc":"Wrappers for total order on Floats.","i":[[3,R[792],"ordered_float",R[772],N,N],[12,"0",E,E,0,N],[3,"NotNan",E,R[772],N,N],[3,R[794],E,R[773],N,N],[4,R[793],E,"An error indicating a parse error from a string for…",N,N],[13,R[677],E,"A plain parse error from the underlying float type.",1,N],[13,"IsNaN",E,"The parsed float value resulted in a NaN.",1,N],[6,"NotNaN",E,R[772],N,N],[6,"FloatIsNaN",E,R[773],N,N],[11,R[7],E,R[775],0,[[],[T]]],[11,"new",E,"Create a NotNan value.",2,[[[T]],[[R[3],[R[774]]],[R[774]]]]],[11,"unchecked_new",E,"Create a NotNan value from a value that is guaranteed to…",2,[[[T]],["self"]]],[11,R[7],E,R[775],2,[[],[T]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[98],E,E,0,[[["self"]],["string"]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,R[98],E,E,2,[[["self"]],["string"]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,R[98],E,E,3,[[["self"]],["string"]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[98],E,E,1,[[["self"]],["string"]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,"deref",E,E,0,[[["self"]]]],[11,"deref",E,E,2,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"rem",E,E,2,[[],["self"]]],[11,"rem",E,E,2,[[[T]],["self"]]],[11,"sub",E,E,2,[[],["self"]]],[11,"sub",E,E,2,[[[T]],["self"]]],[11,"eq",E,E,0,[[["self"],[R[778]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[774]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[776]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[776]]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[24]]]],[11,"cmp",E,E,2,[[["self"],["notnan"]],[R[24]]]],[11,R[172],E,E,0,[[["self"]],[[R[25],[R[24]]],[R[24]]]]],[11,R[172],E,E,2,[[["self"],["notnan"]],[[R[24]],[R[25],[R[24]]]]]],[11,"lt",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"le",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["notnan"]],["bool"]]],[11,R[777],E,"Convert a &str to `OrderedFloat`. Returns an error if the…",0,[[["str"]],[R[3]]]],[11,R[777],E,"Convert a &str to `NotNan`. Returns an error if the string…",2,[[["str"]],[R[3]]]],[11,"add",E,E,2,[[],["self"]]],[11,"add",E,E,2,[[[T]],["self"]]],[11,"mul",E,E,2,[[],["self"]]],[11,"mul",E,E,2,[[[T]],["self"]]],[11,"div",E,E,2,[[],["self"]]],[11,"div",E,E,2,[[[T]],["self"]]],[11,"neg",E,E,2,[[],["self"]]],[11,R[758],E,E,2,[[["self"]]]],[11,R[758],E,E,2,[[["self"],[T]]]],[11,R[759],E,E,2,[[["self"]]]],[11,R[759],E,E,2,[[["self"],[T]]]],[11,R[760],E,E,2,[[["self"]]]],[11,R[760],E,E,2,[[["self"],[T]]]],[11,R[761],E,E,2,[[["self"]]]],[11,R[761],E,E,2,[[["self"],[T]]]],[11,R[762],E,E,2,[[["self"]]]],[11,R[762],E,E,2,[[["self"],[T]]]],[11,R[14],E,E,0,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"hash",E,E,2,[[["self"],["h"]]]],[11,"as_ref",E,E,0,[[["self"]],[T]]],[11,"as_ref",E,E,2,[[["self"]],[T]]],[11,"as_mut",E,E,0,[[["self"]],[T]]],[11,"into",E,E,0,[[],["f32"]]],[11,"into",E,E,0,[[],["f64"]]],[11,"into",E,E,3,[[],["error"]]],[11,"from",E,E,0,[[[T]],["self"]]],[11,"from",E,E,2,[[[T]],["self"]]],[11,"clone",E,E,0,[[["self"]],[R[778]]]],[11,"clone",E,E,2,[[["self"]],["notnan"]]],[11,"clone",E,E,3,[[["self"]],[R[774]]]],[11,"clone",E,E,1,[[["self"]],[R[776]]]],[11,R[327],E,E,0,[[],[R[778]]]],[11,R[327],E,E,2,[[],["notnan"]]],[11,R[607],E,E,0,[[],["self"]]],[11,R[608],E,E,0,[[],["self"]]],[11,R[607],E,E,2,[[],["self"]]],[11,R[608],E,E,2,[[],["self"]]],[11,"to_i64",E,E,2,[[["self"]],[[R[25],["i64"]],["i64"]]]],[11,"to_u64",E,E,2,[[["self"]],[["u64"],[R[25],["u64"]]]]],[11,R[779],E,E,2,[[["self"]],[[R[25],["isize"]],["isize"]]]],[11,"to_i8",E,E,2,[[["self"]],[["i8"],[R[25],["i8"]]]]],[11,"to_i16",E,E,2,[[["self"]],[["i16"],[R[25],["i16"]]]]],[11,"to_i32",E,E,2,[[["self"]],[["i32"],[R[25],["i32"]]]]],[11,R[780],E,E,2,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,"to_u8",E,E,2,[[["self"]],[[R[25],["u8"]],["u8"]]]],[11,"to_u16",E,E,2,[[["self"]],[["u16"],[R[25],["u16"]]]]],[11,"to_u32",E,E,2,[[["self"]],[["u32"],[R[25],["u32"]]]]],[11,"to_f32",E,E,2,[[["self"]],[["f32"],[R[25],["f32"]]]]],[11,"to_f64",E,E,2,[[["self"]],[[R[25],["f64"]],["f64"]]]],[11,R[781],E,E,2,[[["i64"]],[R[25]]]],[11,R[782],E,E,2,[[["u64"]],[R[25]]]],[11,R[766],E,E,2,[[["isize"]],[R[25]]]],[11,"from_i8",E,E,2,[[["i8"]],[R[25]]]],[11,R[783],E,E,2,[[["i16"]],[R[25]]]],[11,R[784],E,E,2,[[["i32"]],[R[25]]]],[11,R[768],E,E,2,[[["usize"]],[R[25]]]],[11,R[785],E,E,2,[[["u8"]],[R[25]]]],[11,R[786],E,E,2,[[["u16"]],[R[25]]]],[11,R[787],E,E,2,[[["u32"]],[R[25]]]],[11,R[788],E,E,2,[[["f32"]],[R[25]]]],[11,R[789],E,E,2,[[["f64"]],[R[25]]]],[11,"from",E,E,2,[[[R[770]]],[R[25]]]],[11,R[771],E,E,2,[[["u32"],["str"]],[R[3]]]],[11,"zero",E,E,2,[[],["self"]]],[11,"is_zero",E,E,2,[[["self"]],["bool"]]],[11,"one",E,E,2,[[],["self"]]],[11,"abs",E,E,2,[[["self"]],["self"]]],[11,"abs_sub",E,E,2,[[["self"]],["self"]]],[11,"signum",E,E,2,[[["self"]],["self"]]],[11,R[790],E,E,2,[[["self"]],["bool"]]],[11,R[791],E,E,2,[[["self"]],["bool"]]],[11,R[53],E,E,3,[[["self"]],["str"]]],[11,R[53],E,E,1,[[["self"]],["str"]]]],"p":[[3,R[792]],[4,R[793]],[3,"NotNan"],[3,R[794]]]};
searchIndex["png"]={"doc":"PNG encoder and decoder This crate contains a PNG encoder…","i":[[3,R[1146],"png","Pixel dimensions information",N,N],[12,"xppu",E,"Pixels per unit, X axis",0,N],[12,"yppu",E,"Pixels per unit, Y axis",0,N],[12,"unit",E,"Either Meter or Unspecified",0,N],[3,R[1148],E,"Frame control information",N,N],[12,"sequence_number",E,"Sequence number of the animation chunk, starting from 0",1,N],[12,"width",E,"Width of the following frame",1,N],[12,"height",E,"Height of the following frame",1,N],[12,"x_offset",E,"X position at which to render the following frame",1,N],[12,"y_offset",E,"Y position at which to render the following frame",1,N],[12,"delay_num",E,"Frame delay fraction numerator",1,N],[12,"delay_den",E,"Frame delay fraction denominator",1,N],[12,"dispose_op",E,"Type of frame area disposal to be done after rendering…",1,N],[12,"blend_op",E,"Type of frame area rendering for this frame",1,N],[3,R[1147],E,"Animation control information",N,N],[12,"num_frames",E,"Number of frames",2,N],[12,"num_plays",E,"Number of times to loop this APNG. 0 indicates infinite…",2,N],[3,"Info",E,"PNG info struct",N,N],[12,"width",E,E,3,N],[12,"height",E,E,3,N],[12,"bit_depth",E,E,3,N],[12,R[2078],E,E,3,N],[12,R[2079],E,E,3,N],[12,"trns",E,E,3,N],[12,"pixel_dims",E,E,3,N],[12,"palette",E,E,3,N],[12,R[1160],E,E,3,N],[12,R[1158],E,E,3,N],[12,R[713],E,E,3,N],[12,"filter",E,E,3,N],[3,R[1168],E,"Output transformations",N,N],[3,"Decoder",E,"PNG Decoder",N,N],[3,"Reader",E,"PNG reader (mostly high-level interface)",N,N],[3,"OutputInfo",E,"Output info",N,N],[12,"width",E,E,4,N],[12,"height",E,E,4,N],[12,R[2078],E,E,4,N],[12,"bit_depth",E,E,4,N],[12,"line_size",E,E,4,N],[3,R[258],E,"PNG StreamingDecoder (low-level interface)",N,N],[3,"Limits",E,"Limits on the resources the `Decoder` is allowed too use",N,N],[12,"bytes",E,"maximum number of bytes the decoder is allowed to…",5,N],[3,"Encoder",E,"PNG Encoder",N,N],[3,"Writer",E,"PNG writer",N,N],[3,R[1167],E,"Streaming png writer",N,N],[4,R[1489],E,"Describes the layout of samples in a pixel",N,N],[13,"Grayscale",E,E,6,N],[13,"RGB",E,E,6,N],[13,"Indexed",E,E,6,N],[13,R[2080],E,E,6,N],[13,"RGBA",E,E,6,N],[4,"BitDepth",E,"Bit depth of the png file",N,N],[13,"One",E,E,7,N],[13,"Two",E,E,7,N],[13,"Four",E,E,7,N],[13,"Eight",E,E,7,N],[13,"Sixteen",E,E,7,N],[4,"Unit",E,"Physical unit of the pixel dimensions",N,N],[13,"Unspecified",E,E,8,N],[13,"Meter",E,E,8,N],[4,"DisposeOp",E,"How to reset buffer of an animated png (APNG) at the end…",N,N],[13,"None",E,"Leave the buffer unchanged.",9,N],[13,R[2081],E,"Clear buffer with the background color.",9,N],[13,"Previous",E,"Reset the buffer to the state before the current frame.",9,N],[4,"BlendOp",E,"How pixels are written into the buffer.",N,N],[13,"Source",E,"Pixels overwrite the value at their position.",10,N],[13,"Over",E,"The new pixels are blended into the current state based on…",10,N],[4,R[722],E,"The type and strength of applied compression.",N,N],[13,"Default",E,"Default level  ",11,N],[13,"Fast",E,"Fast minimal compression",11,N],[13,"Best",E,"Higher compression level  ",11,N],[13,"Huffman",E,E,11,N],[13,"Rle",E,E,11,N],[4,"Decoded",E,"Result of the decoding process",N,N],[13,"Nothing",E,"Nothing decoded yet",12,N],[13,"Header",E,E,12,N],[13,"ChunkBegin",E,E,12,N],[13,"ChunkComplete",E,E,12,N],[13,R[1146],E,E,12,N],[13,R[1147],E,E,12,N],[13,R[1148],E,E,12,N],[13,"ImageData",E,"Decoded raw image data.",12,N],[13,"PartialChunk",E,E,12,N],[13,"ImageEnd",E,E,12,N],[4,R[254],E,E,N,N],[13,"IoError",E,E,13,N],[13,"Format",E,E,13,N],[13,"InvalidSignature",E,E,13,N],[13,"CrcMismatch",E,E,13,N],[12,"recover","png::DecodingError","bytes to skip to try to recover from this error",13,N],[12,"crc_val",E,"Stored CRC32 value",13,N],[12,"crc_sum",E,"Calculated CRC32 sum",13,N],[12,"chunk",E,E,13,N],[13,"Other","png",E,13,N],[13,"CorruptFlateStream",E,E,13,N],[13,R[1480],E,E,13,N],[4,R[1166],E,E,N,N],[13,"IoError",E,E,14,N],[13,"Format",E,E,14,N],[4,R[2050],E,"The byte level filter applied to scanlines to prepare them…",N,N],[13,"NoFilter",E,E,15,N],[13,"Sub",E,E,15,N],[13,"Up",E,E,15,N],[13,"Avg",E,E,15,N],[13,"Paeth",E,E,15,N],[0,"chunk",E,"Chunk types and functions",N,N],[5,"is_critical","png::chunk","Returns true if the chunk is critical.",N,[[[R[1149]]],["bool"]]],[5,"is_private",E,"Returns true if the chunk is private.",N,[[[R[1149]]],["bool"]]],[5,"reserved_set",E,"Checks whether the reserved bit of the chunk name is set.…",N,[[[R[1149]]],["bool"]]],[5,"safe_to_copy",E,"Returns true if the chunk is safe to copy if unknown.",N,[[[R[1149]]],["bool"]]],[6,"ChunkType",E,E,N,N],[17,"IHDR",E,"Image header",N,N],[17,"PLTE",E,"Palette",N,N],[17,"IDAT",E,"Image data",N,N],[17,"IEND",E,"Image trailer",N,N],[17,"tRNS",E,"Transparency",N,N],[17,"bKGD",E,"Background colour",N,N],[17,"tIME",E,"Image last-modification time",N,N],[17,"pHYs",E,"Physical pixel dimensions",N,N],[17,"acTL",E,"Animation control",N,N],[17,"fcTL",E,"Frame control",N,N],[17,"fdAT",E,"Frame data",N,N],[11,"new","png","Creates a new StreamingDecoder",16,[[],[R[249]]]],[11,"reset",E,"Resets the StreamingDecoder",16,[[["self"]]]],[11,"update",E,"Low level StreamingDecoder interface.",16,[[["self"],["vec"]],[[R[3],[R[244]]],[R[244]]]]],[11,R[1150],E,"Returns the size needed to hold a decoded frame",4,[[["self"]],["usize"]]],[11,"new",E,E,17,[[["r"]],["decoder"]]],[11,"new_with_limits",E,E,17,[[["limits"],["r"]],["decoder"]]],[11,"set_limits",E,"Limit resource usage",17,[[["self"],["limits"]]]],[11,"read_info",E,"Reads all meta data until the first IDAT chunk",17,[[],[[R[244]],[R[3],[R[244]]]]]],[11,"set_transformations",E,"Set the allowed and performed transformations.",17,[[["self"],[R[1163]]]]],[11,"info",E,E,18,[[["self"]],["info"]]],[11,"next_frame",E,"Decodes the next frame into `buf`",18,[[["self"]],[[R[3],[R[244]]],[R[244]]]]],[11,"next_row",E,R[1151],18,[[["self"]],[[R[25]],[R[3],[R[25],R[244]]],[R[244]]]]],[11,"next_interlaced_row",E,R[1151],18,[[["self"]],[[R[3],[R[25],R[244]]],[R[244]],[R[25]]]]],[11,"output_color_type",E,"Returns the color type and the number of bits per sample…",18,[[["self"]]]],[11,"output_buffer_size",E,R[1152],18,[[["self"]],["usize"]]],[11,"output_line_size",E,R[1152],18,[[["self"],["u32"]],["usize"]]],[11,"new",E,E,19,[[["w"],["u32"]],["encoder"]]],[11,"write_header",E,E,19,[[],[["writer"],[R[1153]],[R[3],["writer",R[1153]]]]]],[11,"set_color",E,"Set the color of the encoded image.",19,[[["self"],[R[1164]]]]],[11,"set_depth",E,"Set the indicated depth of the image data.",19,[[["self"],["bitdepth"]]]],[11,"set_compression",E,"Set compression parameters.",19,[[["self"],["into",[R[713]]],[R[713]]]]],[11,"set_filter",E,"Set the used filter type.",19,[[["self"],[R[1155]]]]],[11,"write_chunk",E,E,20,[[["self"]],[[R[3],[R[1153]]],[R[1153]]]]],[11,"write_image_data",E,"Writes the image data.",20,[[["self"]],[[R[3],[R[1153]]],[R[1153]]]]],[11,"stream_writer",E,"Create an stream writer.",20,[[["self"]],[R[1154]]]],[11,"stream_writer_with_size",E,"Create a stream writer with custom buffer size.",20,[[["self"],["usize"]],[R[1154]]]],[11,"finish",E,E,21,[[],[[R[3],[R[1153]]],[R[1153]]]]],[11,R[785],E,R[1156],15,[[["u8"]],[[R[25],[R[1155]]],[R[1155]]]]],[11,"samples",E,"Returns the number of samples used per pixel of `ColorType`",6,[[["self"]],["usize"]]],[11,R[785],E,R[1156],6,[[["u8"]],[[R[1164]],[R[25],[R[1164]]]]]],[11,R[785],E,R[1156],7,[[["u8"]],[[R[25],["bitdepth"]],["bitdepth"]]]],[11,R[785],E,R[1156],8,[[["u8"]],[[R[25],["unit"]],["unit"]]]],[11,R[785],E,R[1157],9,[[["u8"]],[[R[25],[R[1165]]],[R[1165]]]]],[11,R[785],E,R[1157],10,[[["u8"]],[[R[25],["blendop"]],["blendop"]]]],[11,"set_seq_num",E,E,1,[[["self"],["u32"]]]],[11,"inc_seq_num",E,E,1,[[["self"],["u32"]]]],[11,"size",E,"Size of the image",3,[[["self"]]]],[11,"is_animated",E,"Returns true if the image is an APNG image.",3,[[["self"]],["bool"]]],[11,R[1158],E,"Returns the frame control information of the image",3,[[["self"]],[[R[25],[R[1159]]],[R[1159]]]]],[11,R[1160],E,"Returns the frame control information of the current frame",3,[[["self"]],[[R[1161]],[R[25],[R[1161]]]]]],[11,"bits_per_pixel",E,"Returns the bits per pixel",3,[[["self"]],["usize"]]],[11,"bytes_per_pixel",E,"Returns the bytes per pixel",3,[[["self"]],["usize"]]],[11,"raw_bytes",E,R[1162],3,[[["self"]],["usize"]]],[11,"raw_row_length",E,"Returns the number of bytes needed for one deinterlaced row ",3,[[["self"]],["usize"]]],[11,"raw_row_length_from_width",E,R[1162],3,[[["self"],["u32"]],["usize"]]],[18,"IDENTITY",E,"No transformation",22,N],[18,"STRIP_16",E,"Strip 16-bit samples to 8 bits",22,N],[18,"STRIP_ALPHA",E,"Discard the alpha channel",22,N],[18,"PACKING",E,"Expand 1; 2 and 4-bit samples to bytes",22,N],[18,"PACKSWAP",E,"Change order of packed pixels to LSB first",22,N],[18,"EXPAND",E,"Expand paletted images to RGB; expand grayscale images of…",22,N],[18,"INVERT_MONO",E,"Invert monochrome images",22,N],[18,"SHIFT",E,"Normalize pixels to the sBIT depth",22,N],[18,"BGR",E,"Flip RGB to BGR; RGBA to BGRA",22,N],[18,"SWAP_ALPHA",E,"Flip RGBA to ARGB or GA to AG",22,N],[18,"SWAP_ENDIAN",E,"Byte-swap 16-bit samples",22,N],[18,"INVERT_ALPHA",E,"Change alpha from opacity to transparency",22,N],[18,"STRIP_FILLER",E,E,22,N],[18,"STRIP_FILLER_BEFORE",E,E,22,N],[18,"STRIP_FILLER_AFTER",E,E,22,N],[18,"GRAY_TO_RGB",E,E,22,N],[18,"EXPAND_16",E,E,22,N],[18,"SCALE_16",E,E,22,N],[11,"empty",E,"Returns an empty set of flags",22,[[],[R[1163]]]],[11,"all",E,"Returns the set containing all flags.",22,[[],[R[1163]]]],[11,"bits",E,"Returns the raw value of the flags currently stored.",22,[[["self"]],["u32"]]],[11,"from_bits",E,"Convert from underlying bit representation, unless that…",22,[[["u32"]],[[R[25],[R[1163]]],[R[1163]]]]],[11,"from_bits_truncate",E,"Convert from underlying bit representation, dropping any…",22,[[["u32"]],[R[1163]]]],[11,R[589],E,"Returns `true` if no flags are currently stored.",22,[[["self"]],["bool"]]],[11,"is_all",E,"Returns `true` if all flags are currently set.",22,[[["self"]],["bool"]]],[11,"intersects",E,"Returns `true` if there are flags common to both `self`…",22,[[["self"],[R[1163]]],["bool"]]],[11,"contains",E,"Returns `true` all of the flags in `other` are contained…",22,[[["self"],[R[1163]]],["bool"]]],[11,"insert",E,"Inserts the specified flags in-place.",22,[[["self"],[R[1163]]]]],[11,"remove",E,"Removes the specified flags in-place.",22,[[["self"],[R[1163]]]]],[11,"toggle",E,"Toggles the specified flags in-place.",22,[[["self"],[R[1163]]]]],[11,"set",E,"Inserts or removes the specified flags depending on the…",22,[[["self"],[R[1163]],["bool"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[42],E,E,22,[[["self"],[T]]]],[11,R[8],E,E,22,[[[U]],[R[3]]]],[11,R[9],E,E,22,[[],[R[3]]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[8],E,E,17,[[[U]],[R[3]]]],[11,R[9],E,E,17,[[],[R[3]]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[8],E,E,18,[[[U]],[R[3]]]],[11,R[9],E,E,18,[[],[R[3]]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[8],E,E,16,[[[U]],[R[3]]]],[11,R[9],E,E,16,[[],[R[3]]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"],[T]]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[8],E,E,19,[[[U]],[R[3]]]],[11,R[9],E,E,19,[[],[R[3]]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[8],E,E,20,[[[U]],[R[3]]]],[11,R[9],E,E,20,[[],[R[3]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[8],E,E,21,[[[U]],[R[3]]]],[11,R[9],E,E,21,[[],[R[3]]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[42],E,E,6,[[["self"],[T]]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[42],E,E,7,[[["self"],[T]]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"],[T]]]],[11,R[8],E,E,8,[[[U]],[R[3]]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[98],E,E,9,[[["self"]],["string"]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[42],E,E,9,[[["self"],[T]]]],[11,R[8],E,E,9,[[[U]],[R[3]]]],[11,R[9],E,E,9,[[],[R[3]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[98],E,E,10,[[["self"]],["string"]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[42],E,E,10,[[["self"],[T]]]],[11,R[8],E,E,10,[[[U]],[R[3]]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[42],E,E,11,[[["self"],[T]]]],[11,R[8],E,E,11,[[[U]],[R[3]]]],[11,R[9],E,E,11,[[],[R[3]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[8],E,E,12,[[[U]],[R[3]]]],[11,R[9],E,E,12,[[],[R[3]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[98],E,E,13,[[["self"]],["string"]]],[11,R[8],E,E,13,[[[U]],[R[3]]]],[11,R[9],E,E,13,[[],[R[3]]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[98],E,E,14,[[["self"]],["string"]]],[11,R[8],E,E,14,[[[U]],[R[3]]]],[11,R[9],E,E,14,[[],[R[3]]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[42],E,E,15,[[["self"],[T]]]],[11,R[8],E,E,15,[[[U]],[R[3]]]],[11,R[9],E,E,15,[[],[R[3]]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,"from",E,E,13,[[["error"]],[R[244]]]],[11,"from",E,E,13,[[["string"]],[R[244]]]],[11,"from",E,E,14,[[["error"]],[R[1153]]]],[11,"from",E,E,11,[[[R[713]]],["self"]]],[11,"cmp",E,E,22,[[["self"],[R[1163]]],[R[24]]]],[11,"extend",E,E,22,[[["self"],[R[319]]]]],[11,"drop",E,E,20,[[["self"]]]],[11,"drop",E,E,21,[[["self"]]]],[11,R[172],E,E,22,[[["self"],[R[1163]]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,22,[[["self"],[R[1163]]],["bool"]]],[11,"le",E,E,22,[[["self"],[R[1163]]],["bool"]]],[11,"gt",E,E,22,[[["self"],[R[1163]]],["bool"]]],[11,"ge",E,E,22,[[["self"],[R[1163]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[1155]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[1164]]],["bool"]]],[11,"eq",E,E,7,[[["self"],["bitdepth"]],["bool"]]],[11,"eq",E,E,8,[[["self"],["unit"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[1165]]],["bool"]]],[11,"eq",E,E,10,[[["self"],["blendop"]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[1163]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[1163]]],["bool"]]],[11,R[327],E,E,5,[[],["limits"]]],[11,R[327],E,E,1,[[],[R[1161]]]],[11,R[327],E,E,3,[[],["info"]]],[11,"clone",E,E,5,[[["self"]],["limits"]]],[11,"clone",E,E,15,[[["self"]],[R[1155]]]],[11,"clone",E,E,6,[[["self"]],[R[1164]]]],[11,"clone",E,E,7,[[["self"]],["bitdepth"]]],[11,"clone",E,E,0,[[["self"]],["pixeldimensions"]]],[11,"clone",E,E,8,[[["self"]],["unit"]]],[11,"clone",E,E,9,[[["self"]],[R[1165]]]],[11,"clone",E,E,10,[[["self"]],["blendop"]]],[11,"clone",E,E,1,[[["self"]],[R[1161]]]],[11,"clone",E,E,2,[[["self"]],[R[1159]]]],[11,"clone",E,E,11,[[["self"]],[R[713]]]],[11,"clone",E,E,22,[[["self"]],[R[1163]]]],[11,"fmt",E,E,13,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[R[3]]]],[11,"sub",E,"Returns the set difference of the two sets of flags.",22,[[[R[1163]]],[R[1163]]]],[11,R[759],E,"Disables all flags enabled in the set.",22,[[["self"],[R[1163]]]]],[11,"not",E,"Returns the complement of this set of flags.",22,[[],[R[1163]]]],[11,"bitand",E,"Returns the intersection between the two sets of flags.",22,[[[R[1163]]],[R[1163]]]],[11,"bitor",E,"Returns the union of the two sets of flags.",22,[[[R[1163]]],[R[1163]]]],[11,"bitxor",E,"Returns the left flags, but with all the right flags…",22,[[[R[1163]]],[R[1163]]]],[11,R[1201],E,"Disables all flags disabled in the set.",22,[[["self"],[R[1163]]]]],[11,R[1202],E,"Adds the set of flags.",22,[[["self"],[R[1163]]]]],[11,R[1203],E,"Toggles the set of flags.",22,[[["self"],[R[1163]]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,R[339],E,E,22,[[[R[319]]],[R[1163]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[R[3]]]],[11,R[53],E,E,13,[[["self"]],["str"]]],[11,R[53],E,E,14,[[["self"]],["str"]]],[11,"write",E,E,21,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,E,21,[[["self"]],[R[3]]]]],"p":[[3,R[1146]],[3,R[1148]],[3,R[1147]],[3,"Info"],[3,"OutputInfo"],[3,"Limits"],[4,R[1489]],[4,"BitDepth"],[4,"Unit"],[4,"DisposeOp"],[4,"BlendOp"],[4,R[722]],[4,"Decoded"],[4,R[254]],[4,R[1166]],[4,R[2050]],[3,R[258]],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[3,"Writer"],[3,R[1167]],[3,R[1168]]]};
searchIndex["proc_macro2"]={"doc":"A wrapper around the procedural macro API of the…","i":[[3,R[342],R[329],"An abstract stream of tokens, or more concretely a…",N,N],[3,"LexError",E,"Error returned from `TokenStream::from_str`.",N,N],[3,"Span",E,"A region of source code, along with macro expansion…",N,N],[3,"Group",E,"A delimited token stream.",N,N],[3,"Punct",E,"An `Punct` is an single punctuation character like `+`,…",N,N],[3,"Ident",E,R[815],N,N],[3,"Literal",E,"A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",N,N],[4,R[340],E,"A single token or a delimited sequence of token trees…",N,N],[13,"Group",E,"A token stream surrounded by bracket delimiters.",0,N],[13,"Ident",E,"An identifier.",0,N],[13,"Punct",E,"A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal",E,"A literal character (`'a'`), string (`\"hello\"`), number…",0,N],[4,R[341],E,"Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis",E,"`( ... )`",1,N],[13,"Brace",E,"`{ ... }`",1,N],[13,"Bracket",E,"`[ ... ]`",1,N],[13,"None",E,"`Ø ... Ø`",1,N],[4,"Spacing",E,"Whether an `Punct` is followed immediately by another…",N,N],[13,"Alone",E,"E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint",E,"E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[0,R[924],E,"Public implementation details for the `TokenStream` type,…",N,N],[3,R[328],R[336],"An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"new",R[329],"Returns an empty `TokenStream` containing no token trees.",3,[[],[R[330]]]],[11,"empty",E,E,3,[[],[R[330]]]],[11,R[589],E,"Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site",E,"The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap",E,"Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"span",E,"Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,R[332],E,"Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new",E,"Creates a new `Group` with the given delimiter and token…",5,[[[R[331]],[R[330]]],["group"]]],[11,R[331],E,"Returns the delimiter of this `Group`",5,[[["self"]],[R[331]]]],[11,"stream",E,"Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],[R[330]]]],[11,"span",E,"Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,R[332],E,"Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new",E,"Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char",E,"Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing",E,"Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span",E,"Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,R[332],E,"Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new",E,R[1007],7,[[["str"],["span"]],["ident"]]],[11,"span",E,R[1008],7,[[["self"]],["span"]]],[11,R[332],E,R[1009],7,[[["self"],["span"]]]],[11,"u8_suffixed",E,R[333],8,[[["u8"]],[R[334]]]],[11,"u16_suffixed",E,R[333],8,[[["u16"]],[R[334]]]],[11,"u32_suffixed",E,R[333],8,[[["u32"]],[R[334]]]],[11,"u64_suffixed",E,R[333],8,[[["u64"]],[R[334]]]],[11,"usize_suffixed",E,R[333],8,[[["usize"]],[R[334]]]],[11,"i8_suffixed",E,R[333],8,[[["i8"]],[R[334]]]],[11,"i16_suffixed",E,R[333],8,[[["i16"]],[R[334]]]],[11,"i32_suffixed",E,R[333],8,[[["i32"]],[R[334]]]],[11,"i64_suffixed",E,R[333],8,[[["i64"]],[R[334]]]],[11,"isize_suffixed",E,R[333],8,[[["isize"]],[R[334]]]],[11,"u128_suffixed",E,R[333],8,[[["u128"]],[R[334]]]],[11,"i128_suffixed",E,R[333],8,[[["i128"]],[R[334]]]],[11,"u8_unsuffixed",E,R[335],8,[[["u8"]],[R[334]]]],[11,"u16_unsuffixed",E,R[335],8,[[["u16"]],[R[334]]]],[11,"u32_unsuffixed",E,R[335],8,[[["u32"]],[R[334]]]],[11,"u64_unsuffixed",E,R[335],8,[[["u64"]],[R[334]]]],[11,"usize_unsuffixed",E,R[335],8,[[["usize"]],[R[334]]]],[11,"i8_unsuffixed",E,R[335],8,[[["i8"]],[R[334]]]],[11,"i16_unsuffixed",E,R[335],8,[[["i16"]],[R[334]]]],[11,"i32_unsuffixed",E,R[335],8,[[["i32"]],[R[334]]]],[11,"i64_unsuffixed",E,R[335],8,[[["i64"]],[R[334]]]],[11,"isize_unsuffixed",E,R[335],8,[[["isize"]],[R[334]]]],[11,"u128_unsuffixed",E,R[335],8,[[["u128"]],[R[334]]]],[11,"i128_unsuffixed",E,R[335],8,[[["i128"]],[R[334]]]],[11,"f64_unsuffixed",E,E,8,[[["f64"]],[R[334]]]],[11,"f64_suffixed",E,E,8,[[["f64"]],[R[334]]]],[11,"f32_unsuffixed",E,"Creates a new unsuffixed floating-point literal.",8,[[["f32"]],[R[334]]]],[11,"f32_suffixed",E,E,8,[[["f32"]],[R[334]]]],[11,"string",E,E,8,[[["str"]],[R[334]]]],[11,"character",E,E,8,[[["char"]],[R[334]]]],[11,"byte_string",E,E,8,[[],[R[334]]]],[11,"span",E,E,8,[[["self"]],["span"]]],[11,R[332],E,E,8,[[["self"],["span"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[98],E,E,3,[[["self"]],["string"]]],[11,R[23],E,E,3,[[],["i"]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[8],E,E,9,[[[U]],[R[3]]]],[11,R[9],E,E,9,[[],[R[3]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"],[T]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[98],E,E,5,[[["self"]],["string"]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"],[T]]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[98],E,E,6,[[["self"]],["string"]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[42],E,E,6,[[["self"],[T]]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[98],E,E,7,[[["self"]],["string"]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[42],E,E,7,[[["self"],[T]]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[98],E,E,8,[[["self"]],["string"]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"],[T]]]],[11,R[8],E,E,8,[[[U]],[R[3]]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[98],E,E,0,[[["self"]],["string"]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",R[336],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[23],E,E,10,[[],["i"]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[42],E,E,10,[[["self"],[T]]]],[11,R[8],E,E,10,[[[U]],[R[3]]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"from",R[329],E,4,[[["span"]],["span"]]],[11,"from",E,E,3,[[[R[330]]],[R[330]]]],[11,"from",E,E,0,[[["group"]],[R[337]]]],[11,"from",E,E,0,[[["ident"]],[R[337]]]],[11,"from",E,E,0,[[["punct"]],[R[337]]]],[11,"from",E,E,0,[[[R[334]]],[R[337]]]],[11,"cmp",E,E,7,[[["self"],["ident"]],[R[24]]]],[11,"extend",E,E,3,[[["self"],[R[319]]]]],[11,"extend",E,E,3,[[["self"],[R[319]]]]],[11,"next",R[336],E,10,[[["self"]],[[R[25],[R[337]]],[R[337]]]]],[11,R[172],R[329],E,7,[[["self"],["ident"]],[[R[25],[R[24]]],[R[24]]]]],[11,"eq",E,E,1,[[["self"],[R[331]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["spacing"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["ident"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[T]],["bool"]]],[11,R[327],E,E,3,[[],["self"]]],[11,R[23],E,E,3,[[],[R[338]]]],[11,"clone",E,E,3,[[["self"]],[R[330]]]],[11,"clone",E,E,4,[[["self"]],["span"]]],[11,"clone",E,E,0,[[["self"]],[R[337]]]],[11,"clone",E,E,5,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],[R[331]]]],[11,"clone",E,E,6,[[["self"]],["punct"]]],[11,"clone",E,E,2,[[["self"]],["spacing"]]],[11,"clone",E,E,7,[[["self"]],["ident"]]],[11,"clone",E,E,8,[[["self"]],[R[334]]]],[11,"clone",R[336],E,10,[[["self"]],[R[338]]]],[11,"fmt",R[329],E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[336],E,10,[[["self"],[R[13]]],[R[3]]]],[11,R[777],R[329],E,3,[[["str"]],[[R[330]],[R[953]],[R[3],[R[330],R[953]]]]]],[11,"hash",E,E,7,[[["self"],["h"]]]],[11,R[339],E,E,3,[[[R[319]]],["self"]]],[11,R[339],E,E,3,[[[R[319]]],["self"]]]],"p":[[4,R[340]],[4,R[341]],[4,"Spacing"],[3,R[342]],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,R[328]]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,R[708],"quote","TokenStream extension trait with methods for appending…",N,N],[10,"append",E,R[705],0,[[["self"],[U]]]],[10,"append_all",E,R[705],0,[[["self"],["i"]]]],[10,"append_separated",E,R[705],0,[[["self"],["i"],[U]]]],[10,"append_terminated",E,R[705],0,[[["self"],["i"],[U]]]],[8,"ToTokens",E,"Types that can be interpolated inside a [`quote!`]…",N,N],[10,R[945],E,"Write `self` to the given `TokenStream`.",1,[[["self"],[R[330]]]]],[11,R[706],E,R[707],1,[[],[R[330]]]],[14,"quote",E,"The whole point.",N,N],[14,"quote_spanned",E,"Same as `quote!`, but applies a given span to all tokens…",N,N],[11,R[706],E,R[707],1,[[],[R[330]]]]],"p":[[8,R[708]],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[8,"RngCore","rand",R[1107],N,N],[10,R[43],E,R[1108],0,[[["self"]],["u32"]]],[10,R[44],E,R[1109],0,[[["self"]],["u64"]]],[10,R[45],E,R[1110],0,[[["self"]]]],[10,R[46],E,R[1111],0,[[["self"]],[["error"],[R[3],["error"]]]]],[8,"CryptoRng",E,R[1112],N,N],[8,R[59],E,R[1113],N,N],[16,"Seed",E,R[1114],1,N],[10,R[47],E,R[1115],1,[[],["self"]]],[11,R[48],E,R[1116],1,[[["u64"]],["self"]]],[11,R[49],E,R[1117],1,[[["r"]],[[R[3],["error"]],["error"]]]],[4,R[55],E,R[1098],N,N],[13,R[1099],E,R[1100],2,N],[13,"Unexpected",E,R[1101],2,N],[13,"Transient",E,R[1102],2,N],[13,"NotReady",E,R[1103],2,N],[3,"Error",E,R[1104],N,N],[12,"kind",E,R[1105],3,N],[12,"msg",E,R[1106],3,N],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],["threadrng"]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],[T]]],[0,"distributions",E,"Generating random samples from probability distributions.",N,N],[3,R[1090],R[1058],"Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform",E,R[1055],N,N],[3,R[1091],E,R[1054],N,N],[3,"Open01",E,R[1054],N,N],[3,"Bernoulli",E,"The Bernoulli distribution.",N,N],[3,R[1081],E,"A distribution using weighted sampling to pick a…",N,N],[3,R[1082],E,"Samples uniformly from the surface of the unit sphere in…",N,N],[3,"UnitCircle",E,"Samples uniformly from the edge of the unit circle in two…",N,N],[3,"Gamma",E,"The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared",E,"The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF",E,"The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT",E,"The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Beta",E,"The Beta distribution with shape parameters `alpha` and…",N,N],[3,"Normal",E,"The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal",E,"The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,R[1092],E,"Samples floating-point numbers according to the normal…",N,N],[3,"Exp",E,"The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1",E,"Samples floating-point numbers according to the…",N,N],[3,"Pareto",E,"Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson",E,"The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial",E,"The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy",E,"The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"Dirichlet",E,"The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,"Triangular",E,"The triangular distribution.",N,N],[3,"Weibull",E,"Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter",E,"An iterator that generates random values of `T` with…",N,N],[3,"Standard",E,"A generic random value distribution, implemented for many…",N,N],[3,"Weighted",E,"A value with a particular weight for use with…",N,N],[12,"weight",E,"The numerical weight of this item",4,N],[12,"item",E,"The actual item which is being weighted",4,N],[3,R[1084],E,"A distribution that selects from a finite collection of…",N,N],[4,R[1077],E,"Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem",E,"The provided iterator contained no items.",5,N],[13,"NegativeWeight",E,"A weight lower than zero was used.",5,N],[13,"AllWeightsZero",E,"All items in the provided iterator had a weight of zero.",5,N],[0,"uniform",E,"A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform",R[1067],R[1055],N,N],[3,"UniformInt",E,"The back-end implementing [`UniformSampler`] for integer…",N,N],[3,R[1093],E,"The back-end implementing [`UniformSampler`] for…",N,N],[3,R[1094],E,"The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,R[1078],E,"Helper trait for creating objects using the correct…",N,N],[16,"Sampler",E,"The `UniformSampler` implementation supporting type `X`.",6,N],[8,R[1079],E,"Helper trait handling actual uniform sampling.",N,N],[16,"X",E,"The type sampled by this implementation.",7,N],[10,"new",E,"Construct self, with inclusive lower bound and exclusive…",7,[[["b2"],["b1"]],["self"]]],[10,R[1056],E,"Construct self, with inclusive bounds `[low, high]`.",7,[[["b2"],["b1"]],["self"]]],[10,"sample",E,"Sample a value.",7,[[["self"],["r"]]]],[11,R[1073],E,"Sample a single value uniformly from a range with…",7,[[["b2"],["b1"],["r"]]]],[8,R[1080],E,"Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,R[28],E,"Immutably borrows from an owned value. See…",8,[[["self"]],["borrowed"]]],[11,"new",E,R[1057],9,[[["b2"],["b1"]],["uniform"]]],[11,R[1056],E,R[1057],9,[[["b2"],["b1"]],["uniform"]]],[11,"new",R[1058],"Construct a new `Bernoulli` with the given probability of…",10,[[["f64"]],["bernoulli"]]],[11,"from_ratio",E,"Construct a new `Bernoulli` with the probability of…",10,[[["u32"]],["bernoulli"]]],[11,"new",E,"Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],[[R[1060]],[R[1059]],[R[3],[R[1059],R[1060]]]]]],[11,"new",E,"Construct a new `UnitSphereSurface` distribution.",12,[[],[R[1075]]]],[11,"new",E,"Construct a new `UnitCircle` distribution.",13,[[],["unitcircle"]]],[11,"new",E,"Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"]],["gamma"]]],[11,"new",E,"Create a new chi-squared distribution with…",15,[[["f64"]],["chisquared"]]],[11,"new",E,"Create a new `FisherF` distribution, with the given…",16,[[["f64"]],["fisherf"]]],[11,"new",E,"Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new",E,"Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"]],["beta"]]],[11,"new",E,"Construct a new `Normal` distribution with the given mean…",19,[[["f64"]],["normal"]]],[11,"new",E,"Construct a new `LogNormal` distribution with the given…",20,[[["f64"]],["lognormal"]]],[11,"new",E,"Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new",E,"Construct a new Pareto distribution with given `scale` and…",22,[[["f64"]],["pareto"]]],[11,"new",E,"Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new",E,"Construct a new `Binomial` with the given shape parameters…",24,[[["f64"],["u64"]],["binomial"]]],[11,"new",E,"Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"]],["cauchy"]]],[11,"new",E,"Construct a new `Dirichlet` with the given alpha parameter…",26,[[["vec",["f64"]],["into",["vec"]]],["dirichlet"]]],[11,"new_with_param",E,"Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],["usize"]],["dirichlet"]]],[11,"new",E,"Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"]],["triangular"]]],[11,"new",E,"Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"]],["weibull"]]],[8,R[1083],E,"Types (distributions) that can be used to create a random…",N,N],[10,"sample",E,"Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],[T]]],[11,R[1061],E,"Create an iterator that generates random values of `T`,…",29,[[["r"],["self"]],["distiter"]]],[11,"new",E,"Create a new `WeightedChoice`.",30,[[],["weightedchoice"]]],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng",E,"Pseudo-random number generators.",N,N],[0,"rngs",E,"Random number generators and adapters for common usage:",N,N],[3,R[238],R[1068],R[1126],N,N],[4,R[237],E,R[1127],N,N],[13,"NoTimer",E,R[1128],31,N],[13,R[1129],E,R[1130],31,N],[13,R[1131],E,R[1132],31,N],[13,R[1133],E,R[1134],31,N],[13,R[1135],E,R[1136],31,N],[3,"OsRng",E,R[1144],N,N],[3,"EntropyRng",E,"An interface returning random data from external…",N,N],[3,"SmallRng",E,"An RNG recommended when small state, cheap initialization…",N,N],[3,"StdRng",E,"The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,"ThreadRng",E,"The type returned by [`thread_rng`], essentially just a…",N,N],[0,"adapter",E,"Wrappers / adapters forming RNGs",N,N],[3,"ReadRng",R[1070],"An RNG that reads random bytes straight from any type…",N,N],[3,R[1085],E,"A wrapper around any PRNG that implements…",N,N],[11,"new",E,"Create a new `ReadRng` from a `Read`.",32,[[["r"]],["readrng"]]],[11,"new",E,"Create a new `ReseedingRng` from an existing PRNG,…",33,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed",E,"Reseed the internal PRNG.",33,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"new",R[1068],"Create a new `EntropyRng`.",34,[[],["self"]]],[0,"mock",E,"Mock random number generator",N,N],[3,"StepRng",R[1071],"A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new",E,"Create a `StepRng`, yielding an arithmetic sequence…",35,[[["u64"]],["self"]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[3,R[1095],R[1074],"Iterator over multiple choices, as returned by…",N,N],[5,R[1061],E,"Randomly sample `amount` elements from a finite iterator.",N,[[["i"],["r"],["usize"]],[["vec"],[R[3],["vec","vec"]]]]],[5,"sample_slice",E,"Randomly sample exactly `amount` values from `slice`.",N,[[["r"],["usize"]],["vec"]]],[5,"sample_slice_ref",E,"Randomly sample exactly `amount` references from `slice`.",N,[[["usize"],["r"]],[[T],["vec"]]]],[0,"index",E,"Index sampling",N,N],[4,"IndexVec",R[1072],"A vector of indices.",N,N],[4,R[1096],E,"Return type of `IndexVec::iter`.",N,N],[4,R[1097],E,"Return type of `IndexVec::into_iter`.",N,N],[5,"sample",E,"Randomly sample exactly `amount` distinct indices from…",N,[[["r"],["usize"]],["indexvec"]]],[11,"len",E,"Returns the number of indices",36,[[["self"]],["usize"]]],[11,"index",E,"Return the value at the given `index`.",36,[[["self"],["usize"]],["usize"]]],[11,"into_vec",E,"Return result as a `Vec<usize>`. Conversion may or may not…",36,[[],[["vec",["usize"]],["usize"]]]],[11,"iter",E,"Iterate over the indices as a sequence of `usize` values",36,[[["self"]],["indexveciter"]]],[11,R[23],E,"Convert into an iterator over the indices as a sequence of…",36,[[],[R[1076]]]],[8,R[1086],R[1074],"Extension trait on slices, providing random mutation and…",N,N],[16,"Item",E,"The element type.",37,N],[10,"choose",E,"Returns a reference to one random element of the slice, or…",37,[[["self"],["r"]],[R[25]]]],[10,"choose_mut",E,"Returns a mutable reference to one random element of the…",37,[[["self"],["r"]],[R[25]]]],[10,R[1062],E,"Produces an iterator that chooses `amount` elements from…",37,[[["self"],["r"],["usize"]],["slicechooseiter"]]],[10,"choose_weighted",E,"Similar to [`choose`], where the likelihood of each…",37,[[["self"],["r"],["f"]],[[R[1060]],[R[3],[R[1060]]]]]],[10,"choose_weighted_mut",E,"Similar to [`choose_mut`], where the likelihood of each…",37,[[["self"],["r"],["f"]],[[R[3],[R[1060]]],[R[1060]]]]],[10,"shuffle",E,R[1066],37,[[["self"],["r"]]]],[10,"partial_shuffle",E,"Shuffle a slice in place, but exit early.",37,[[["self"],["r"],["usize"]]]],[8,R[1087],E,"Extension trait on iterators, providing random sampling…",N,N],[11,"choose",E,"Choose one element at random from the iterator. If you…",38,[[["r"]],[R[25]]]],[11,"choose_multiple_fill",E,R[1063],38,[[["r"]],["usize"]]],[11,R[1062],E,R[1063],38,[[["r"],["usize"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen",E,"Return a random value supporting the [`Standard`]…",39,[[["self"]],[T]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`), i.e.…",39,[[["self"],["b1"],["b2"]],["sampleuniform"]]],[11,"sample",E,"Sample a new value, using the given distribution.",39,[[["self"],[R[1064]]],[T]]],[11,R[1061],E,"Create an iterator that generates values using the given…",39,[[["d"],["self"]],[["distiter"],[R[1064]]]]],[11,"fill",E,R[1065],39,[[["self"],[T]]]],[11,"try_fill",E,R[1065],39,[[["self"],[T]],[[R[3],["error"]],["error"]]]],[11,"gen_bool",E,"Return a bool with a probability `p` of being true.",39,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio",E,"Return a bool with a probability of…",39,[[["self"],["u32"]],["bool"]]],[11,"choose",E,"Return a random element from `values`.",39,[[["self"]],[[T],[R[25]]]]],[11,"choose_mut",E,"Return a mutable pointer to a random element from `values`.",39,[[["self"]],[[R[25]],[T]]]],[11,"shuffle",E,R[1066],39,[[["self"]]]],[8,R[1088],E,"Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut",E,"Return a mutable reference to self as a byte slice",40,[[["self"]]]],[10,"to_le",E,"Call `to_le` on each element (i.e. byte-swap on Big Endian…",40,[[["self"]]]],[8,R[1089],E,"A convenience extension to [`SeedableRng`] allowing…",N,N],[10,R[1069],E,"Creates a new instance, automatically seeded with fresh…",41,[[],["self"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[98],E,E,3,[[["self"]],["string"]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",R[1058],E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[8],E,E,42,[[[U]],[R[3]]]],[11,R[9],E,E,42,[[],[R[3]]]],[11,R[28],E,E,42,[[["self"]],[T]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[29]]]],[11,"from",R[1067],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[42],E,E,9,[[["self"],[T]]]],[11,R[8],E,E,9,[[[U]],[R[3]]]],[11,R[9],E,E,9,[[],[R[3]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"from",R[1058],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[41],E,E,43,[[["self"]],[T]]],[11,R[42],E,E,43,[[["self"],[T]]]],[11,R[8],E,E,43,[[[U]],[R[3]]]],[11,R[9],E,E,43,[[],[R[3]]]],[11,R[28],E,E,43,[[["self"]],[T]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[29]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[41],E,E,44,[[["self"]],[T]]],[11,R[42],E,E,44,[[["self"],[T]]]],[11,R[8],E,E,44,[[[U]],[R[3]]]],[11,R[9],E,E,44,[[],[R[3]]]],[11,R[28],E,E,44,[[["self"]],[T]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[29]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[42],E,E,10,[[["self"],[T]]]],[11,R[8],E,E,10,[[[U]],[R[3]]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[42],E,E,11,[[["self"],[T]]]],[11,R[8],E,E,11,[[[U]],[R[3]]]],[11,R[9],E,E,11,[[],[R[3]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[42],E,E,12,[[["self"],[T]]]],[11,R[8],E,E,12,[[[U]],[R[3]]]],[11,R[9],E,E,12,[[],[R[3]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[42],E,E,13,[[["self"],[T]]]],[11,R[8],E,E,13,[[[U]],[R[3]]]],[11,R[9],E,E,13,[[],[R[3]]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[42],E,E,14,[[["self"],[T]]]],[11,R[8],E,E,14,[[[U]],[R[3]]]],[11,R[9],E,E,14,[[],[R[3]]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[42],E,E,15,[[["self"],[T]]]],[11,R[8],E,E,15,[[[U]],[R[3]]]],[11,R[9],E,E,15,[[],[R[3]]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[42],E,E,16,[[["self"],[T]]]],[11,R[8],E,E,16,[[[U]],[R[3]]]],[11,R[9],E,E,16,[[],[R[3]]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[42],E,E,17,[[["self"],[T]]]],[11,R[8],E,E,17,[[[U]],[R[3]]]],[11,R[9],E,E,17,[[],[R[3]]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[42],E,E,18,[[["self"],[T]]]],[11,R[8],E,E,18,[[[U]],[R[3]]]],[11,R[9],E,E,18,[[],[R[3]]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[42],E,E,19,[[["self"],[T]]]],[11,R[8],E,E,19,[[[U]],[R[3]]]],[11,R[9],E,E,19,[[],[R[3]]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[42],E,E,20,[[["self"],[T]]]],[11,R[8],E,E,20,[[[U]],[R[3]]]],[11,R[9],E,E,20,[[],[R[3]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[41],E,E,45,[[["self"]],[T]]],[11,R[42],E,E,45,[[["self"],[T]]]],[11,R[8],E,E,45,[[[U]],[R[3]]]],[11,R[9],E,E,45,[[],[R[3]]]],[11,R[28],E,E,45,[[["self"]],[T]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[29]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[42],E,E,21,[[["self"],[T]]]],[11,R[8],E,E,21,[[[U]],[R[3]]]],[11,R[9],E,E,21,[[],[R[3]]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[41],E,E,46,[[["self"]],[T]]],[11,R[42],E,E,46,[[["self"],[T]]]],[11,R[8],E,E,46,[[[U]],[R[3]]]],[11,R[9],E,E,46,[[],[R[3]]]],[11,R[28],E,E,46,[[["self"]],[T]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[29]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[42],E,E,22,[[["self"],[T]]]],[11,R[8],E,E,22,[[[U]],[R[3]]]],[11,R[9],E,E,22,[[],[R[3]]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[42],E,E,23,[[["self"],[T]]]],[11,R[8],E,E,23,[[[U]],[R[3]]]],[11,R[9],E,E,23,[[],[R[3]]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[42],E,E,24,[[["self"],[T]]]],[11,R[8],E,E,24,[[[U]],[R[3]]]],[11,R[9],E,E,24,[[],[R[3]]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[42],E,E,25,[[["self"],[T]]]],[11,R[8],E,E,25,[[[U]],[R[3]]]],[11,R[9],E,E,25,[[],[R[3]]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[41],E,E,26,[[["self"]],[T]]],[11,R[42],E,E,26,[[["self"],[T]]]],[11,R[8],E,E,26,[[[U]],[R[3]]]],[11,R[9],E,E,26,[[],[R[3]]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[42],E,E,27,[[["self"],[T]]]],[11,R[8],E,E,27,[[[U]],[R[3]]]],[11,R[9],E,E,27,[[],[R[3]]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[42],E,E,28,[[["self"],[T]]]],[11,R[8],E,E,28,[[[U]],[R[3]]]],[11,R[9],E,E,28,[[],[R[3]]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[23],E,E,47,[[],["i"]]],[11,R[8],E,E,47,[[[U]],[R[3]]]],[11,R[9],E,E,47,[[],[R[3]]]],[11,R[28],E,E,47,[[["self"]],[T]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[29]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[41],E,E,48,[[["self"]],[T]]],[11,R[42],E,E,48,[[["self"],[T]]]],[11,R[8],E,E,48,[[[U]],[R[3]]]],[11,R[9],E,E,48,[[],[R[3]]]],[11,R[28],E,E,48,[[["self"]],[T]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"],[T]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[8],E,E,30,[[[U]],[R[3]]]],[11,R[9],E,E,30,[[],[R[3]]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[98],E,E,5,[[["self"]],["string"]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"],[T]]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",R[1067],E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[41],E,E,49,[[["self"]],[T]]],[11,R[42],E,E,49,[[["self"],[T]]]],[11,R[8],E,E,49,[[[U]],[R[3]]]],[11,R[9],E,E,49,[[],[R[3]]]],[11,R[28],E,E,49,[[["self"]],[T]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[29]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[41],E,E,50,[[["self"]],[T]]],[11,R[42],E,E,50,[[["self"],[T]]]],[11,R[8],E,E,50,[[[U]],[R[3]]]],[11,R[9],E,E,50,[[],[R[3]]]],[11,R[28],E,E,50,[[["self"]],[T]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[29]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[41],E,E,51,[[["self"]],[T]]],[11,R[42],E,E,51,[[["self"],[T]]]],[11,R[8],E,E,51,[[[U]],[R[3]]]],[11,R[9],E,E,51,[[],[R[3]]]],[11,R[28],E,E,51,[[["self"]],[T]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[29]]]],[11,"from",R[1068],E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[41],E,E,52,[[["self"]],[T]]],[11,R[42],E,E,52,[[["self"],[T]]]],[11,R[8],E,E,52,[[[U]],[R[3]]]],[11,R[9],E,E,52,[[],[R[3]]]],[11,R[28],E,E,52,[[["self"]],[T]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[29]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[98],E,E,31,[[["self"]],["string"]]],[11,R[41],E,E,31,[[["self"]],[T]]],[11,R[42],E,E,31,[[["self"],[T]]]],[11,R[8],E,E,31,[[[U]],[R[3]]]],[11,R[9],E,E,31,[[],[R[3]]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[29]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[41],E,E,53,[[["self"]],[T]]],[11,R[42],E,E,53,[[["self"],[T]]]],[11,R[8],E,E,53,[[[U]],[R[3]]]],[11,R[9],E,E,53,[[],[R[3]]]],[11,R[28],E,E,53,[[["self"]],[T]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[29]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[8],E,E,34,[[[U]],[R[3]]]],[11,R[9],E,E,34,[[],[R[3]]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[29]]]],[11,R[1069],E,E,54,[[],["r"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[41],E,E,54,[[["self"]],[T]]],[11,R[42],E,E,54,[[["self"],[T]]]],[11,R[8],E,E,54,[[[U]],[R[3]]]],[11,R[9],E,E,54,[[],[R[3]]]],[11,R[28],E,E,54,[[["self"]],[T]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[29]]]],[11,R[1069],E,E,55,[[],["r"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[41],E,E,55,[[["self"]],[T]]],[11,R[42],E,E,55,[[["self"],[T]]]],[11,R[8],E,E,55,[[[U]],[R[3]]]],[11,R[9],E,E,55,[[],[R[3]]]],[11,R[28],E,E,55,[[["self"]],[T]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[29]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[41],E,E,56,[[["self"]],[T]]],[11,R[42],E,E,56,[[["self"],[T]]]],[11,R[8],E,E,56,[[[U]],[R[3]]]],[11,R[9],E,E,56,[[],[R[3]]]],[11,R[28],E,E,56,[[["self"]],[T]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[29]]]],[11,"from",R[1070],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[8],E,E,32,[[[U]],[R[3]]]],[11,R[9],E,E,32,[[],[R[3]]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[29]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[41],E,E,33,[[["self"]],[T]]],[11,R[42],E,E,33,[[["self"],[T]]]],[11,R[8],E,E,33,[[[U]],[R[3]]]],[11,R[9],E,E,33,[[],[R[3]]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[29]]]],[11,"from",R[1071],E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[41],E,E,35,[[["self"]],[T]]],[11,R[42],E,E,35,[[["self"],[T]]]],[11,R[8],E,E,35,[[[U]],[R[3]]]],[11,R[9],E,E,35,[[],[R[3]]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[29]]]],[11,"from",R[1074],E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[23],E,E,57,[[],["i"]]],[11,R[8],E,E,57,[[[U]],[R[3]]]],[11,R[9],E,E,57,[[],[R[3]]]],[11,R[28],E,E,57,[[["self"]],[T]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[29]]]],[11,"from",R[1072],E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[41],E,E,36,[[["self"]],[T]]],[11,R[42],E,E,36,[[["self"],[T]]]],[11,R[8],E,E,36,[[[U]],[R[3]]]],[11,R[9],E,E,36,[[],[R[3]]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[29]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[23],E,E,58,[[],["i"]]],[11,R[8],E,E,58,[[[U]],[R[3]]]],[11,R[9],E,E,58,[[],[R[3]]]],[11,R[28],E,E,58,[[["self"]],[T]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[29]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[23],E,E,59,[[],["i"]]],[11,R[41],E,E,59,[[["self"]],[T]]],[11,R[42],E,E,59,[[["self"],[T]]]],[11,R[8],E,E,59,[[[U]],[R[3]]]],[11,R[9],E,E,59,[[],[R[3]]]],[11,R[28],E,E,59,[[["self"]],[T]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[29]]]],[11,"eq",R[1068],E,31,[[["self"],[R[236]]],["bool"]]],[11,"from","rand",E,3,[[[R[236]]],["error"]]],[11,"fmt",R[1068],E,52,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,31,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,R[53],E,E,31,[[["self"]],["str"]]],[11,R[43],E,E,52,[[["self"]],["u32"]]],[11,R[44],E,E,52,[[["self"]],["u64"]]],[11,R[45],E,E,52,[[["self"]]]],[11,R[46],E,E,52,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,31,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"clone",E,E,31,[[["self"]],[R[236]]]],[11,"clone",E,E,52,[[["self"]],[R[235]]]],[11,"fmt","rand",E,3,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"read",E,E,0,[[["self"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,"clone",E,E,2,[[["self"]],[R[30]]]],[11,R[53],E,E,3,[[["self"]],["str"]]],[11,"cause",E,E,3,[[["self"]],[["error"],[R[25],["error"]]]]],[11,"eq",E,E,2,[[["self"],[R[30]]],["bool"]]],[11,"fmt",R[1068],E,53,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,R[43],E,E,53,[[["self"]],["u32"]]],[11,R[44],E,E,53,[[["self"]],["u64"]]],[11,R[45],E,E,53,[[["self"]]]],[11,R[46],E,E,53,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"clone",E,E,53,[[["self"]],["osrng"]]],[11,"new",R[1067],E,49,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[1073],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[1073],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[1073],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[1073],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[1073],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[1073],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[1073],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[1073],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[1073],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[1073],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[1073],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[1073],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,50,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,50,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,50,[[["self"],["r"]]]],[11,R[1073],E,E,50,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,50,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,50,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,50,[[["self"],["r"]]]],[11,R[1073],E,E,50,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,51,[[["b2"],["b1"]],["self"]]],[11,R[1056],E,E,51,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,51,[[["self"],["r"]],["duration"]]],[11,"sample",E,E,9,[[["self"],["r"]],["x"]]],[11,"sample",R[1058],E,10,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,11,[[["self"],["r"]],["usize"]]],[11,"sample",E,E,12,[[["self"],["r"]]]],[11,"sample",E,E,13,[[["self"],["r"]]]],[11,"sample",E,E,14,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,15,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,16,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,17,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,18,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,45,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,19,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,20,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,21,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,22,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,23,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,24,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,25,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,26,[[["self"],["r"]],[["vec",["f64"]],["f64"]]]],[11,"sample",E,E,27,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,28,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["u128"]]],[11,"sample",E,E,48,[[["self"],["r"]],["usize"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i8"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i16"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i32"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i64"]]],[11,"sample",E,E,48,[[["self"],["r"]],["i128"]]],[11,"sample",E,E,48,[[["self"],["r"]],["isize"]]],[11,"sample",E,E,48,[[["self"],["r"]],["char"]]],[11,"sample",E,E,42,[[["self"],["r"]],["char"]]],[11,"sample",E,E,48,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,"sample",E,E,48,[[["self"],["r"]],[R[25]]]],[11,"sample",E,E,48,[[["self"],["r"]],["wrapping"]]],[11,"sample",E,E,30,[[["self"],["r"]],[T]]],[11,"from",R[1067],E,9,[[["range"]],["uniform"]]],[11,"from",E,E,9,[[[R[1169]]],["uniform"]]],[11,"from",R[1072],E,36,[[["vec",["u32"]],["u32"]],["self"]]],[11,"from",E,E,36,[[["vec",["usize"]],["usize"]],["self"]]],[11,"next",R[1058],E,47,[[["self"]],[R[25]]]],[11,R[174],E,E,47,[[["self"]]]],[11,"next",R[1072],E,58,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[174],E,E,58,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[25]]]],[11,R[174],E,E,59,[[["self"]]]],[11,"next",R[1074],E,57,[[["self"]],[R[25]]]],[11,R[174],E,E,57,[[["self"]]]],[11,"len",E,E,57,[[["self"]],["usize"]]],[11,"eq",R[1058],E,5,[[["self"],[R[1060]]],["bool"]]],[11,"eq",R[1072],E,36,[[["self"],["indexvec"]],["bool"]]],[11,R[327],R[1068],E,34,[[],["self"]]],[11,R[327],E,E,56,[[],["threadrng"]]],[11,"clone",R[1067],E,9,[[["self"]],["uniform"]]],[11,"clone",E,E,49,[[["self"]],["uniformint"]]],[11,"clone",E,E,50,[[["self"]],["uniformfloat"]]],[11,"clone",E,E,51,[[["self"]],["uniformduration"]]],[11,"clone",R[1058],E,10,[[["self"]],["bernoulli"]]],[11,"clone",E,E,11,[[["self"]],[R[1059]]]],[11,"clone",E,E,5,[[["self"]],[R[1060]]]],[11,"clone",E,E,12,[[["self"]],[R[1075]]]],[11,"clone",E,E,13,[[["self"]],["unitcircle"]]],[11,"clone",E,E,14,[[["self"]],["gamma"]]],[11,"clone",E,E,15,[[["self"]],["chisquared"]]],[11,"clone",E,E,16,[[["self"]],["fisherf"]]],[11,"clone",E,E,17,[[["self"]],["studentt"]]],[11,"clone",E,E,18,[[["self"]],["beta"]]],[11,"clone",E,E,45,[[["self"]],["standardnormal"]]],[11,"clone",E,E,19,[[["self"]],["normal"]]],[11,"clone",E,E,20,[[["self"]],["lognormal"]]],[11,"clone",E,E,46,[[["self"]],["exp1"]]],[11,"clone",E,E,21,[[["self"]],["exp"]]],[11,"clone",E,E,22,[[["self"]],["pareto"]]],[11,"clone",E,E,23,[[["self"]],["poisson"]]],[11,"clone",E,E,24,[[["self"]],["binomial"]]],[11,"clone",E,E,25,[[["self"]],["cauchy"]]],[11,"clone",E,E,26,[[["self"]],["dirichlet"]]],[11,"clone",E,E,27,[[["self"]],["triangular"]]],[11,"clone",E,E,28,[[["self"]],["weibull"]]],[11,"clone",E,E,43,[[["self"]],["openclosed01"]]],[11,"clone",E,E,44,[[["self"]],["open01"]]],[11,"clone",E,E,48,[[["self"]],["standard"]]],[11,"clone",E,E,4,[[["self"]],["weighted"]]],[11,"clone",R[1070],E,33,[[["self"]],["reseedingrng"]]],[11,"clone",R[1071],E,35,[[["self"]],["steprng"]]],[11,"clone",R[1068],E,54,[[["self"]],["smallrng"]]],[11,"clone",E,E,55,[[["self"]],["stdrng"]]],[11,"clone",E,E,56,[[["self"]],["threadrng"]]],[11,"clone",R[1072],E,36,[[["self"]],["indexvec"]]],[11,"clone",E,E,59,[[["self"]],[R[1076]]]],[11,"fmt",R[1058],E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1067],E,9,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1058],E,10,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1070],E,32,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1068],E,34,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1071],E,35,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1068],E,54,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1072],E,36,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,58,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,59,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1074],E,57,[[["self"],[R[13]]],[R[3]]]],[11,R[53],R[1058],E,5,[[["self"]],["str"]]],[11,"cause",E,E,5,[[["self"]],[["error"],[R[25],["error"]]]]],[11,R[43],R[1070],E,32,[[["self"]],["u32"]]],[11,R[44],E,E,32,[[["self"]],["u64"]]],[11,R[45],E,E,32,[[["self"]]]],[11,R[46],E,E,32,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[43],E,E,33,[[["self"]],["u32"]]],[11,R[44],E,E,33,[[["self"]],["u64"]]],[11,R[45],E,E,33,[[["self"]]]],[11,R[46],E,E,33,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[43],R[1068],E,34,[[["self"]],["u32"]]],[11,R[44],E,E,34,[[["self"]],["u64"]]],[11,R[45],E,E,34,[[["self"]]]],[11,R[46],E,E,34,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[43],R[1071],E,35,[[["self"]],["u32"]]],[11,R[44],E,E,35,[[["self"]],["u64"]]],[11,R[45],E,E,35,[[["self"]]]],[11,R[46],E,E,35,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[43],R[1068],E,54,[[["self"]],["u32"]]],[11,R[44],E,E,54,[[["self"]],["u64"]]],[11,R[45],E,E,54,[[["self"]]]],[11,R[46],E,E,54,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[43],E,E,55,[[["self"]],["u32"]]],[11,R[44],E,E,55,[[["self"]],["u64"]]],[11,R[45],E,E,55,[[["self"]]]],[11,R[46],E,E,55,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[43],E,E,56,[[["self"]],["u32"]]],[11,R[44],E,E,56,[[["self"]],["u64"]]],[11,R[45],E,E,56,[[["self"]]]],[11,R[46],E,E,56,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[47],E,E,54,[[],["self"]]],[11,R[49],E,E,54,[[[R[50]]],[["error"],[R[3],["error"]]]]],[11,R[47],E,E,55,[[],["self"]]],[11,R[49],E,E,55,[[[R[50]]],[["error"],[R[3],["error"]]]]],[11,R[1118],"rand",R[1119],2,[[],["bool"]]],[11,R[1120],E,R[1121],2,[[],["bool"]]],[11,R[53],E,R[1122],2,[[],["str"]]],[11,"new",E,R[1123],3,[[[R[30]],["str"]],["error"]]],[11,"with_cause",E,R[1124],3,[[["e"],[R[30]],["str"]],["error"]]],[11,"take_cause",E,R[1125],3,[[["self"]],[[R[25],["box"]],["box",["error"]]]]],[11,"new",R[1068],R[1137],52,[[],[[R[236]],[R[3],[R[235],R[236]]],[R[235]]]]],[11,R[1138],E,R[1139],52,[[],[R[235]]]],[11,"set_rounds",E,R[1140],52,[[["self"],["u8"]]]],[11,"test_timer",E,R[1141],52,[[["self"]],[[R[3],["u8",R[236]]],[R[236]],["u8"]]]],[11,R[1142],E,R[1143],52,[[["self"],["bool"]],["i64"]]],[11,"new",E,R[1145],53,[[],[["osrng"],["error"],[R[3],["osrng","error"]]]]]],"p":[[8,"RngCore"],[8,R[59]],[4,R[55]],[3,"Error"],[3,"Weighted"],[4,R[1077]],[8,R[1078]],[8,R[1079]],[8,R[1080]],[3,"Uniform"],[3,"Bernoulli"],[3,R[1081]],[3,R[1082]],[3,"UnitCircle"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,R[1083]],[3,R[1084]],[4,R[237]],[3,"ReadRng"],[3,R[1085]],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,R[1086]],[8,R[1087]],[8,"Rng"],[8,R[1088]],[8,R[1089]],[3,R[1090]],[3,R[1091]],[3,"Open01"],[3,R[1092]],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,R[1093]],[3,R[1094]],[3,R[238]],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,R[1095]],[4,R[1096]],[4,R[1097]]]};
searchIndex["rand_chacha"]={"doc":"The ChaCha random number generator.","i":[[3,R[700],"rand_chacha",R[702],N,N],[3,R[701],E,"The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"get_word_pos",E,"Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos",E,"Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream",E,"Set the stream number.",0,[[["self"],["u64"]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"from",E,E,0,[[[R[699]]],["self"]]],[11,"clone",E,E,0,[[["self"]],["chacharng"]]],[11,"clone",E,E,1,[[["self"]],[R[699]]]],[11,R[597],E,E,1,[[["self"]]]],[11,R[43],E,E,0,[[["self"]],["u32"]]],[11,R[44],E,E,0,[[["self"]],["u64"]]],[11,R[45],E,E,0,[[["self"]]]],[11,R[46],E,E,0,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[47],E,E,0,[[],["self"]]],[11,R[49],E,E,0,[[[R[50]]],[["error"],[R[3],["error"]]]]],[11,R[47],E,E,1,[[],["self"]]]],"p":[[3,R[700]],[3,R[701]]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","i":[[4,R[55],R[38],R[1098],N,N],[13,R[1099],E,R[1100],0,N],[13,"Unexpected",E,R[1101],0,N],[13,"Transient",E,R[1102],0,N],[13,"NotReady",E,R[1103],0,N],[3,"Error",E,R[1104],N,N],[12,"kind",E,R[1105],1,N],[12,"msg",E,R[1106],1,N],[0,"block",E,"The `BlockRngCore` trait and implementation helpers",N,N],[8,R[58],R[40],"A trait for RNGs which do not generate random numbers…",N,N],[16,"Item",E,"Results element type, e.g. `u32`.",2,N],[16,"Results",E,"Results type. This is the 'block' an RNG implementing…",2,N],[10,R[597],E,"Generate a new block of results.",2,[[["self"]]]],[3,R[56],E,R[31],N,N],[12,"core",E,R[32],3,N],[3,R[57],E,R[31],N,N],[12,"core",E,R[32],4,N],[0,"impls",R[38],"Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next",E,"Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,[[["r"]]]],[5,"fill_via_u32_chunks",E,R[39],N,[[]]],[5,"fill_via_u64_chunks",E,R[39],N,[[]]],[5,"next_u32_via_fill",E,"Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill",E,"Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le",R[38],"Little-Endian utilities",N,N],[5,R[500],"rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,[[]]],[5,R[501],E,"Reads unsigned 64 bit integers from `src` into `dst`.…",N,[[]]],[8,"RngCore",R[38],R[1107],N,N],[10,R[43],E,R[1108],5,[[["self"]],["u32"]]],[10,R[44],E,R[1109],5,[[["self"]],["u64"]]],[10,R[45],E,R[1110],5,[[["self"]]]],[10,R[46],E,R[1111],5,[[["self"]],[[R[3],["error"]],["error"]]]],[8,"CryptoRng",E,R[1112],N,N],[8,R[59],E,R[1113],N,N],[16,"Seed",E,R[1114],6,N],[10,R[47],E,R[1115],6,[[],["self"]]],[11,R[48],E,R[1116],6,[[["u64"]],["self"]]],[11,R[49],E,R[1117],6,[[["r"]],[["error"],[R[3],["error"]]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[98],E,E,1,[[["self"]],["string"]]],[11,R[8],R[40],E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"],[T]]]],[11,R[47],E,E,4,[[],[R[52]]]],[11,R[48],E,E,4,[[["u64"]],[R[52]]]],[11,R[49],E,E,4,[[["s"]],[[R[52]],[R[3],[R[52],"error"]],["error"]]]],[11,R[47],E,E,3,[[],[R[51]]]],[11,R[48],E,E,3,[[["u64"]],[R[51]]]],[11,R[49],E,E,3,[[["s"]],[[R[51]],["error"],[R[3],[R[51],"error"]]]]],[11,"fmt",R[38],E,1,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[40],E,3,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,R[43],E,E,3,[[["self"]],["u32"]]],[11,R[44],E,E,3,[[["self"]],["u64"]]],[11,R[45],E,E,3,[[["self"]]]],[11,R[46],E,E,3,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[43],E,E,4,[[["self"]],["u32"]]],[11,R[44],E,E,4,[[["self"]],["u64"]]],[11,R[45],E,E,4,[[["self"]]]],[11,R[46],E,E,4,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"read",R[38],E,5,[[["self"]],[["error"],["usize"],[R[3],["usize","error"]]]]],[11,"clone",R[40],E,3,[[["self"]],[R[51]]]],[11,"clone",E,E,4,[[["self"]],[R[52]]]],[11,"clone",R[38],E,0,[[["self"]],[R[30]]]],[11,R[53],E,E,1,[[["self"]],["str"]]],[11,"cause",E,E,1,[[["self"]],[["error"],[R[25],["error"]]]]],[11,"eq",E,E,0,[[["self"],[R[30]]],["bool"]]],[11,R[1118],E,R[1119],0,[[],["bool"]]],[11,R[1120],E,R[1121],0,[[],["bool"]]],[11,R[53],E,R[1122],0,[[],["str"]]],[11,"new",E,R[1123],1,[[["str"],[R[30]]],["error"]]],[11,"with_cause",E,R[1124],1,[[["str"],["e"],[R[30]]],["error"]]],[11,"take_cause",E,R[1125],1,[[["self"]],[["box",["error"]],[R[25],["box"]]]]],[11,"new",R[40],R[33],3,[[["r"]],[R[51]]]],[11,"index",E,R[34],3,[[["self"]],["usize"]]],[11,"reset",E,R[35],3,[[["self"]]]],[11,R[36],E,R[37],3,[[["self"],["usize"]]]],[11,"new",E,R[33],4,[[["r"]],[R[52]]]],[11,"index",E,R[34],4,[[["self"]],["usize"]]],[11,"reset",E,R[35],4,[[["self"]]]],[11,R[36],E,R[37],4,[[["self"],["usize"]]]]],"p":[[4,R[55]],[3,"Error"],[8,R[58]],[3,R[56]],[3,R[57]],[8,"RngCore"],[8,R[59]]]};
searchIndex["rand_hc"]={"doc":"The HC128 random number generator.","i":[[3,"Hc128Rng","rand_hc",R[702],N,N],[3,R[591],E,"The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"clone",E,E,0,[[["self"]],["hc128rng"]]],[11,"clone",E,E,1,[[["self"]],["hc128core"]]],[11,R[597],E,E,1,[[["self"]]]],[11,R[43],E,E,0,[[["self"]],["u32"]]],[11,R[44],E,E,0,[[["self"]],["u64"]]],[11,R[45],E,E,0,[[["self"]]]],[11,R[46],E,E,0,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[47],E,E,0,[[],["self"]]],[11,R[49],E,E,0,[[[R[50]]],[["error"],[R[3],["error"]]]]],[11,R[47],E,"Create an HC-128 random number generator with a seed. The…",1,[[],["self"]]]],"p":[[3,"Hc128Rng"],[3,R[591]]]};
searchIndex["rand_isaac"]={"doc":"The ISAAC and ISAAC-64 random number generators.","i":[[0,"isaac",R[592],"The ISAAC random number generator.",N,N],[3,"IsaacRng",R[595],"A random number generator that uses the ISAAC algorithm.",N,N],[3,R[603],E,"The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,R[593],E,R[600],0,[[["u64"]],["self"]]],[0,"isaac64",R[592],"The ISAAC-64 random number generator.",N,N],[3,R[601],R[596],"A random number generator that uses ISAAC-64, the 64-bit…",N,N],[3,R[602],E,"The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,R[593],E,R[594],1,[[["u64"]],["self"]]],[11,R[593],E,R[594],2,[[["u64"]],["self"]]],[11,R[8],R[595],E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],R[596],E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,"fmt",R[595],E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[596],E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"clone",R[595],E,0,[[["self"]],["isaacrng"]]],[11,"clone",E,E,3,[[["self"]],["isaaccore"]]],[11,"clone",R[596],E,1,[[["self"]],["isaac64rng"]]],[11,"clone",E,E,2,[[["self"]],["isaac64core"]]],[11,R[597],R[595],R[598],3,[[["self"],[R[599]]]]],[11,R[597],R[596],R[598],2,[[["self"],[R[599]]]]],[11,R[43],R[595],E,0,[[["self"]],["u32"]]],[11,R[44],E,E,0,[[["self"]],["u64"]]],[11,R[45],E,E,0,[[["self"]]]],[11,R[46],E,E,0,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[43],R[596],E,1,[[["self"]],["u32"]]],[11,R[44],E,E,1,[[["self"]],["u64"]]],[11,R[45],E,E,1,[[["self"]]]],[11,R[46],E,E,1,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[47],R[595],E,0,[[],["self"]]],[11,R[48],E,R[600],0,[[["u64"]],["self"]]],[11,R[49],E,E,0,[[[R[50]]],[["error"],[R[3],["error"]]]]],[11,R[47],E,E,3,[[],["self"]]],[11,R[48],E,R[600],3,[[["u64"]],["self"]]],[11,R[49],E,E,3,[[[R[50]]],[["error"],[R[3],["error"]]]]],[11,R[47],R[596],E,1,[[],["self"]]],[11,R[48],E,R[600],1,[[["u64"]],["self"]]],[11,R[49],E,E,1,[[[R[50]]],[["error"],[R[3],["error"]]]]],[11,R[47],E,E,2,[[],["self"]]],[11,R[48],E,E,2,[[["u64"]],["self"]]],[11,R[49],E,E,2,[[[R[50]]],[["error"],[R[3],["error"]]]]]],"p":[[3,"IsaacRng"],[3,R[601]],[3,R[602]],[3,R[603]]]};
searchIndex["rand_jitter"]={"doc":"Non-physical true random number generator based on timing…","i":[[3,R[238],"rand_jitter",R[1126],N,N],[4,R[237],E,R[1127],N,N],[13,"NoTimer",E,R[1128],0,N],[13,R[1129],E,R[1130],0,N],[13,R[1131],E,R[1132],0,N],[13,R[1133],E,R[1134],0,N],[13,R[1135],E,R[1136],0,N],[11,"new",E,R[1137],1,[[],[[R[235]],[R[236]],[R[3],[R[235],R[236]]]]]],[11,R[1138],E,R[1139],1,[[],[R[235]]]],[11,"set_rounds",E,R[1140],1,[[["self"],["u8"]]]],[11,"test_timer",E,R[1141],1,[[["self"]],[[R[236]],[R[3],["u8",R[236]]],["u8"]]]],[11,R[1142],E,R[1143],1,[[["self"],["bool"]],["i64"]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[98],E,E,0,[[["self"]],["string"]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"eq",E,E,0,[[["self"],[R[236]]],["bool"]]],[11,"clone",E,E,0,[[["self"]],[R[236]]]],[11,"clone",E,E,1,[[["self"]],[R[235]]]],[11,R[53],E,E,0,[[["self"]],["str"]]],[11,R[43],E,E,1,[[["self"]],["u32"]]],[11,R[44],E,E,1,[[["self"]],["u64"]]],[11,R[45],E,E,1,[[["self"]]]],[11,R[46],E,E,1,[[["self"]],[[R[3],["error"]],["error"]]]]],"p":[[4,R[237]],[3,R[238]]]};
searchIndex["rand_os"]={"doc":"Interface to the random number generator of the operating…","i":[[3,"OsRng","rand_os",R[1144],N,N],[11,"new",E,R[1145],0,[[],[["osrng"],["error"],[R[3],["osrng","error"]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"clone",E,E,0,[[["self"]],["osrng"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,R[43],E,E,0,[[["self"]],["u32"]]],[11,R[44],E,E,0,[[["self"]],["u64"]]],[11,R[45],E,E,0,[[["self"]]]],[11,R[46],E,E,0,[[["self"]],[[R[3],["error"]],["error"]]]]],"p":[[3,"OsRng"]]};
searchIndex["rand_pcg"]={"doc":"The PCG random number generators.","i":[[3,R[703],"rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",N,N],[3,R[704],E,"A PCG random number generator (XSL 128/64 (MCG) variant).",N,N],[11,"new",E,"Construct an instance compatible with PCG seed and stream.",0,[[["u64"]],["self"]]],[11,"new",E,"Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32",E,"`Lcg64Xsh32` is also officially known as `pcg32`.",N,N],[6,"Pcg64Mcg",E,"A friendly name for `Mcg128Xsl64`.",N,N],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"clone",E,E,0,[[["self"]],["lcg64xsh32"]]],[11,"clone",E,E,1,[[["self"]],["mcg128xsl64"]]],[11,R[43],E,E,0,[[["self"]],["u32"]]],[11,R[44],E,E,0,[[["self"]],["u64"]]],[11,R[45],E,E,0,[[["self"]]]],[11,R[46],E,E,0,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[43],E,E,1,[[["self"]],["u32"]]],[11,R[44],E,E,1,[[["self"]],["u64"]]],[11,R[45],E,E,1,[[["self"]]]],[11,R[46],E,E,1,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[47],E,E,0,[[],["self"]]],[11,R[47],E,E,1,[[],["self"]]]],"p":[[3,R[703]],[3,R[704]]]};
searchIndex["rand_xorshift"]={"doc":"The xorshift random number generator.","i":[[3,R[590],"rand_xorshift","An Xorshift random number generator.",N,N],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"clone",E,E,0,[[["self"]],["xorshiftrng"]]],[11,R[43],E,E,0,[[["self"]],["u32"]]],[11,R[44],E,E,0,[[["self"]],["u64"]]],[11,R[45],E,E,0,[[["self"]]]],[11,R[46],E,E,0,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[47],E,E,0,[[],["self"]]],[11,R[49],E,E,0,[[[R[50]]],[["error"],[R[3],["error"]]]]]],"p":[[3,R[590]]]};
searchIndex["rawpointer"]={"doc":E,"i":[[5,"ptrdistance","rawpointer","Return the number of elements of `T` from `start` to…",N,[[],["usize"]]],[8,R[75],E,"Extension methods for raw pointers",N,N],[10,"offset",E,E,0,[[["isize"]],["self"]]],[11,"pre_inc",E,"Increment the pointer by 1, and return its new value.",0,[[["self"]],["self"]]],[11,"post_inc",E,"Increment the pointer by 1, but return its old value.",0,[[["self"]],["self"]]],[11,"pre_dec",E,"Decrement the pointer by 1, and return its new value.",0,[[["self"]],["self"]]],[11,"post_dec",E,"Decrement the pointer by 1, but return its old value.",0,[[["self"]],["self"]]],[11,"inc",E,"Increment by 1",0,[[["self"]]]],[11,"dec",E,"Decrement by 1",0,[[["self"]]]],[11,"stride_offset",E,"Offset the pointer by `s` multiplied by `index`.",0,[[["isize"],["usize"]],["self"]]]],"p":[[8,R[75]]]};
searchIndex["rayon"]={"doc":"Data-parallelism library that makes it easy to convert…","i":[[3,R[1853],"rayon",R[1818],N,N],[3,R[1739],E,R[1813],N,N],[3,R[1814],E,R[1815],N,N],[3,R[1742],E,R[1816],N,N],[3,R[1740],E,R[1817],N,N],[5,R[1722],E,R[1826],N,[[],["usize"]]],[5,R[1723],E,R[1825],N,[[],[[R[25],["usize"]],["usize"]]]],[5,"join",E,R[1819],N,[[["a"],["b"]]]],[5,R[1820],E,R[1821],N,[[["a"],["b"]]]],[5,"scope",E,R[1822],N,[[["op"]],["r"]]],[3,"Scope",E,R[1718],N,N],[5,R[1823],E,R[1824],N,[[["op"]],["r"]]],[3,R[1852],E,R[1718],N,N],[5,"spawn",E,R[1719],N,[[["f"]]]],[5,R[1726],E,R[1719],N,[[["f"]]]],[0,"collections",E,"Parallel iterator types for [standard…",N,N],[0,"binary_heap",R[1743],"This module contains the parallel iterator types for heaps…",N,N],[3,R[328],R[1768],"Parallel iterator over a binary heap",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a binary…",N,N],[0,"btree_map",R[1743],R[1744],N,N],[3,R[328],R[1769],"Parallel iterator over a B-Tree map",N,N],[3,"Iter",E,R[1745],N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a B-Tree map",N,N],[0,"btree_set",R[1743],R[1744],N,N],[3,R[328],R[1770],"Parallel iterator over a B-Tree set",N,N],[3,"Iter",E,R[1745],N,N],[0,"hash_map",R[1743],R[1746],N,N],[3,R[328],R[1771],"Parallel iterator over a hash map",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a hash map",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a hash map",N,N],[0,"hash_set",R[1743],R[1746],N,N],[3,R[328],R[1772],"Parallel iterator over a hash set",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a hash set",N,N],[0,"linked_list",R[1743],R[1744],N,N],[3,R[328],R[1773],"Parallel iterator over a linked list",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a linked…",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a linked list",N,N],[0,"vec_deque",R[1743],R[1744],N,N],[3,R[328],R[1774],"Parallel iterator over a double-ended queue",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a…",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a…",N,N],[0,"iter","rayon","Traits for writing parallel programs using an…",N,N],[4,"Either",R[1748],R[135],N,N],[13,"Left",E,R[136],0,N],[13,"Right",E,R[137],0,N],[3,"IterBridge",E,"`IterBridge` is a parallel iterator that wraps a…",N,N],[3,"Chain",E,"`Chain` is an iterator that joins `b` after `a` in one…",N,N],[3,"Chunks",E,"`Chunks` is an iterator that groups elements of an…",N,N],[3,"Enumerate",E,"`Enumerate` is an iterator that returns the current count…",N,N],[3,"Filter",E,"`Filter` takes a predicate `filter_op` and filters out…",N,N],[3,"FilterMap",E,"`FilterMap` creates an iterator that uses `filter_op` to…",N,N],[3,"FlatMap",E,"`FlatMap` maps each element to an iterator, then flattens…",N,N],[3,"Flatten",E,"`Flatten` turns each element to an iterator, then flattens…",N,N],[3,"Fold",E,"`Fold` is an iterator that applies a function over an…",N,N],[3,"FoldWith",E,"`FoldWith` is an iterator that applies a function over an…",N,N],[3,"TryFold",E,"`TryFold` is an iterator that applies a function over an…",N,N],[3,R[1807],E,"`TryFoldWith` is an iterator that applies a function over…",N,N],[3,"Skip",E,"`Skip` is an iterator that skips over the first `n`…",N,N],[3,"Split",E,"`Split` is a parallel iterator using arbitrary data and a…",N,N],[3,"Take",E,"`Take` is an iterator that iterates over the first `n`…",N,N],[3,"Map",E,"`Map` is an iterator that transforms the elements of an…",N,N],[3,"MapInit",E,"`MapInit` is an iterator that transforms the elements of…",N,N],[3,"MapWith",E,"`MapWith` is an iterator that transforms the elements of…",N,N],[3,"Zip",E,"`Zip` is an iterator that zips up `a` and `b` into a…",N,N],[3,"ZipEq",E,"An [`IndexedParallelIterator`] that iterates over two…",N,N],[3,R[214],E,"`Interleave` is an iterator that interleaves elements of…",N,N],[3,R[215],E,"`InterleaveShortest` is an iterator that works similarly…",N,N],[3,R[226],E,"`Intersperse` is an iterator that inserts a particular…",N,N],[3,"Update",E,"`Update` is an iterator that mutates the elements of an…",N,N],[3,"Rev",E,"`Rev` is an iterator that produces elements in reverse…",N,N],[3,"MaxLen",E,"`MaxLen` is an iterator that imposes a maximum length on…",N,N],[3,"MinLen",E,"`MinLen` is an iterator that imposes a minimum length on…",N,N],[3,"Cloned",E,"`Cloned` is an iterator that clones the elements of an…",N,N],[3,"Inspect",E,"`Inspect` is an iterator that calls a function with a…",N,N],[3,"PanicFuse",E,"`PanicFuse` is an adaptor that wraps an iterator with a…",N,N],[3,R[218],E,"`WhileSome` is an iterator that yields the `Some` elements…",N,N],[3,"Repeat",E,"Iterator adaptor for the `repeat()` function.",N,N],[3,"RepeatN",E,"Iterator adaptor for the `repeatn()` function.",N,N],[3,"Empty",E,"Iterator adaptor for the `empty()` function.",N,N],[3,"Once",E,"Iterator adaptor for the `once()` function.",N,N],[5,"split",E,"The `split` function takes arbitrary data and a closure…",N,[[["d"],["s"]],["split"]]],[5,"repeat",E,"Creates a parallel iterator that endlessly repeats `elt`…",N,[[["clone"],["send"]],[["send"],["clone"],["repeat"]]]],[5,"repeatn",E,"Creates a parallel iterator that produces `n` repeats of…",N,[[["clone"],["usize"],["send"]],[["clone"],["repeatn"],["send"]]]],[5,"empty",E,"Creates a parallel iterator that produces nothing.",N,[[],[["empty"],["send"]]]],[5,"once",E,"Creates a parallel iterator that produces an element…",N,[[["send"]],[["once"],["send"]]]],[0,"plumbing",E,"Traits and functions used to implement parallel iteration.…",N,N],[5,"bridge","rayon::iter::plumbing","This helper function is used to \"connect\" a parallel…",N,[[["c"],["i"]]]],[5,"bridge_producer_consumer",E,"This helper function is used to \"connect\" a producer and a…",N,[[["c"],["usize"],["p"]]]],[5,"bridge_unindexed",E,"A variant of [`bridge_producer_consumer`] where the…",N,[[["c"],["p"]]]],[8,R[1794],E,"The `ProducerCallback` trait is a kind of generic closure,…",N,N],[16,"Output",E,"The type of value returned by this callback. Analogous to…",1,N],[10,"callback",E,"Invokes the callback with the given producer as argument.…",1,[[["p"]]]],[8,"Producer",E,"A `Producer` is effectively a \"splittable `IntoIterator`\".…",N,N],[16,"Item",E,"The type of item that will be produced by this producer…",2,N],[16,R[328],E,"The type of iterator we will become.",2,N],[10,R[23],E,"Convert `self` into an iterator; at this point, no more…",2,[[]]],[11,"min_len",E,"The minimum number of items that we will process…",2,[[["self"]],["usize"]]],[11,"max_len",E,"The maximum number of items that we will process…",2,[[["self"]],["usize"]]],[10,"split_at",E,"Split into two producers; one produces items `0..index`,…",2,[[["usize"]]]],[11,"fold_with",E,R[1747],2,[[["f"]],["f"]]],[8,"Consumer",E,"A consumer is effectively a [generalized \"fold\"…",N,N],[16,"Folder",E,"The type of folder that this consumer can be converted into.",3,N],[16,"Reducer",E,"The type of reducer that is produced if this consumer is…",3,N],[16,"Result",E,"The type of result that this consumer will ultimately…",3,N],[10,"split_at",E,"Divide the consumer into two consumers, one processing…",3,[[["usize"]]]],[10,"into_folder",E,"Convert the consumer into a folder that can consume items…",3,[[]]],[10,"full",E,"Hint whether this `Consumer` would like to stop processing…",3,[[["self"]],["bool"]]],[8,"Folder",E,"The `Folder` trait encapsulates [the standard fold…",N,N],[16,"Result",E,"The type of result that will ultimately be produced by the…",4,N],[10,"consume",E,"Consume next item and return new sequential state.",4,[[["item"]],["self"]]],[11,"consume_iter",E,"Consume items from the iterator until full, and return new…",4,[[["i"]],["self"]]],[10,"complete",E,"Finish consuming items, produce final result.",4,[[]]],[10,"full",E,"Hint whether this `Folder` would like to stop processing…",4,[[["self"]],["bool"]]],[8,"Reducer",E,"The reducer is the final step of a `Consumer` -- after a…",N,N],[10,"reduce",E,"Reduce two final results into one; this is executed after…",5,[[[R[3]]],[R[3]]]],[8,R[1795],E,"A stateless consumer can be freely copied. These consumers…",N,N],[10,"split_off_left",E,"Splits off a \"left\" consumer and returns it. The `self`…",6,[[["self"]],["self"]]],[10,"to_reducer",E,"Creates a reducer that can be used to combine the results…",6,[[["self"]]]],[8,R[1796],E,"A variant on `Producer` which does not know its exact…",N,N],[16,"Item",E,"The type of item returned by this producer.",7,N],[10,"split",E,"Split midway into a new producer if possible, otherwise…",7,[[]]],[10,"fold_with",E,R[1747],7,[[["f"]],["f"]]],[11,"take",R[1748],"Take only `n` repeats of the element, similar to the…",8,[[["usize"]],["repeatn"]]],[11,"zip",E,"Iterate tuples repeating the element with items from…",8,[[["z"]],[["zip",["repeatn"]],["repeatn"]]]],[8,R[1762],E,R[1763],N,N],[10,R[2082],E,R[1764],9,[[],[R[1786]]]],[8,R[1797],E,"`IntoParallelIterator` implements the conversion to a…",N,N],[16,"Iter",E,"The parallel iterator type that will be created.",10,N],[16,"Item",E,"The type of item that the parallel iterator will produce.",10,N],[10,R[1767],E,R[1749],10,[[]]],[8,R[1798],E,"`IntoParallelRefIterator` implements the conversion to a…",N,N],[16,"Iter",E,"The type of the parallel iterator that will be returned.",11,N],[16,"Item",E,"The type of item that the parallel iterator will produce.…",11,N],[10,"par_iter",E,R[1749],11,[[["self"]]]],[8,R[1799],E,"`IntoParallelRefMutIterator` implements the conversion to…",N,N],[16,"Iter",E,"The type of iterator that will be created.",12,N],[16,"Item",E,"The type of item that will be produced; this is typically…",12,N],[10,"par_iter_mut",E,"Creates the parallel iterator from `self`.",12,[[["self"]]]],[8,R[1800],E,"Parallel version of the standard iterator trait.",N,N],[16,"Item",E,"The type of item that this parallel iterator produces. For…",13,N],[11,"for_each",E,"Executes `OP` on each item produced by the iterator, in…",13,[[["op"]]]],[11,"for_each_with",E,"Executes `OP` on the given `init` value with each item…",13,[[["op"],[T]]]],[11,"for_each_init",E,"Executes `OP` on a value returned by `init` with each item…",13,[[["op"],["init"]]]],[11,"try_for_each",E,"Executes a fallible `OP` on each item produced by the…",13,[[["op"]],["r"]]],[11,"try_for_each_with",E,"Executes a fallible `OP` on the given `init` value with…",13,[[["op"],[T]],["r"]]],[11,"try_for_each_init",E,"Executes a fallible `OP` on a value returned by `init`…",13,[[["op"],["init"]],["r"]]],[11,"count",E,"Counts the number of items in this parallel iterator.",13,[[],["usize"]]],[11,"map",E,"Applies `map_op` to each item of this iterator, producing…",13,[[["f"]],["map"]]],[11,"map_with",E,"Applies `map_op` to the given `init` value with each item…",13,[[[T],["f"]],["mapwith"]]],[11,"map_init",E,"Applies `map_op` to a value returned by `init` with each…",13,[[["init"],["f"]],["mapinit"]]],[11,"cloned",E,"Creates an iterator which clones all of its elements. This…",13,[[],["cloned"]]],[11,"inspect",E,"Applies `inspect_op` to a reference to each item of this…",13,[[["op"]],["inspect"]]],[11,"update",E,"Mutates each item of this iterator before yielding it.",13,[[["f"]],["update"]]],[11,"filter",E,"Applies `filter_op` to each item of this iterator,…",13,[[["p"]],["filter"]]],[11,"filter_map",E,"Applies `filter_op` to each item of this iterator to get…",13,[[["p"]],["filtermap"]]],[11,"flat_map",E,"Applies `map_op` to each item of this iterator to get…",13,[[["f"]],["flatmap"]]],[11,"flatten",E,"An adaptor that flattens iterable `Item`s into one large…",13,[[],["flatten"]]],[11,"reduce",E,R[1750],13,[[["op"],["id"]]]],[11,"reduce_with",E,R[1750],13,[[["op"]],[R[25]]]],[11,"try_reduce",E,R[1751],13,[[["op"],["id"]]]],[11,"try_reduce_with",E,R[1751],13,[[["op"]],[R[25]]]],[11,"fold",E,"Parallel fold is similar to sequential fold except that…",13,[[["id"],["f"]],["fold"]]],[11,"fold_with",E,"Applies `fold_op` to the given `init` value with each item…",13,[[[T],["f"]],["foldwith"]]],[11,"try_fold",E,"Perform a fallible parallel fold.",13,[[["id"],["f"]],["tryfold"]]],[11,"try_fold_with",E,"Perform a fallible parallel fold with a cloneable `init`…",13,[[[T],["f"]],[R[1787]]]],[11,"sum",E,"Sums up the items in the iterator.",13,[[],["s"]]],[11,"product",E,"Multiplies all the items in the iterator.",13,[[],["p"]]],[11,"min",E,"Computes the minimum of all the items in the iterator. If…",13,[[],[R[25]]]],[11,"min_by",E,"Computes the minimum of all the items in the iterator with…",13,[[["f"]],[R[25]]]],[11,"min_by_key",E,"Computes the item that yields the minimum value for the…",13,[[["f"]],[R[25]]]],[11,"max",E,"Computes the maximum of all the items in the iterator. If…",13,[[],[R[25]]]],[11,"max_by",E,"Computes the maximum of all the items in the iterator with…",13,[[["f"]],[R[25]]]],[11,"max_by_key",E,"Computes the item that yields the maximum value for the…",13,[[["f"]],[R[25]]]],[11,"chain",E,"Takes two iterators and creates a new iterator over both.",13,[[["c"]],["chain"]]],[11,"find_any",E,R[1753],13,[[["p"]],[R[25]]]],[11,"find_first",E,R[1760],13,[[["p"]],[R[25]]]],[11,"find_last",E,R[1761],13,[[["p"]],[R[25]]]],[11,"find_map_any",E,R[1752],13,[[["p"]],[R[25]]]],[11,"find_map_first",E,R[1752],13,[[["p"]],[R[25]]]],[11,"find_map_last",E,R[1752],13,[[["p"]],[R[25]]]],[11,"any",E,R[1753],13,[[["p"]],["bool"]]],[11,"all",E,"Tests that every item in the parallel iterator matches the…",13,[[["p"]],["bool"]]],[11,"while_some",E,"Creates an iterator over the `Some` items of this…",13,[[],[R[180]]]],[11,"panic_fuse",E,"Wraps an iterator with a fuse in case of panics, to halt…",13,[[],["panicfuse"]]],[11,"collect",E,"Create a fresh collection containing all the element…",13,[[],["c"]]],[11,"unzip",E,"Unzips the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition",E,"Partitions the items of a parallel iterator into a pair of…",13,[[["p"]]]],[11,R[1754],E,"Partitions and maps the items of a parallel iterator into…",13,[[["p"]]]],[11,R[154],E,"Intersperses clones of an element between items of this…",13,[[],[R[154]]]],[10,R[1781],E,R[1755],13,[[["c"]]]],[11,"opt_len",E,R[1755],13,[[["self"]],[[R[25],["usize"]],["usize"]]]],[8,R[1801],E,"An iterator that supports \"random access\" to its data,…",N,N],[11,"collect_into_vec",E,"Collects the results of the iterator into the specified…",14,[[["vec"]]]],[11,"unzip_into_vecs",E,"Unzips the results of the iterator into the specified…",14,[[["vec"],["vec"]]]],[11,"zip",E,"Iterate over tuples `(A, B)`, where the items `A` are from…",14,[[["z"]],["zip"]]],[11,"zip_eq",E,"The same as `Zip`, but requires that both iterators have…",14,[[["z"]],["zipeq"]]],[11,R[138],E,R[1757],14,[[["i"]],[R[138]]]],[11,R[1756],E,R[1757],14,[[["i"]],[R[178]]]],[11,"chunks",E,"Split an iterator up into fixed-size chunks.",14,[[["usize"]],["chunks"]]],[11,"cmp",E,R[1758],14,[[["i"]],[R[24]]]],[11,R[172],E,R[1758],14,[[["i"]],[[R[25],[R[24]]],[R[24]]]]],[11,"eq",E,R[1759],14,[[["i"]],["bool"]]],[11,"ne",E,R[1759],14,[[["i"]],["bool"]]],[11,"lt",E,R[1759],14,[[["i"]],["bool"]]],[11,"le",E,R[1759],14,[[["i"]],["bool"]]],[11,"gt",E,R[1759],14,[[["i"]],["bool"]]],[11,"ge",E,R[1759],14,[[["i"]],["bool"]]],[11,R[141],E,"Yields an index along with each item.",14,[[],[R[141]]]],[11,"skip",E,"Creates an iterator that skips the first `n` elements.",14,[[["usize"]],["skip"]]],[11,"take",E,"Creates an iterator that yields the first `n` elements.",14,[[["usize"]],["take"]]],[11,"position_any",E,R[1753],14,[[["p"]],[[R[25],["usize"]],["usize"]]]],[11,"position_first",E,R[1760],14,[[["p"]],[[R[25],["usize"]],["usize"]]]],[11,"position_last",E,R[1761],14,[[["p"]],[[R[25],["usize"]],["usize"]]]],[11,"rev",E,"Produces a new iterator with the elements of this iterator…",14,[[],["rev"]]],[11,"with_min_len",E,"Sets the minimum length of iterators desired to process in…",14,[[["usize"]],["minlen"]]],[11,"with_max_len",E,"Sets the maximum length of iterators desired to process in…",14,[[["usize"]],["maxlen"]]],[10,"len",E,"Produces an exact count of how many items this iterator…",14,[[["self"]],["usize"]]],[10,"drive",E,R[1755],14,[[[R[1785]]]]],[10,R[1784],E,R[1755],14,[[["producercallback"]]]],[8,R[1802],E,"`FromParallelIterator` implements the creation of a…",N,N],[10,"from_par_iter",E,"Creates an instance of the collection from the parallel…",15,[[["i"]],["self"]]],[8,R[1803],E,"`ParallelExtend` extends an existing collection with items…",N,N],[10,"par_extend",E,"Extends an instance of the collection with the elements…",16,[[["self"],["i"]]]],[0,R[25],"rayon","Parallel iterator types for [options][std::option]",N,N],[3,R[328],R[1775],"A parallel iterator over the value in [`Some`] variant of…",N,N],[3,"Iter",E,"A parallel iterator over a reference to the [`Some`]…",N,N],[3,"IterMut",E,"A parallel iterator over a mutable reference to the…",N,N],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",N,N],[8,R[1762],"rayon::prelude",R[1763],N,N],[10,R[2082],E,R[1764],9,[[],[R[1786]]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type…",N,N],[3,"Iter",R[1776],"Parallel iterator over a range, implemented for all…",N,N],[0,R[1308],"rayon","Parallel iterator types for [inclusive…",N,N],[3,"Iter",R[1777],"Parallel iterator over an inclusive range, implemented for…",N,N],[0,R[3],"rayon","Parallel iterator types for [results][std::result]",N,N],[3,R[328],R[1778],"Parallel iterator over a result",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a result",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a result",N,N],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",N,N],[3,"Iter",R[1779],"Parallel iterator over immutable items in a slice",N,N],[3,"Chunks",E,"Parallel iterator over immutable non-overlapping chunks of…",N,N],[3,"Windows",E,"Parallel iterator over immutable overlapping windows of a…",N,N],[3,"IterMut",E,"Parallel iterator over mutable items in a slice",N,N],[3,"ChunksMut",E,"Parallel iterator over mutable non-overlapping chunks of a…",N,N],[3,"Split",E,"Parallel iterator over slices separated by a predicate",N,N],[3,"SplitMut",E,"Parallel iterator over mutable slices separated by a…",N,N],[8,R[1804],E,"Parallel extensions for slices.",N,N],[10,"as_parallel_slice",E,"Returns a plain slice, which is used to implement the rest…",17,[[["self"]]]],[11,"par_split",E,"Returns a parallel iterator over subslices separated by…",17,[[["self"],["p"]],["split"]]],[11,"par_windows",E,"Returns a parallel iterator over all contiguous windows of…",17,[[["self"],["usize"]],["windows"]]],[11,"par_chunks",E,R[1765],17,[[["self"],["usize"]],["chunks"]]],[8,R[1805],E,"Parallel extensions for mutable slices.",N,N],[10,"as_parallel_slice_mut",E,"Returns a plain mutable slice, which is used to implement…",18,[[["self"]]]],[11,"par_split_mut",E,"Returns a parallel iterator over mutable subslices…",18,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut",E,R[1765],18,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort",E,"Sorts the slice in parallel.",18,[[["self"]]]],[11,"par_sort_by",E,"Sorts the slice in parallel with a comparator function.",18,[[["self"],["f"]]]],[11,"par_sort_by_key",E,"Sorts the slice in parallel with a key extraction function.",18,[[["self"],["f"]]]],[11,"par_sort_unstable",E,"Sorts the slice in parallel, but may not preserve the…",18,[[["self"]]]],[11,"par_sort_unstable_by",E,"Sorts the slice in parallel with a comparator function,…",18,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key",E,"Sorts the slice in parallel with a key extraction…",18,[[["self"],["f"]]]],[0,"str","rayon","Parallel iterator types for [strings][std::str]",N,N],[3,"Chars",R[1782],"Parallel iterator over the characters of a string",N,N],[3,R[1808],E,"Parallel iterator over the characters of a string, with…",N,N],[3,"Bytes",E,"Parallel iterator over the bytes of a string",N,N],[3,R[1809],E,"Parallel iterator over a string encoded as UTF-16",N,N],[3,"Split",E,"Parallel iterator over substrings separated by a pattern",N,N],[3,R[1810],E,"Parallel iterator over substrings separated by a…",N,N],[3,"Lines",E,"Parallel iterator over lines in a string",N,N],[3,R[1811],E,"Parallel iterator over substrings separated by whitespace",N,N],[3,"Matches",E,"Parallel iterator over substrings that match a pattern",N,N],[3,R[1812],E,"Parallel iterator over substrings that match a pattern,…",N,N],[8,R[1806],E,"Parallel extensions for strings.",N,N],[10,"as_parallel_string",E,"Returns a plain string slice, which is used to implement…",19,[[["self"]],["str"]]],[11,"par_chars",E,"Returns a parallel iterator over the characters of a string.",19,[[["self"]],["chars"]]],[11,"par_char_indices",E,"Returns a parallel iterator over the characters of a…",19,[[["self"]],[R[1788]]]],[11,"par_bytes",E,"Returns a parallel iterator over the bytes of a string.",19,[[["self"]],["bytes"]]],[11,"par_encode_utf16",E,"Returns a parallel iterator over a string encoded as UTF-16.",19,[[["self"]],[R[1789]]]],[11,"par_split",E,"Returns a parallel iterator over substrings separated by a…",19,[[["self"],["pattern"]],[["split"],["pattern"]]]],[11,"par_split_terminator",E,"Returns a parallel iterator over substrings terminated by…",19,[[["self"],["pattern"]],[["pattern"],[R[1790]]]]],[11,"par_lines",E,"Returns a parallel iterator over the lines of a string,…",19,[[["self"]],["lines"]]],[11,"par_split_whitespace",E,"Returns a parallel iterator over the sub-slices of a…",19,[[["self"]],[R[1791]]]],[11,"par_matches",E,R[1766],19,[[["self"],["pattern"]],[["matches"],["pattern"]]]],[11,"par_match_indices",E,R[1766],19,[[["self"],["pattern"]],[[R[1792]],["pattern"]]]],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",N,N],[3,R[328],R[1783],"Parallel iterator that moves out of a vector.",N,N],[11,"from","rayon",E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[8],E,E,20,[[[U]],[R[3]]]],[11,R[9],E,E,20,[[],[R[3]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[8],E,E,21,[[[U]],[R[3]]]],[11,R[9],E,E,21,[[],[R[3]]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[8],E,E,22,[[[U]],[R[3]]]],[11,R[9],E,E,22,[[],[R[3]]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[98],E,E,23,[[["self"]],["string"]]],[11,R[8],E,E,23,[[[U]],[R[3]]]],[11,R[9],E,E,23,[[],[R[3]]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[8],E,E,24,[[[U]],[R[3]]]],[11,R[9],E,E,24,[[],[R[3]]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[8],E,E,25,[[[U]],[R[3]]]],[11,R[9],E,E,25,[[],[R[3]]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[8],E,E,26,[[[U]],[R[3]]]],[11,R[9],E,E,26,[[],[R[3]]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,R[1767],R[1768],E,27,[[],[T]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[42],E,E,27,[[["self"],[T]]]],[11,R[8],E,E,27,[[[U]],[R[3]]]],[11,R[9],E,E,27,[[],[R[3]]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,R[1767],E,E,28,[[],[T]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[42],E,E,28,[[["self"],[T]]]],[11,R[8],E,E,28,[[[U]],[R[3]]]],[11,R[9],E,E,28,[[],[R[3]]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,R[1767],R[1769],E,29,[[],[T]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[8],E,E,29,[[[U]],[R[3]]]],[11,R[9],E,E,29,[[],[R[3]]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[29]]]],[11,R[1767],E,E,30,[[],[T]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[41],E,E,30,[[["self"]],[T]]],[11,R[42],E,E,30,[[["self"],[T]]]],[11,R[8],E,E,30,[[[U]],[R[3]]]],[11,R[9],E,E,30,[[],[R[3]]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,R[1767],E,E,31,[[],[T]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[8],E,E,31,[[[U]],[R[3]]]],[11,R[9],E,E,31,[[],[R[3]]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[29]]]],[11,R[1767],R[1770],E,32,[[],[T]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[8],E,E,32,[[[U]],[R[3]]]],[11,R[9],E,E,32,[[],[R[3]]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[29]]]],[11,R[1767],E,E,33,[[],[T]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[41],E,E,33,[[["self"]],[T]]],[11,R[42],E,E,33,[[["self"],[T]]]],[11,R[8],E,E,33,[[[U]],[R[3]]]],[11,R[9],E,E,33,[[],[R[3]]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[29]]]],[11,R[1767],R[1771],E,34,[[],[T]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[8],E,E,34,[[[U]],[R[3]]]],[11,R[9],E,E,34,[[],[R[3]]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[29]]]],[11,R[1767],E,E,35,[[],[T]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[41],E,E,35,[[["self"]],[T]]],[11,R[42],E,E,35,[[["self"],[T]]]],[11,R[8],E,E,35,[[[U]],[R[3]]]],[11,R[9],E,E,35,[[],[R[3]]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[29]]]],[11,R[1767],E,E,36,[[],[T]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[8],E,E,36,[[[U]],[R[3]]]],[11,R[9],E,E,36,[[],[R[3]]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[29]]]],[11,R[1767],R[1772],E,37,[[],[T]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[8],E,E,37,[[[U]],[R[3]]]],[11,R[9],E,E,37,[[],[R[3]]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[29]]]],[11,R[1767],E,E,38,[[],[T]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[41],E,E,38,[[["self"]],[T]]],[11,R[42],E,E,38,[[["self"],[T]]]],[11,R[8],E,E,38,[[[U]],[R[3]]]],[11,R[9],E,E,38,[[],[R[3]]]],[11,R[28],E,E,38,[[["self"]],[T]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[29]]]],[11,R[1767],R[1773],E,39,[[],[T]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[41],E,E,39,[[["self"]],[T]]],[11,R[42],E,E,39,[[["self"],[T]]]],[11,R[8],E,E,39,[[[U]],[R[3]]]],[11,R[9],E,E,39,[[],[R[3]]]],[11,R[28],E,E,39,[[["self"]],[T]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[29]]]],[11,R[1767],E,E,40,[[],[T]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[41],E,E,40,[[["self"]],[T]]],[11,R[42],E,E,40,[[["self"],[T]]]],[11,R[8],E,E,40,[[[U]],[R[3]]]],[11,R[9],E,E,40,[[],[R[3]]]],[11,R[28],E,E,40,[[["self"]],[T]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[29]]]],[11,R[1767],E,E,41,[[],[T]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[8],E,E,41,[[[U]],[R[3]]]],[11,R[9],E,E,41,[[],[R[3]]]],[11,R[28],E,E,41,[[["self"]],[T]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[29]]]],[11,R[1767],R[1774],E,42,[[],[T]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[41],E,E,42,[[["self"]],[T]]],[11,R[42],E,E,42,[[["self"],[T]]]],[11,R[8],E,E,42,[[[U]],[R[3]]]],[11,R[9],E,E,42,[[],[R[3]]]],[11,R[28],E,E,42,[[["self"]],[T]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[29]]]],[11,R[1767],E,E,43,[[],[T]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[41],E,E,43,[[["self"]],[T]]],[11,R[42],E,E,43,[[["self"],[T]]]],[11,R[8],E,E,43,[[[U]],[R[3]]]],[11,R[9],E,E,43,[[],[R[3]]]],[11,R[28],E,E,43,[[["self"]],[T]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[29]]]],[11,R[1767],E,E,44,[[],[T]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[8],E,E,44,[[[U]],[R[3]]]],[11,R[9],E,E,44,[[],[R[3]]]],[11,R[28],E,E,44,[[["self"]],[T]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[29]]]],[11,R[1767],R[1748],E,0,[[],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[98],E,E,0,[[["self"]],["string"]]],[11,R[23],E,E,0,[[],["i"]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,R[1767],E,E,45,[[],[T]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[41],E,E,45,[[["self"]],[T]]],[11,R[42],E,E,45,[[["self"],[T]]]],[11,R[8],E,E,45,[[[U]],[R[3]]]],[11,R[9],E,E,45,[[],[R[3]]]],[11,R[28],E,E,45,[[["self"]],[T]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[29]]]],[11,R[1767],E,E,46,[[],[T]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[41],E,E,46,[[["self"]],[T]]],[11,R[42],E,E,46,[[["self"],[T]]]],[11,R[8],E,E,46,[[[U]],[R[3]]]],[11,R[9],E,E,46,[[],[R[3]]]],[11,R[28],E,E,46,[[["self"]],[T]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[29]]]],[11,R[1767],E,E,47,[[],[T]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[41],E,E,47,[[["self"]],[T]]],[11,R[42],E,E,47,[[["self"],[T]]]],[11,R[8],E,E,47,[[[U]],[R[3]]]],[11,R[9],E,E,47,[[],[R[3]]]],[11,R[28],E,E,47,[[["self"]],[T]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[29]]]],[11,R[1767],E,E,48,[[],[T]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[41],E,E,48,[[["self"]],[T]]],[11,R[42],E,E,48,[[["self"],[T]]]],[11,R[8],E,E,48,[[[U]],[R[3]]]],[11,R[9],E,E,48,[[],[R[3]]]],[11,R[28],E,E,48,[[["self"]],[T]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[29]]]],[11,R[1767],E,E,49,[[],[T]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[41],E,E,49,[[["self"]],[T]]],[11,R[42],E,E,49,[[["self"],[T]]]],[11,R[8],E,E,49,[[[U]],[R[3]]]],[11,R[9],E,E,49,[[],[R[3]]]],[11,R[28],E,E,49,[[["self"]],[T]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[29]]]],[11,R[1767],E,E,50,[[],[T]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[41],E,E,50,[[["self"]],[T]]],[11,R[42],E,E,50,[[["self"],[T]]]],[11,R[8],E,E,50,[[[U]],[R[3]]]],[11,R[9],E,E,50,[[],[R[3]]]],[11,R[28],E,E,50,[[["self"]],[T]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[29]]]],[11,R[1767],E,E,51,[[],[T]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[41],E,E,51,[[["self"]],[T]]],[11,R[42],E,E,51,[[["self"],[T]]]],[11,R[8],E,E,51,[[[U]],[R[3]]]],[11,R[9],E,E,51,[[],[R[3]]]],[11,R[28],E,E,51,[[["self"]],[T]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[29]]]],[11,R[1767],E,E,52,[[],[T]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[41],E,E,52,[[["self"]],[T]]],[11,R[42],E,E,52,[[["self"],[T]]]],[11,R[8],E,E,52,[[[U]],[R[3]]]],[11,R[9],E,E,52,[[],[R[3]]]],[11,R[28],E,E,52,[[["self"]],[T]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[29]]]],[11,R[1767],E,E,53,[[],[T]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[41],E,E,53,[[["self"]],[T]]],[11,R[42],E,E,53,[[["self"],[T]]]],[11,R[8],E,E,53,[[[U]],[R[3]]]],[11,R[9],E,E,53,[[],[R[3]]]],[11,R[28],E,E,53,[[["self"]],[T]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[29]]]],[11,R[1767],E,E,54,[[],[T]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[41],E,E,54,[[["self"]],[T]]],[11,R[42],E,E,54,[[["self"],[T]]]],[11,R[8],E,E,54,[[[U]],[R[3]]]],[11,R[9],E,E,54,[[],[R[3]]]],[11,R[28],E,E,54,[[["self"]],[T]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[29]]]],[11,R[1767],E,E,55,[[],[T]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[41],E,E,55,[[["self"]],[T]]],[11,R[42],E,E,55,[[["self"],[T]]]],[11,R[8],E,E,55,[[[U]],[R[3]]]],[11,R[9],E,E,55,[[],[R[3]]]],[11,R[28],E,E,55,[[["self"]],[T]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[29]]]],[11,R[1767],E,E,56,[[],[T]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[41],E,E,56,[[["self"]],[T]]],[11,R[42],E,E,56,[[["self"],[T]]]],[11,R[8],E,E,56,[[[U]],[R[3]]]],[11,R[9],E,E,56,[[],[R[3]]]],[11,R[28],E,E,56,[[["self"]],[T]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[29]]]],[11,R[1767],E,E,57,[[],[T]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[41],E,E,57,[[["self"]],[T]]],[11,R[42],E,E,57,[[["self"],[T]]]],[11,R[8],E,E,57,[[[U]],[R[3]]]],[11,R[9],E,E,57,[[],[R[3]]]],[11,R[28],E,E,57,[[["self"]],[T]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[29]]]],[11,R[1767],E,E,58,[[],[T]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[41],E,E,58,[[["self"]],[T]]],[11,R[42],E,E,58,[[["self"],[T]]]],[11,R[8],E,E,58,[[[U]],[R[3]]]],[11,R[9],E,E,58,[[],[R[3]]]],[11,R[28],E,E,58,[[["self"]],[T]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[29]]]],[11,R[1767],E,E,59,[[],[T]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[41],E,E,59,[[["self"]],[T]]],[11,R[42],E,E,59,[[["self"],[T]]]],[11,R[8],E,E,59,[[[U]],[R[3]]]],[11,R[9],E,E,59,[[],[R[3]]]],[11,R[28],E,E,59,[[["self"]],[T]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[29]]]],[11,R[1767],E,E,60,[[],[T]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[41],E,E,60,[[["self"]],[T]]],[11,R[42],E,E,60,[[["self"],[T]]]],[11,R[8],E,E,60,[[[U]],[R[3]]]],[11,R[9],E,E,60,[[],[R[3]]]],[11,R[28],E,E,60,[[["self"]],[T]]],[11,R[10],E,E,60,[[["self"]],[T]]],[11,R[11],E,E,60,[[["self"]],[R[29]]]],[11,R[1767],E,E,61,[[],[T]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[41],E,E,61,[[["self"]],[T]]],[11,R[42],E,E,61,[[["self"],[T]]]],[11,R[8],E,E,61,[[[U]],[R[3]]]],[11,R[9],E,E,61,[[],[R[3]]]],[11,R[28],E,E,61,[[["self"]],[T]]],[11,R[10],E,E,61,[[["self"]],[T]]],[11,R[11],E,E,61,[[["self"]],[R[29]]]],[11,R[1767],E,E,62,[[],[T]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[41],E,E,62,[[["self"]],[T]]],[11,R[42],E,E,62,[[["self"],[T]]]],[11,R[8],E,E,62,[[[U]],[R[3]]]],[11,R[9],E,E,62,[[],[R[3]]]],[11,R[28],E,E,62,[[["self"]],[T]]],[11,R[10],E,E,62,[[["self"]],[T]]],[11,R[11],E,E,62,[[["self"]],[R[29]]]],[11,R[1767],E,E,63,[[],[T]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[41],E,E,63,[[["self"]],[T]]],[11,R[42],E,E,63,[[["self"],[T]]]],[11,R[8],E,E,63,[[[U]],[R[3]]]],[11,R[9],E,E,63,[[],[R[3]]]],[11,R[28],E,E,63,[[["self"]],[T]]],[11,R[10],E,E,63,[[["self"]],[T]]],[11,R[11],E,E,63,[[["self"]],[R[29]]]],[11,R[1767],E,E,64,[[],[T]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[41],E,E,64,[[["self"]],[T]]],[11,R[42],E,E,64,[[["self"],[T]]]],[11,R[8],E,E,64,[[[U]],[R[3]]]],[11,R[9],E,E,64,[[],[R[3]]]],[11,R[28],E,E,64,[[["self"]],[T]]],[11,R[10],E,E,64,[[["self"]],[T]]],[11,R[11],E,E,64,[[["self"]],[R[29]]]],[11,R[1767],E,E,65,[[],[T]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[41],E,E,65,[[["self"]],[T]]],[11,R[42],E,E,65,[[["self"],[T]]]],[11,R[8],E,E,65,[[[U]],[R[3]]]],[11,R[9],E,E,65,[[],[R[3]]]],[11,R[28],E,E,65,[[["self"]],[T]]],[11,R[10],E,E,65,[[["self"]],[T]]],[11,R[11],E,E,65,[[["self"]],[R[29]]]],[11,R[1767],E,E,66,[[],[T]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[41],E,E,66,[[["self"]],[T]]],[11,R[42],E,E,66,[[["self"],[T]]]],[11,R[8],E,E,66,[[[U]],[R[3]]]],[11,R[9],E,E,66,[[],[R[3]]]],[11,R[28],E,E,66,[[["self"]],[T]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[11],E,E,66,[[["self"]],[R[29]]]],[11,R[1767],E,E,67,[[],[T]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[41],E,E,67,[[["self"]],[T]]],[11,R[42],E,E,67,[[["self"],[T]]]],[11,R[8],E,E,67,[[[U]],[R[3]]]],[11,R[9],E,E,67,[[],[R[3]]]],[11,R[28],E,E,67,[[["self"]],[T]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[11],E,E,67,[[["self"]],[R[29]]]],[11,R[1767],E,E,68,[[],[T]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[41],E,E,68,[[["self"]],[T]]],[11,R[42],E,E,68,[[["self"],[T]]]],[11,R[8],E,E,68,[[[U]],[R[3]]]],[11,R[9],E,E,68,[[],[R[3]]]],[11,R[28],E,E,68,[[["self"]],[T]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[11],E,E,68,[[["self"]],[R[29]]]],[11,R[1767],E,E,69,[[],[T]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[41],E,E,69,[[["self"]],[T]]],[11,R[42],E,E,69,[[["self"],[T]]]],[11,R[8],E,E,69,[[[U]],[R[3]]]],[11,R[9],E,E,69,[[],[R[3]]]],[11,R[28],E,E,69,[[["self"]],[T]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[11],E,E,69,[[["self"]],[R[29]]]],[11,R[1767],E,E,70,[[],[T]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[41],E,E,70,[[["self"]],[T]]],[11,R[42],E,E,70,[[["self"],[T]]]],[11,R[8],E,E,70,[[[U]],[R[3]]]],[11,R[9],E,E,70,[[],[R[3]]]],[11,R[28],E,E,70,[[["self"]],[T]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[11],E,E,70,[[["self"]],[R[29]]]],[11,R[1767],E,E,71,[[],[T]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[41],E,E,71,[[["self"]],[T]]],[11,R[42],E,E,71,[[["self"],[T]]]],[11,R[8],E,E,71,[[[U]],[R[3]]]],[11,R[9],E,E,71,[[],[R[3]]]],[11,R[28],E,E,71,[[["self"]],[T]]],[11,R[10],E,E,71,[[["self"]],[T]]],[11,R[11],E,E,71,[[["self"]],[R[29]]]],[11,R[1767],E,E,72,[[],[T]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[41],E,E,72,[[["self"]],[T]]],[11,R[42],E,E,72,[[["self"],[T]]]],[11,R[8],E,E,72,[[[U]],[R[3]]]],[11,R[9],E,E,72,[[],[R[3]]]],[11,R[28],E,E,72,[[["self"]],[T]]],[11,R[10],E,E,72,[[["self"]],[T]]],[11,R[11],E,E,72,[[["self"]],[R[29]]]],[11,R[1767],E,E,73,[[],[T]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[41],E,E,73,[[["self"]],[T]]],[11,R[42],E,E,73,[[["self"],[T]]]],[11,R[8],E,E,73,[[[U]],[R[3]]]],[11,R[9],E,E,73,[[],[R[3]]]],[11,R[28],E,E,73,[[["self"]],[T]]],[11,R[10],E,E,73,[[["self"]],[T]]],[11,R[11],E,E,73,[[["self"]],[R[29]]]],[11,R[1767],E,E,74,[[],[T]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[41],E,E,74,[[["self"]],[T]]],[11,R[42],E,E,74,[[["self"],[T]]]],[11,R[8],E,E,74,[[[U]],[R[3]]]],[11,R[9],E,E,74,[[],[R[3]]]],[11,R[28],E,E,74,[[["self"]],[T]]],[11,R[10],E,E,74,[[["self"]],[T]]],[11,R[11],E,E,74,[[["self"]],[R[29]]]],[11,R[1767],E,E,75,[[],[T]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[41],E,E,75,[[["self"]],[T]]],[11,R[42],E,E,75,[[["self"],[T]]]],[11,R[8],E,E,75,[[[U]],[R[3]]]],[11,R[9],E,E,75,[[],[R[3]]]],[11,R[28],E,E,75,[[["self"]],[T]]],[11,R[10],E,E,75,[[["self"]],[T]]],[11,R[11],E,E,75,[[["self"]],[R[29]]]],[11,R[1767],E,E,8,[[],[T]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"],[T]]]],[11,R[8],E,E,8,[[[U]],[R[3]]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,R[1767],E,E,76,[[],[T]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[41],E,E,76,[[["self"]],[T]]],[11,R[42],E,E,76,[[["self"],[T]]]],[11,R[8],E,E,76,[[[U]],[R[3]]]],[11,R[9],E,E,76,[[],[R[3]]]],[11,R[28],E,E,76,[[["self"]],[T]]],[11,R[10],E,E,76,[[["self"]],[T]]],[11,R[11],E,E,76,[[["self"]],[R[29]]]],[11,R[1767],E,E,77,[[],[T]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[41],E,E,77,[[["self"]],[T]]],[11,R[42],E,E,77,[[["self"],[T]]]],[11,R[8],E,E,77,[[[U]],[R[3]]]],[11,R[9],E,E,77,[[],[R[3]]]],[11,R[28],E,E,77,[[["self"]],[T]]],[11,R[10],E,E,77,[[["self"]],[T]]],[11,R[11],E,E,77,[[["self"]],[R[29]]]],[11,R[1767],E,E,78,[[],[T]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[41],E,E,78,[[["self"]],[T]]],[11,R[42],E,E,78,[[["self"],[T]]]],[11,R[8],E,E,78,[[[U]],[R[3]]]],[11,R[9],E,E,78,[[],[R[3]]]],[11,R[28],E,E,78,[[["self"]],[T]]],[11,R[10],E,E,78,[[["self"]],[T]]],[11,R[11],E,E,78,[[["self"]],[R[29]]]],[11,R[1767],R[1775],E,79,[[],[T]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[41],E,E,79,[[["self"]],[T]]],[11,R[42],E,E,79,[[["self"],[T]]]],[11,R[8],E,E,79,[[[U]],[R[3]]]],[11,R[9],E,E,79,[[],[R[3]]]],[11,R[28],E,E,79,[[["self"]],[T]]],[11,R[10],E,E,79,[[["self"]],[T]]],[11,R[11],E,E,79,[[["self"]],[R[29]]]],[11,R[1767],E,E,80,[[],[T]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[41],E,E,80,[[["self"]],[T]]],[11,R[42],E,E,80,[[["self"],[T]]]],[11,R[8],E,E,80,[[[U]],[R[3]]]],[11,R[9],E,E,80,[[],[R[3]]]],[11,R[28],E,E,80,[[["self"]],[T]]],[11,R[10],E,E,80,[[["self"]],[T]]],[11,R[11],E,E,80,[[["self"]],[R[29]]]],[11,R[1767],E,E,81,[[],[T]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[8],E,E,81,[[[U]],[R[3]]]],[11,R[9],E,E,81,[[],[R[3]]]],[11,R[28],E,E,81,[[["self"]],[T]]],[11,R[10],E,E,81,[[["self"]],[T]]],[11,R[11],E,E,81,[[["self"]],[R[29]]]],[11,R[1767],R[1776],E,82,[[],[T]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[41],E,E,82,[[["self"]],[T]]],[11,R[42],E,E,82,[[["self"],[T]]]],[11,R[8],E,E,82,[[[U]],[R[3]]]],[11,R[9],E,E,82,[[],[R[3]]]],[11,R[28],E,E,82,[[["self"]],[T]]],[11,R[10],E,E,82,[[["self"]],[T]]],[11,R[11],E,E,82,[[["self"]],[R[29]]]],[11,R[1767],R[1777],E,83,[[],[T]]],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[41],E,E,83,[[["self"]],[T]]],[11,R[42],E,E,83,[[["self"],[T]]]],[11,R[8],E,E,83,[[[U]],[R[3]]]],[11,R[9],E,E,83,[[],[R[3]]]],[11,R[28],E,E,83,[[["self"]],[T]]],[11,R[10],E,E,83,[[["self"]],[T]]],[11,R[11],E,E,83,[[["self"]],[R[29]]]],[11,R[1767],R[1778],E,84,[[],[T]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[41],E,E,84,[[["self"]],[T]]],[11,R[42],E,E,84,[[["self"],[T]]]],[11,R[8],E,E,84,[[[U]],[R[3]]]],[11,R[9],E,E,84,[[],[R[3]]]],[11,R[28],E,E,84,[[["self"]],[T]]],[11,R[10],E,E,84,[[["self"]],[T]]],[11,R[11],E,E,84,[[["self"]],[R[29]]]],[11,R[1767],E,E,85,[[],[T]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[41],E,E,85,[[["self"]],[T]]],[11,R[42],E,E,85,[[["self"],[T]]]],[11,R[8],E,E,85,[[[U]],[R[3]]]],[11,R[9],E,E,85,[[],[R[3]]]],[11,R[28],E,E,85,[[["self"]],[T]]],[11,R[10],E,E,85,[[["self"]],[T]]],[11,R[11],E,E,85,[[["self"]],[R[29]]]],[11,R[1767],E,E,86,[[],[T]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[8],E,E,86,[[[U]],[R[3]]]],[11,R[9],E,E,86,[[],[R[3]]]],[11,R[28],E,E,86,[[["self"]],[T]]],[11,R[10],E,E,86,[[["self"]],[T]]],[11,R[11],E,E,86,[[["self"]],[R[29]]]],[11,R[1767],R[1779],E,87,[[],[T]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[41],E,E,87,[[["self"]],[T]]],[11,R[42],E,E,87,[[["self"],[T]]]],[11,R[8],E,E,87,[[[U]],[R[3]]]],[11,R[9],E,E,87,[[],[R[3]]]],[11,R[28],E,E,87,[[["self"]],[T]]],[11,R[10],E,E,87,[[["self"]],[T]]],[11,R[11],E,E,87,[[["self"]],[R[29]]]],[11,R[1767],E,E,88,[[],[T]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[41],E,E,88,[[["self"]],[T]]],[11,R[42],E,E,88,[[["self"],[T]]]],[11,R[8],E,E,88,[[[U]],[R[3]]]],[11,R[9],E,E,88,[[],[R[3]]]],[11,R[28],E,E,88,[[["self"]],[T]]],[11,R[10],E,E,88,[[["self"]],[T]]],[11,R[11],E,E,88,[[["self"]],[R[29]]]],[11,R[1767],E,E,89,[[],[T]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[41],E,E,89,[[["self"]],[T]]],[11,R[42],E,E,89,[[["self"],[T]]]],[11,R[8],E,E,89,[[[U]],[R[3]]]],[11,R[9],E,E,89,[[],[R[3]]]],[11,R[28],E,E,89,[[["self"]],[T]]],[11,R[10],E,E,89,[[["self"]],[T]]],[11,R[11],E,E,89,[[["self"]],[R[29]]]],[11,R[1767],E,E,90,[[],[T]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[8],E,E,90,[[[U]],[R[3]]]],[11,R[9],E,E,90,[[],[R[3]]]],[11,R[28],E,E,90,[[["self"]],[T]]],[11,R[10],E,E,90,[[["self"]],[T]]],[11,R[11],E,E,90,[[["self"]],[R[29]]]],[11,R[1767],E,E,91,[[],[T]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[8],E,E,91,[[[U]],[R[3]]]],[11,R[9],E,E,91,[[],[R[3]]]],[11,R[28],E,E,91,[[["self"]],[T]]],[11,R[10],E,E,91,[[["self"]],[T]]],[11,R[11],E,E,91,[[["self"]],[R[29]]]],[11,R[1767],E,E,92,[[],[T]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[41],E,E,92,[[["self"]],[T]]],[11,R[42],E,E,92,[[["self"],[T]]]],[11,R[8],E,E,92,[[[U]],[R[3]]]],[11,R[9],E,E,92,[[],[R[3]]]],[11,R[28],E,E,92,[[["self"]],[T]]],[11,R[10],E,E,92,[[["self"]],[T]]],[11,R[11],E,E,92,[[["self"]],[R[29]]]],[11,R[1767],E,E,93,[[],[T]]],[11,"from",E,E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[8],E,E,93,[[[U]],[R[3]]]],[11,R[9],E,E,93,[[],[R[3]]]],[11,R[28],E,E,93,[[["self"]],[T]]],[11,R[10],E,E,93,[[["self"]],[T]]],[11,R[11],E,E,93,[[["self"]],[R[29]]]],[11,R[1767],R[1782],E,94,[[],[T]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[41],E,E,94,[[["self"]],[T]]],[11,R[42],E,E,94,[[["self"],[T]]]],[11,R[8],E,E,94,[[[U]],[R[3]]]],[11,R[9],E,E,94,[[],[R[3]]]],[11,R[28],E,E,94,[[["self"]],[T]]],[11,R[10],E,E,94,[[["self"]],[T]]],[11,R[11],E,E,94,[[["self"]],[R[29]]]],[11,R[1767],E,E,95,[[],[T]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[41],E,E,95,[[["self"]],[T]]],[11,R[42],E,E,95,[[["self"],[T]]]],[11,R[8],E,E,95,[[[U]],[R[3]]]],[11,R[9],E,E,95,[[],[R[3]]]],[11,R[28],E,E,95,[[["self"]],[T]]],[11,R[10],E,E,95,[[["self"]],[T]]],[11,R[11],E,E,95,[[["self"]],[R[29]]]],[11,R[1767],E,E,96,[[],[T]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[41],E,E,96,[[["self"]],[T]]],[11,R[42],E,E,96,[[["self"],[T]]]],[11,R[8],E,E,96,[[[U]],[R[3]]]],[11,R[9],E,E,96,[[],[R[3]]]],[11,R[28],E,E,96,[[["self"]],[T]]],[11,R[10],E,E,96,[[["self"]],[T]]],[11,R[11],E,E,96,[[["self"]],[R[29]]]],[11,R[1767],E,E,97,[[],[T]]],[11,"from",E,E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[41],E,E,97,[[["self"]],[T]]],[11,R[42],E,E,97,[[["self"],[T]]]],[11,R[8],E,E,97,[[[U]],[R[3]]]],[11,R[9],E,E,97,[[],[R[3]]]],[11,R[28],E,E,97,[[["self"]],[T]]],[11,R[10],E,E,97,[[["self"]],[T]]],[11,R[11],E,E,97,[[["self"]],[R[29]]]],[11,R[1767],E,E,98,[[],[T]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[41],E,E,98,[[["self"]],[T]]],[11,R[42],E,E,98,[[["self"],[T]]]],[11,R[8],E,E,98,[[[U]],[R[3]]]],[11,R[9],E,E,98,[[],[R[3]]]],[11,R[28],E,E,98,[[["self"]],[T]]],[11,R[10],E,E,98,[[["self"]],[T]]],[11,R[11],E,E,98,[[["self"]],[R[29]]]],[11,R[1767],E,E,99,[[],[T]]],[11,"from",E,E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[41],E,E,99,[[["self"]],[T]]],[11,R[42],E,E,99,[[["self"],[T]]]],[11,R[8],E,E,99,[[[U]],[R[3]]]],[11,R[9],E,E,99,[[],[R[3]]]],[11,R[28],E,E,99,[[["self"]],[T]]],[11,R[10],E,E,99,[[["self"]],[T]]],[11,R[11],E,E,99,[[["self"]],[R[29]]]],[11,R[1767],E,E,100,[[],[T]]],[11,"from",E,E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[41],E,E,100,[[["self"]],[T]]],[11,R[42],E,E,100,[[["self"],[T]]]],[11,R[8],E,E,100,[[[U]],[R[3]]]],[11,R[9],E,E,100,[[],[R[3]]]],[11,R[28],E,E,100,[[["self"]],[T]]],[11,R[10],E,E,100,[[["self"]],[T]]],[11,R[11],E,E,100,[[["self"]],[R[29]]]],[11,R[1767],E,E,101,[[],[T]]],[11,"from",E,E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[41],E,E,101,[[["self"]],[T]]],[11,R[42],E,E,101,[[["self"],[T]]]],[11,R[8],E,E,101,[[[U]],[R[3]]]],[11,R[9],E,E,101,[[],[R[3]]]],[11,R[28],E,E,101,[[["self"]],[T]]],[11,R[10],E,E,101,[[["self"]],[T]]],[11,R[11],E,E,101,[[["self"]],[R[29]]]],[11,R[1767],E,E,102,[[],[T]]],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[41],E,E,102,[[["self"]],[T]]],[11,R[42],E,E,102,[[["self"],[T]]]],[11,R[8],E,E,102,[[[U]],[R[3]]]],[11,R[9],E,E,102,[[],[R[3]]]],[11,R[28],E,E,102,[[["self"]],[T]]],[11,R[10],E,E,102,[[["self"]],[T]]],[11,R[11],E,E,102,[[["self"]],[R[29]]]],[11,R[1767],E,E,103,[[],[T]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[41],E,E,103,[[["self"]],[T]]],[11,R[42],E,E,103,[[["self"],[T]]]],[11,R[8],E,E,103,[[[U]],[R[3]]]],[11,R[9],E,E,103,[[],[R[3]]]],[11,R[28],E,E,103,[[["self"]],[T]]],[11,R[10],E,E,103,[[["self"]],[T]]],[11,R[11],E,E,103,[[["self"]],[R[29]]]],[11,R[1767],R[1783],E,104,[[],[T]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[41],E,E,104,[[["self"]],[T]]],[11,R[42],E,E,104,[[["self"],[T]]]],[11,R[8],E,E,104,[[[U]],[R[3]]]],[11,R[9],E,E,104,[[],[R[3]]]],[11,R[28],E,E,104,[[["self"]],[T]]],[11,R[10],E,E,104,[[["self"]],[T]]],[11,R[11],E,E,104,[[["self"]],[R[29]]]],[11,"eq",R[1748],E,0,[[["self"],[R[18]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"as_mut",E,E,0,[[["self"]],["str"]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"as_mut",E,E,0,[[["self"]],["target"]]],[11,"from",E,E,0,[[[R[3]]],[R[18]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"clone",E,E,0,[[["self"]],[R[18]]]],[11,R[172],E,E,0,[[["self"],[R[18]]],[[R[24]],[R[25],[R[24]]]]]],[11,"lt",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[18]]],["bool"]]],[11,"into",E,E,0,[[],[R[3]]]],[11,"deref",E,E,0,[[["self"]]]],[11,R[173],E,E,0,[[["self"]],[R[25]]]],[11,"as_ref",E,E,0,[[["self"]],["target"]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,"cmp",E,E,0,[[["self"],[R[18]]],[R[24]]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,R[14],E,E,0,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"next",E,E,0,[[["self"]],[R[25]]]],[11,R[174],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["acc"],["g"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[25]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[25]]]],[11,"collect",E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt","rayon",E,23,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,R[53],E,E,23,[[["self"]],["str"]]],[11,"fmt",E,E,26,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,21,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,23,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,20,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,24,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,25,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,R[327],E,E,24,[[],[[R[1793],[R[1780]]],[R[1780]]]]],[11,"drop",E,E,22,[[["self"]]]],[11,R[1781],R[1768],E,27,[[["c"]]]],[11,"opt_len",E,E,27,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,28,[[["c"]]]],[11,"opt_len",E,E,28,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],R[1769],E,29,[[["c"]]]],[11,"opt_len",E,E,29,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,30,[[["c"]]]],[11,"opt_len",E,E,30,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,31,[[["c"]]]],[11,"opt_len",E,E,31,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],R[1770],E,32,[[["c"]]]],[11,"opt_len",E,E,32,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,33,[[["c"]]]],[11,"opt_len",E,E,33,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],R[1771],E,34,[[["c"]]]],[11,"opt_len",E,E,34,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,35,[[["c"]]]],[11,"opt_len",E,E,35,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,36,[[["c"]]]],[11,"opt_len",E,E,36,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],R[1772],E,37,[[["c"]]]],[11,"opt_len",E,E,37,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,38,[[["c"]]]],[11,"opt_len",E,E,38,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],R[1773],E,39,[[["c"]]]],[11,"opt_len",E,E,39,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,40,[[["c"]]]],[11,"opt_len",E,E,40,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,41,[[["c"]]]],[11,"opt_len",E,E,41,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],R[1774],E,42,[[["c"]]]],[11,"opt_len",E,E,42,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,43,[[["c"]]]],[11,"opt_len",E,E,43,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,44,[[["c"]]]],[11,"opt_len",E,E,44,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],R[1748],E,45,[[["c"]]]],[11,R[1781],E,E,46,[[["c"]]]],[11,"opt_len",E,E,46,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,47,[[["c"]]]],[11,"opt_len",E,E,47,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,48,[[["c"]]]],[11,"opt_len",E,E,48,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,49,[[["c"]]]],[11,R[1781],E,E,50,[[["c"]]]],[11,R[1781],E,E,51,[[["c"]]]],[11,R[1781],E,E,52,[[["c"]]]],[11,R[1781],E,E,53,[[["c"]]]],[11,R[1781],E,E,54,[[["c"]]]],[11,R[1781],E,E,55,[[["c"]]]],[11,R[1781],E,E,56,[[["c"]]]],[11,R[1781],E,E,57,[[["c"]]]],[11,"opt_len",E,E,57,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,58,[[["c"]]]],[11,R[1781],E,E,59,[[["c"]]]],[11,"opt_len",E,E,59,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,60,[[["c"]]]],[11,"opt_len",E,E,60,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,62,[[["c"]]]],[11,"opt_len",E,E,62,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,61,[[["c"]]]],[11,"opt_len",E,E,61,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,63,[[["c"]]]],[11,"opt_len",E,E,63,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,64,[[["c"]]]],[11,"opt_len",E,E,64,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,65,[[["c"]]]],[11,"opt_len",E,E,65,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,66,[[["c"]]]],[11,"opt_len",E,E,66,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,67,[[["c"]]]],[11,"opt_len",E,E,67,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,68,[[["c"]]]],[11,"opt_len",E,E,68,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,69,[[["c"]]]],[11,"opt_len",E,E,69,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,71,[[["c"]]]],[11,"opt_len",E,E,71,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,70,[[["c"]]]],[11,"opt_len",E,E,70,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,72,[[["c"]]]],[11,"opt_len",E,E,72,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,73,[[["c"]]]],[11,"opt_len",E,E,73,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,74,[[["c"]]]],[11,"opt_len",E,E,74,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,75,[[["c"]]]],[11,R[1781],E,E,8,[[["c"]]]],[11,R[1781],E,E,76,[[["c"]]]],[11,"opt_len",E,E,76,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,77,[[["c"]]]],[11,"opt_len",E,E,77,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,78,[[["c"]]]],[11,"opt_len",E,E,78,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],R[1775],E,79,[[["c"]]]],[11,"opt_len",E,E,79,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,80,[[["c"]]]],[11,"opt_len",E,E,80,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,81,[[["c"]]]],[11,"opt_len",E,E,81,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],R[1776],E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],R[1777],E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],R[1778],E,84,[[["c"]]]],[11,"opt_len",E,E,84,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,85,[[["c"]]]],[11,"opt_len",E,E,85,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,86,[[["c"]]]],[11,"opt_len",E,E,86,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],R[1779],E,87,[[["c"]]]],[11,"opt_len",E,E,87,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,88,[[["c"]]]],[11,"opt_len",E,E,88,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,89,[[["c"]]]],[11,"opt_len",E,E,89,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,90,[[["c"]]]],[11,"opt_len",E,E,90,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,91,[[["c"]]]],[11,"opt_len",E,E,91,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],E,E,92,[[["c"]]]],[11,R[1781],E,E,93,[[["c"]]]],[11,R[1781],R[1782],E,94,[[["c"]]]],[11,R[1781],E,E,95,[[["c"]]]],[11,R[1781],E,E,96,[[["c"]]]],[11,R[1781],E,E,97,[[["c"]]]],[11,R[1781],E,E,98,[[["c"]]]],[11,R[1781],E,E,99,[[["c"]]]],[11,R[1781],E,E,100,[[["c"]]]],[11,R[1781],E,E,101,[[["c"]]]],[11,R[1781],E,E,102,[[["c"]]]],[11,R[1781],E,E,103,[[["c"]]]],[11,R[1781],R[1783],E,104,[[["c"]]]],[11,"opt_len",E,E,104,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1781],R[1748],E,0,[[["c"]]]],[11,"opt_len",E,E,0,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,"drive",R[1768],E,27,[[["c"]]]],[11,"len",E,E,27,[[["self"]],["usize"]]],[11,R[1784],E,E,27,[[["cb"]]]],[11,"drive",E,E,28,[[["c"]]]],[11,"len",E,E,28,[[["self"]],["usize"]]],[11,R[1784],E,E,28,[[["cb"]]]],[11,"drive",R[1774],E,42,[[["c"]]]],[11,"len",E,E,42,[[["self"]],["usize"]]],[11,R[1784],E,E,42,[[["cb"]]]],[11,"drive",E,E,43,[[["c"]]]],[11,"len",E,E,43,[[["self"]],["usize"]]],[11,R[1784],E,E,43,[[["cb"]]]],[11,"drive",E,E,44,[[["c"]]]],[11,"len",E,E,44,[[["self"]],["usize"]]],[11,R[1784],E,E,44,[[["cb"]]]],[11,"drive",R[1748],E,46,[[["c"]]]],[11,"len",E,E,46,[[["self"]],["usize"]]],[11,R[1784],E,E,46,[[["cb"]]]],[11,"drive",E,E,47,[[["c"]]]],[11,"len",E,E,47,[[["self"]],["usize"]]],[11,R[1784],E,E,47,[[["cb"]]]],[11,"drive",E,E,48,[[[R[1785]]]]],[11,"len",E,E,48,[[["self"]],["usize"]]],[11,R[1784],E,E,48,[[["cb"]]]],[11,"len",E,E,57,[[["self"]],["usize"]]],[11,"drive",E,E,57,[[[R[1785]]]]],[11,R[1784],E,E,57,[[["cb"]]]],[11,"len",E,E,59,[[["self"]],["usize"]]],[11,"drive",E,E,59,[[[R[1785]]]]],[11,R[1784],E,E,59,[[["cb"]]]],[11,"drive",E,E,60,[[["c"]]]],[11,"len",E,E,60,[[["self"]],["usize"]]],[11,R[1784],E,E,60,[[["cb"]]]],[11,"drive",E,E,62,[[["c"]]]],[11,"len",E,E,62,[[["self"]],["usize"]]],[11,R[1784],E,E,62,[[["cb"]]]],[11,"drive",E,E,61,[[["c"]]]],[11,"len",E,E,61,[[["self"]],["usize"]]],[11,R[1784],E,E,61,[[["cb"]]]],[11,"drive",E,E,63,[[["c"]]]],[11,"len",E,E,63,[[["self"]],["usize"]]],[11,R[1784],E,E,63,[[["cb"]]]],[11,"drive",E,E,64,[[["c"]]]],[11,"len",E,E,64,[[["self"]],["usize"]]],[11,R[1784],E,E,64,[[["cb"]]]],[11,"drive",E,E,65,[[["c"]]]],[11,"len",E,E,65,[[["self"]],["usize"]]],[11,R[1784],E,E,65,[[["cb"]]]],[11,"drive",E,E,66,[[["c"]]]],[11,"len",E,E,66,[[["self"]],["usize"]]],[11,R[1784],E,E,66,[[["cb"]]]],[11,"drive",E,E,67,[[["c"]]]],[11,"len",E,E,67,[[["self"]],["usize"]]],[11,R[1784],E,E,67,[[["cb"]]]],[11,"drive",E,E,68,[[["c"]]]],[11,"len",E,E,68,[[["self"]],["usize"]]],[11,R[1784],E,E,68,[[["cb"]]]],[11,"drive",E,E,69,[[[R[1785]]]]],[11,"len",E,E,69,[[["self"]],["usize"]]],[11,R[1784],E,E,69,[[["cb"]]]],[11,"drive",E,E,71,[[[R[1785]]]]],[11,"len",E,E,71,[[["self"]],["usize"]]],[11,R[1784],E,E,71,[[["cb"]]]],[11,"drive",E,E,70,[[[R[1785]]]]],[11,"len",E,E,70,[[["self"]],["usize"]]],[11,R[1784],E,E,70,[[["cb"]]]],[11,"drive",E,E,72,[[["c"]]]],[11,"len",E,E,72,[[["self"]],["usize"]]],[11,R[1784],E,E,72,[[["cb"]]]],[11,"drive",E,E,73,[[["c"]]]],[11,"len",E,E,73,[[["self"]],["usize"]]],[11,R[1784],E,E,73,[[["cb"]]]],[11,"drive",E,E,74,[[["c"]]]],[11,"len",E,E,74,[[["self"]],["usize"]]],[11,R[1784],E,E,74,[[["cb"]]]],[11,"drive",E,E,76,[[["c"]]]],[11,R[1784],E,E,76,[[["cb"]]]],[11,"len",E,E,76,[[["self"]],["usize"]]],[11,"drive",E,E,77,[[["c"]]]],[11,"len",E,E,77,[[["self"]],["usize"]]],[11,R[1784],E,E,77,[[["cb"]]]],[11,"drive",E,E,78,[[["c"]]]],[11,"len",E,E,78,[[["self"]],["usize"]]],[11,R[1784],E,E,78,[[["cb"]]]],[11,"drive",R[1775],E,79,[[["c"]]]],[11,"len",E,E,79,[[["self"]],["usize"]]],[11,R[1784],E,E,79,[[["cb"]]]],[11,"drive",E,E,80,[[["c"]]]],[11,"len",E,E,80,[[["self"]],["usize"]]],[11,R[1784],E,E,80,[[["cb"]]]],[11,"drive",E,E,81,[[["c"]]]],[11,"len",E,E,81,[[["self"]],["usize"]]],[11,R[1784],E,E,81,[[["cb"]]]],[11,"drive",R[1776],E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1784],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1784],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1784],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1784],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1784],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1784],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1784],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[1784],E,E,82,[[["cb"]]]],[11,"drive",R[1777],E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[1784],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[1784],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[1784],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[1784],E,E,83,[[["cb"]]]],[11,"drive",R[1778],E,84,[[["c"]]]],[11,"len",E,E,84,[[["self"]],["usize"]]],[11,R[1784],E,E,84,[[["cb"]]]],[11,"drive",E,E,85,[[["c"]]]],[11,"len",E,E,85,[[["self"]],["usize"]]],[11,R[1784],E,E,85,[[["cb"]]]],[11,"drive",E,E,86,[[["c"]]]],[11,"len",E,E,86,[[["self"]],["usize"]]],[11,R[1784],E,E,86,[[["cb"]]]],[11,"drive",R[1779],E,87,[[["c"]]]],[11,"len",E,E,87,[[["self"]],["usize"]]],[11,R[1784],E,E,87,[[["cb"]]]],[11,"drive",E,E,88,[[["c"]]]],[11,"len",E,E,88,[[["self"]],["usize"]]],[11,R[1784],E,E,88,[[["cb"]]]],[11,"drive",E,E,89,[[["c"]]]],[11,"len",E,E,89,[[["self"]],["usize"]]],[11,R[1784],E,E,89,[[["cb"]]]],[11,"drive",E,E,90,[[["c"]]]],[11,"len",E,E,90,[[["self"]],["usize"]]],[11,R[1784],E,E,90,[[["cb"]]]],[11,"drive",E,E,91,[[["c"]]]],[11,"len",E,E,91,[[["self"]],["usize"]]],[11,R[1784],E,E,91,[[["cb"]]]],[11,"drive",R[1783],E,104,[[["c"]]]],[11,"len",E,E,104,[[["self"]],["usize"]]],[11,R[1784],E,E,104,[[["cb"]]]],[11,"drive",R[1748],E,0,[[["c"]]]],[11,"len",E,E,0,[[["self"]],["usize"]]],[11,R[1784],E,E,0,[[["cb"]]]],[11,"par_extend",E,E,0,[[["self"],["i"]]]],[11,"clone",R[1768],E,27,[[["self"]],[R[338]]]],[11,"clone",E,E,28,[[["self"]],["self"]]],[11,"clone",R[1769],E,30,[[["self"]],["self"]]],[11,"clone",R[1770],E,33,[[["self"]],["self"]]],[11,"clone",R[1771],E,35,[[["self"]],["self"]]],[11,"clone",R[1772],E,38,[[["self"]],["self"]]],[11,"clone",R[1773],E,39,[[["self"]],[R[338]]]],[11,"clone",E,E,40,[[["self"]],["self"]]],[11,"clone",R[1774],E,42,[[["self"]],[R[338]]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"clone",R[1748],E,45,[[["self"]],[R[1786]]]],[11,"clone",E,E,46,[[["self"]],["chain"]]],[11,"clone",E,E,47,[[["self"]],["chunks"]]],[11,"clone",E,E,48,[[["self"]],[R[141]]]],[11,"clone",E,E,49,[[["self"]],["filter"]]],[11,"clone",E,E,50,[[["self"]],["filtermap"]]],[11,"clone",E,E,51,[[["self"]],["flatmap"]]],[11,"clone",E,E,52,[[["self"]],["flatten"]]],[11,"clone",E,E,53,[[["self"]],["fold"]]],[11,"clone",E,E,54,[[["self"]],["foldwith"]]],[11,"clone",E,E,55,[[["self"]],["tryfold"]]],[11,"clone",E,E,56,[[["self"]],[R[1787]]]],[11,"clone",E,E,57,[[["self"]],["skip"]]],[11,"clone",E,E,58,[[["self"]],["split"]]],[11,"clone",E,E,59,[[["self"]],["take"]]],[11,"clone",E,E,60,[[["self"]],["map"]]],[11,"clone",E,E,62,[[["self"]],["mapwith"]]],[11,"clone",E,E,61,[[["self"]],["mapinit"]]],[11,"clone",E,E,63,[[["self"]],["zip"]]],[11,"clone",E,E,64,[[["self"]],["zipeq"]]],[11,"clone",E,E,65,[[["self"]],[R[138]]]],[11,"clone",E,E,66,[[["self"]],[R[178]]]],[11,"clone",E,E,67,[[["self"]],[R[154]]]],[11,"clone",E,E,68,[[["self"]],["update"]]],[11,"clone",E,E,69,[[["self"]],["rev"]]],[11,"clone",E,E,71,[[["self"]],["minlen"]]],[11,"clone",E,E,70,[[["self"]],["maxlen"]]],[11,"clone",E,E,72,[[["self"]],["cloned"]]],[11,"clone",E,E,73,[[["self"]],["inspect"]]],[11,"clone",E,E,74,[[["self"]],["panicfuse"]]],[11,"clone",E,E,75,[[["self"]],[R[180]]]],[11,"clone",E,E,8,[[["self"]],["repeat"]]],[11,"clone",E,E,76,[[["self"]],["repeatn"]]],[11,"clone",E,E,77,[[["self"]],["self"]]],[11,"clone",E,E,78,[[["self"]],["once"]]],[11,"clone",R[1775],E,79,[[["self"]],[R[338]]]],[11,"clone",E,E,80,[[["self"]],["self"]]],[11,"clone",R[1776],E,82,[[["self"]],["iter"]]],[11,"clone",R[1777],E,83,[[["self"]],["iter"]]],[11,"clone",R[1778],E,84,[[["self"]],[R[338]]]],[11,"clone",E,E,85,[[["self"]],["self"]]],[11,"clone",R[1779],E,87,[[["self"]],["self"]]],[11,"clone",E,E,88,[[["self"]],["self"]]],[11,"clone",E,E,89,[[["self"]],["self"]]],[11,"clone",E,E,92,[[["self"]],["self"]]],[11,"clone",R[1782],E,94,[[["self"]],["chars"]]],[11,"clone",E,E,95,[[["self"]],[R[1788]]]],[11,"clone",E,E,96,[[["self"]],["bytes"]]],[11,"clone",E,E,97,[[["self"]],[R[1789]]]],[11,"clone",E,E,98,[[["self"]],["split"]]],[11,"clone",E,E,99,[[["self"]],[R[1790]]]],[11,"clone",E,E,100,[[["self"]],["lines"]]],[11,"clone",E,E,101,[[["self"]],[R[1791]]]],[11,"clone",E,E,102,[[["self"]],["matches"]]],[11,"clone",E,E,103,[[["self"]],[R[1792]]]],[11,"clone",R[1783],E,104,[[["self"]],[R[338]]]],[11,"fmt",R[1768],E,27,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1769],E,29,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1770],E,32,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1771],E,34,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1772],E,37,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1773],E,39,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1774],E,42,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1748],E,45,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,54,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,57,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,58,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,59,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,60,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,62,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,61,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,63,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,64,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,65,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,66,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,67,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,71,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,70,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,73,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,74,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,75,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,76,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,77,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,78,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1775],E,79,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,80,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,81,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1776],E,82,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1777],E,83,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1778],E,84,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,85,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,86,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1779],E,87,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,88,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,89,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,90,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,91,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,92,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,93,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1782],E,94,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,95,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,96,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,97,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,98,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,99,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,100,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,101,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,102,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,103,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1783],E,104,[[["self"],[R[13]]],[R[3]]]],[11,"migrated","rayon",R[1851],20,[[["self"]],["bool"]]],[11,"index",E,R[1827],21,[[["self"]],["usize"]]],[11,"name",E,R[1828],21,[[["self"]],[[R[25],["str"]],["str"]]]],[11,R[1731],E,R[1829],21,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,"run",E,R[1830],21,[[]]],[11,"new",E,R[1732],22,[[[R[1721]]],[[R[1728]],["box",["error"]],[R[3],[R[1728],"box"]]]]],[11,"install",E,R[1831],22,[[["self"],["op"]],["r"]]],[11,R[1722],E,R[1832],22,[[["self"]],["usize"]]],[11,R[1723],E,R[1833],22,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1724],E,R[1834],22,[[["self"]],[["bool"],[R[25],["bool"]]]]],[11,"join",E,R[1835],22,[[["self"],["a"],["b"]]]],[11,"scope",E,R[1725],22,[[["self"],["op"]],["r"]]],[11,R[1823],E,R[1725],22,[[["self"],["op"]],["r"]]],[11,"spawn",E,R[1727],22,[[["self"],["op"]]]],[11,R[1726],E,R[1727],22,[[["self"],["op"]]]],[11,"new",E,R[1836],24,[[],[[R[1793],[R[1780]]],[R[1780]]]]],[11,"build",E,R[1837],24,[[],[[R[1728]],[R[3],[R[1728],R[1729]]],[R[1729]]]]],[11,R[1838],E,R[1839],24,[[],[[R[1729]],[R[3],[R[1729]]]]]],[11,R[1840],E,R[1841],24,[[["w"],["f"]],[[R[3],[R[1729]]],[R[1729]]]]],[11,R[1842],E,R[1843],24,[[["f"]],[[R[1730]],[R[1793],[R[1730]]]]]],[11,R[1733],E,R[1844],24,[[["f"]],[R[1793]]]],[11,R[1734],E,R[1845],24,[[["usize"]],[R[1793]]]],[11,R[1735],E,R[1846],24,[[["h"]],[R[1793]]]],[11,R[1731],E,R[1847],24,[[["usize"]],[R[1793]]]],[11,R[1736],E,R[1848],24,[[],[R[1793]]]],[11,R[1737],E,R[1849],24,[[["h"]],[R[1793]]]],[11,R[1738],E,R[1850],24,[[["h"]],[R[1793]]]],[11,"spawn",E,R[1720],25,[[["self"],["body"]]]],[11,R[1726],E,R[1720],26,[[["self"],["body"]]]],[11,"is_left",R[1748],R[183],0,[[["self"]],["bool"]]],[11,"is_right",E,R[184],0,[[["self"]],["bool"]]],[11,"left",E,R[185],0,[[],[R[25]]]],[11,"right",E,R[186],0,[[],[R[25]]]],[11,"as_ref",E,R[187],0,[[["self"]],[["r"],[R[18]],["l"]]]],[11,"as_mut",E,R[188],0,[[["self"]],[["r"],[R[18]],["l"]]]],[11,"flip",E,R[189],0,[[],[R[18]]]],[11,"map_left",E,R[19],0,[[["f"]],[R[18]]]],[11,R[190],E,R[20],0,[[["f"]],[R[18]]]],[11,R[18],E,R[191],0,[[["f"],["g"]],[T]]],[11,R[192],E,R[193],0,[[["ctx"],["f"],["g"]],[T]]],[11,R[194],E,R[19],0,[[["f"]],[R[18]]]],[11,R[195],E,R[20],0,[[["f"]],[R[18]]]],[11,R[23],E,R[196],0,[[],[R[18]]]],[11,"left_or",E,R[197],0,[[["l"]],["l"]]],[11,R[198],E,R[199],0,[[],["l"]]],[11,R[200],E,R[21],0,[[["f"]],["l"]]],[11,"right_or",E,R[201],0,[[["r"]],["r"]]],[11,R[202],E,R[203],0,[[],["r"]]],[11,R[204],E,R[21],0,[[["f"]],["r"]]],[11,R[205],E,R[22],0,[[]]],[11,R[206],E,R[22],0,[[]]],[11,R[7],E,R[207],0,[[],[T]]]],"p":[[4,"Either"],[8,R[1794]],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,R[1795]],[8,R[1796]],[3,"Repeat"],[8,R[1762]],[8,R[1797]],[8,R[1798]],[8,R[1799]],[8,R[1800]],[8,R[1801]],[8,R[1802]],[8,R[1803]],[8,R[1804]],[8,R[1805]],[8,R[1806]],[3,R[1853]],[3,R[1739]],[3,R[1814]],[3,R[1742]],[3,R[1740]],[3,"Scope"],[3,R[1852]],[3,R[328]],[3,"Iter"],[3,R[328]],[3,"Iter"],[3,"IterMut"],[3,R[328]],[3,"Iter"],[3,R[328]],[3,"Iter"],[3,"IterMut"],[3,R[328]],[3,"Iter"],[3,R[328]],[3,"Iter"],[3,"IterMut"],[3,R[328]],[3,"Iter"],[3,"IterMut"],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,R[1807]],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapInit"],[3,"MapWith"],[3,"Zip"],[3,"ZipEq"],[3,R[214]],[3,R[215]],[3,R[226]],[3,"Update"],[3,"Rev"],[3,"MaxLen"],[3,"MinLen"],[3,"Cloned"],[3,"Inspect"],[3,"PanicFuse"],[3,R[218]],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,R[328]],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,R[328]],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,R[1808]],[3,"Bytes"],[3,R[1809]],[3,"Split"],[3,R[1810]],[3,"Lines"],[3,R[1811]],[3,"Matches"],[3,R[1812]],[3,R[328]]]};
searchIndex["rayon_core"]={"doc":"Under construction","i":[[3,R[1739],"rayon_core",R[1813],N,N],[3,"Scope",E,R[1718],N,N],[3,R[1852],E,R[1718],N,N],[3,R[1814],E,R[1815],N,N],[3,R[1742],E,R[1816],N,N],[3,R[1740],E,R[1817],N,N],[3,R[1741],E,"Contains the rayon thread pool configuration. Use…",N,N],[3,R[1853],E,R[1818],N,N],[5,"join",E,R[1819],N,[[["a"],["b"]]]],[5,R[1820],E,R[1821],N,[[["a"],["b"]]]],[5,"scope",E,R[1822],N,[[["op"]],["r"]]],[5,R[1823],E,R[1824],N,[[["op"]],["r"]]],[5,"spawn",E,R[1719],N,[[["f"]]]],[5,R[1726],E,R[1719],N,[[["f"]]]],[5,R[1724],E,"If called from a Rayon worker thread, indicates whether…",N,[[],[["bool"],[R[25],["bool"]]]]],[5,R[1723],E,R[1825],N,[[],[[R[25],["usize"]],["usize"]]]],[5,R[1722],E,R[1826],N,[[],["usize"]]],[5,"initialize",E,"Deprecated in favor of `ThreadPoolBuilder::build_global`.",N,[[[R[1721]]],[["box",["error"]],[R[3],["box"]]]]],[11,"index",E,R[1827],0,[[["self"]],["usize"]]],[11,"name",E,R[1828],0,[[["self"]],[[R[25],["str"]],["str"]]]],[11,R[1731],E,R[1829],0,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,"run",E,R[1830],0,[[]]],[11,"spawn",E,R[1720],1,[[["self"],["body"]]]],[11,R[1726],E,R[1720],2,[[["self"],["body"]]]],[11,"new",E,R[1732],3,[[[R[1721]]],[[R[3],[R[1728],"box"]],[R[1728]],["box",["error"]]]]],[11,"install",E,R[1831],3,[[["self"],["op"]],["r"]]],[11,R[1722],E,R[1832],3,[[["self"]],["usize"]]],[11,R[1723],E,R[1833],3,[[["self"]],[[R[25],["usize"]],["usize"]]]],[11,R[1724],E,R[1834],3,[[["self"]],[["bool"],[R[25],["bool"]]]]],[11,"join",E,R[1835],3,[[["self"],["a"],["b"]]]],[11,"scope",E,R[1725],3,[[["self"],["op"]],["r"]]],[11,R[1823],E,R[1725],3,[[["self"],["op"]],["r"]]],[11,"spawn",E,R[1727],3,[[["self"],["op"]]]],[11,R[1726],E,R[1727],3,[[["self"],["op"]]]],[11,"new",E,R[1836],4,[[],["self"]]],[11,"build",E,R[1837],4,[[],[[R[1728]],[R[3],[R[1728],R[1729]]],[R[1729]]]]],[11,R[1838],E,R[1839],4,[[],[[R[3],[R[1729]]],[R[1729]]]]],[11,R[1840],E,R[1841],4,[[["w"],["f"]],[[R[3],[R[1729]]],[R[1729]]]]],[11,R[1842],E,R[1843],4,[[["f"]],[[R[1793],[R[1730]]],[R[1730]]]]],[11,R[1733],E,R[1844],4,[[["f"]],["self"]]],[11,R[1734],E,R[1845],4,[[["usize"]],["self"]]],[11,R[1735],E,R[1846],4,[[["h"]],["self"]]],[11,R[1731],E,R[1847],4,[[["usize"]],["self"]]],[11,R[1736],E,R[1848],4,[[],["self"]]],[11,R[1737],E,R[1849],4,[[["h"]],["self"]]],[11,R[1738],E,R[1850],4,[[["h"]],["self"]]],[11,"new",E,"Creates and return a valid rayon thread pool…",5,[[],[R[1721]]]],[11,"build",E,R[1732],5,[[],[[R[1728]],["box",["error"]],[R[3],[R[1728],"box"]]]]],[11,R[1733],E,"Deprecated in favor of `ThreadPoolBuilder::thread_name`.",5,[[["f"]],["self"]]],[11,R[1734],E,"Deprecated in favor of `ThreadPoolBuilder::num_threads`.",5,[[["usize"]],[R[1721]]]],[11,R[1735],E,"Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",5,[[["h"]],[R[1721]]]],[11,R[1731],E,"Deprecated in favor of `ThreadPoolBuilder::stack_size`.",5,[[["usize"]],["self"]]],[11,R[1736],E,"Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",5,[[],["self"]]],[11,R[1737],E,"Deprecated in favor of `ThreadPoolBuilder::start_handler`.",5,[[["h"]],[R[1721]]]],[11,R[1738],E,"Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",5,[[["h"]],[R[1721]]]],[11,"migrated",E,R[1851],6,[[["self"]],["bool"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[98],E,E,7,[[["self"]],["string"]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"drop",E,E,3,[[["self"]]]],[11,R[327],E,E,4,[[],["self"]]],[11,R[327],E,E,5,[[],["self"]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[3]]]],[11,R[53],E,E,7,[[["self"]],["str"]]]],"p":[[3,R[1739]],[3,"Scope"],[3,R[1852]],[3,R[1814]],[3,R[1740]],[3,R[1741]],[3,R[1853]],[3,R[1742]]]};
searchIndex["rulinalg"]={"doc":"The rulinalg crate.","i":[[0,"macros",R[1626],"Macros for the linear algebra modules.",N,N],[3,R[1702],R[1627],"The `abs` comparator used with assert_matrix_eq!.",N,N],[12,"tol",E,"The maximum absolute difference tolerated (inclusive).",0,N],[3,R[1714],E,"The `exact` comparator used with assert_matrix_eq!.",N,N],[3,R[1703],E,"The `ulp` comparator used with assert_matrix_eq!.",N,N],[12,"tol",E,"The maximum difference in ULP units tolerated (inclusive).",1,N],[3,R[1715],E,"The `float` comparator used with assert_matrix_eq!.",N,N],[8,R[1704],E,"Trait that describes elementwise comparators for…",N,N],[10,"compare",E,"Compares two elements.",2,[[["self"],[T]],[R[3]]]],[10,R[53],E,"A description of the comparator.",2,[[["self"]],["string"]]],[0,"matrix",R[1626],"The matrix module.",N,N],[3,R[1709],R[1610],"An efficient implementation of a permutation matrix.",N,N],[3,"Matrix",E,"The `Matrix` struct.",N,N],[3,R[1707],E,"A `MatrixSlice`",N,N],[3,R[1708],E,"A mutable `MatrixSliceMut`",N,N],[3,"Row",E,"Row of a matrix.",N,N],[3,"RowMut",E,"Mutable row of a matrix.",N,N],[3,"Rows",E,"Row iterator.",N,N],[3,"RowsMut",E,"Mutable row iterator.",N,N],[3,"Column",E,"Column of a matrix.",N,N],[3,"ColumnMut",E,"Mutable column of a matrix.",N,N],[3,"Cols",E,"Column iterator.",N,N],[3,"ColsMut",E,"Mutable column iterator.",N,N],[3,"Diagonal",E,"An iterator over the diagonal elements of a matrix.",N,N],[3,R[1716],E,"An iterator over the mutable diagonal elements of a matrix.",N,N],[3,"SliceIter",E,"Iterator for matrix.",N,N],[3,R[1717],E,"Iterator for mutable matrix.",N,N],[4,"Parity",E,"Parity is the fact of being even or odd.",N,N],[13,"Even",E,"Even parity.",3,N],[13,"Odd",E,"Odd parity.",3,N],[4,"Axes",E,"Matrix dimensions",N,N],[13,"Row",E,"The row axis.",4,N],[13,"Col",E,"The column axis.",4,N],[4,"DiagOffset",E,"Diagonal offset (used by Diagonal iterator).",N,N],[13,"Main",E,"The main diagonal of the matrix.",5,N],[13,"Above",E,"An offset above the main diagonal.",5,N],[13,"Below",E,"An offset below the main diagonal.",5,N],[0,"decomposition",E,"Decompositions for matrices.",N,N],[3,R[1705],R[1611],"LU decomposition with partial pivoting.",N,N],[3,"LUP",E,"Result of unpacking an instance of PartialPivLu.",N,N],[12,"l",E,"The lower triangular matrix in the decomposition.",6,N],[12,U,E,"The upper triangular matrix in the decomposition.",6,N],[12,"p",E,"The permutation matrix in the decomposition.",6,N],[11,"qr_decomp",R[1610],"Compute the QR decomposition of the matrix.",7,[[],[["error"],[R[3],["error"]]]]],[11,"cholesky",E,"Cholesky decomposition",7,[[["self"]],[[R[3],["matrix","error"]],["error"],["matrix"]]]],[11,"bidiagonal_decomp",E,"Converts matrix to bidiagonal form",7,[[],[[R[3],["error"]],["error"]]]],[11,"svd",E,"Singular Value Decomposition",7,[[],[[R[3],["error"]],["error"]]]],[11,"upper_hessenberg",E,"Returns H, where H is the upper hessenberg form.",7,[[],[[R[3],["matrix","error"]],["error"],["matrix"]]]],[11,"upper_hess_decomp",E,"Returns (U,H), where H is the upper hessenberg form and U…",7,[[],[["error"],[R[3],["error"]]]]],[11,"decompose",R[1611],"Performs the decomposition.",8,[[["matrix"]],[[R[3],["error"]],["error"]]]],[11,"solve",E,"Solves the linear system `Ax = b`.",8,[[["self"],["vector"]],[["error"],[R[3],["vector","error"]],["vector"]]]],[11,"inverse",E,"Computes the inverse of the matrix which this LUP…",8,[[["self"]],[[R[3],["matrix","error"]],["error"],["matrix"]]]],[11,"det",E,"Computes the determinant of the decomposed matrix.",8,[[["self"]],[T]]],[11,"lup_decomp",R[1610],"Computes L, U, and P for LUP decomposition.",7,[[],[[R[3],["error"]],["error"]]]],[11,"eigenvalues",E,"Eigenvalues of a square matrix.",7,[[],[["error"],["vec"],[R[3],["vec","error"]]]]],[11,"eigendecomp",E,"Eigendecomposition of a square matrix.",7,[[],[[R[3],["error"]],["error"]]]],[8,R[1706],R[1611],"Base trait for decompositions.",N,N],[16,"Factors",E,"The type representing the ordered set of factors that when…",9,N],[10,"unpack",E,"Extract the individual factors from this decomposition.",9,[[]]],[11,"new",R[1610],"Constructor for Matrix struct.",7,[[["into",["vec"]],["vec"],["usize"]],["matrix"]]],[11,"from_fn",E,"Constructor for Matrix struct that takes a function `f`…",7,[[["usize"],["f"]],["matrix"]]],[11,"data",E,R[1622],7,[[["self"]],["vec"]]],[11,"mut_data",E,R[1623],7,[[["self"]]]],[11,"into_vec",E,"Consumes the Matrix and returns the Vec of data.",7,[[],["vec"]]],[11,"zeros",E,"Constructs matrix of all zeros.",7,[[["usize"]],["matrix"]]],[11,"from_diag",E,"Constructs matrix with given diagonal.",7,[[],["matrix"]]],[11,"ones",E,"Constructs matrix of all ones.",7,[[["usize"]],["matrix"]]],[11,"identity",E,"Constructs the identity matrix.",7,[[["usize"]],["matrix"]]],[11,"mean",E,"The mean of the matrix along the specified axis.",7,[[["self"],["axes"]],["vector"]]],[11,"variance",E,"The variance of the matrix along the specified axis.",7,[[["self"],["axes"]],[["error"],[R[3],["vector","error"]],["vector"]]]],[11,"solve",E,"Solves the equation `Ax = y`.",7,[[["vector"]],[["error"],[R[3],["vector","error"]],["vector"]]]],[11,"inverse",E,"Computes the inverse of the matrix.",7,[[],[[R[3],["matrix","error"]],["error"],["matrix"]]]],[11,"det",E,"Computes the determinant of the matrix.",7,[[],[T]]],[11,R[1613],E,"Produce a `MatrixSlice` from a `Matrix`",10,[[["usize"],["matrix"]],[R[1612]]]],[11,R[1614],E,"Creates a `MatrixSlice` from raw parts.",10,[[["usize"]],[R[1612]]]],[11,R[1613],E,"Produce a `MatrixSliceMut` from a mutable `Matrix`",11,[[["usize"],["matrix"]],[R[1615]]]],[11,R[1614],E,"Creates a `MatrixSliceMut` from raw parts.",11,[[["usize"]],[R[1615]]]],[11,"identity",E,"The identity permutation.",12,[[["usize"]],["self"]]],[11,"swap_rows",E,"Swaps rows i and j in the permutation matrix.",12,[[["self"],["usize"]]]],[11,"inverse",E,"The inverse of the permutation matrix.",12,[[["self"]],[R[1616]]]],[11,"size",E,"The size of the permutation matrix.",12,[[["self"]],["usize"]]],[11,"from_array",E,"Constructs a `PermutationMatrix` from an array.",12,[[["into",["vec"]],["vec",["usize"]]],[["error"],[R[1616]],[R[3],[R[1616],"error"]]]]],[11,"from_array_unchecked",E,"Constructs a `PermutationMatrix` from an array, without…",12,[[["into",["vec"]],["vec",["usize"]]],[R[1616]]]],[11,"map_row",E,"Maps the given row index into the resulting row index in…",12,[[["self"],["usize"]],["usize"]]],[11,"parity",E,"Computes the parity of the permutation (even- or oddness).",12,[[],["parity"]]],[11,"as_matrix",E,"The permutation matrix in an equivalent full matrix…",12,[[["self"]],["matrix"]]],[11,"det",E,"Computes the determinant of the permutation matrix.",12,[[],[T]]],[11,"permute_rows_in_place",E,"Permutes the rows of the given matrix in-place.",12,[[["m"]]]],[11,"permute_cols_in_place",E,"Permutes the columns of the given matrix in-place.",12,[[["m"]]]],[11,"permute_vector_in_place",E,"Permutes the elements of the given vector in-place.",12,[[["vector"]]]],[11,"permute_rows_into_buffer",E,"Permutes the rows of the given `source_matrix` and stores…",12,[[["self"],["x"],["y"]]]],[11,"permute_cols_into_buffer",E,"Permutes the columns of the given `source_matrix` and…",12,[[["self"],["x"],["y"]]]],[11,"permute_vector_into_buffer",E,"Permutes the elements of the given `source_vector` and…",12,[[["self"],["vector"],["vector"]]]],[11,"compose_into_buffer",E,"Computes the composition of `self` with the given…",12,[[["self"],[R[1616]],[R[1616]]]]],[8,"BaseMatrix",E,"Trait for immutable matrix structs.",N,N],[10,"rows",E,"Rows in the matrix.",13,[[["self"]],["usize"]]],[10,"cols",E,"Columns in the matrix.",13,[[["self"]],["usize"]]],[10,R[1633],E,"Row stride in the matrix.",13,[[["self"]],["usize"]]],[11,R[589],E,R[1643],13,[[["self"]],["bool"]]],[10,"as_ptr",E,"Top left index of the matrix.",13,[[["self"]]]],[11,"as_slice",E,R[1644],13,[[["self"]],[R[1612]]]],[11,R[1624],E,R[1645],13,[[["self"]],[T]]],[11,"col",E,R[1646],13,[[["self"],["usize"]],["column"]]],[11,R[1647],E,R[1648],13,[[["self"],["usize"]],["column"]]],[11,"row",E,R[1649],13,[[["self"],["usize"]],["row"]]],[11,R[1650],E,R[1651],13,[[["self"],["usize"]],["row"]]],[11,"iter",E,R[1652],13,[[["self"]],["sliceiter"]]],[11,"col_iter",E,R[1653],13,[[["self"]],["cols"]]],[11,"row_iter",E,R[1654],13,[[["self"]],["rows"]]],[11,"diag_iter",E,R[1655],13,[[["self"],[R[1639]]],["diagonal"]]],[11,"sum_rows",E,R[1656],13,[[["self"]],["vector"]]],[11,"sum_cols",E,R[1657],13,[[["self"]],["vector"]]],[11,"norm",E,R[1658],13,[[["self"],["matrixnorm"]],[T]]],[11,"metric",E,R[1659],13,[[["self"],["m"],["b"]],[T]]],[11,"sum",E,R[1660],13,[[["self"]],[T]]],[11,"min",E,R[1661],13,[[["self"],["axes"]],["vector"]]],[11,"max",E,R[1662],13,[[["self"],["axes"]],["vector"]]],[11,R[1632],E,R[1663],13,[[],["matrix"]]],[11,R[1664],E,R[1665],13,[[["self"],["i"]],["matrix"]]],[11,R[1666],E,R[1667],13,[[["self"],["i"]],["matrix"]]],[11,"elemul",E,R[1668],13,[[["self"]],["matrix"]]],[11,"elediv",E,R[1669],13,[[["self"]],["matrix"]]],[11,"select",E,R[1670],13,[[["self"]],["matrix"]]],[11,"hcat",E,R[1671],13,[[["self"],["s"]],["matrix"]]],[11,"vcat",E,R[1672],13,[[["self"],["s"]],["matrix"]]],[11,"diag",E,R[1673],13,[[["self"]],["diagonal"]]],[11,"transpose",E,R[1674],13,[[["self"]],["matrix"]]],[11,"is_diag",E,R[1675],13,[[["self"]],["bool"]]],[11,R[1676],E,R[1677],13,[[["self"],["vector"]],[["error"],[R[3],["vector","error"]],["vector"]]]],[11,R[1678],E,R[1679],13,[[["self"],["vector"]],[["error"],[R[3],["vector","error"]],["vector"]]]],[11,"split_at",E,R[1620],13,[[["self"],["axes"],["usize"]]]],[11,"sub_slice",E,R[1680],13,[[["self"],["usize"]],[R[1612]]]],[8,R[1710],E,"Trait for mutable matrices.",N,N],[10,R[1635],E,R[1634],14,[[["self"]]]],[11,R[1617],E,R[1681],14,[[["self"]],[R[1615]]]],[11,R[1625],E,R[1682],14,[[["self"]],[T]]],[11,"iter_mut",E,R[1683],14,[[["self"]],[R[1684]]]],[11,"col_mut",E,R[1618],14,[[["self"],["usize"]],[R[1685]]]],[11,R[1686],E,R[1618],14,[[["self"],["usize"]],[R[1685]]]],[11,"row_mut",E,R[1619],14,[[["self"],["usize"]],["rowmut"]]],[11,R[1687],E,R[1619],14,[[["self"],["usize"]],["rowmut"]]],[11,"swap_rows",E,R[1688],14,[[["self"],["usize"]]]],[11,"swap_cols",E,R[1689],14,[[["self"],["usize"]]]],[11,R[1690],E,R[1691],14,[[["self"]],["colsmut"]]],[11,R[1692],E,R[1693],14,[[["self"]],["rowsmut"]]],[11,R[1694],E,R[1695],14,[[["self"],[R[1639]]],[R[1696]]]],[11,"set_to",E,R[1697],14,[[["basematrix"]]]],[11,"apply",E,R[1698],14,[[["fn"]],["self"]]],[11,R[1699],E,R[1620],14,[[["self"],["axes"],["usize"]]]],[11,R[1700],E,R[1701],14,[[["self"],["usize"]],[R[1615]]]],[11,"raw_slice",E,R[1621],15,[[["self"]]]],[11,"raw_slice",E,R[1621],16,[[["self"]]]],[11,"raw_slice_mut",E,R[1621],16,[[["self"]]]],[0,"convert",R[1626],"The convert module.",N,N],[11,R[9],R[1610],"Attempts to convert the matrix into a new matrix of…",7,[[],[["matrix"],["error"],[R[3],["matrix","error"]]]]],[0,"error",R[1626],"Error handling for the linalg module.",N,N],[3,"Error",R[1628],"An error related to the linalg module.",N,N],[4,R[55],E,"Types of errors produced in the linalg module.",N,N],[13,"InvalidArg",E,"An argument did not uphold a necessary criteria for the…",17,N],[13,"DecompFailure",E,"A failure to decompose due to some property of the data.",17,N],[13,"AlgebraFailure",E,"A failure due to some algebraic constraints not being met.",17,N],[13,"DivByZero",E,"Tried to divide by zero",17,N],[13,"ScalarConversionFailure",E,"Failure due to inability to convert between scalar types",17,N],[13,"InvalidPermutation",E,"A user-supplied permutation is not a valid permutation.",17,N],[11,"new",E,"Construct a new `Error` of a particular `ErrorKind`.",18,[[[R[30]],["e"]],["error"]]],[11,"kind",E,"Get the kind of this `Error`.",18,[[["self"]],[R[30]]]],[0,"utils",R[1626],"Linear algebra utils module.",N,N],[5,"dot","rulinalg::utils","Compute dot product of two slices.",N,[[],[["add"],["zero"],["copy"],["mul"]]]],[5,"unrolled_sum",E,"Unrolled sum",N,[[],[T]]],[5,"in_place_vec_bin_op",E,"Vectorized binary operation applied to two slices. The…",N,[[["f"]]]],[5,"vec_bin_op",E,"Vectorized binary operation applied to two slices.",N,[[["f"]],["vec"]]],[5,"vec_sum",E,"Compute vector sum of two slices.",N,[[],[["add"],["vec"],["copy"]]]],[5,"vec_sub",E,"Compute vector difference two slices.",N,[[],[["sub"],["vec"],["copy"]]]],[5,"ele_mul",E,"Computes elementwise multiplication.",N,[[],[["vec"],["copy"],["mul"]]]],[5,"ele_div",E,"Computes elementwise division.",N,[[],[["vec"],["div"],["copy"]]]],[5,"argmax",E,"Find argmax of slice.",N,[[]]],[5,"argmin",E,"Find argmin of slice.",N,[[]]],[5,"find",E,"Find index of value in slice.",N,[[[T]],["usize"]]],[0,"vector",R[1626],"The vector module.",N,N],[3,"Vector",R[1629],"The Vector struct.",N,N],[11,"new",E,"Constructor for Vector struct.",19,[[["into",["vec"]],["vec"]],["vector"]]],[11,"from_fn",E,"Constructor for Vector struct that takes a function `f`…",19,[[["usize"],["f"]],["vector"]]],[11,"size",E,"Returns the size of the Vector.",19,[[["self"]],["usize"]]],[11,"data",E,R[1622],19,[[["self"]],["vec"]]],[11,"mut_data",E,R[1623],19,[[["self"]]]],[11,"into_vec",E,"Consumes the Vector and returns the Vec of data.",19,[[],["vec"]]],[11,"iter",E,"Returns an iterator over the Vector's data.",19,[[["self"]],["iter"]]],[11,"iter_mut",E,"Returns an iterator over mutable references to the…",19,[[["self"]],["itermut"]]],[11,R[1624],E,"Returns a pointer to the element at the given index,…",19,[[["self"],["usize"]],[T]]],[11,R[1625],E,"Returns an unsafe mutable pointer to the element at the…",19,[[["self"],["usize"]],[T]]],[11,"apply",E,"Applies a function to each element in the vector.",19,[[["fn"]],["vector"]]],[11,"argmax",E,"Find the argmax of the Vector.",19,[[["self"]]]],[11,"argmin",E,"Find the argmin of the Vector.",19,[[["self"]]]],[11,"select",E,"Select elements from the Vector and form a new Vector from…",19,[[["self"]],["vector"]]],[11,"zeros",E,"Constructs Vector of all zeros.",19,[[["usize"]],["vector"]]],[11,"ones",E,"Constructs Vector of all ones.",19,[[["usize"]],["vector"]]],[11,"dot",E,"Compute dot product with specified Vector.",19,[[["self"],["vector"]],[T]]],[11,"sum",E,"The sum of the vector.",19,[[["self"]],[T]]],[11,"elemul",E,"The elementwise product of two vectors.",19,[[["self"],["vector"]],["vector"]]],[11,"elediv",E,"The elementwise division of two vectors.",19,[[["self"],["vector"]],["vector"]]],[11,"norm",E,"Compute vector norm for vector.",19,[[["self"],["vectornorm"]],[T]]],[11,"metric",E,"Compute metric distance between two vectors.",19,[[["self"],["vectormetric"],["vector"]],[T]]],[11,"mean",E,"The mean of the vector.",19,[[["self"]],[T]]],[11,"variance",E,"The variance of the vector.",19,[[["self"]],[T]]],[0,"ulp",R[1626],"Tools for ULP-based comparison of floating point numbers.",N,N],[4,R[1711],R[1630],"Represents the result of an ULP-based comparison between…",N,N],[13,"ExactMatch",E,"Signifies an exact match between two floating point numbers.",20,N],[13,"Difference",E,"The difference in ULP between two floating point numbers.",20,N],[13,"IncompatibleSigns",E,"The two floating point numbers have different signs, and…",20,N],[13,"Nan",E,"One or both of the two floating point numbers is a NaN, in…",20,N],[8,"Ulp",E,"Floating point types for which two instances can be…",N,N],[10,"ulp_diff",E,"Returns the difference between two floating point numbers,…",21,[[["self"]],[R[1640]]]],[0,"norm",R[1626],"The norm module",N,N],[3,"Euclidean",R[1631],"The Euclidean norm",N,N],[4,"Lp",E,"The Lp norm",N,N],[13,"Infinity",E,"The L-infinity norm (supremum)",22,N],[13,"Integer",E,"The Lp norm where p is an integer",22,N],[13,"Float",E,"The Lp norm where p is a float",22,N],[8,"VectorNorm",E,"Trait for vector norms",N,N],[10,"norm",E,"Computes the vector norm.",23,[[["self"],["vector"]],[T]]],[8,R[1712],E,"Trait for vector metrics.",N,N],[10,"metric",E,"Computes the metric distance between two vectors.",24,[[["self"],["vector"]],[T]]],[8,"MatrixNorm",E,"Trait for matrix norms.",N,N],[10,"norm",E,"Computes the matrix norm.",25,[[["self"],["m"]],[T]]],[8,R[1713],E,"Trait for matrix metrics.",N,N],[10,"metric",E,"Computes the metric distance between two matrices.",26,[[["self"],["m1"],["m2"]],[T]]],[14,"vector",R[1626],"The `vector!` macro enables easy construction of small…",N,N],[14,"matrix",E,"The `matrix!` macro enables easy construction of small…",N,N],[14,"assert_matrix_eq",E,"Compare matrices for exact or approximate equality.",N,N],[14,"assert_vector_eq",E,"Compare vectors for exact or approximate equality.",N,N],[11,"from",R[1627],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[42],E,E,27,[[["self"],[T]]]],[11,R[8],E,E,27,[[[U]],[R[3]]]],[11,R[9],E,E,27,[[],[R[3]]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[42],E,E,28,[[["self"],[T]]]],[11,R[8],E,E,28,[[[U]],[R[3]]]],[11,R[9],E,E,28,[[],[R[3]]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,"from",R[1610],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[42],E,E,12,[[["self"],[T]]]],[11,R[8],E,E,12,[[[U]],[R[3]]]],[11,R[9],E,E,12,[[],[R[3]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[98],E,E,7,[[["self"]],["string"]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[42],E,E,7,[[["self"],[T]]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[23],E,E,10,[[],["i"]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[42],E,E,10,[[["self"],[T]]]],[11,R[8],E,E,10,[[[U]],[R[3]]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[23],E,E,11,[[],["i"]]],[11,R[8],E,E,11,[[[U]],[R[3]]]],[11,R[9],E,E,11,[[],[R[3]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[42],E,E,15,[[["self"],[T]]]],[11,R[8],E,E,15,[[[U]],[R[3]]]],[11,R[9],E,E,15,[[],[R[3]]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[8],E,E,16,[[[U]],[R[3]]]],[11,R[9],E,E,16,[[],[R[3]]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[23],E,E,29,[[],["i"]]],[11,R[8],E,E,29,[[[U]],[R[3]]]],[11,R[9],E,E,29,[[],[R[3]]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[29]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[23],E,E,30,[[],["i"]]],[11,R[8],E,E,30,[[[U]],[R[3]]]],[11,R[9],E,E,30,[[],[R[3]]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[41],E,E,31,[[["self"]],[T]]],[11,R[42],E,E,31,[[["self"],[T]]]],[11,R[8],E,E,31,[[[U]],[R[3]]]],[11,R[9],E,E,31,[[],[R[3]]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[29]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[8],E,E,32,[[[U]],[R[3]]]],[11,R[9],E,E,32,[[],[R[3]]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[29]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[23],E,E,33,[[],["i"]]],[11,R[8],E,E,33,[[[U]],[R[3]]]],[11,R[9],E,E,33,[[],[R[3]]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[29]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[23],E,E,34,[[],["i"]]],[11,R[8],E,E,34,[[[U]],[R[3]]]],[11,R[9],E,E,34,[[],[R[3]]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[29]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[23],E,E,35,[[],["i"]]],[11,R[8],E,E,35,[[[U]],[R[3]]]],[11,R[9],E,E,35,[[],[R[3]]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[29]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[23],E,E,36,[[],["i"]]],[11,R[8],E,E,36,[[[U]],[R[3]]]],[11,R[9],E,E,36,[[],[R[3]]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[29]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[23],E,E,37,[[],["i"]]],[11,R[8],E,E,37,[[[U]],[R[3]]]],[11,R[9],E,E,37,[[],[R[3]]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[29]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[23],E,E,38,[[],["i"]]],[11,R[8],E,E,38,[[[U]],[R[3]]]],[11,R[9],E,E,38,[[],[R[3]]]],[11,R[28],E,E,38,[[["self"]],[T]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"],[T]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",R[1611],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"],[T]]]],[11,R[8],E,E,8,[[[U]],[R[3]]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[42],E,E,6,[[["self"],[T]]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"from",R[1628],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[98],E,E,18,[[["self"]],["string"]]],[11,R[8],E,E,18,[[[U]],[R[3]]]],[11,R[9],E,E,18,[[],[R[3]]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[8],E,E,17,[[[U]],[R[3]]]],[11,R[9],E,E,17,[[],[R[3]]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,"from",R[1629],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[98],E,E,19,[[["self"]],["string"]]],[11,R[23],E,E,19,[[],["i"]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[42],E,E,19,[[["self"],[T]]]],[11,R[8],E,E,19,[[[U]],[R[3]]]],[11,R[9],E,E,19,[[],[R[3]]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"from",R[1630],E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[42],E,E,20,[[["self"],[T]]]],[11,R[8],E,E,20,[[[U]],[R[3]]]],[11,R[9],E,E,20,[[],[R[3]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"metric",R[1631],E,39,[[["self"],["vector"]],[T]]],[11,"metric",E,E,39,[[["self"],["m1"],["m2"]],[T]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[8],E,E,39,[[[U]],[R[3]]]],[11,R[9],E,E,39,[[],[R[3]]]],[11,R[28],E,E,39,[[["self"]],[T]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[29]]]],[11,"metric",E,E,22,[[["self"],["vector"]],[T]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[8],E,E,22,[[[U]],[R[3]]]],[11,R[9],E,E,22,[[],[R[3]]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"unpack",R[1611],E,8,[[],["lup"]]],[11,"rows",R[1610],E,7,[[["self"]],["usize"]]],[11,"cols",E,E,7,[[["self"]],["usize"]]],[11,R[1633],E,E,7,[[["self"]],["usize"]]],[11,R[589],E,E,7,[[["self"]],["bool"]]],[11,"as_ptr",E,E,7,[[["self"]]]],[11,R[1632],E,E,7,[[],["matrix"]]],[11,"sum",E,E,7,[[["self"]],[T]]],[11,"elemul",E,E,7,[[["self"]],["matrix"]]],[11,"elediv",E,E,7,[[["self"]],["matrix"]]],[11,"vcat",E,E,7,[[["self"],["s"]],["matrix"]]],[11,"rows",E,E,10,[[["self"]],["usize"]]],[11,"cols",E,E,10,[[["self"]],["usize"]]],[11,R[1633],E,E,10,[[["self"]],["usize"]]],[11,"as_ptr",E,E,10,[[["self"]]]],[11,"rows",E,E,11,[[["self"]],["usize"]]],[11,"cols",E,E,11,[[["self"]],["usize"]]],[11,R[1633],E,E,11,[[["self"]],["usize"]]],[11,"as_ptr",E,E,11,[[["self"]]]],[11,"rows",E,E,15,[[["self"]],["usize"]]],[11,"cols",E,E,15,[[["self"]],["usize"]]],[11,R[1633],E,E,15,[[["self"]],["usize"]]],[11,"as_ptr",E,E,15,[[["self"]]]],[11,"rows",E,E,16,[[["self"]],["usize"]]],[11,"cols",E,E,16,[[["self"]],["usize"]]],[11,R[1633],E,E,16,[[["self"]],["usize"]]],[11,"as_ptr",E,E,16,[[["self"]]]],[11,"rows",E,E,31,[[["self"]],["usize"]]],[11,"cols",E,E,31,[[["self"]],["usize"]]],[11,R[1633],E,E,31,[[["self"]],["usize"]]],[11,"as_ptr",E,E,31,[[["self"]]]],[11,"rows",E,E,32,[[["self"]],["usize"]]],[11,"cols",E,E,32,[[["self"]],["usize"]]],[11,R[1633],E,E,32,[[["self"]],["usize"]]],[11,"as_ptr",E,E,32,[[["self"]]]],[11,R[1635],E,R[1634],7,[[["self"]]]],[11,R[1635],E,R[1634],11,[[["self"]]]],[11,R[1635],E,R[1634],16,[[["self"]]]],[11,R[1635],E,R[1634],32,[[["self"]]]],[11,"norm",R[1631],E,39,[[["self"],["vector"]],[T]]],[11,"norm",E,E,22,[[["self"],["vector"]],[T]]],[11,"norm",E,E,39,[[["self"],["m"]],[T]]],[11,"norm",E,E,22,[[["self"],["m"]],[T]]],[11,"from",R[1629],E,19,[[["vec"]],["self"]]],[11,"from",E,E,19,[[],["self"]]],[11,"from",R[1610],E,7,[[["vector"]],["self"]]],[11,"from",E,E,7,[[[R[1612]]],["self"]]],[11,"from",E,E,7,[[[R[1615]]],["self"]]],[11,"from",E,E,5,[[["i8"]],["self"]]],[11,"from",E,E,5,[[["i16"]],["self"]]],[11,"from",E,E,5,[[["i32"]],["self"]]],[11,"from",E,E,5,[[["i64"]],["self"]]],[11,"from",E,E,5,[[["isize"]],["self"]]],[11,"from",R[1629],E,19,[[["row"]],["self"]]],[11,"from",E,E,19,[[["rowmut"]],["self"]]],[11,"from",E,E,19,[[["column"]],["self"]]],[11,"from",E,E,19,[[[R[1685]]],["self"]]],[11,"next",R[1610],E,37,[[["self"]],[[T],[R[25]]]]],[11,"next",E,E,38,[[["self"]],[[R[25]],[T]]]],[11,"next",E,E,35,[[["self"]],[R[25]]]],[11,"last",E,E,35,[[],[R[25]]]],[11,"nth",E,E,35,[[["self"],["usize"]],[R[25]]]],[11,"count",E,E,35,[[],["usize"]]],[11,R[174],E,E,35,[[["self"]]]],[11,"next",E,E,36,[[["self"]],[R[25]]]],[11,"last",E,E,36,[[],[R[25]]]],[11,"nth",E,E,36,[[["self"],["usize"]],[R[25]]]],[11,"count",E,E,36,[[],["usize"]]],[11,R[174],E,E,36,[[["self"]]]],[11,"next",E,E,33,[[["self"]],[R[25]]]],[11,"last",E,E,33,[[],[R[25]]]],[11,"nth",E,E,33,[[["self"],["usize"]],[R[25]]]],[11,"count",E,E,33,[[],["usize"]]],[11,R[174],E,E,33,[[["self"]]]],[11,"next",E,E,34,[[["self"]],[R[25]]]],[11,"last",E,E,34,[[],[R[25]]]],[11,"nth",E,E,34,[[["self"],["usize"]],[R[25]]]],[11,"count",E,E,34,[[],["usize"]]],[11,R[174],E,E,34,[[["self"]]]],[11,"next",E,E,29,[[["self"]],[R[25]]]],[11,"last",E,E,29,[[],[R[25]]]],[11,"nth",E,E,29,[[["self"],["usize"]],[R[25]]]],[11,"count",E,E,29,[[],["usize"]]],[11,R[174],E,E,29,[[["self"]]]],[11,"next",E,E,30,[[["self"]],[R[25]]]],[11,"last",E,E,30,[[],[R[25]]]],[11,"nth",E,E,30,[[["self"],["usize"]],[R[25]]]],[11,"count",E,E,30,[[],["usize"]]],[11,R[174],E,E,30,[[["self"]]]],[11,"into",R[1629],E,19,[[],["vec"]]],[11,"eq",R[1627],E,0,[[["self"],[R[1636]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1636]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[1641]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[1637]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1637]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[1638]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[1638]]],["bool"]]],[11,"eq",R[1610],E,12,[[["self"],[R[1616]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[1616]]],["bool"]]],[11,"eq",E,E,3,[[["self"],["parity"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["matrix"]],["bool"]]],[11,"ne",E,E,7,[[["self"],["matrix"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1639]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[1639]]],["bool"]]],[11,"eq",R[1628],E,17,[[["self"],[R[30]]],["bool"]]],[11,"eq",R[1629],E,19,[[["self"],["vector"]],["bool"]]],[11,"ne",E,E,19,[[["self"],["vector"]],["bool"]]],[11,"eq",R[1630],E,20,[[["self"],[R[1640]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[1640]]],["bool"]]],[11,R[23],R[1610],E,10,[[]]],[11,R[23],E,E,11,[[]]],[11,R[23],R[1629],E,19,[[]]],[11,"clone",R[1627],E,0,[[["self"]],[R[1636]]]],[11,"clone",E,E,27,[[["self"]],[R[1641]]]],[11,"clone",E,E,1,[[["self"]],[R[1637]]]],[11,"clone",E,E,28,[[["self"]],[R[1638]]]],[11,"clone",R[1611],E,6,[[["self"]],["lup"]]],[11,"clone",E,E,8,[[["self"]],["partialpivlu"]]],[11,"clone",R[1610],E,12,[[["self"]],[R[1616]]]],[11,"clone",E,E,3,[[["self"]],["parity"]]],[11,"clone",E,E,4,[[["self"]],["axes"]]],[11,"clone",E,E,7,[[["self"]],["matrix"]]],[11,"clone",E,E,10,[[["self"]],[R[1612]]]],[11,"clone",E,E,15,[[["self"]],["row"]]],[11,"clone",E,E,31,[[["self"]],["column"]]],[11,"clone",R[1629],"Clones the Vector.",19,[[["self"]],["vector"]]],[11,"clone",R[1630],E,20,[[["self"]],[R[1640]]]],[11,"deref",R[1610],E,15,[[["self"]],[R[1612]]]],[11,"deref",E,E,16,[[["self"]],[R[1615]]]],[11,"deref",E,E,31,[[["self"]],[R[1612]]]],[11,"deref",E,E,32,[[["self"]],[R[1615]]]],[11,"fmt",E,"Formats the Matrix for display.",7,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[1628],E,18,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1629],"Displays the Vector.",19,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1627],E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1611],E,6,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1610],E,12,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1628],E,18,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1629],E,19,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1630],E,20,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[1631],E,39,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[R[3]]]],[11,"rem",R[1629],E,19,[[[T]],["vector"]]],[11,"rem",E,E,19,[[[T]],["vector"]]],[11,"rem",E,E,19,[[["vector"]],["vector"]]],[11,"rem",E,E,19,[[["vector"]],["vector"]]],[11,"sub",R[1610],E,10,[[[T]],["matrix"]]],[11,"sub",E,E,10,[[[T]],["matrix"]]],[11,"sub",E,E,11,[[[T]],["matrix"]]],[11,"sub",E,E,11,[[[T]],["matrix"]]],[11,"sub",E,E,7,[[[T]],["matrix"]]],[11,"sub",E,E,7,[[[T]],["matrix"]]],[11,"sub",E,E,10,[[[R[1612]]],["matrix"]]],[11,"sub",E,E,10,[[[R[1612]]],["matrix"]]],[11,"sub",E,E,11,[[[R[1612]]],["matrix"]]],[11,"sub",E,E,11,[[[R[1612]]],["matrix"]]],[11,"sub",E,E,10,[[[R[1615]]],["matrix"]]],[11,"sub",E,E,10,[[[R[1615]]],["matrix"]]],[11,"sub",E,E,11,[[[R[1615]]],["matrix"]]],[11,"sub",E,E,11,[[[R[1615]]],["matrix"]]],[11,"sub",E,E,10,[[["matrix"]],["matrix"]]],[11,"sub",E,E,10,[[["matrix"]],["matrix"]]],[11,"sub",E,E,7,[[[R[1612]]],["matrix"]]],[11,"sub",E,E,7,[[[R[1612]]],["matrix"]]],[11,"sub",E,E,11,[[["matrix"]],["matrix"]]],[11,"sub",E,E,11,[[["matrix"]],["matrix"]]],[11,"sub",E,E,7,[[[R[1615]]],["matrix"]]],[11,"sub",E,E,7,[[[R[1615]]],["matrix"]]],[11,"sub",E,E,7,[[["matrix"]],["matrix"]]],[11,"sub",E,E,7,[[["matrix"]],["matrix"]]],[11,"sub",R[1629],E,19,[[[T]],["vector"]]],[11,"sub",E,E,19,[[[T]],["vector"]]],[11,"sub",E,E,19,[[["vector"]],["vector"]]],[11,"sub",E,E,19,[[["vector"]],["vector"]]],[11,"add",R[1610],E,10,[[[T]],["matrix"]]],[11,"add",E,E,10,[[[T]],["matrix"]]],[11,"add",E,E,11,[[[T]],["matrix"]]],[11,"add",E,E,11,[[[T]],["matrix"]]],[11,"add",E,E,7,[[[T]],["matrix"]]],[11,"add",E,E,7,[[[T]],["matrix"]]],[11,"add",E,E,10,[[[R[1612]]],["matrix"]]],[11,"add",E,E,10,[[[R[1612]]],["matrix"]]],[11,"add",E,E,11,[[[R[1612]]],["matrix"]]],[11,"add",E,E,11,[[[R[1612]]],["matrix"]]],[11,"add",E,E,10,[[[R[1615]]],["matrix"]]],[11,"add",E,E,10,[[[R[1615]]],["matrix"]]],[11,"add",E,E,11,[[[R[1615]]],["matrix"]]],[11,"add",E,E,11,[[[R[1615]]],["matrix"]]],[11,"add",E,E,10,[[["matrix"]],["matrix"]]],[11,"add",E,E,10,[[["matrix"]],["matrix"]]],[11,"add",E,E,7,[[[R[1612]]],["matrix"]]],[11,"add",E,E,7,[[[R[1612]]],["matrix"]]],[11,"add",E,E,11,[[["matrix"]],["matrix"]]],[11,"add",E,E,11,[[["matrix"]],["matrix"]]],[11,"add",E,E,7,[[[R[1615]]],["matrix"]]],[11,"add",E,E,7,[[[R[1615]]],["matrix"]]],[11,"add",E,E,7,[[["matrix"]],["matrix"]]],[11,"add",E,E,7,[[["matrix"]],["matrix"]]],[11,"add",R[1629],E,19,[[[T]],["vector"]]],[11,"add",E,E,19,[[[T]],["vector"]]],[11,"add",E,E,19,[[["vector"]],["vector"]]],[11,"add",E,E,19,[[["vector"]],["vector"]]],[11,"mul",R[1610],E,10,[[[T]],["matrix"]]],[11,"mul",E,E,10,[[[T]],["matrix"]]],[11,"mul",E,E,11,[[[T]],["matrix"]]],[11,"mul",E,E,11,[[[T]],["matrix"]]],[11,"mul",E,E,7,[[[T]],["matrix"]]],[11,"mul",E,E,7,[[[T]],["matrix"]]],[11,"mul",E,E,7,[[["vector"]],["vector"]]],[11,"mul",E,E,7,[[["vector"]],["vector"]]],[11,"mul",E,E,7,[[["matrix"]],["matrix"]]],[11,"mul",E,E,7,[[["matrix"]],["matrix"]]],[11,"mul",E,E,7,[[[R[1612]]],["matrix"]]],[11,"mul",E,E,7,[[[R[1612]]],["matrix"]]],[11,"mul",E,E,10,[[["matrix"]],["matrix"]]],[11,"mul",E,E,10,[[["matrix"]],["matrix"]]],[11,"mul",E,E,7,[[[R[1615]]],["matrix"]]],[11,"mul",E,E,7,[[[R[1615]]],["matrix"]]],[11,"mul",E,E,11,[[["matrix"]],["matrix"]]],[11,"mul",E,E,11,[[["matrix"]],["matrix"]]],[11,"mul",E,E,10,[[[R[1612]]],["matrix"]]],[11,"mul",E,E,10,[[[R[1612]]],["matrix"]]],[11,"mul",E,E,10,[[[R[1615]]],["matrix"]]],[11,"mul",E,E,10,[[[R[1615]]],["matrix"]]],[11,"mul",E,E,11,[[[R[1612]]],["matrix"]]],[11,"mul",E,E,11,[[[R[1612]]],["matrix"]]],[11,"mul",E,E,11,[[[R[1615]]],["matrix"]]],[11,"mul",E,E,11,[[[R[1615]]],["matrix"]]],[11,"mul",E,E,12,[[["vector"]],["vector"]]],[11,"mul",E,E,12,[[["vector"]],["vector"]]],[11,"mul",E,E,12,[[["matrix"]],["matrix"]]],[11,"mul",E,E,12,[[["matrix"]],["matrix"]]],[11,"mul",E,E,12,[[[R[1612]]],["matrix"]]],[11,"mul",E,E,12,[[[R[1615]]],["matrix"]]],[11,"mul",E,E,12,[[[R[1612]]],["matrix"]]],[11,"mul",E,E,12,[[[R[1615]]],["matrix"]]],[11,"mul",E,E,7,[[[R[1616]]],["matrix"]]],[11,"mul",E,E,7,[[[R[1616]]],["matrix"]]],[11,"mul",E,E,10,[[[R[1616]]],["matrix"]]],[11,"mul",E,E,10,[[[R[1616]]],["matrix"]]],[11,"mul",E,E,11,[[[R[1616]]],["matrix"]]],[11,"mul",E,E,11,[[[R[1616]]],["matrix"]]],[11,"mul",E,E,12,[[[R[1616]]],[R[1616]]]],[11,"mul",E,E,12,[[[R[1616]]],[R[1616]]]],[11,"mul",R[1629],E,19,[[[T]],["vector"]]],[11,"mul",E,E,19,[[[T]],["vector"]]],[11,"div",R[1610],E,10,[[[T]],["matrix"]]],[11,"div",E,E,10,[[[T]],["matrix"]]],[11,"div",E,E,11,[[[T]],["matrix"]]],[11,"div",E,E,11,[[[T]],["matrix"]]],[11,"div",E,E,7,[[[T]],["matrix"]]],[11,"div",E,E,7,[[[T]],["matrix"]]],[11,"div",R[1629],E,19,[[[T]],["vector"]]],[11,"div",E,E,19,[[[T]],["vector"]]],[11,"neg",R[1610],E,10,[[],["matrix"]]],[11,"neg",E,E,11,[[],["matrix"]]],[11,"neg",E,E,7,[[],["matrix"]]],[11,"neg",R[1629],E,19,[[],["vector"]]],[11,R[758],R[1610],E,7,[[["self"],[T]]]],[11,R[758],E,E,7,[[["self"],[T]]]],[11,R[758],E,E,11,[[["self"],[T]]]],[11,R[758],E,E,11,[[["self"],[T]]]],[11,R[758],E,E,7,[[["self"],["matrix"]]]],[11,R[758],E,E,7,[[["self"],["matrix"]]]],[11,R[758],E,E,11,[[["self"],["matrix"]]]],[11,R[758],E,E,11,[[["self"],["matrix"]]]],[11,R[758],E,E,11,[[["self"],[R[1612]]]]],[11,R[758],E,E,11,[[["self"],[R[1612]]]]],[11,R[758],E,E,11,[[["self"],[R[1615]]]]],[11,R[758],E,E,11,[[["self"],[R[1615]]]]],[11,R[758],E,E,7,[[["self"],[R[1612]]]]],[11,R[758],E,E,7,[[["self"],[R[1612]]]]],[11,R[758],E,E,7,[[["self"],[R[1615]]]]],[11,R[758],E,E,7,[[["self"],[R[1615]]]]],[11,R[758],R[1629],E,19,[[["self"],[T]]]],[11,R[758],E,E,19,[[["self"],[T]]]],[11,R[758],E,E,19,[[["self"],["vector"]]]],[11,R[758],E,E,19,[[["self"],["vector"]]]],[11,R[759],R[1610],E,7,[[["self"],[T]]]],[11,R[759],E,E,7,[[["self"],[T]]]],[11,R[759],E,E,11,[[["self"],[T]]]],[11,R[759],E,E,11,[[["self"],[T]]]],[11,R[759],E,E,7,[[["self"],["matrix"]]]],[11,R[759],E,E,7,[[["self"],["matrix"]]]],[11,R[759],E,E,11,[[["self"],["matrix"]]]],[11,R[759],E,E,11,[[["self"],["matrix"]]]],[11,R[759],E,E,11,[[["self"],[R[1612]]]]],[11,R[759],E,E,11,[[["self"],[R[1612]]]]],[11,R[759],E,E,11,[[["self"],[R[1615]]]]],[11,R[759],E,E,11,[[["self"],[R[1615]]]]],[11,R[759],E,E,7,[[["self"],[R[1612]]]]],[11,R[759],E,E,7,[[["self"],[R[1612]]]]],[11,R[759],E,E,7,[[["self"],[R[1615]]]]],[11,R[759],E,E,7,[[["self"],[R[1615]]]]],[11,R[759],R[1629],E,19,[[["self"],[T]]]],[11,R[759],E,E,19,[[["self"],[T]]]],[11,R[759],E,E,19,[[["self"],["vector"]]]],[11,R[759],E,E,19,[[["self"],["vector"]]]],[11,R[760],R[1610],E,7,[[["self"],[T]]]],[11,R[760],E,E,7,[[["self"],[T]]]],[11,R[760],E,E,11,[[["self"],[T]]]],[11,R[760],E,E,11,[[["self"],[T]]]],[11,R[760],R[1629],E,19,[[["self"],[T]]]],[11,R[760],E,E,19,[[["self"],[T]]]],[11,R[761],R[1610],E,7,[[["self"],[T]]]],[11,R[761],E,E,7,[[["self"],[T]]]],[11,R[761],E,E,11,[[["self"],[T]]]],[11,R[761],E,E,11,[[["self"],[T]]]],[11,R[761],R[1629],E,19,[[["self"],[T]]]],[11,R[761],E,E,19,[[["self"],[T]]]],[11,R[762],E,E,19,[[["self"],[T]]]],[11,R[762],E,E,19,[[["self"],[T]]]],[11,R[762],E,E,19,[[["self"],["vector"]]]],[11,R[762],E,E,19,[[["self"],["vector"]]]],[11,"not",E,E,19,[[],["vector"]]],[11,"bitand",E,E,19,[[[T]],["vector"]]],[11,"bitand",E,E,19,[[[T]],["vector"]]],[11,"bitand",E,E,19,[[["vector"]],["vector"]]],[11,"bitand",E,E,19,[[["vector"]],["vector"]]],[11,"bitor",E,E,19,[[[T]],["vector"]]],[11,"bitor",E,E,19,[[[T]],["vector"]]],[11,"bitor",E,E,19,[[["vector"]],["vector"]]],[11,"bitor",E,E,19,[[["vector"]],["vector"]]],[11,"bitxor",E,E,19,[[[T]],["vector"]]],[11,"bitxor",E,E,19,[[[T]],["vector"]]],[11,"bitxor",E,E,19,[[["vector"]],["vector"]]],[11,"bitxor",E,E,19,[[["vector"]],["vector"]]],[11,R[1201],E,E,19,[[["self"],[T]]]],[11,R[1201],E,E,19,[[["self"],[T]]]],[11,R[1201],E,E,19,[[["self"],["vector"]]]],[11,R[1201],E,E,19,[[["self"],["vector"]]]],[11,R[1202],E,E,19,[[["self"],[T]]]],[11,R[1202],E,E,19,[[["self"],[T]]]],[11,R[1202],E,E,19,[[["self"],["vector"]]]],[11,R[1202],E,E,19,[[["self"],["vector"]]]],[11,R[1203],E,E,19,[[["self"],[T]]]],[11,R[1203],E,E,19,[[["self"],[T]]]],[11,R[1203],E,E,19,[[["self"],["vector"]]]],[11,R[1203],E,E,19,[[["self"],["vector"]]]],[11,R[14],R[1610],E,16,[[["self"]],[R[1615]]]],[11,R[14],E,E,32,[[["self"]],[R[1615]]]],[11,"index",E,E,7,[[["self"]],[T]]],[11,"index",E,E,10,[[["self"]],[T]]],[11,"index",E,E,11,[[["self"]],[T]]],[11,"index",E,E,15,[[["self"],["usize"]],[T]]],[11,"index",E,E,16,[[["self"],["usize"]],[T]]],[11,"index",E,E,31,[[["self"],["usize"]],[T]]],[11,"index",E,E,32,[[["self"],["usize"]],[T]]],[11,"index",R[1629],E,19,[[["self"],["usize"]],[T]]],[11,R[1642],R[1610],E,11,[[["self"]],[T]]],[11,R[1642],E,E,7,[[["self"]],[T]]],[11,R[1642],E,E,16,[[["self"],["usize"]],[T]]],[11,R[1642],E,E,32,[[["self"],["usize"]],[T]]],[11,R[1642],R[1629],E,19,[[["self"],["usize"]],[T]]],[11,"hash",R[1610],E,7,[[["self"],["__h"]]]],[11,"hash",R[1629],E,19,[[["self"],["__h"]]]],[11,R[339],R[1610],E,7,[[[R[319]]],["self"]]],[11,R[339],E,E,7,[[[R[319]]],["self"]]],[11,R[339],E,E,7,[[[R[319]]],["self"]]],[11,R[339],R[1629],E,19,[[["i"]],["self"]]],[11,R[53],R[1628],E,18,[[["self"]],["str"]]],[11,R[589],R[1610],R[1643],13,[[["self"]],["bool"]]],[11,"as_slice",E,R[1644],13,[[["self"]],[R[1612]]]],[11,R[1624],E,R[1645],13,[[["self"]],[T]]],[11,"col",E,R[1646],13,[[["self"],["usize"]],["column"]]],[11,R[1647],E,R[1648],13,[[["self"],["usize"]],["column"]]],[11,"row",E,R[1649],13,[[["self"],["usize"]],["row"]]],[11,R[1650],E,R[1651],13,[[["self"],["usize"]],["row"]]],[11,"iter",E,R[1652],13,[[["self"]],["sliceiter"]]],[11,"col_iter",E,R[1653],13,[[["self"]],["cols"]]],[11,"row_iter",E,R[1654],13,[[["self"]],["rows"]]],[11,"diag_iter",E,R[1655],13,[[["self"],[R[1639]]],["diagonal"]]],[11,"sum_rows",E,R[1656],13,[[["self"]],["vector"]]],[11,"sum_cols",E,R[1657],13,[[["self"]],["vector"]]],[11,"norm",E,R[1658],13,[[["self"],["matrixnorm"]],[T]]],[11,"metric",E,R[1659],13,[[["self"],["m"],["b"]],[T]]],[11,"sum",E,R[1660],13,[[["self"]],[T]]],[11,"min",E,R[1661],13,[[["self"],["axes"]],["vector"]]],[11,"max",E,R[1662],13,[[["self"],["axes"]],["vector"]]],[11,R[1632],E,R[1663],13,[[],["matrix"]]],[11,R[1664],E,R[1665],13,[[["self"],["i"]],["matrix"]]],[11,R[1666],E,R[1667],13,[[["self"],["i"]],["matrix"]]],[11,"elemul",E,R[1668],13,[[["self"]],["matrix"]]],[11,"elediv",E,R[1669],13,[[["self"]],["matrix"]]],[11,"select",E,R[1670],13,[[["self"]],["matrix"]]],[11,"hcat",E,R[1671],13,[[["self"],["s"]],["matrix"]]],[11,"vcat",E,R[1672],13,[[["self"],["s"]],["matrix"]]],[11,"diag",E,R[1673],13,[[["self"]],["diagonal"]]],[11,"transpose",E,R[1674],13,[[["self"]],["matrix"]]],[11,"is_diag",E,R[1675],13,[[["self"]],["bool"]]],[11,R[1676],E,R[1677],13,[[["self"],["vector"]],[["error"],[R[3],["vector","error"]],["vector"]]]],[11,R[1678],E,R[1679],13,[[["self"],["vector"]],[["error"],[R[3],["vector","error"]],["vector"]]]],[11,"split_at",E,R[1620],13,[[["self"],["axes"],["usize"]]]],[11,"sub_slice",E,R[1680],13,[[["self"],["usize"]],[R[1612]]]],[11,R[1617],E,R[1681],14,[[["self"]],[R[1615]]]],[11,R[1625],E,R[1682],14,[[["self"]],[T]]],[11,"iter_mut",E,R[1683],14,[[["self"]],[R[1684]]]],[11,"col_mut",E,R[1618],14,[[["self"],["usize"]],[R[1685]]]],[11,R[1686],E,R[1618],14,[[["self"],["usize"]],[R[1685]]]],[11,"row_mut",E,R[1619],14,[[["self"],["usize"]],["rowmut"]]],[11,R[1687],E,R[1619],14,[[["self"],["usize"]],["rowmut"]]],[11,"swap_rows",E,R[1688],14,[[["self"],["usize"]]]],[11,"swap_cols",E,R[1689],14,[[["self"],["usize"]]]],[11,R[1690],E,R[1691],14,[[["self"]],["colsmut"]]],[11,R[1692],E,R[1693],14,[[["self"]],["rowsmut"]]],[11,R[1694],E,R[1695],14,[[["self"],[R[1639]]],[R[1696]]]],[11,"set_to",E,R[1697],14,[[["basematrix"]]]],[11,"apply",E,R[1698],14,[[["fn"]],["self"]]],[11,R[1699],E,R[1620],14,[[["self"],["axes"],["usize"]]]],[11,R[1700],E,R[1701],14,[[["self"],["usize"]],[R[1615]]]]],"p":[[3,R[1702]],[3,R[1703]],[8,R[1704]],[4,"Parity"],[4,"Axes"],[4,"DiagOffset"],[3,"LUP"],[3,"Matrix"],[3,R[1705]],[8,R[1706]],[3,R[1707]],[3,R[1708]],[3,R[1709]],[8,"BaseMatrix"],[8,R[1710]],[3,"Row"],[3,"RowMut"],[4,R[55]],[3,"Error"],[3,"Vector"],[4,R[1711]],[8,"Ulp"],[4,"Lp"],[8,"VectorNorm"],[8,R[1712]],[8,"MatrixNorm"],[8,R[1713]],[3,R[1714]],[3,R[1715]],[3,"Rows"],[3,"RowsMut"],[3,"Column"],[3,"ColumnMut"],[3,"Cols"],[3,"ColsMut"],[3,"Diagonal"],[3,R[1716]],[3,"SliceIter"],[3,R[1717]],[3,"Euclidean"]]};
searchIndex["rusttype"]={"doc":"RustType is a pure Rust alternative to libraries like…","i":[[3,"Curve","rusttype","A quadratic Bezier curve, starting at `p[0]`, ending at…",N,N],[12,"p",E,E,0,N],[3,"Line",E,"A straight line between two points, `p[0]` and `p[1]`",N,N],[12,"p",E,E,1,N],[3,"Point",E,"A point in 2-dimensional space, with each dimension of…",N,N],[12,"x",E,E,2,N],[12,"y",E,E,2,N],[3,"Rect",E,"A rectangle, with top-left corner at `min`, and…",N,N],[12,"min",E,E,3,N],[12,"max",E,E,3,N],[3,"Vector",E,"A vector in 2-dimensional space, with each dimension of…",N,N],[12,"x",E,E,4,N],[12,"y",E,E,4,N],[3,R[1230],E,"A collection of fonts read straight from a font file's…",N,N],[3,"Font",E,"A single font. This may or may not own the font data.",N,N],[3,"Codepoint",E,"Represents a Unicode code point.",N,N],[12,"0",E,E,5,N],[3,"GlyphId",E,"Represents a glyph identifier for a particular font. This…",N,N],[12,"0",E,E,6,N],[3,"Glyph",E,"A single glyph of a font. this may either be a thin…",N,N],[3,R[1227],E,E,N,N],[12,"id",E,E,7,N],[12,"extents",E,E,7,N],[12,"scale_for_1_pixel",E,E,7,N],[12,"unit_h_metrics",E,E,7,N],[12,"shape",E,E,7,N],[3,"HMetrics",E,"The \"horizontal metrics\" of a glyph. This is useful for…",N,N],[12,R[1234],E,"The horizontal offset that the origin of the next glyph…",8,N],[12,R[1235],E,"The horizontal offset between the origin of this glyph and…",8,N],[3,"VMetrics",E,"The \"vertical metrics\" of a font at a particular scale.…",N,N],[12,"ascent",E,"The highest point that any glyph in the font extends to…",9,N],[12,"descent",E,"The lowest point that any glyph in the font extends to…",9,N],[12,"line_gap",E,"The gap to leave between the descent of one line and the…",9,N],[3,R[1231],E,"A glyph augmented with scaling information. You can query…",N,N],[3,R[1232],E,"A glyph augmented with positioning and scaling…",N,N],[3,"Scale",E,"Defines the size of a rendered face of a font, in pixels,…",N,N],[12,"x",E,"Horizontal scale, in pixels.",10,N],[12,"y",E,"Vertical scale, in pixels.",10,N],[3,R[1233],E,E,N,N],[3,"GlyphIter",E,E,N,N],[3,"LayoutIter",E,E,N,N],[3,"Contour",E,"A closed loop consisting of a sequence of `Segment`s.",N,N],[12,"segments",E,E,11,N],[4,R[1228],E,"`SharedBytes` handles the lifetime of font data used in…",N,N],[13,"ByRef",E,E,12,N],[13,"ByArc",E,E,12,N],[4,"Segment",E,"Part of a `Contour`, either a `Line` or a `Curve`.",N,N],[13,"Line",E,E,13,N],[13,"Curve",E,E,13,N],[4,"Error",E,"The type for errors returned by rusttype.",N,N],[13,"UnrecognizedFormat",E,"Font data presented to rusttype is not in a format that…",14,N],[13,"IllFormed",E,"Font data presented to rusttype was ill-formed (lacking…",14,N],[13,"CollectionIndexOutOfBounds",E,"The caller tried to access the `i`'th font from a…",14,N],[13,"CollectionContainsMultipleFonts",E,"The caller tried to convert a `FontCollection` into a font…",14,N],[5,"point",E,"A convenience function for generating `Point`s.",N,[[["n"]],["point"]]],[5,"vector",E,"A convenience function for generating `Vector`s.",N,[[["n"]],["vector"]]],[11,"width",E,E,3,[[["self"]],["n"]]],[11,"height",E,E,3,[[["self"]],["n"]]],[8,R[1229],E,"A trait for types that can be converted into a `GlyphId`,…",N,N],[10,R[1225],E,"Convert `self` into a `GlyphId`, consulting the index map…",15,[[["font"]],["glyphid"]]],[11,"uniform",E,"Uniform scaling, equivalent to `Scale { x: s, y: s }`.",10,[[["f32"]],["scale"]]],[11,"from_bytes",E,"Constructs a font collection from an array of bytes,…",16,[[["into",[R[1217]]],[R[1217]]],[[R[3],[R[1218],"error"]],[R[1218]],["error"]]]],[11,"into_font",E,"If this `FontCollection` holds a single font, or a…",16,[[],[["error"],["font"],[R[3],["font","error"]]]]],[11,"font_at",E,"Gets the font at index `i` in the font collection, if it…",16,[[["self"],["usize"]],[["error"],["font"],[R[3],["font","error"]]]]],[11,"into_fonts",E,"Converts `self` into an `Iterator` yielding each `Font`…",16,[[],["intofontsiter"]]],[11,"from_bytes",E,"Constructs a font from an array of bytes, this is a…",17,[[["into",[R[1217]]],[R[1217]]],[["error"],["font"],[R[3],["font","error"]]]]],[11,"v_metrics",E,"The \"vertical metrics\" for this font at a given scale.…",17,[[["self"],["scale"]],[R[736]]]],[11,"v_metrics_unscaled",E,"Get the unscaled VMetrics for this font, shared by all…",17,[[["self"]],[R[736]]]],[11,R[1236],E,"Returns the units per EM square of this font",17,[[["self"]],["u16"]]],[11,"glyph_count",E,"The number of glyphs present in this font. Glyph…",17,[[["self"]],["usize"]]],[11,"glyph",E,"Returns the corresponding glyph for a Unicode code point…",17,[[["self"],["intoglyphid"]],["glyph"]]],[11,"glyphs_for",E,"A convenience function.",17,[[["self"],["iterator"]],[["glyphiter"],["iterator"]]]],[11,"font_name_strings",E,"Returns an iterator over the names for this font.",17,[[["self"]],[[R[1217]],[R[738],[R[1217]]]]]],[11,"layout",E,"A convenience function for laying out glyphs for a string…",17,[[["point",["f32"]],["f32"],["scale"],["self"],["str"]],["layoutiter"]]],[11,"pair_kerning",E,"Returns additional kerning to apply as well as that given…",17,[[["self"],["a"],["scale"],["b"]],["f32"]]],[11,"font",E,R[1220],18,[[["self"]],[["font"],[R[25],["font"]]]]],[11,"id",E,R[1219],18,[[["self"]],["glyphid"]]],[11,"scaled",E,"Augments this glyph with scaling information, making…",18,[[["scale"]],[R[1221]]]],[11,R[1222],E,"Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces…",18,[[["self"]],["glyph"]]],[11,"get_data",E,"Get the data from this glyph (such as width, extents,…",18,[[["self"]],[["arc",["sharedglyphdata"]],[R[25],["arc"]]]]],[11,"id",E,R[1219],19,[[["self"]],["glyphid"]]],[11,"font",E,R[1220],19,[[["self"]],[["font"],[R[25],["font"]]]]],[11,"into_unscaled",E,"A reference to this glyph without the scaling",19,[[],["glyph"]]],[11,"unscaled",E,"Removes the scaling from this glyph",19,[[["self"]],["glyph"]]],[11,"positioned",E,"Augments this glyph with positioning information, making…",19,[[["point",["f32"]],["f32"]],[R[1224]]]],[11,"scale",E,E,19,[[["self"]],["scale"]]],[11,"h_metrics",E,"Retrieves the \"horizontal metrics\" of this glyph. See…",19,[[["self"]],[R[735]]]],[11,"shape",E,"Produces a list of the contours that make up the shape of…",19,[[["self"]],[["vec",["contour"]],[R[25],["vec"]]]]],[11,"exact_bounding_box",E,"The bounding box of the shape of this glyph, not to be…",19,[[["self"]],[[R[25],["rect"]],["rect",["f32"]]]]],[11,R[1222],E,R[1223],19,[[["self"]],[R[1221]]]],[11,"id",E,R[1219],20,[[["self"]],["glyphid"]]],[11,"font",E,R[1220],20,[[["self"]],[["font"],[R[25],["font"]]]]],[11,"unpositioned",E,"A reference to this glyph without positioning",20,[[["self"]],[R[1221]]]],[11,"into_unpositioned",E,"Removes the positioning from this glyph",20,[[],[R[1221]]]],[11,"pixel_bounding_box",E,"The conservative pixel-boundary bounding box for this…",20,[[["self"]],[["rect",["i32"]],[R[25],["rect"]]]]],[11,"shape",E,"Similar to `ScaledGlyph::shape()`, but with the position…",20,[[["self"]],[["vec",["contour"]],[R[25],["vec"]]]]],[11,"scale",E,E,20,[[["self"]],["scale"]]],[11,R[181],E,E,20,[[["self"]],[["point",["f32"]],["f32"]]]],[11,"draw",E,"Rasterises this glyph. For each pixel in the rect given by…",20,[[["self"],["fnmut"]]]],[11,R[1222],E,R[1223],20,[[["self"]],[R[1224]]]],[11,"set_position",E,"Resets positioning information and recalculates the pixel…",20,[[["self"],["point",["f32"]],["f32"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"],[T]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[42],E,E,16,[[["self"],[T]]]],[11,R[8],E,E,16,[[[U]],[R[3]]]],[11,R[9],E,E,16,[[],[R[3]]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[42],E,E,17,[[["self"],[T]]]],[11,R[8],E,E,17,[[[U]],[R[3]]]],[11,R[9],E,E,17,[[],[R[3]]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"],[T]]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[42],E,E,6,[[["self"],[T]]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[42],E,E,18,[[["self"],[T]]]],[11,R[8],E,E,18,[[[U]],[R[3]]]],[11,R[9],E,E,18,[[],[R[3]]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"],[T]]]],[11,R[8],E,E,8,[[[U]],[R[3]]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[42],E,E,9,[[["self"],[T]]]],[11,R[8],E,E,9,[[[U]],[R[3]]]],[11,R[9],E,E,9,[[],[R[3]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[42],E,E,19,[[["self"],[T]]]],[11,R[8],E,E,19,[[[U]],[R[3]]]],[11,R[9],E,E,19,[[],[R[3]]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[42],E,E,20,[[["self"],[T]]]],[11,R[8],E,E,20,[[[U]],[R[3]]]],[11,R[9],E,E,20,[[],[R[3]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[42],E,E,10,[[["self"],[T]]]],[11,R[8],E,E,10,[[[U]],[R[3]]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[23],E,E,21,[[],["i"]]],[11,R[8],E,E,21,[[[U]],[R[3]]]],[11,R[9],E,E,21,[[],[R[3]]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[23],E,E,22,[[],["i"]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[42],E,E,22,[[["self"],[T]]]],[11,R[8],E,E,22,[[[U]],[R[3]]]],[11,R[9],E,E,22,[[],[R[3]]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[23],E,E,23,[[],["i"]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[42],E,E,23,[[["self"],[T]]]],[11,R[8],E,E,23,[[[U]],[R[3]]]],[11,R[9],E,E,23,[[],[R[3]]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[42],E,E,11,[[["self"],[T]]]],[11,R[8],E,E,11,[[[U]],[R[3]]]],[11,R[9],E,E,11,[[],[R[3]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[42],E,E,12,[[["self"],[T]]]],[11,R[8],E,E,12,[[[U]],[R[3]]]],[11,R[9],E,E,12,[[],[R[3]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[42],E,E,13,[[["self"],[T]]]],[11,R[8],E,E,13,[[[U]],[R[3]]]],[11,R[9],E,E,13,[[],[R[3]]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[98],E,E,14,[[["self"]],["string"]]],[11,R[8],E,E,14,[[[U]],[R[3]]]],[11,R[9],E,E,14,[[],[R[3]]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,R[1225],E,E,5,[[["font"]],["glyphid"]]],[11,R[1225],E,E,6,[[["font"]],["glyphid"]]],[11,"from",E,E,12,[[],[R[1217]]]],[11,"from",E,E,12,[[["arc"]],[R[1217]]]],[11,"from",E,E,12,[[["box"]],[R[1217]]]],[11,"from",E,E,12,[[["vec",["u8"]],["u8"]],[R[1217]]]],[11,"from",E,E,12,[[[T]],[R[1217]]]],[11,"from",E,E,9,[[[R[736]]],["self"]]],[11,"cmp",E,E,2,[[["self"],["point"]],[R[24]]]],[11,"cmp",E,E,4,[[["self"],["vector"]],[R[24]]]],[11,"cmp",E,E,3,[[["self"],["rect"]],[R[24]]]],[11,"cmp",E,E,5,[[["self"],[R[1226]]],[R[24]]]],[11,"cmp",E,E,6,[[["self"],["glyphid"]],[R[24]]]],[11,"next",E,E,21,[[["self"]],[R[25]]]],[11,"next",E,E,22,[[["self"]],[[R[25],["glyph"]],["glyph"]]]],[11,"next",E,E,23,[[["self"]],[[R[25],[R[1224]]],[R[1224]]]]],[11,R[172],E,E,2,[[["self"],["point"]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,2,[[["self"],["point"]],["bool"]]],[11,"le",E,E,2,[[["self"],["point"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["point"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["point"]],["bool"]]],[11,R[172],E,E,4,[[["self"],["vector"]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,4,[[["self"],["vector"]],["bool"]]],[11,"le",E,E,4,[[["self"],["vector"]],["bool"]]],[11,"gt",E,E,4,[[["self"],["vector"]],["bool"]]],[11,"ge",E,E,4,[[["self"],["vector"]],["bool"]]],[11,R[172],E,E,1,[[["self"],["line"]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,1,[[["self"],["line"]],["bool"]]],[11,"le",E,E,1,[[["self"],["line"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["line"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["line"]],["bool"]]],[11,R[172],E,E,0,[[["self"],["curve"]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,0,[[["self"],["curve"]],["bool"]]],[11,"le",E,E,0,[[["self"],["curve"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["curve"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["curve"]],["bool"]]],[11,R[172],E,E,3,[[["self"],["rect"]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,3,[[["self"],["rect"]],["bool"]]],[11,"le",E,E,3,[[["self"],["rect"]],["bool"]]],[11,"gt",E,E,3,[[["self"],["rect"]],["bool"]]],[11,"ge",E,E,3,[[["self"],["rect"]],["bool"]]],[11,R[172],E,E,5,[[["self"],[R[1226]]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,5,[[["self"],[R[1226]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[1226]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[1226]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[1226]]],["bool"]]],[11,R[172],E,E,6,[[["self"],["glyphid"]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,6,[[["self"],["glyphid"]],["bool"]]],[11,"le",E,E,6,[[["self"],["glyphid"]],["bool"]]],[11,"gt",E,E,6,[[["self"],["glyphid"]],["bool"]]],[11,"ge",E,E,6,[[["self"],["glyphid"]],["bool"]]],[11,R[172],E,E,8,[[["self"],[R[735]]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,8,[[["self"],[R[735]]],["bool"]]],[11,"le",E,E,8,[[["self"],[R[735]]],["bool"]]],[11,"gt",E,E,8,[[["self"],[R[735]]],["bool"]]],[11,"ge",E,E,8,[[["self"],[R[735]]],["bool"]]],[11,R[172],E,E,9,[[["self"],[R[736]]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,9,[[["self"],[R[736]]],["bool"]]],[11,"le",E,E,9,[[["self"],[R[736]]],["bool"]]],[11,"gt",E,E,9,[[["self"],[R[736]]],["bool"]]],[11,"ge",E,E,9,[[["self"],[R[736]]],["bool"]]],[11,R[172],E,E,10,[[["self"],["scale"]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,10,[[["self"],["scale"]],["bool"]]],[11,"le",E,E,10,[[["self"],["scale"]],["bool"]]],[11,"gt",E,E,10,[[["self"],["scale"]],["bool"]]],[11,"ge",E,E,10,[[["self"],["scale"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["point"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["point"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["vector"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["vector"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["line"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["line"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["curve"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["curve"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["rect"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["rect"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1226]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[1226]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["glyphid"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["glyphid"]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[735]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[735]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[736]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[736]]],["bool"]]],[11,"eq",E,E,10,[[["self"],["scale"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["scale"]],["bool"]]],[11,"clone",E,E,2,[[["self"]],["point"]]],[11,"clone",E,E,4,[[["self"]],["vector"]]],[11,"clone",E,E,1,[[["self"]],["line"]]],[11,"clone",E,E,0,[[["self"]],["curve"]]],[11,"clone",E,E,3,[[["self"]],["rect"]]],[11,"clone",E,E,16,[[["self"]],[R[1218]]]],[11,"clone",E,E,17,[[["self"]],["font"]]],[11,"clone",E,E,12,[[["self"]],[R[1217]]]],[11,"clone",E,E,5,[[["self"]],[R[1226]]]],[11,"clone",E,E,6,[[["self"]],["glyphid"]]],[11,"clone",E,E,18,[[["self"]],["glyph"]]],[11,"clone",E,E,8,[[["self"]],[R[735]]]],[11,"clone",E,E,9,[[["self"]],[R[736]]]],[11,"clone",E,E,19,[[["self"]],[R[1221]]]],[11,"clone",E,E,20,[[["self"]],[R[1224]]]],[11,"clone",E,E,10,[[["self"]],["scale"]]],[11,"clone",E,E,22,[[["self"]],["glyphiter"]]],[11,"clone",E,E,23,[[["self"]],["layoutiter"]]],[11,"clone",E,E,13,[[["self"]],["segment"]]],[11,"clone",E,E,11,[[["self"]],["contour"]]],[11,"deref",E,E,12,[[["self"]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[3]]]],[11,"sub",E,E,2,[[["point"]],["vector"]]],[11,"sub",E,E,4,[[["vector"]],["vector"]]],[11,"sub",E,E,2,[[["vector"]],["point"]]],[11,"add",E,E,4,[[["vector"]],["vector"]]],[11,"add",E,E,2,[[["vector"]],["point"]]],[11,"add",E,E,4,[[["point"]],["point"]]],[11,"mul",E,E,4,[[["f32"]],[["f32"],["vector",["f32"]]]]],[11,"mul",E,E,4,[[["f64"]],[["vector",["f64"]],["f64"]]]],[11,"mul",E,E,9,[[["f32"]],["self"]]],[11,"div",E,E,4,[[["f32"]],[["f32"],["vector",["f32"]]]]],[11,"div",E,E,4,[[["f64"]],[["vector",["f64"]],["f64"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,R[53],E,E,14,[[["self"]],["str"]]]],"p":[[3,"Curve"],[3,"Line"],[3,"Point"],[3,"Rect"],[3,"Vector"],[3,"Codepoint"],[3,"GlyphId"],[3,R[1227]],[3,"HMetrics"],[3,"VMetrics"],[3,"Scale"],[3,"Contour"],[4,R[1228]],[4,"Segment"],[4,"Error"],[8,R[1229]],[3,R[1230]],[3,"Font"],[3,"Glyph"],[3,R[1231]],[3,R[1232]],[3,R[1233]],[3,"GlyphIter"],[3,"LayoutIter"]]};
searchIndex["scoped_threadpool"]={"doc":"This crate provides a stable, safe and scoped threadpool.","i":[[3,"Pool","scoped_threadpool","A threadpool that acts as a handle to a number of threads…",N,N],[3,"Scope",E,"Handle to the scope during which the threadpool is borrowed.",N,N],[11,"new",E,"Construct a threadpool with the given number of threads.…",0,[[["u32"]],["pool"]]],[11,"scoped",E,"Borrows the pool and allows executing jobs on other…",0,[[["self"],["f"]],["r"]]],[11,"thread_count",E,"Returns the number of threads inside this pool.",0,[[["self"]],["u32"]]],[11,"execute",E,"Execute a job on the threadpool.",1,[[["self"],["f"]]]],[11,"join_all",E,"Blocks until all currently queued jobs have run to…",1,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"drop",E,E,0,[[["self"]]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[3,"Pool"],[3,"Scope"]]};
searchIndex["scopeguard"]={"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,R[16],R[5],"`ScopeGuard` is a scope guard that may own a protected…",N,N],[4,"Always",E,"Always run on scope exit.",N,N],[5,"guard",E,"Create a new `ScopeGuard` owning `v` and with deferred…",N,[[[T],["f"]],[[R[5],[R[6]]],[R[6]]]]],[8,R[15],E,"Controls in which cases the associated code should be run",N,N],[10,R[12],E,"Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy",E,"Create a `ScopeGuard` that owns `v` (accessible through…",1,[[[T],["f"]],[R[5]]]],[11,R[7],E,"“Defuse” the guard and extract the value without calling…",1,[[],[T]]],[14,"defer",E,"Macro to create a `ScopeGuard` (always run).",N,N],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,R[12],E,E,2,[[],["bool"]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[8,R[15]],[3,R[16]],[4,"Always"]]};
searchIndex["stb_truetype"]={"doc":E,"i":[[3,"FontInfo","stb_truetype",E,N,N],[3,"Vertex",E,E,N,N],[12,"x",E,E,0,N],[12,"y",E,E,0,N],[12,"cx",E,E,0,N],[12,"cy",E,E,0,N],[3,"Rect",E,E,N,N],[12,"x0",E,E,1,N],[12,"y0",E,E,1,N],[12,"x1",E,E,1,N],[12,"y1",E,E,1,N],[3,"HMetrics",E,E,N,N],[12,R[1234],E,E,2,N],[12,R[1235],E,E,2,N],[3,"VMetrics",E,E,N,N],[12,"ascent",E,E,3,N],[12,"descent",E,E,3,N],[12,"line_gap",E,E,3,N],[3,R[745],E,E,N,N],[4,R[739],E,E,N,N],[13,"MoveTo",E,E,4,N],[13,"LineTo",E,E,4,N],[13,"CurveTo",E,E,4,N],[4,R[740],E,E,N,N],[13,"Unicode",E,E,5,N],[13,"Mac",E,E,5,N],[13,"Iso",E,E,5,N],[13,R[728],E,E,5,N],[4,R[741],E,E,N,N],[13,"Unicode_1_0",E,E,6,N],[13,"Unicode_1_1",E,E,6,N],[13,"Iso_10646",E,E,6,N],[13,"Unicode_2_0_Bmp",E,E,6,N],[13,"Unicode_2_0_Full",E,E,6,N],[4,R[742],E,E,N,N],[13,"Symbol",E,E,7,N],[13,"UnicodeBMP",E,E,7,N],[13,"Shiftjis",E,E,7,N],[13,"UnicodeFull",E,E,7,N],[4,"MacEid",E,E,N,N],[13,"Roman",E,E,8,N],[13,"Arabic",E,E,8,N],[13,R[726],E,E,8,N],[13,"Hebrew",E,E,8,N],[13,R[727],E,E,8,N],[13,"Greek",E,E,8,N],[13,"Korean",E,E,8,N],[13,"Russian",E,E,8,N],[4,R[743],E,E,N,N],[13,"English",E,E,9,N],[13,"Italian",E,E,9,N],[13,"Chinese",E,E,9,N],[13,R[726],E,E,9,N],[13,"Dutch",E,E,9,N],[13,"Korean",E,E,9,N],[13,"French",E,E,9,N],[13,"Russian",E,E,9,N],[13,"German",E,E,9,N],[13,"Hebrew",E,E,9,N],[13,"Swedish",E,E,9,N],[4,"MacLang",E,E,N,N],[13,"English",E,E,10,N],[13,R[726],E,E,10,N],[13,"Arabic",E,E,10,N],[13,"Korean",E,E,10,N],[13,"Dutch",E,E,10,N],[13,"Russian",E,E,10,N],[13,"French",E,E,10,N],[13,"Spanish",E,E,10,N],[13,"German",E,E,10,N],[13,"Swedish",E,E,10,N],[13,"Hebrew",E,E,10,N],[13,"ChineseSimplified",E,E,10,N],[13,"Italian",E,E,10,N],[13,R[727],E,E,10,N],[4,R[744],E,E,N,N],[13,"Unicode",E,E,11,N],[13,"Mac",E,E,11,N],[13,"Iso",E,E,11,N],[13,R[728],E,E,11,N],[5,"is_font",E,"Return `true` if `data` holds a font stored in a format…",N,[[],["bool"]]],[5,"is_collection",E,"Return `true` if `data` holds a TrueType Collection,…",N,[[],["bool"]]],[5,"get_font_offset_for_index",E,"Each .ttf/.ttc file may have more than one font. Each font…",N,[[["i32"]],[[R[25],["u32"]],["u32"]]]],[11,"vertex_type",E,E,0,[[["self"]],[R[734]]]],[11,"new",E,"Given an offset into the file that defines a font, this…",12,[[["data"],["usize"]],[[R[25],[R[737]]],[R[737]]]]],[11,"get_num_glyphs",E,E,12,[[["self"]],["u32"]]],[11,"find_glyph_index",E,"If you're going to perform multiple operations on the same…",12,[[["self"],["u32"]],["u32"]]],[11,"get_codepoint_shape",E,"Returns the series of vertices encoding the shape of the…",12,[[["self"],["u32"]],[["vec",["vertex"]],[R[25],["vec"]]]]],[11,"get_glyph_box",E,"Like `get_codepoint_box`, but takes a glyph index. Use…",12,[[["self"],["u32"]],[["rect",["i16"]],[R[25],["rect"]]]]],[11,"get_codepoint_box",E,"Gets the bounding box of the visible part of the glyph, in…",12,[[["self"],["u32"]],[["rect",["i16"]],[R[25],["rect"]]]]],[11,"is_glyph_empty",E,"returns true if nothing is drawn for this glyph",12,[[["self"],["u32"]],["bool"]]],[11,"get_glyph_shape",E,"Like `get_codepoint_shape`, but takes a glyph index…",12,[[["self"],["u32"]],[["vec",["vertex"]],[R[25],["vec"]]]]],[11,"get_glyph_h_metrics",E,"like `get_codepoint_h_metrics`, but takes a glyph index…",12,[[["self"],["u32"]],[R[735]]]],[11,"get_glyph_kern_advance",E,"like `get_codepoint_kern_advance`, but takes glyph indices…",12,[[["self"],["u32"]],["i32"]]],[11,"get_codepoint_kern_advance",E,"an additional amount to add to the 'advance' value between…",12,[[["self"],["u32"]],["i32"]]],[11,"get_codepoint_h_metrics",E,"`left_side_bearing` is the offset from the current…",12,[[["self"],["u32"]],[R[735]]]],[11,"get_v_metrics",E,"`ascent` is the coordinate above the baseline the font…",12,[[["self"]],[R[736]]]],[11,"get_bounding_box",E,"the bounding box around all possible characters",12,[[["self"]],[["rect",["i16"]],["i16"]]]],[11,"scale_for_pixel_height",E,"computes a scale factor to produce a font whose \"height\"…",12,[[["self"],["f32"]],["f32"]]],[11,R[1236],E,"Returns the units per EM square of this font.",12,[[["self"]],["u16"]]],[11,"scale_for_mapping_em_to_pixels",E,"computes a scale factor to produce a font whose EM size is…",12,[[["self"],["f32"]],["f32"]]],[11,"get_glyph_bitmap_box_subpixel",E,"like `get_codepoint_bitmap_box_subpixel`, but takes a…",12,[[["self"],["u32"],["f32"]],[[R[25],["rect"]],["rect",["i32"]]]]],[11,"get_glyph_bitmap_box",E,"like `get_codepoint_bitmap_box`, but takes a glyph index…",12,[[["self"],["u32"],["f32"]],[[R[25],["rect"]],["rect",["i32"]]]]],[11,"get_codepoint_bitmap_box_subpixel",E,"same as get_codepoint_bitmap_box, but you can specify a…",12,[[["self"],["u32"],["f32"]],[[R[25],["rect"]],["rect",["i32"]]]]],[11,"get_codepoint_bitmap_box",E,"get the bounding box of the bitmap centered around the…",12,[[["self"],["u32"],["f32"]],[[R[25],["rect"]],["rect",["i32"]]]]],[11,"get_font_name_strings",E,E,12,[[["self"]],[R[738]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[42],E,E,12,[[["self"],[T]]]],[11,R[8],E,E,12,[[[U]],[R[3]]]],[11,R[9],E,E,12,[[],[R[3]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[23],E,E,13,[[],["i"]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[42],E,E,13,[[["self"],[T]]]],[11,R[8],E,E,13,[[[U]],[R[3]]]],[11,R[9],E,E,13,[[],[R[3]]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"],[T]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"],[T]]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[42],E,E,6,[[["self"],[T]]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[42],E,E,7,[[["self"],[T]]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"],[T]]]],[11,R[8],E,E,8,[[[U]],[R[3]]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[42],E,E,9,[[["self"],[T]]]],[11,R[8],E,E,9,[[[U]],[R[3]]]],[11,R[9],E,E,9,[[],[R[3]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[42],E,E,10,[[["self"],[T]]]],[11,R[8],E,E,10,[[[U]],[R[3]]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[42],E,E,11,[[["self"],[T]]]],[11,R[8],E,E,11,[[[U]],[R[3]]]],[11,R[9],E,E,11,[[],[R[3]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"cmp",E,E,5,[[["self"],[R[729]]],[R[24]]]],[11,"cmp",E,E,6,[[["self"],[R[730]]],[R[24]]]],[11,"cmp",E,E,7,[[["self"],[R[731]]],[R[24]]]],[11,"cmp",E,E,8,[[["self"],["maceid"]],[R[24]]]],[11,"cmp",E,E,9,[[["self"],[R[732]]],[R[24]]]],[11,"cmp",E,E,10,[[["self"],["maclang"]],[R[24]]]],[11,"cmp",E,E,11,[[["self"],[R[733]]],[R[24]]]],[11,"next",E,E,13,[[["self"]],[R[25]]]],[11,R[174],E,E,13,[[["self"]]]],[11,"count",E,E,13,[[],["usize"]]],[11,"last",E,E,13,[[],[R[25]]]],[11,"nth",E,E,13,[[["self"],["usize"]],[R[25]]]],[11,R[172],E,E,5,[[["self"],[R[729]]],[[R[25],[R[24]]],[R[24]]]]],[11,R[172],E,E,6,[[["self"],[R[730]]],[[R[25],[R[24]]],[R[24]]]]],[11,R[172],E,E,7,[[["self"],[R[731]]],[[R[25],[R[24]]],[R[24]]]]],[11,R[172],E,E,8,[[["self"],["maceid"]],[[R[25],[R[24]]],[R[24]]]]],[11,R[172],E,E,9,[[["self"],[R[732]]],[[R[25],[R[24]]],[R[24]]]]],[11,R[172],E,E,10,[[["self"],["maclang"]],[[R[25],[R[24]]],[R[24]]]]],[11,R[172],E,E,11,[[["self"],[R[733]]],[[R[25],[R[24]]],[R[24]]]]],[11,"lt",E,E,11,[[["self"],[R[733]]],["bool"]]],[11,"le",E,E,11,[[["self"],[R[733]]],["bool"]]],[11,"gt",E,E,11,[[["self"],[R[733]]],["bool"]]],[11,"ge",E,E,11,[[["self"],[R[733]]],["bool"]]],[11,"eq",E,E,0,[[["self"],["vertex"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["vertex"]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[734]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["rect"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["rect"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[735]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[735]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[736]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[736]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[729]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[730]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[731]]],["bool"]]],[11,"eq",E,E,8,[[["self"],["maceid"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[732]]],["bool"]]],[11,"eq",E,E,10,[[["self"],["maclang"]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[733]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[733]]],["bool"]]],[11,"clone",E,E,12,[[["self"]],[R[737]]]],[11,"clone",E,E,0,[[["self"]],["vertex"]]],[11,"clone",E,E,4,[[["self"]],[R[734]]]],[11,"clone",E,E,1,[[["self"]],["rect"]]],[11,"clone",E,E,2,[[["self"]],[R[735]]]],[11,"clone",E,E,3,[[["self"]],[R[736]]]],[11,"clone",E,E,5,[[["self"]],[R[729]]]],[11,"clone",E,E,6,[[["self"]],[R[730]]]],[11,"clone",E,E,7,[[["self"]],[R[731]]]],[11,"clone",E,E,8,[[["self"]],["maceid"]]],[11,"clone",E,E,9,[[["self"]],[R[732]]]],[11,"clone",E,E,10,[[["self"]],["maclang"]]],[11,"clone",E,E,11,[[["self"]],[R[733]]]],[11,"clone",E,E,13,[[["self"]],[R[738]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[13]]],[R[3]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]]],"p":[[3,"Vertex"],[3,"Rect"],[3,"HMetrics"],[3,"VMetrics"],[4,R[739]],[4,R[740]],[4,R[741]],[4,R[742]],[4,"MacEid"],[4,R[743]],[4,"MacLang"],[4,R[744]],[3,"FontInfo"],[3,R[745]]]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn",R[815],N,N],[3,"Attribute",E,"An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token",E,E,0,N],[12,"style",E,E,0,N],[12,R[818],E,E,0,N],[12,"path",E,E,0,N],[12,"tts",E,E,0,N],[3,"MetaList",E,R[831],N,N],[12,"ident",E,E,1,N],[12,R[816],E,E,1,N],[12,"nested",E,E,1,N],[3,R[1011],E,R[832],N,N],[12,"ident",E,E,2,N],[12,R[820],E,E,2,N],[12,"lit",E,E,2,N],[3,"Field",E,"A field of a struct or enum variant.",N,N],[12,"attrs",E,"Attributes tagged on the field.",3,N],[12,"vis",E,"Visibility of the field.",3,N],[12,"ident",E,"Name of the field, if any.",3,N],[12,R[819],E,E,3,N],[12,"ty",E,"Type of the field.",3,N],[3,R[1012],E,R[833],N,N],[12,R[823],E,E,4,N],[12,"named",E,E,4,N],[3,R[1013],E,R[834],N,N],[12,R[816],E,E,5,N],[12,"unnamed",E,E,5,N],[3,"Variant",E,"An enum variant.",N,N],[12,"attrs",E,"Attributes tagged on the variant.",6,N],[12,"ident",E,"Name of the variant.",6,N],[12,"fields",E,"Content stored in the variant.",6,N],[12,"discriminant",E,"Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate",E,R[836],N,N],[12,"crate_token",E,E,7,N],[3,"VisPublic",E,R[835],N,N],[12,R[817],E,E,8,N],[3,R[1014],E,R[837],N,N],[12,R[817],E,E,9,N],[12,R[816],E,E,9,N],[12,"in_token",E,E,9,N],[12,"path",E,E,9,N],[3,"ExprArray",E,R[840],N,N],[3,"ExprAssign",E,R[858],N,N],[3,R[1045],E,R[859],N,N],[3,"ExprAsync",E,R[874],N,N],[3,"ExprBinary",E,R[844],N,N],[12,"attrs",E,E,10,N],[12,"left",E,E,10,N],[12,"op",E,E,10,N],[12,"right",E,E,10,N],[3,"ExprBlock",E,R[857],N,N],[3,"ExprBox",E,R[838],N,N],[3,"ExprBreak",E,R[865],N,N],[3,"ExprCall",E,R[841],N,N],[12,"attrs",E,E,11,N],[12,"func",E,E,11,N],[12,R[816],E,E,11,N],[12,"args",E,E,11,N],[3,"ExprCast",E,R[847],N,N],[12,"attrs",E,E,12,N],[12,"expr",E,E,12,N],[12,"as_token",E,E,12,N],[12,"ty",E,E,12,N],[3,R[1046],E,R[855],N,N],[3,R[1047],E,R[866],N,N],[3,"ExprField",E,R[860],N,N],[12,"attrs",E,E,13,N],[12,"base",E,E,13,N],[12,"dot_token",E,E,13,N],[12,"member",E,E,13,N],[3,R[1048],E,R[852],N,N],[3,"ExprGroup",E,R[872],N,N],[3,"ExprIf",E,R[850],N,N],[3,R[1049],E,R[839],N,N],[3,"ExprIndex",E,R[861],N,N],[12,"attrs",E,E,14,N],[12,"expr",E,E,14,N],[12,R[818],E,E,14,N],[12,"index",E,E,14,N],[3,"ExprLet",E,R[849],N,N],[3,"ExprLit",E,R[846],N,N],[12,"attrs",E,E,15,N],[12,"lit",E,E,15,N],[3,"ExprLoop",E,R[853],N,N],[3,"ExprMacro",E,R[868],N,N],[3,"ExprMatch",E,R[854],N,N],[3,R[1050],E,R[842],N,N],[3,"ExprParen",E,R[871],N,N],[12,"attrs",E,E,16,N],[12,R[816],E,E,16,N],[12,"expr",E,E,16,N],[3,"ExprPath",E,R[863],N,N],[12,"attrs",E,E,17,N],[12,"qself",E,E,17,N],[12,"path",E,E,17,N],[3,"ExprRange",E,R[862],N,N],[3,R[1051],E,R[864],N,N],[3,"ExprRepeat",E,R[870],N,N],[3,"ExprReturn",E,R[867],N,N],[3,"ExprStruct",E,R[869],N,N],[3,"ExprTry",E,R[873],N,N],[3,R[1052],E,R[875],N,N],[3,"ExprTuple",E,R[843],N,N],[3,"ExprType",E,R[848],N,N],[3,"ExprUnary",E,R[845],N,N],[12,"attrs",E,E,18,N],[12,"op",E,E,18,N],[12,"expr",E,E,18,N],[3,"ExprUnsafe",E,R[856],N,N],[3,R[1015],E,R[877],N,N],[12,"tts",E,E,19,N],[3,"ExprWhile",E,R[851],N,N],[3,"ExprYield",E,R[876],N,N],[3,"Index",E,"The index of an unnamed tuple struct field.",N,N],[12,"index",E,E,20,N],[12,"span",E,E,20,N],[3,R[1016],E,"A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token",E,E,21,N],[12,R[829],E,E,21,N],[12,R[821],E,E,21,N],[12,R[830],E,E,21,N],[3,"ConstParam",E,R[880],N,N],[12,"attrs",E,E,22,N],[12,R[826],E,E,22,N],[12,"ident",E,E,22,N],[12,R[819],E,E,22,N],[12,"ty",E,E,22,N],[12,R[820],E,E,22,N],[12,R[327],E,E,22,N],[3,"Generics",E,"Lifetimes and type parameters attached to a declaration of…",N,N],[12,R[829],E,E,23,N],[12,"params",E,E,23,N],[12,R[830],E,E,23,N],[12,"where_clause",E,E,23,N],[3,R[1017],E,R[879],N,N],[12,"attrs",E,E,24,N],[12,R[827],E,E,24,N],[12,R[819],E,E,24,N],[12,"bounds",E,E,24,N],[3,R[1018],E,R[884],N,N],[12,"lhs_ty",E,E,25,N],[12,R[820],E,E,25,N],[12,"rhs_ty",E,E,25,N],[3,R[1019],E,R[883],N,N],[12,R[827],E,E,26,N],[12,R[819],E,E,26,N],[12,"bounds",E,E,26,N],[3,R[1020],E,R[882],N,N],[12,R[821],E,"Any lifetimes from a `for` binding",27,N],[12,"bounded_ty",E,"The type being bounded",27,N],[12,R[819],E,E,27,N],[12,"bounds",E,"Trait and lifetime bounds (`Clone+Send+'static`)",27,N],[3,"TraitBound",E,"A trait used as a bound on a type parameter.",N,N],[12,R[816],E,E,28,N],[12,"modifier",E,E,28,N],[12,R[821],E,"The `for<'a>` in `for<'a> Foo<&'a T>`",28,N],[12,"path",E,"The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",28,N],[3,"TypeParam",E,R[878],N,N],[12,"attrs",E,E,29,N],[12,"ident",E,E,29,N],[12,R[819],E,E,29,N],[12,"bounds",E,E,29,N],[12,R[820],E,E,29,N],[12,R[327],E,E,29,N],[3,R[1021],E,"A `where` clause in a definition: `where T:…",N,N],[12,"where_token",E,E,30,N],[12,"predicates",E,E,30,N],[3,R[1053],E,R[822],N,N],[3,"Turbofish",E,"Returned by `TypeGenerics::as_turbofish`.",N,N],[3,R[1041],E,R[822],N,N],[3,R[881],E,"A Rust lifetime: `'a`.",N,N],[12,"apostrophe",E,E,31,N],[12,"ident",E,E,31,N],[3,"LitBool",E,R[891],N,N],[12,"value",E,E,32,N],[12,"span",E,E,32,N],[3,"LitByte",E,R[887],N,N],[3,"LitByteStr",E,R[886],N,N],[3,"LitChar",E,R[888],N,N],[3,"LitFloat",E,R[890],N,N],[3,"LitInt",E,R[889],N,N],[3,"LitStr",E,R[885],N,N],[3,R[1022],E,R[892],N,N],[12,"token",E,E,33,N],[3,"Macro",E,"A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path",E,E,34,N],[12,R[825],E,E,34,N],[12,R[331],E,E,34,N],[12,"tts",E,E,34,N],[3,"DataEnum",E,R[894],N,N],[12,"enum_token",E,E,35,N],[12,R[823],E,E,35,N],[12,"variants",E,E,35,N],[3,"DataStruct",E,R[893],N,N],[12,"struct_token",E,E,36,N],[12,"fields",E,E,36,N],[12,R[824],E,E,36,N],[3,"DataUnion",E,R[895],N,N],[12,"union_token",E,E,37,N],[12,"fields",E,E,37,N],[3,R[1023],E,"Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs",E,"Attributes tagged on the whole struct or enum.",38,N],[12,"vis",E,"Visibility of the struct or enum.",38,N],[12,"ident",E,"Name of the struct or enum.",38,N],[12,R[991],E,"Generics required to complete the definition.",38,N],[12,"data",E,"Data within the struct or enum.",38,N],[3,"Abi",E,"The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token",E,E,39,N],[12,"name",E,E,39,N],[3,"BareFnArg",E,"An argument in a function type: the `usize` in `fn(usize)…",N,N],[12,"name",E,E,40,N],[12,"ty",E,E,40,N],[3,"TypeArray",E,R[897],N,N],[12,R[818],E,E,41,N],[12,"elem",E,E,41,N],[12,R[824],E,E,41,N],[12,"len",E,E,41,N],[3,"TypeBareFn",E,R[901],N,N],[12,R[821],E,E,42,N],[12,"unsafety",E,E,42,N],[12,"abi",E,E,42,N],[12,"fn_token",E,E,42,N],[12,R[816],E,E,42,N],[12,"inputs",E,E,42,N],[12,"variadic",E,E,42,N],[12,"output",E,E,42,N],[3,"TypeGroup",E,R[908],N,N],[12,"group_token",E,E,43,N],[12,"elem",E,E,43,N],[3,R[1024],E,R[906],N,N],[12,"impl_token",E,E,44,N],[12,"bounds",E,E,44,N],[3,"TypeInfer",E,R[909],N,N],[12,"underscore_token",E,E,45,N],[3,"TypeMacro",E,R[910],N,N],[12,"mac",E,E,46,N],[3,"TypeNever",E,R[902],N,N],[12,R[825],E,E,47,N],[3,"TypeParen",E,R[907],N,N],[12,R[816],E,E,48,N],[12,"elem",E,E,48,N],[3,"TypePath",E,R[904],N,N],[12,"qself",E,E,49,N],[12,"path",E,E,49,N],[3,"TypePtr",E,R[898],N,N],[12,"star_token",E,E,50,N],[12,R[826],E,E,50,N],[12,R[828],E,E,50,N],[12,"elem",E,E,50,N],[3,R[1025],E,R[900],N,N],[12,"and_token",E,E,51,N],[12,R[827],E,E,51,N],[12,R[828],E,E,51,N],[12,"elem",E,E,51,N],[3,"TypeSlice",E,R[896],N,N],[12,R[818],E,E,52,N],[12,"elem",E,E,52,N],[3,R[1026],E,R[905],N,N],[12,"dyn_token",E,E,53,N],[12,"bounds",E,E,53,N],[3,"TypeTuple",E,R[903],N,N],[12,R[816],E,E,54,N],[12,"elems",E,E,54,N],[3,R[1027],E,R[912],N,N],[12,"tts",E,E,55,N],[3,R[1028],E,"Angle bracketed arguments of a path segment: the `<K, V>`…",N,N],[12,"colon2_token",E,E,56,N],[12,R[829],E,E,56,N],[12,"args",E,E,56,N],[12,R[830],E,E,56,N],[3,"Binding",E,"A binding (equality constraint) on an associated type:…",N,N],[12,"ident",E,E,57,N],[12,R[820],E,E,57,N],[12,"ty",E,E,57,N],[3,R[913],E,R[914],N,N],[12,"ident",E,E,58,N],[12,R[819],E,E,58,N],[12,"bounds",E,E,58,N],[3,R[1029],E,"Arguments of a function path segment: the `(A, B) -> C` in…",N,N],[12,R[816],E,E,59,N],[12,"inputs",E,"`(A, B)`",59,N],[12,"output",E,"`C`",59,N],[3,"Path",E,"A path at which a named item is exported:…",N,N],[12,"leading_colon",E,E,60,N],[12,"segments",E,E,60,N],[3,R[1030],E,"A segment of a path together with any path arguments on…",N,N],[12,"ident",E,E,61,N],[12,"arguments",E,E,61,N],[3,"QSelf",E,"The explicit Self type in a qualified path: the `T` in `<T…",N,N],[12,R[829],E,E,62,N],[12,"ty",E,E,62,N],[12,R[181],E,E,62,N],[12,"as_token",E,E,62,N],[12,R[830],E,E,62,N],[3,"Error",E,R[930],N,N],[4,"AttrStyle",E,"Distinguishes between attributes that decorate an item and…",N,N],[13,"Outer",E,E,63,N],[13,"Inner",E,E,63,N],[4,"Meta",E,"Content of a compile-time structured attribute.",N,N],[13,"Word",E,E,64,N],[13,"List",E,R[831],64,N],[13,"NameValue",E,R[832],64,N],[4,"NestedMeta",E,"Element of a compile-time attribute list.",N,N],[13,"Meta",E,"A structured meta item, like the `Copy` in…",65,N],[13,"Literal",E,"A Rust literal, like the `\"new_name\"` in…",65,N],[4,"Fields",E,"Data stored within an enum variant or struct.",N,N],[13,"Named",E,R[833],66,N],[13,"Unnamed",E,R[834],66,N],[13,"Unit",E,"Unit struct or unit variant such as `None`.",66,N],[4,"Visibility",E,"The visibility level of an item: inherited or `pub` or…",N,N],[13,"Public",E,R[835],67,N],[13,"Crate",E,R[836],67,N],[13,"Restricted",E,R[837],67,N],[13,"Inherited",E,"An inherited visibility, which usually means private.",67,N],[4,"Expr",E,"A Rust expression.",N,N],[13,"Box",E,R[838],68,N],[13,"InPlace",E,R[839],68,N],[13,"Array",E,R[840],68,N],[13,"Call",E,R[841],68,N],[13,"MethodCall",E,R[842],68,N],[13,"Tuple",E,R[843],68,N],[13,"Binary",E,R[844],68,N],[13,"Unary",E,R[845],68,N],[13,"Lit",E,R[846],68,N],[13,"Cast",E,R[847],68,N],[13,"Type",E,R[848],68,N],[13,"Let",E,R[849],68,N],[13,"If",E,R[850],68,N],[13,"While",E,R[851],68,N],[13,"ForLoop",E,R[852],68,N],[13,"Loop",E,R[853],68,N],[13,"Match",E,R[854],68,N],[13,"Closure",E,R[855],68,N],[13,"Unsafe",E,R[856],68,N],[13,"Block",E,R[857],68,N],[13,"Assign",E,R[858],68,N],[13,"AssignOp",E,R[859],68,N],[13,"Field",E,R[860],68,N],[13,"Index",E,R[861],68,N],[13,"Range",E,R[862],68,N],[13,"Path",E,R[863],68,N],[13,R[899],E,R[864],68,N],[13,"Break",E,R[865],68,N],[13,R[915],E,R[866],68,N],[13,"Return",E,R[867],68,N],[13,"Macro",E,R[868],68,N],[13,"Struct",E,R[869],68,N],[13,"Repeat",E,R[870],68,N],[13,"Paren",E,R[871],68,N],[13,"Group",E,R[872],68,N],[13,"Try",E,R[873],68,N],[13,"Async",E,R[874],68,N],[13,"TryBlock",E,R[875],68,N],[13,"Yield",E,R[876],68,N],[13,R[911],E,R[877],68,N],[4,"Member",E,"A struct or tuple struct field accessed in a struct…",N,N],[13,"Named",E,"A named field like `self.x`.",69,N],[13,"Unnamed",E,"An unnamed field like `self.0`.",69,N],[4,R[1031],E,"A generic type parameter, lifetime, or const generic: `T:…",N,N],[13,"Type",E,R[878],70,N],[13,R[881],E,R[879],70,N],[13,"Const",E,R[880],70,N],[4,R[1032],E,"A modifier on a trait bound, currently only used for the…",N,N],[13,"None",E,E,71,N],[13,"Maybe",E,E,71,N],[4,R[1033],E,"A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait",E,E,72,N],[13,R[881],E,E,72,N],[4,R[1034],E,"A single predicate in a `where` clause: `T:…",N,N],[13,"Type",E,R[882],73,N],[13,R[881],E,R[883],73,N],[13,"Eq",E,R[884],73,N],[4,R[1035],E,"The suffix on a floating point literal if any, like the…",N,N],[13,"F32",E,E,74,N],[13,"F64",E,E,74,N],[13,"None",E,E,74,N],[4,"IntSuffix",E,"The suffix on an integer literal if any, like the `u8` in…",N,N],[13,"I8",E,E,75,N],[13,"I16",E,E,75,N],[13,"I32",E,E,75,N],[13,"I64",E,E,75,N],[13,"I128",E,E,75,N],[13,"Isize",E,E,75,N],[13,"U8",E,E,75,N],[13,"U16",E,E,75,N],[13,"U32",E,E,75,N],[13,"U64",E,E,75,N],[13,"U128",E,E,75,N],[13,"Usize",E,E,75,N],[13,"None",E,E,75,N],[4,"Lit",E,"A Rust literal such as a string or integer or boolean.",N,N],[13,"Str",E,R[885],76,N],[13,"ByteStr",E,R[886],76,N],[13,"Byte",E,R[887],76,N],[13,"Char",E,R[888],76,N],[13,"Int",E,R[889],76,N],[13,"Float",E,R[890],76,N],[13,"Bool",E,R[891],76,N],[13,R[911],E,R[892],76,N],[4,"StrStyle",E,"The style of a string literal, either plain quoted or a…",N,N],[13,"Cooked",E,"An ordinary string like `\"data\"`.",77,N],[13,"Raw",E,"A raw string like `r##\"data\"##`.",77,N],[4,R[1036],E,"A grouping token that surrounds a macro body: `m!(...)` or…",N,N],[13,"Paren",E,E,78,N],[13,"Brace",E,E,78,N],[13,"Bracket",E,E,78,N],[4,"Data",E,"The storage of a struct, enum or union data structure.",N,N],[13,"Struct",E,R[893],79,N],[13,"Enum",E,R[894],79,N],[13,"Union",E,R[895],79,N],[4,"BinOp",E,"A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add",E,"The `+` operator (addition)",80,N],[13,"Sub",E,"The `-` operator (subtraction)",80,N],[13,"Mul",E,"The `*` operator (multiplication)",80,N],[13,"Div",E,"The `/` operator (division)",80,N],[13,"Rem",E,"The `%` operator (modulus)",80,N],[13,"And",E,"The `&&` operator (logical and)",80,N],[13,"Or",E,"The `||` operator (logical or)",80,N],[13,"BitXor",E,"The `^` operator (bitwise xor)",80,N],[13,"BitAnd",E,"The `&` operator (bitwise and)",80,N],[13,"BitOr",E,"The `|` operator (bitwise or)",80,N],[13,"Shl",E,"The `<<` operator (shift left)",80,N],[13,"Shr",E,"The `>>` operator (shift right)",80,N],[13,"Eq",E,"The `==` operator (equality)",80,N],[13,"Lt",E,"The `<` operator (less than)",80,N],[13,"Le",E,"The `<=` operator (less than or equal to)",80,N],[13,"Ne",E,"The `!=` operator (not equal to)",80,N],[13,"Ge",E,"The `>=` operator (greater than or equal to)",80,N],[13,"Gt",E,"The `>` operator (greater than)",80,N],[13,"AddEq",E,"The `+=` operator",80,N],[13,"SubEq",E,"The `-=` operator",80,N],[13,"MulEq",E,"The `*=` operator",80,N],[13,"DivEq",E,"The `/=` operator",80,N],[13,"RemEq",E,"The `%=` operator",80,N],[13,"BitXorEq",E,"The `^=` operator",80,N],[13,"BitAndEq",E,"The `&=` operator",80,N],[13,"BitOrEq",E,"The `|=` operator",80,N],[13,"ShlEq",E,"The `<<=` operator",80,N],[13,"ShrEq",E,"The `>>=` operator",80,N],[4,"UnOp",E,"A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref",E,"The `*` operator for dereferencing",81,N],[13,"Not",E,"The `!` operator for logical inversion",81,N],[13,"Neg",E,"The `-` operator for negation",81,N],[4,R[1037],E,"Name of an argument in a function type: the `n` in `fn(n:…",N,N],[13,"Named",E,"Argument given a name.",82,N],[13,"Wild",E,"Argument not given a name, matched with `_`.",82,N],[4,"ReturnType",E,"Return type of a function signature.",N,N],[13,"Default",E,"Return type is not specified.",83,N],[13,"Type",E,"A particular type is returned.",83,N],[4,"Type",E,"The possible types that a Rust value could have.",N,N],[13,"Slice",E,R[896],84,N],[13,"Array",E,R[897],84,N],[13,"Ptr",E,R[898],84,N],[13,R[899],E,R[900],84,N],[13,"BareFn",E,R[901],84,N],[13,"Never",E,R[902],84,N],[13,"Tuple",E,R[903],84,N],[13,"Path",E,R[904],84,N],[13,"TraitObject",E,R[905],84,N],[13,"ImplTrait",E,R[906],84,N],[13,"Paren",E,R[907],84,N],[13,"Group",E,R[908],84,N],[13,"Infer",E,R[909],84,N],[13,"Macro",E,R[910],84,N],[13,R[911],E,R[912],84,N],[4,R[1038],E,"An individual generic argument, like `'a`, `T`, or `Item =…",N,N],[13,R[881],E,"A lifetime argument.",85,N],[13,"Type",E,"A type argument.",85,N],[13,"Binding",E,"A binding (equality constraint) on an associated type: the…",85,N],[13,R[913],E,R[914],85,N],[13,"Const",E,"A const expression. Must be inside of a block.",85,N],[4,R[1039],E,"Angle bracketed or parenthesized arguments of a path…",N,N],[13,"None",E,E,86,N],[13,"AngleBracketed",E,"The `<'a, T>` in `std::slice::iter<'a, T>`.",86,N],[13,"Parenthesized",E,"The `(A, B) -> C` in `Fn(A, B) -> C`.",86,N],[5,"parse",E,R[933],N,[[[R[330]]],[[R[3]],["parse"]]]],[5,"parse2",E,R[932],N,[[[R[330]]],[[R[3]],["parse"]]]],[5,R[934],E,R[935],N,[[["str"]],[[R[3]],["parse"]]]],[0,"token",E,"Tokens representing Rust punctuation, keywords, and…",N,N],[3,"Underscore",R[942],"`_`",N,N],[12,"spans",E,E,87,N],[3,"Abstract",E,"`abstract`",N,N],[12,"span",E,E,88,N],[3,"As",E,"`as`",N,N],[12,"span",E,E,89,N],[3,"Async",E,"`async`",N,N],[12,"span",E,E,90,N],[3,"Auto",E,"`auto`",N,N],[12,"span",E,E,91,N],[3,"Become",E,"`become`",N,N],[12,"span",E,E,92,N],[3,"Box",E,"`box`",N,N],[12,"span",E,E,93,N],[3,"Break",E,"`break`",N,N],[12,"span",E,E,94,N],[3,"Const",E,"`const`",N,N],[12,"span",E,E,95,N],[3,R[915],E,"`continue`",N,N],[12,"span",E,E,96,N],[3,"Crate",E,"`crate`",N,N],[12,"span",E,E,97,N],[3,"Default",E,"`default`",N,N],[12,"span",E,E,98,N],[3,"Do",E,"`do`",N,N],[12,"span",E,E,99,N],[3,"Dyn",E,"`dyn`",N,N],[12,"span",E,E,100,N],[3,"Else",E,"`else`",N,N],[12,"span",E,E,101,N],[3,"Enum",E,"`enum`",N,N],[12,"span",E,E,102,N],[3,R[1040],E,"`existential`",N,N],[12,"span",E,E,103,N],[3,"Extern",E,"`extern`",N,N],[12,"span",E,E,104,N],[3,"Final",E,"`final`",N,N],[12,"span",E,E,105,N],[3,"Fn",E,"`fn`",N,N],[12,"span",E,E,106,N],[3,"For",E,"`for`",N,N],[12,"span",E,E,107,N],[3,"If",E,"`if`",N,N],[12,"span",E,E,108,N],[3,"Impl",E,"`impl`",N,N],[12,"span",E,E,109,N],[3,"In",E,"`in`",N,N],[12,"span",E,E,110,N],[3,"Let",E,"`let`",N,N],[12,"span",E,E,111,N],[3,"Loop",E,"`loop`",N,N],[12,"span",E,E,112,N],[3,"Macro",E,"`macro`",N,N],[12,"span",E,E,113,N],[3,"Match",E,"`match`",N,N],[12,"span",E,E,114,N],[3,"Mod",E,"`mod`",N,N],[12,"span",E,E,115,N],[3,"Move",E,"`move`",N,N],[12,"span",E,E,116,N],[3,"Mut",E,"`mut`",N,N],[12,"span",E,E,117,N],[3,"Override",E,"`override`",N,N],[12,"span",E,E,118,N],[3,"Priv",E,"`priv`",N,N],[12,"span",E,E,119,N],[3,"Pub",E,"`pub`",N,N],[12,"span",E,E,120,N],[3,"Ref",E,"`ref`",N,N],[12,"span",E,E,121,N],[3,"Return",E,"`return`",N,N],[12,"span",E,E,122,N],[3,"SelfType",E,"`Self`",N,N],[12,"span",E,E,123,N],[3,"SelfValue",E,"`self`",N,N],[12,"span",E,E,124,N],[3,"Static",E,"`static`",N,N],[12,"span",E,E,125,N],[3,"Struct",E,"`struct`",N,N],[12,"span",E,E,126,N],[3,"Super",E,"`super`",N,N],[12,"span",E,E,127,N],[3,"Trait",E,"`trait`",N,N],[12,"span",E,E,128,N],[3,"Try",E,"`try`",N,N],[12,"span",E,E,129,N],[3,"Type",E,"`type`",N,N],[12,"span",E,E,130,N],[3,"Typeof",E,"`typeof`",N,N],[12,"span",E,E,131,N],[3,"Union",E,"`union`",N,N],[12,"span",E,E,132,N],[3,"Unsafe",E,"`unsafe`",N,N],[12,"span",E,E,133,N],[3,"Unsized",E,"`unsized`",N,N],[12,"span",E,E,134,N],[3,"Use",E,"`use`",N,N],[12,"span",E,E,135,N],[3,"Virtual",E,"`virtual`",N,N],[12,"span",E,E,136,N],[3,"Where",E,"`where`",N,N],[12,"span",E,E,137,N],[3,"While",E,"`while`",N,N],[12,"span",E,E,138,N],[3,"Yield",E,"`yield`",N,N],[12,"span",E,E,139,N],[3,"Add",E,"`+`",N,N],[12,"spans",E,E,140,N],[3,"AddEq",E,"`+=`",N,N],[12,"spans",E,E,141,N],[3,"And",E,"`&`",N,N],[12,"spans",E,E,142,N],[3,"AndAnd",E,"`&&`",N,N],[12,"spans",E,E,143,N],[3,"AndEq",E,"`&=`",N,N],[12,"spans",E,E,144,N],[3,"At",E,"`@`",N,N],[12,"spans",E,E,145,N],[3,"Bang",E,"`!`",N,N],[12,"spans",E,E,146,N],[3,"Caret",E,"`^`",N,N],[12,"spans",E,E,147,N],[3,"CaretEq",E,"`^=`",N,N],[12,"spans",E,E,148,N],[3,"Colon",E,"`:`",N,N],[12,"spans",E,E,149,N],[3,"Colon2",E,"`::`",N,N],[12,"spans",E,E,150,N],[3,"Comma",E,"`,`",N,N],[12,"spans",E,E,151,N],[3,"Div",E,"`/`",N,N],[12,"spans",E,E,152,N],[3,"DivEq",E,"`/=`",N,N],[12,"spans",E,E,153,N],[3,"Dollar",E,"`$`",N,N],[12,"spans",E,E,154,N],[3,"Dot",E,"`.`",N,N],[12,"spans",E,E,155,N],[3,"Dot2",E,"`..`",N,N],[12,"spans",E,E,156,N],[3,"Dot3",E,"`...`",N,N],[12,"spans",E,E,157,N],[3,"DotDotEq",E,"`..=`",N,N],[12,"spans",E,E,158,N],[3,"Eq",E,"`=`",N,N],[12,"spans",E,E,159,N],[3,"EqEq",E,"`==`",N,N],[12,"spans",E,E,160,N],[3,"Ge",E,"`>=`",N,N],[12,"spans",E,E,161,N],[3,"Gt",E,"`>`",N,N],[12,"spans",E,E,162,N],[3,"Le",E,"`<=`",N,N],[12,"spans",E,E,163,N],[3,"Lt",E,"`<`",N,N],[12,"spans",E,E,164,N],[3,"MulEq",E,"`*=`",N,N],[12,"spans",E,E,165,N],[3,"Ne",E,"`!=`",N,N],[12,"spans",E,E,166,N],[3,"Or",E,"`|`",N,N],[12,"spans",E,E,167,N],[3,"OrEq",E,"`|=`",N,N],[12,"spans",E,E,168,N],[3,"OrOr",E,"`||`",N,N],[12,"spans",E,E,169,N],[3,"Pound",E,"`#`",N,N],[12,"spans",E,E,170,N],[3,"Question",E,"`?`",N,N],[12,"spans",E,E,171,N],[3,"RArrow",E,"`->`",N,N],[12,"spans",E,E,172,N],[3,"LArrow",E,"`<-`",N,N],[12,"spans",E,E,173,N],[3,"Rem",E,"`%`",N,N],[12,"spans",E,E,174,N],[3,"RemEq",E,"`%=`",N,N],[12,"spans",E,E,175,N],[3,"FatArrow",E,"`=>`",N,N],[12,"spans",E,E,176,N],[3,"Semi",E,"`;`",N,N],[12,"spans",E,E,177,N],[3,"Shl",E,"`<<`",N,N],[12,"spans",E,E,178,N],[3,"ShlEq",E,"`<<=`",N,N],[12,"spans",E,E,179,N],[3,"Shr",E,"`>>`",N,N],[12,"spans",E,E,180,N],[3,"ShrEq",E,"`>>=`",N,N],[12,"spans",E,E,181,N],[3,"Star",E,"`*`",N,N],[12,"spans",E,E,182,N],[3,"Sub",E,"`-`",N,N],[12,"spans",E,E,183,N],[3,"SubEq",E,"`-=`",N,N],[12,"spans",E,E,184,N],[3,"Tilde",E,"`~`",N,N],[12,"spans",E,E,185,N],[3,"Brace",E,"`{...}`",N,N],[12,"span",E,E,186,N],[3,"Bracket",E,"`[...]`",N,N],[12,"span",E,E,187,N],[3,"Paren",E,"`(...)`",N,N],[12,"span",E,E,188,N],[3,"Group",E,"None-delimited group",N,N],[12,"span",E,E,189,N],[8,"Token",E,"Marker trait for types that represent single tokens.",N,N],[11,R[916],E,E,186,[[["self"],[R[330]],["f"]]]],[11,R[916],E,E,187,[[["self"],[R[330]],["f"]]]],[11,R[916],E,E,188,[[["self"],[R[330]],["f"]]]],[11,R[916],E,E,189,[[["self"],[R[330]],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[["meta"],[R[3],["meta"]]]]],[11,"parse_outer",E,"Parses zero or more outer attributes from the stream.",0,[[[R[917]]],[[R[3],["vec"]],["vec"]]]],[11,"parse_inner",E,"Parses zero or more inner attributes from the stream.",0,[[[R[917]]],[[R[3],["vec"]],["vec"]]]],[11,"name",E,"Returns the identifier that begins this structured meta…",64,[[["self"]],["ident"]]],[11,"parse_named",E,"Parses a named (braced struct) field.",3,[[[R[917]]],[R[3]]]],[11,"parse_unnamed",E,"Parses an unnamed (tuple struct) field.",3,[[[R[917]]],[R[3]]]],[11,"iter",E,"Get an iterator over the borrowed [`Field`] items in this…",66,[[["self"]],[["field"],["iter",["field"]]]]],[11,"iter_mut",E,"Get an iterator over the mutably borrowed [`Field`] items…",66,[[["self"]],[["itermut",["field"]],["field"]]]],[11,"type_params",E,"Returns an Iterator<Item = &TypeParam> over the type…",23,[[["self"]],["typeparams"]]],[11,"type_params_mut",E,"Returns an Iterator<Item = &mut TypeParam> over the type…",23,[[["self"]],["typeparamsmut"]]],[11,R[821],E,"Returns an Iterator<Item = &LifetimeDef> over the lifetime…",23,[[["self"]],[R[821]]]],[11,"lifetimes_mut",E,"Returns an Iterator<Item = &mut LifetimeDef> over the…",23,[[["self"]],["lifetimesmut"]]],[11,"const_params",E,"Returns an Iterator<Item = &ConstParam> over the constant…",23,[[["self"]],["constparams"]]],[11,"const_params_mut",E,"Returns an Iterator<Item = &mut ConstParam> over the…",23,[[["self"]],["constparamsmut"]]],[11,"make_where_clause",E,"Initializes an empty `where`-clause if there is not one…",23,[[["self"]],[R[998]]]],[11,"split_for_impl",E,"Split a type's generics into the pieces required for…",23,[[["self"]]]],[11,"as_turbofish",E,"Turn a type's generics like `<X, Y>` into a turbofish like…",190,[[["self"]],[R[995]]]],[11,"new",E,E,24,[[[R[827]]],["self"]]],[11,"new",E,"Panics",31,[[["str"],["span"]],["self"]]],[11,"new",E,"Interpret a Syn literal from a proc-macro2 literal.",76,[[[R[334]]],["self"]]],[11,"new",E,E,191,[[["str"],["span"]],["self"]]],[11,"value",E,E,191,[[["self"]],["string"]]],[11,"parse",E,"Parse a syntax tree node from the content of this string…",191,[[["self"]],[[R[3]],["parse"]]]],[11,"parse_with",E,"Invoke parser on the content of this string literal.",191,[[["self"],["parser"]],[R[3]]]],[11,"span",E,E,191,[[["self"]],["span"]]],[11,R[332],E,E,191,[[["self"],["span"]]]],[11,"new",E,E,192,[[["span"]],["self"]]],[11,"value",E,E,192,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"span",E,E,192,[[["self"]],["span"]]],[11,R[332],E,E,192,[[["self"],["span"]]]],[11,"new",E,E,193,[[["span"],["u8"]],["self"]]],[11,"value",E,E,193,[[["self"]],["u8"]]],[11,"span",E,E,193,[[["self"]],["span"]]],[11,R[332],E,E,193,[[["self"],["span"]]]],[11,"new",E,E,194,[[["char"],["span"]],["self"]]],[11,"value",E,E,194,[[["self"]],["char"]]],[11,"span",E,E,194,[[["self"]],["span"]]],[11,R[332],E,E,194,[[["self"],["span"]]]],[11,"new",E,E,195,[[[R[918]],["u64"],["span"]],["self"]]],[11,"value",E,E,195,[[["self"]],["u64"]]],[11,"suffix",E,E,195,[[["self"]],[R[918]]]],[11,"span",E,E,195,[[["self"]],["span"]]],[11,R[332],E,E,195,[[["self"],["span"]]]],[11,"new",E,E,196,[[[R[919]],["f64"],["span"]],["self"]]],[11,"value",E,E,196,[[["self"]],["f64"]]],[11,"suffix",E,E,196,[[["self"]],[R[919]]]],[11,"span",E,E,196,[[["self"]],["span"]]],[11,R[332],E,E,196,[[["self"],["span"]]]],[11,"span",E,E,33,[[["self"]],["span"]]],[11,R[332],E,E,33,[[["self"],["span"]]]],[11,"parse_body",E,R[920],34,[[["self"]],[[R[3]],["parse"]]]],[11,"parse_body_with",E,R[920],34,[[["self"],["parser"]],[R[3]]]],[11,R[921],E,"In some positions, types may not contain the `+`…",84,[[[R[917]]],[R[3]]]],[11,R[921],E,E,83,[[[R[917]]],[R[3]]]],[11,"parse",E,E,83,[[[R[917]],["bool"]],[R[3]]]],[11,R[921],E,E,53,[[[R[917]]],[R[3]]]],[11,"parse",E,E,53,[[[R[917]],["bool"]],[R[3]]]],[11,"parse_mod_style",E,"Parse a `Path` containing no path arguments on any of its…",60,[[[R[917]]],[R[3]]]],[11,"is_ident",E,"Determines whether this is a path of length 1 equal to the…",60,[[["self"],["i"]],["bool"]]],[11,R[589],E,E,86,[[["self"]],["bool"]]],[0,"buffer",E,"A stably addressed token buffer supporting efficient…",N,N],[3,R[1042],R[943],"A buffer that can be efficiently traversed multiple times,…",N,N],[3,"Cursor",E,"A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new",E,R[922],197,[[[R[330]]],[R[923]]]],[11,"new2",E,R[922],197,[[[R[330]]],[R[923]]]],[11,"begin",E,"Creates a cursor referencing the first token in the buffer…",197,[[["self"]],["cursor"]]],[11,"empty",E,"Creates a cursor referencing a static empty TokenStream.",198,[[],["self"]]],[11,"eof",E,"Checks whether the cursor is currently pointing at the end…",198,[[],["bool"]]],[11,"group",E,"If the cursor is pointing at a `Group` with the given…",198,[[[R[331]]],[R[25]]]],[11,"ident",E,"If the cursor is pointing at a `Ident`, returns it along…",198,[[],[R[25]]]],[11,"punct",E,"If the cursor is pointing at an `Punct`, returns it along…",198,[[],[R[25]]]],[11,R[334],E,"If the cursor is pointing at a `Literal`, return it along…",198,[[],[R[25]]]],[11,R[827],E,"If the cursor is pointing at a `Lifetime`, returns it…",198,[[],[R[25]]]],[11,R[924],E,"Copies all remaining tokens visible from this cursor into…",198,[[],[R[330]]]],[11,"token_tree",E,"If the cursor is pointing at a `TokenTree`, returns it…",198,[[],[R[25]]]],[11,"span",E,"Returns the `Span` of the current token, or…",198,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",N,N],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",N,N],[10,R[946],E,"Parses any identifier including keywords.",199,[[[R[917]]],[R[3]]]],[18,"peek_any",E,"Peeks any identifier including keywords. Usage:…",199,N],[10,"unraw",E,"Strips the raw marker `r#`, if any, from the beginning of…",199,[[["self"]],["ident"]]],[0,R[926],"syn","A punctuated sequence of syntax tree nodes separated by…",N,N],[3,R[925],R[944],"A punctuated sequence of syntax tree nodes of type `T`…",N,N],[3,"Pairs",E,"An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut",E,"An iterator over mutably borrowed pairs of type `Pair<&mut…",N,N],[3,"IntoPairs",E,"An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,R[328],E,"An iterator over owned values of type `T`.",N,N],[3,"Iter",E,"An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut",E,"An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair",E,"A single syntax tree node of type `T` followed by its…",N,N],[13,R[925],E,E,200,N],[13,"End",E,E,200,N],[11,"new",E,"Creates an empty punctuated sequence.",201,[[],[R[926]]]],[11,R[589],E,"Determines whether this punctuated sequence is empty,…",201,[[["self"]],["bool"]]],[11,"len",E,"Returns the number of syntax tree nodes in this punctuated…",201,[[["self"]],["usize"]]],[11,"first",E,"Borrows the first punctuated pair in this sequence.",201,[[["self"]],[[R[25],["pair"]],["pair"]]]],[11,"last",E,"Borrows the last punctuated pair in this sequence.",201,[[["self"]],[[R[25],["pair"]],["pair"]]]],[11,"last_mut",E,"Mutably borrows the last punctuated pair in this sequence.",201,[[["self"]],[["pair"],[R[25],["pair"]]]]],[11,"iter",E,"Returns an iterator over borrowed syntax tree nodes of…",201,[[["self"]],["iter"]]],[11,"iter_mut",E,"Returns an iterator over mutably borrowed syntax tree…",201,[[["self"]],["itermut"]]],[11,"pairs",E,R[927],201,[[["self"]],["pairs"]]],[11,"pairs_mut",E,R[927],201,[[["self"]],["pairsmut"]]],[11,"into_pairs",E,R[927],201,[[],["intopairs"]]],[11,"push_value",E,R[928],201,[[["self"],[T]]]],[11,"push_punct",E,"Appends a trailing punctuation onto the end of this…",201,[[["self"],["p"]]]],[11,"pop",E,"Removes the last punctuated pair from this sequence, or…",201,[[["self"]],[[R[25],["pair"]],["pair"]]]],[11,"trailing_punct",E,"Determines whether this punctuated sequence ends with a…",201,[[["self"]],["bool"]]],[11,"empty_or_trailing",E,"Returns true if either this `Punctuated` is empty, or it…",201,[[["self"]],["bool"]]],[11,"push",E,R[928],201,[[["self"],[T]]]],[11,"insert",E,"Inserts an element at position `index`.",201,[[["self"],["usize"],[T]]]],[11,R[936],E,R[937],201,[[[R[917]]],[R[3]]]],[11,"parse_terminated_with",E,"Parses zero or more occurrences of `T` using the given…",201,[[[R[917]]],[R[3]]]],[11,"parse_separated_nonempty",E,"Parses one or more occurrences of `T` separated by…",201,[[[R[917]]],[R[3]]]],[11,"parse_separated_nonempty_with",E,"Parses one or more occurrences of `T` using the given…",201,[[[R[917]]],[R[3]]]],[11,"into_value",E,"Extracts the syntax tree node from this punctuated pair,…",200,[[],[T]]],[11,"value",E,"Borrows the syntax tree node from this punctuated pair.",200,[[["self"]],[T]]],[11,"value_mut",E,"Mutably borrows the syntax tree node from this punctuated…",200,[[["self"]],[T]]],[11,"punct",E,"Borrows the punctuation from this punctuated pair, unless…",200,[[["self"]],[[R[25]],["p"]]]],[11,"new",E,"Creates a punctuated pair out of a syntax tree node and an…",200,[[[T],[R[25]]],["self"]]],[11,"into_tuple",E,"Produces this punctuated pair as a tuple of syntax tree…",200,[[]]],[0,"spanned","syn",R[929],N,N],[8,"Spanned","syn::spanned",R[929],N,N],[10,"span",E,"Returns a `Span` covering the complete contents of this…",202,[[["self"]],["span"]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",N,N],[3,"Error",R[931],R[930],N,N],[3,"Lookahead1",E,"Support for checking the next token in a stream to decide…",N,N],[3,R[1044],E,"Cursor position within a buffered token stream.",N,N],[3,"StepCursor",E,"Cursor state associated with speculative parsing.",N,N],[0,"discouraged",E,"Extensions to the parsing API with niche applicability.",N,N],[8,R[1043],"syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",N,N],[10,R[947],E,"Advance this parse stream to the position of a forked…",203,[[["self"]]]],[6,"Result",R[931],R[940],N,N],[6,"ParseStream",E,"Input to a Syn parser function.",N,N],[8,"Peek",E,"Types that can be parsed by looking at just one token.",N,N],[8,"Parse",E,"Parsing interface implemented by all types that can be…",N,N],[10,"parse",E,E,204,[[[R[917]]],[R[3]]]],[8,"Parser",E,"Parser that can parse Rust tokens into a particular syntax…",N,N],[16,"Output",E,E,205,N],[10,"parse2",E,R[932],205,[[[R[330]]],[R[3]]]],[11,"parse",E,R[933],205,[[[R[330]]],[R[3]]]],[11,R[934],E,R[935],205,[[["str"]],[R[3]]]],[11,"error",E,R[939],206,[[[R[941]]],["error"]]],[11,"parse",E,"Parses a syntax tree node of type `T`, advancing the…",207,[[["self"]],[[R[3]],["parse"]]]],[11,"call",E,"Calls the given parser function to parse a syntax tree…",207,[[["self"]],[R[3]]]],[11,"peek",E,R[1010],207,[[["self"],["peek"]],["bool"]]],[11,"peek2",E,"Looks at the second-next token in the parse stream.",207,[[["self"],["peek"]],["bool"]]],[11,"peek3",E,"Looks at the third-next token in the parse stream.",207,[[["self"],["peek"]],["bool"]]],[11,R[936],E,R[937],207,[[["self"]],[[R[3],[R[926]]],[R[926]]]]],[11,R[589],E,"Returns whether there are tokens remaining in this stream.",207,[[["self"]],["bool"]]],[11,R[938],E,"Constructs a helper for peeking at the next token in this…",207,[[["self"]],[R[938]]]],[11,"fork",E,"Forks a parse stream so that parsing tokens out of either…",207,[[["self"]],["self"]]],[11,"error",E,R[939],207,[[["self"],[R[941]]],["error"]]],[11,"step",E,"Speculatively parses tokens from this parse stream,…",207,[[["self"],["f"]],[R[3]]]],[11,"cursor",E,"Provides low-level access to the token representation…",207,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",208,[[[R[941]],["span"]],["self"]]],[11,"new_spanned",E,"Creates an error with the specified message spanning the…",208,[[["totokens"],[R[941]]],["self"]]],[11,"span",E,"The source location of the error.",208,[[["self"]],["span"]]],[11,"to_compile_error",E,"Render the error as an invocation of [`compile_error!`].",208,[[["self"]],[R[330]]]],[6,"AttributeArgs",E,"Conventional argument type associated with an invocation…",N,N],[6,"Result",E,R[940],N,N],[14,"parenthesized",E,"Parse a set of parentheses and expose their content to…",N,N],[14,"braced",E,"Parse a set of curly braces and expose their content to…",N,N],[14,"bracketed",E,"Parse a set of square brackets and expose their content to…",N,N],[14,"Token",E,"A type-macro that expands to the name of the Rust type…",N,N],[14,"parse_quote",E,"Quasi-quotation macro that accepts input like the…",N,N],[14,"parse_macro_input",E,"Parse the input TokenStream of a macro, triggering a…",N,N],[14,"custom_keyword",E,"Define a type that supports parsing and printing a given…",N,N],[14,"custom_punctuation",E,"Define a type that supports parsing and printing a…",N,N],[11,"peek",E,E,209,[[["cursor"]],["bool"]]],[11,R[941],E,E,209,[[],["str"]]],[11,"span",E,E,209,[[["self"]],["span"]]],[11,"from",E,E,209,[[[T]],[T]]],[11,"into",E,E,209,[[],[U]]],[11,R[98],E,E,209,[[["self"]],["string"]]],[11,R[41],E,E,209,[[["self"]],[T]]],[11,R[42],E,E,209,[[["self"],[T]]]],[11,R[8],E,E,209,[[[U]],[R[3]]]],[11,R[9],E,E,209,[[],[R[3]]]],[11,R[28],E,E,209,[[["self"]],[T]]],[11,R[10],E,E,209,[[["self"]],[T]]],[11,R[11],E,E,209,[[["self"]],[R[29]]]],[11,"span",E,E,0,[[["self"]],["span"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"],[T]]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"span",E,E,1,[[["self"]],["span"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"span",E,E,2,[[["self"]],["span"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"span",E,E,3,[[["self"]],["span"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"span",E,E,4,[[["self"]],["span"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"],[T]]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"span",E,E,5,[[["self"]],["span"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"],[T]]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"span",E,E,6,[[["self"]],["span"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[42],E,E,6,[[["self"],[T]]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"span",E,E,7,[[["self"]],["span"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[42],E,E,7,[[["self"],[T]]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"span",E,E,8,[[["self"]],["span"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"],[T]]]],[11,R[8],E,E,8,[[[U]],[R[3]]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"span",E,E,9,[[["self"]],["span"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[42],E,E,9,[[["self"],[T]]]],[11,R[8],E,E,9,[[[U]],[R[3]]]],[11,R[9],E,E,9,[[],[R[3]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"from",E,E,210,[[[T]],[T]]],[11,"into",E,E,210,[[],[U]]],[11,R[41],E,E,210,[[["self"]],[T]]],[11,R[42],E,E,210,[[["self"],[T]]]],[11,R[8],E,E,210,[[[U]],[R[3]]]],[11,R[9],E,E,210,[[],[R[3]]]],[11,R[28],E,E,210,[[["self"]],[T]]],[11,R[10],E,E,210,[[["self"]],[T]]],[11,R[11],E,E,210,[[["self"]],[R[29]]]],[11,"from",E,E,211,[[[T]],[T]]],[11,"into",E,E,211,[[],[U]]],[11,R[41],E,E,211,[[["self"]],[T]]],[11,R[42],E,E,211,[[["self"],[T]]]],[11,R[8],E,E,211,[[[U]],[R[3]]]],[11,R[9],E,E,211,[[],[R[3]]]],[11,R[28],E,E,211,[[["self"]],[T]]],[11,R[10],E,E,211,[[["self"]],[T]]],[11,R[11],E,E,211,[[["self"]],[R[29]]]],[11,"from",E,E,212,[[[T]],[T]]],[11,"into",E,E,212,[[],[U]]],[11,R[41],E,E,212,[[["self"]],[T]]],[11,R[42],E,E,212,[[["self"],[T]]]],[11,R[8],E,E,212,[[[U]],[R[3]]]],[11,R[9],E,E,212,[[],[R[3]]]],[11,R[28],E,E,212,[[["self"]],[T]]],[11,R[10],E,E,212,[[["self"]],[T]]],[11,R[11],E,E,212,[[["self"]],[R[29]]]],[11,"from",E,E,213,[[[T]],[T]]],[11,"into",E,E,213,[[],[U]]],[11,R[41],E,E,213,[[["self"]],[T]]],[11,R[42],E,E,213,[[["self"],[T]]]],[11,R[8],E,E,213,[[[U]],[R[3]]]],[11,R[9],E,E,213,[[],[R[3]]]],[11,R[28],E,E,213,[[["self"]],[T]]],[11,R[10],E,E,213,[[["self"]],[T]]],[11,R[11],E,E,213,[[["self"]],[R[29]]]],[11,"span",E,E,10,[[["self"]],["span"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[42],E,E,10,[[["self"],[T]]]],[11,R[8],E,E,10,[[[U]],[R[3]]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"from",E,E,214,[[[T]],[T]]],[11,"into",E,E,214,[[],[U]]],[11,R[41],E,E,214,[[["self"]],[T]]],[11,R[42],E,E,214,[[["self"],[T]]]],[11,R[8],E,E,214,[[[U]],[R[3]]]],[11,R[9],E,E,214,[[],[R[3]]]],[11,R[28],E,E,214,[[["self"]],[T]]],[11,R[10],E,E,214,[[["self"]],[T]]],[11,R[11],E,E,214,[[["self"]],[R[29]]]],[11,"from",E,E,215,[[[T]],[T]]],[11,"into",E,E,215,[[],[U]]],[11,R[41],E,E,215,[[["self"]],[T]]],[11,R[42],E,E,215,[[["self"],[T]]]],[11,R[8],E,E,215,[[[U]],[R[3]]]],[11,R[9],E,E,215,[[],[R[3]]]],[11,R[28],E,E,215,[[["self"]],[T]]],[11,R[10],E,E,215,[[["self"]],[T]]],[11,R[11],E,E,215,[[["self"]],[R[29]]]],[11,"from",E,E,216,[[[T]],[T]]],[11,"into",E,E,216,[[],[U]]],[11,R[41],E,E,216,[[["self"]],[T]]],[11,R[42],E,E,216,[[["self"],[T]]]],[11,R[8],E,E,216,[[[U]],[R[3]]]],[11,R[9],E,E,216,[[],[R[3]]]],[11,R[28],E,E,216,[[["self"]],[T]]],[11,R[10],E,E,216,[[["self"]],[T]]],[11,R[11],E,E,216,[[["self"]],[R[29]]]],[11,"span",E,E,11,[[["self"]],["span"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[42],E,E,11,[[["self"],[T]]]],[11,R[8],E,E,11,[[[U]],[R[3]]]],[11,R[9],E,E,11,[[],[R[3]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"span",E,E,12,[[["self"]],["span"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[42],E,E,12,[[["self"],[T]]]],[11,R[8],E,E,12,[[[U]],[R[3]]]],[11,R[9],E,E,12,[[],[R[3]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"from",E,E,217,[[[T]],[T]]],[11,"into",E,E,217,[[],[U]]],[11,R[41],E,E,217,[[["self"]],[T]]],[11,R[42],E,E,217,[[["self"],[T]]]],[11,R[8],E,E,217,[[[U]],[R[3]]]],[11,R[9],E,E,217,[[],[R[3]]]],[11,R[28],E,E,217,[[["self"]],[T]]],[11,R[10],E,E,217,[[["self"]],[T]]],[11,R[11],E,E,217,[[["self"]],[R[29]]]],[11,"from",E,E,218,[[[T]],[T]]],[11,"into",E,E,218,[[],[U]]],[11,R[41],E,E,218,[[["self"]],[T]]],[11,R[42],E,E,218,[[["self"],[T]]]],[11,R[8],E,E,218,[[[U]],[R[3]]]],[11,R[9],E,E,218,[[],[R[3]]]],[11,R[28],E,E,218,[[["self"]],[T]]],[11,R[10],E,E,218,[[["self"]],[T]]],[11,R[11],E,E,218,[[["self"]],[R[29]]]],[11,"span",E,E,13,[[["self"]],["span"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[42],E,E,13,[[["self"],[T]]]],[11,R[8],E,E,13,[[[U]],[R[3]]]],[11,R[9],E,E,13,[[],[R[3]]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,"from",E,E,219,[[[T]],[T]]],[11,"into",E,E,219,[[],[U]]],[11,R[41],E,E,219,[[["self"]],[T]]],[11,R[42],E,E,219,[[["self"],[T]]]],[11,R[8],E,E,219,[[[U]],[R[3]]]],[11,R[9],E,E,219,[[],[R[3]]]],[11,R[28],E,E,219,[[["self"]],[T]]],[11,R[10],E,E,219,[[["self"]],[T]]],[11,R[11],E,E,219,[[["self"]],[R[29]]]],[11,"from",E,E,220,[[[T]],[T]]],[11,"into",E,E,220,[[],[U]]],[11,R[41],E,E,220,[[["self"]],[T]]],[11,R[42],E,E,220,[[["self"],[T]]]],[11,R[8],E,E,220,[[[U]],[R[3]]]],[11,R[9],E,E,220,[[],[R[3]]]],[11,R[28],E,E,220,[[["self"]],[T]]],[11,R[10],E,E,220,[[["self"]],[T]]],[11,R[11],E,E,220,[[["self"]],[R[29]]]],[11,"from",E,E,221,[[[T]],[T]]],[11,"into",E,E,221,[[],[U]]],[11,R[41],E,E,221,[[["self"]],[T]]],[11,R[42],E,E,221,[[["self"],[T]]]],[11,R[8],E,E,221,[[[U]],[R[3]]]],[11,R[9],E,E,221,[[],[R[3]]]],[11,R[28],E,E,221,[[["self"]],[T]]],[11,R[10],E,E,221,[[["self"]],[T]]],[11,R[11],E,E,221,[[["self"]],[R[29]]]],[11,"from",E,E,222,[[[T]],[T]]],[11,"into",E,E,222,[[],[U]]],[11,R[41],E,E,222,[[["self"]],[T]]],[11,R[42],E,E,222,[[["self"],[T]]]],[11,R[8],E,E,222,[[[U]],[R[3]]]],[11,R[9],E,E,222,[[],[R[3]]]],[11,R[28],E,E,222,[[["self"]],[T]]],[11,R[10],E,E,222,[[["self"]],[T]]],[11,R[11],E,E,222,[[["self"]],[R[29]]]],[11,"span",E,E,14,[[["self"]],["span"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[42],E,E,14,[[["self"],[T]]]],[11,R[8],E,E,14,[[[U]],[R[3]]]],[11,R[9],E,E,14,[[],[R[3]]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,"from",E,E,223,[[[T]],[T]]],[11,"into",E,E,223,[[],[U]]],[11,R[41],E,E,223,[[["self"]],[T]]],[11,R[42],E,E,223,[[["self"],[T]]]],[11,R[8],E,E,223,[[[U]],[R[3]]]],[11,R[9],E,E,223,[[],[R[3]]]],[11,R[28],E,E,223,[[["self"]],[T]]],[11,R[10],E,E,223,[[["self"]],[T]]],[11,R[11],E,E,223,[[["self"]],[R[29]]]],[11,"span",E,E,15,[[["self"]],["span"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[42],E,E,15,[[["self"],[T]]]],[11,R[8],E,E,15,[[[U]],[R[3]]]],[11,R[9],E,E,15,[[],[R[3]]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,"from",E,E,224,[[[T]],[T]]],[11,"into",E,E,224,[[],[U]]],[11,R[41],E,E,224,[[["self"]],[T]]],[11,R[42],E,E,224,[[["self"],[T]]]],[11,R[8],E,E,224,[[[U]],[R[3]]]],[11,R[9],E,E,224,[[],[R[3]]]],[11,R[28],E,E,224,[[["self"]],[T]]],[11,R[10],E,E,224,[[["self"]],[T]]],[11,R[11],E,E,224,[[["self"]],[R[29]]]],[11,"from",E,E,225,[[[T]],[T]]],[11,"into",E,E,225,[[],[U]]],[11,R[41],E,E,225,[[["self"]],[T]]],[11,R[42],E,E,225,[[["self"],[T]]]],[11,R[8],E,E,225,[[[U]],[R[3]]]],[11,R[9],E,E,225,[[],[R[3]]]],[11,R[28],E,E,225,[[["self"]],[T]]],[11,R[10],E,E,225,[[["self"]],[T]]],[11,R[11],E,E,225,[[["self"]],[R[29]]]],[11,"from",E,E,226,[[[T]],[T]]],[11,"into",E,E,226,[[],[U]]],[11,R[41],E,E,226,[[["self"]],[T]]],[11,R[42],E,E,226,[[["self"],[T]]]],[11,R[8],E,E,226,[[[U]],[R[3]]]],[11,R[9],E,E,226,[[],[R[3]]]],[11,R[28],E,E,226,[[["self"]],[T]]],[11,R[10],E,E,226,[[["self"]],[T]]],[11,R[11],E,E,226,[[["self"]],[R[29]]]],[11,"from",E,E,227,[[[T]],[T]]],[11,"into",E,E,227,[[],[U]]],[11,R[41],E,E,227,[[["self"]],[T]]],[11,R[42],E,E,227,[[["self"],[T]]]],[11,R[8],E,E,227,[[[U]],[R[3]]]],[11,R[9],E,E,227,[[],[R[3]]]],[11,R[28],E,E,227,[[["self"]],[T]]],[11,R[10],E,E,227,[[["self"]],[T]]],[11,R[11],E,E,227,[[["self"]],[R[29]]]],[11,"span",E,E,16,[[["self"]],["span"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[42],E,E,16,[[["self"],[T]]]],[11,R[8],E,E,16,[[[U]],[R[3]]]],[11,R[9],E,E,16,[[],[R[3]]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[29]]]],[11,"span",E,E,17,[[["self"]],["span"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[42],E,E,17,[[["self"],[T]]]],[11,R[8],E,E,17,[[[U]],[R[3]]]],[11,R[9],E,E,17,[[],[R[3]]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[29]]]],[11,"from",E,E,228,[[[T]],[T]]],[11,"into",E,E,228,[[],[U]]],[11,R[41],E,E,228,[[["self"]],[T]]],[11,R[42],E,E,228,[[["self"],[T]]]],[11,R[8],E,E,228,[[[U]],[R[3]]]],[11,R[9],E,E,228,[[],[R[3]]]],[11,R[28],E,E,228,[[["self"]],[T]]],[11,R[10],E,E,228,[[["self"]],[T]]],[11,R[11],E,E,228,[[["self"]],[R[29]]]],[11,"from",E,E,229,[[[T]],[T]]],[11,"into",E,E,229,[[],[U]]],[11,R[41],E,E,229,[[["self"]],[T]]],[11,R[42],E,E,229,[[["self"],[T]]]],[11,R[8],E,E,229,[[[U]],[R[3]]]],[11,R[9],E,E,229,[[],[R[3]]]],[11,R[28],E,E,229,[[["self"]],[T]]],[11,R[10],E,E,229,[[["self"]],[T]]],[11,R[11],E,E,229,[[["self"]],[R[29]]]],[11,"from",E,E,230,[[[T]],[T]]],[11,"into",E,E,230,[[],[U]]],[11,R[41],E,E,230,[[["self"]],[T]]],[11,R[42],E,E,230,[[["self"],[T]]]],[11,R[8],E,E,230,[[[U]],[R[3]]]],[11,R[9],E,E,230,[[],[R[3]]]],[11,R[28],E,E,230,[[["self"]],[T]]],[11,R[10],E,E,230,[[["self"]],[T]]],[11,R[11],E,E,230,[[["self"]],[R[29]]]],[11,"from",E,E,231,[[[T]],[T]]],[11,"into",E,E,231,[[],[U]]],[11,R[41],E,E,231,[[["self"]],[T]]],[11,R[42],E,E,231,[[["self"],[T]]]],[11,R[8],E,E,231,[[[U]],[R[3]]]],[11,R[9],E,E,231,[[],[R[3]]]],[11,R[28],E,E,231,[[["self"]],[T]]],[11,R[10],E,E,231,[[["self"]],[T]]],[11,R[11],E,E,231,[[["self"]],[R[29]]]],[11,"from",E,E,232,[[[T]],[T]]],[11,"into",E,E,232,[[],[U]]],[11,R[41],E,E,232,[[["self"]],[T]]],[11,R[42],E,E,232,[[["self"],[T]]]],[11,R[8],E,E,232,[[[U]],[R[3]]]],[11,R[9],E,E,232,[[],[R[3]]]],[11,R[28],E,E,232,[[["self"]],[T]]],[11,R[10],E,E,232,[[["self"]],[T]]],[11,R[11],E,E,232,[[["self"]],[R[29]]]],[11,"from",E,E,233,[[[T]],[T]]],[11,"into",E,E,233,[[],[U]]],[11,R[41],E,E,233,[[["self"]],[T]]],[11,R[42],E,E,233,[[["self"],[T]]]],[11,R[8],E,E,233,[[[U]],[R[3]]]],[11,R[9],E,E,233,[[],[R[3]]]],[11,R[28],E,E,233,[[["self"]],[T]]],[11,R[10],E,E,233,[[["self"]],[T]]],[11,R[11],E,E,233,[[["self"]],[R[29]]]],[11,"from",E,E,234,[[[T]],[T]]],[11,"into",E,E,234,[[],[U]]],[11,R[41],E,E,234,[[["self"]],[T]]],[11,R[42],E,E,234,[[["self"],[T]]]],[11,R[8],E,E,234,[[[U]],[R[3]]]],[11,R[9],E,E,234,[[],[R[3]]]],[11,R[28],E,E,234,[[["self"]],[T]]],[11,R[10],E,E,234,[[["self"]],[T]]],[11,R[11],E,E,234,[[["self"]],[R[29]]]],[11,"from",E,E,235,[[[T]],[T]]],[11,"into",E,E,235,[[],[U]]],[11,R[41],E,E,235,[[["self"]],[T]]],[11,R[42],E,E,235,[[["self"],[T]]]],[11,R[8],E,E,235,[[[U]],[R[3]]]],[11,R[9],E,E,235,[[],[R[3]]]],[11,R[28],E,E,235,[[["self"]],[T]]],[11,R[10],E,E,235,[[["self"]],[T]]],[11,R[11],E,E,235,[[["self"]],[R[29]]]],[11,"from",E,E,236,[[[T]],[T]]],[11,"into",E,E,236,[[],[U]]],[11,R[41],E,E,236,[[["self"]],[T]]],[11,R[42],E,E,236,[[["self"],[T]]]],[11,R[8],E,E,236,[[[U]],[R[3]]]],[11,R[9],E,E,236,[[],[R[3]]]],[11,R[28],E,E,236,[[["self"]],[T]]],[11,R[10],E,E,236,[[["self"]],[T]]],[11,R[11],E,E,236,[[["self"]],[R[29]]]],[11,"span",E,E,18,[[["self"]],["span"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[42],E,E,18,[[["self"],[T]]]],[11,R[8],E,E,18,[[[U]],[R[3]]]],[11,R[9],E,E,18,[[],[R[3]]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"from",E,E,237,[[[T]],[T]]],[11,"into",E,E,237,[[],[U]]],[11,R[41],E,E,237,[[["self"]],[T]]],[11,R[42],E,E,237,[[["self"],[T]]]],[11,R[8],E,E,237,[[[U]],[R[3]]]],[11,R[9],E,E,237,[[],[R[3]]]],[11,R[28],E,E,237,[[["self"]],[T]]],[11,R[10],E,E,237,[[["self"]],[T]]],[11,R[11],E,E,237,[[["self"]],[R[29]]]],[11,"span",E,E,19,[[["self"]],["span"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[42],E,E,19,[[["self"],[T]]]],[11,R[8],E,E,19,[[[U]],[R[3]]]],[11,R[9],E,E,19,[[],[R[3]]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"from",E,E,238,[[[T]],[T]]],[11,"into",E,E,238,[[],[U]]],[11,R[41],E,E,238,[[["self"]],[T]]],[11,R[42],E,E,238,[[["self"],[T]]]],[11,R[8],E,E,238,[[[U]],[R[3]]]],[11,R[9],E,E,238,[[],[R[3]]]],[11,R[28],E,E,238,[[["self"]],[T]]],[11,R[10],E,E,238,[[["self"]],[T]]],[11,R[11],E,E,238,[[["self"]],[R[29]]]],[11,"from",E,E,239,[[[T]],[T]]],[11,"into",E,E,239,[[],[U]]],[11,R[41],E,E,239,[[["self"]],[T]]],[11,R[42],E,E,239,[[["self"],[T]]]],[11,R[8],E,E,239,[[[U]],[R[3]]]],[11,R[9],E,E,239,[[],[R[3]]]],[11,R[28],E,E,239,[[["self"]],[T]]],[11,R[10],E,E,239,[[["self"]],[T]]],[11,R[11],E,E,239,[[["self"]],[R[29]]]],[11,"span",E,E,20,[[["self"]],["span"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[42],E,E,20,[[["self"],[T]]]],[11,R[8],E,E,20,[[[U]],[R[3]]]],[11,R[9],E,E,20,[[],[R[3]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"span",E,E,21,[[["self"]],["span"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[42],E,E,21,[[["self"],[T]]]],[11,R[8],E,E,21,[[[U]],[R[3]]]],[11,R[9],E,E,21,[[],[R[3]]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,"span",E,E,22,[[["self"]],["span"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[42],E,E,22,[[["self"],[T]]]],[11,R[8],E,E,22,[[[U]],[R[3]]]],[11,R[9],E,E,22,[[],[R[3]]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"span",E,E,23,[[["self"]],["span"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[42],E,E,23,[[["self"],[T]]]],[11,R[8],E,E,23,[[[U]],[R[3]]]],[11,R[9],E,E,23,[[],[R[3]]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,"span",E,E,24,[[["self"]],["span"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[42],E,E,24,[[["self"],[T]]]],[11,R[8],E,E,24,[[[U]],[R[3]]]],[11,R[9],E,E,24,[[],[R[3]]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,"span",E,E,25,[[["self"]],["span"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[42],E,E,25,[[["self"],[T]]]],[11,R[8],E,E,25,[[[U]],[R[3]]]],[11,R[9],E,E,25,[[],[R[3]]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,"span",E,E,26,[[["self"]],["span"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[41],E,E,26,[[["self"]],[T]]],[11,R[42],E,E,26,[[["self"],[T]]]],[11,R[8],E,E,26,[[[U]],[R[3]]]],[11,R[9],E,E,26,[[],[R[3]]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,"span",E,E,27,[[["self"]],["span"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[42],E,E,27,[[["self"],[T]]]],[11,R[8],E,E,27,[[[U]],[R[3]]]],[11,R[9],E,E,27,[[],[R[3]]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,"span",E,E,28,[[["self"]],["span"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[42],E,E,28,[[["self"],[T]]]],[11,R[8],E,E,28,[[[U]],[R[3]]]],[11,R[9],E,E,28,[[],[R[3]]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,"span",E,E,29,[[["self"]],["span"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[41],E,E,29,[[["self"]],[T]]],[11,R[42],E,E,29,[[["self"],[T]]]],[11,R[8],E,E,29,[[[U]],[R[3]]]],[11,R[9],E,E,29,[[],[R[3]]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[29]]]],[11,"span",E,E,30,[[["self"]],["span"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[41],E,E,30,[[["self"]],[T]]],[11,R[42],E,E,30,[[["self"],[T]]]],[11,R[8],E,E,30,[[[U]],[R[3]]]],[11,R[9],E,E,30,[[],[R[3]]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[29]]]],[11,"span",E,E,240,[[["self"]],["span"]]],[11,"from",E,E,240,[[[T]],[T]]],[11,"into",E,E,240,[[],[U]]],[11,R[41],E,E,240,[[["self"]],[T]]],[11,R[42],E,E,240,[[["self"],[T]]]],[11,R[8],E,E,240,[[[U]],[R[3]]]],[11,R[9],E,E,240,[[],[R[3]]]],[11,R[28],E,E,240,[[["self"]],[T]]],[11,R[10],E,E,240,[[["self"]],[T]]],[11,R[11],E,E,240,[[["self"]],[R[29]]]],[11,"span",E,E,241,[[["self"]],["span"]]],[11,"from",E,E,241,[[[T]],[T]]],[11,"into",E,E,241,[[],[U]]],[11,R[41],E,E,241,[[["self"]],[T]]],[11,R[42],E,E,241,[[["self"],[T]]]],[11,R[8],E,E,241,[[[U]],[R[3]]]],[11,R[9],E,E,241,[[],[R[3]]]],[11,R[28],E,E,241,[[["self"]],[T]]],[11,R[10],E,E,241,[[["self"]],[T]]],[11,R[11],E,E,241,[[["self"]],[R[29]]]],[11,"span",E,E,190,[[["self"]],["span"]]],[11,"from",E,E,190,[[[T]],[T]]],[11,"into",E,E,190,[[],[U]]],[11,R[41],E,E,190,[[["self"]],[T]]],[11,R[42],E,E,190,[[["self"],[T]]]],[11,R[8],E,E,190,[[[U]],[R[3]]]],[11,R[9],E,E,190,[[],[R[3]]]],[11,R[28],E,E,190,[[["self"]],[T]]],[11,R[10],E,E,190,[[["self"]],[T]]],[11,R[11],E,E,190,[[["self"]],[R[29]]]],[11,"peek",E,E,31,[[["cursor"]],["bool"]]],[11,R[941],E,E,31,[[],["str"]]],[11,"span",E,E,31,[[["self"]],["span"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[98],E,E,31,[[["self"]],["string"]]],[11,R[41],E,E,31,[[["self"]],[T]]],[11,R[42],E,E,31,[[["self"],[T]]]],[11,R[8],E,E,31,[[[U]],[R[3]]]],[11,R[9],E,E,31,[[],[R[3]]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[29]]]],[11,"peek",E,E,32,[[["cursor"]],["bool"]]],[11,R[941],E,E,32,[[],["str"]]],[11,"span",E,E,32,[[["self"]],["span"]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[41],E,E,32,[[["self"]],[T]]],[11,R[42],E,E,32,[[["self"],[T]]]],[11,R[8],E,E,32,[[[U]],[R[3]]]],[11,R[9],E,E,32,[[],[R[3]]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[29]]]],[11,"peek",E,E,193,[[["cursor"]],["bool"]]],[11,R[941],E,E,193,[[],["str"]]],[11,"span",E,E,193,[[["self"]],["span"]]],[11,"from",E,E,193,[[[T]],[T]]],[11,"into",E,E,193,[[],[U]]],[11,R[41],E,E,193,[[["self"]],[T]]],[11,R[42],E,E,193,[[["self"],[T]]]],[11,R[8],E,E,193,[[[U]],[R[3]]]],[11,R[9],E,E,193,[[],[R[3]]]],[11,R[28],E,E,193,[[["self"]],[T]]],[11,R[10],E,E,193,[[["self"]],[T]]],[11,R[11],E,E,193,[[["self"]],[R[29]]]],[11,"peek",E,E,192,[[["cursor"]],["bool"]]],[11,R[941],E,E,192,[[],["str"]]],[11,"span",E,E,192,[[["self"]],["span"]]],[11,"from",E,E,192,[[[T]],[T]]],[11,"into",E,E,192,[[],[U]]],[11,R[41],E,E,192,[[["self"]],[T]]],[11,R[42],E,E,192,[[["self"],[T]]]],[11,R[8],E,E,192,[[[U]],[R[3]]]],[11,R[9],E,E,192,[[],[R[3]]]],[11,R[28],E,E,192,[[["self"]],[T]]],[11,R[10],E,E,192,[[["self"]],[T]]],[11,R[11],E,E,192,[[["self"]],[R[29]]]],[11,"peek",E,E,194,[[["cursor"]],["bool"]]],[11,R[941],E,E,194,[[],["str"]]],[11,"span",E,E,194,[[["self"]],["span"]]],[11,"from",E,E,194,[[[T]],[T]]],[11,"into",E,E,194,[[],[U]]],[11,R[41],E,E,194,[[["self"]],[T]]],[11,R[42],E,E,194,[[["self"],[T]]]],[11,R[8],E,E,194,[[[U]],[R[3]]]],[11,R[9],E,E,194,[[],[R[3]]]],[11,R[28],E,E,194,[[["self"]],[T]]],[11,R[10],E,E,194,[[["self"]],[T]]],[11,R[11],E,E,194,[[["self"]],[R[29]]]],[11,"peek",E,E,196,[[["cursor"]],["bool"]]],[11,R[941],E,E,196,[[],["str"]]],[11,"span",E,E,196,[[["self"]],["span"]]],[11,"from",E,E,196,[[[T]],[T]]],[11,"into",E,E,196,[[],[U]]],[11,R[41],E,E,196,[[["self"]],[T]]],[11,R[42],E,E,196,[[["self"],[T]]]],[11,R[8],E,E,196,[[[U]],[R[3]]]],[11,R[9],E,E,196,[[],[R[3]]]],[11,R[28],E,E,196,[[["self"]],[T]]],[11,R[10],E,E,196,[[["self"]],[T]]],[11,R[11],E,E,196,[[["self"]],[R[29]]]],[11,"peek",E,E,195,[[["cursor"]],["bool"]]],[11,R[941],E,E,195,[[],["str"]]],[11,"span",E,E,195,[[["self"]],["span"]]],[11,"from",E,E,195,[[[T]],[T]]],[11,"into",E,E,195,[[],[U]]],[11,R[41],E,E,195,[[["self"]],[T]]],[11,R[42],E,E,195,[[["self"],[T]]]],[11,R[8],E,E,195,[[[U]],[R[3]]]],[11,R[9],E,E,195,[[],[R[3]]]],[11,R[28],E,E,195,[[["self"]],[T]]],[11,R[10],E,E,195,[[["self"]],[T]]],[11,R[11],E,E,195,[[["self"]],[R[29]]]],[11,"peek",E,E,191,[[["cursor"]],["bool"]]],[11,R[941],E,E,191,[[],["str"]]],[11,"span",E,E,191,[[["self"]],["span"]]],[11,"from",E,E,191,[[[T]],[T]]],[11,"into",E,E,191,[[],[U]]],[11,R[41],E,E,191,[[["self"]],[T]]],[11,R[42],E,E,191,[[["self"],[T]]]],[11,R[8],E,E,191,[[[U]],[R[3]]]],[11,R[9],E,E,191,[[],[R[3]]]],[11,R[28],E,E,191,[[["self"]],[T]]],[11,R[10],E,E,191,[[["self"]],[T]]],[11,R[11],E,E,191,[[["self"]],[R[29]]]],[11,"span",E,E,33,[[["self"]],["span"]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[41],E,E,33,[[["self"]],[T]]],[11,R[42],E,E,33,[[["self"],[T]]]],[11,R[8],E,E,33,[[[U]],[R[3]]]],[11,R[9],E,E,33,[[],[R[3]]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[29]]]],[11,"span",E,E,34,[[["self"]],["span"]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[41],E,E,34,[[["self"]],[T]]],[11,R[42],E,E,34,[[["self"],[T]]]],[11,R[8],E,E,34,[[[U]],[R[3]]]],[11,R[9],E,E,34,[[],[R[3]]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[29]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[41],E,E,35,[[["self"]],[T]]],[11,R[42],E,E,35,[[["self"],[T]]]],[11,R[8],E,E,35,[[[U]],[R[3]]]],[11,R[9],E,E,35,[[],[R[3]]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[29]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[41],E,E,36,[[["self"]],[T]]],[11,R[42],E,E,36,[[["self"],[T]]]],[11,R[8],E,E,36,[[[U]],[R[3]]]],[11,R[9],E,E,36,[[],[R[3]]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[29]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[41],E,E,37,[[["self"]],[T]]],[11,R[42],E,E,37,[[["self"],[T]]]],[11,R[8],E,E,37,[[[U]],[R[3]]]],[11,R[9],E,E,37,[[],[R[3]]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[29]]]],[11,"span",E,E,38,[[["self"]],["span"]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[41],E,E,38,[[["self"]],[T]]],[11,R[42],E,E,38,[[["self"],[T]]]],[11,R[8],E,E,38,[[[U]],[R[3]]]],[11,R[9],E,E,38,[[],[R[3]]]],[11,R[28],E,E,38,[[["self"]],[T]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[29]]]],[11,"span",E,E,39,[[["self"]],["span"]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[41],E,E,39,[[["self"]],[T]]],[11,R[42],E,E,39,[[["self"],[T]]]],[11,R[8],E,E,39,[[[U]],[R[3]]]],[11,R[9],E,E,39,[[],[R[3]]]],[11,R[28],E,E,39,[[["self"]],[T]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[29]]]],[11,"span",E,E,40,[[["self"]],["span"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[41],E,E,40,[[["self"]],[T]]],[11,R[42],E,E,40,[[["self"],[T]]]],[11,R[8],E,E,40,[[[U]],[R[3]]]],[11,R[9],E,E,40,[[],[R[3]]]],[11,R[28],E,E,40,[[["self"]],[T]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[29]]]],[11,"span",E,E,41,[[["self"]],["span"]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[41],E,E,41,[[["self"]],[T]]],[11,R[42],E,E,41,[[["self"],[T]]]],[11,R[8],E,E,41,[[[U]],[R[3]]]],[11,R[9],E,E,41,[[],[R[3]]]],[11,R[28],E,E,41,[[["self"]],[T]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[29]]]],[11,"span",E,E,42,[[["self"]],["span"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[41],E,E,42,[[["self"]],[T]]],[11,R[42],E,E,42,[[["self"],[T]]]],[11,R[8],E,E,42,[[[U]],[R[3]]]],[11,R[9],E,E,42,[[],[R[3]]]],[11,R[28],E,E,42,[[["self"]],[T]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[29]]]],[11,"span",E,E,43,[[["self"]],["span"]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[41],E,E,43,[[["self"]],[T]]],[11,R[42],E,E,43,[[["self"],[T]]]],[11,R[8],E,E,43,[[[U]],[R[3]]]],[11,R[9],E,E,43,[[],[R[3]]]],[11,R[28],E,E,43,[[["self"]],[T]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[29]]]],[11,"span",E,E,44,[[["self"]],["span"]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[41],E,E,44,[[["self"]],[T]]],[11,R[42],E,E,44,[[["self"],[T]]]],[11,R[8],E,E,44,[[[U]],[R[3]]]],[11,R[9],E,E,44,[[],[R[3]]]],[11,R[28],E,E,44,[[["self"]],[T]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[29]]]],[11,"span",E,E,45,[[["self"]],["span"]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[41],E,E,45,[[["self"]],[T]]],[11,R[42],E,E,45,[[["self"],[T]]]],[11,R[8],E,E,45,[[[U]],[R[3]]]],[11,R[9],E,E,45,[[],[R[3]]]],[11,R[28],E,E,45,[[["self"]],[T]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[29]]]],[11,"span",E,E,46,[[["self"]],["span"]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[41],E,E,46,[[["self"]],[T]]],[11,R[42],E,E,46,[[["self"],[T]]]],[11,R[8],E,E,46,[[[U]],[R[3]]]],[11,R[9],E,E,46,[[],[R[3]]]],[11,R[28],E,E,46,[[["self"]],[T]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[29]]]],[11,"span",E,E,47,[[["self"]],["span"]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[41],E,E,47,[[["self"]],[T]]],[11,R[42],E,E,47,[[["self"],[T]]]],[11,R[8],E,E,47,[[[U]],[R[3]]]],[11,R[9],E,E,47,[[],[R[3]]]],[11,R[28],E,E,47,[[["self"]],[T]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[29]]]],[11,"span",E,E,48,[[["self"]],["span"]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[41],E,E,48,[[["self"]],[T]]],[11,R[42],E,E,48,[[["self"],[T]]]],[11,R[8],E,E,48,[[[U]],[R[3]]]],[11,R[9],E,E,48,[[],[R[3]]]],[11,R[28],E,E,48,[[["self"]],[T]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[29]]]],[11,"span",E,E,49,[[["self"]],["span"]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[41],E,E,49,[[["self"]],[T]]],[11,R[42],E,E,49,[[["self"],[T]]]],[11,R[8],E,E,49,[[[U]],[R[3]]]],[11,R[9],E,E,49,[[],[R[3]]]],[11,R[28],E,E,49,[[["self"]],[T]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[29]]]],[11,"span",E,E,50,[[["self"]],["span"]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[41],E,E,50,[[["self"]],[T]]],[11,R[42],E,E,50,[[["self"],[T]]]],[11,R[8],E,E,50,[[[U]],[R[3]]]],[11,R[9],E,E,50,[[],[R[3]]]],[11,R[28],E,E,50,[[["self"]],[T]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[29]]]],[11,"span",E,E,51,[[["self"]],["span"]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[41],E,E,51,[[["self"]],[T]]],[11,R[42],E,E,51,[[["self"],[T]]]],[11,R[8],E,E,51,[[[U]],[R[3]]]],[11,R[9],E,E,51,[[],[R[3]]]],[11,R[28],E,E,51,[[["self"]],[T]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[29]]]],[11,"span",E,E,52,[[["self"]],["span"]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[41],E,E,52,[[["self"]],[T]]],[11,R[42],E,E,52,[[["self"],[T]]]],[11,R[8],E,E,52,[[[U]],[R[3]]]],[11,R[9],E,E,52,[[],[R[3]]]],[11,R[28],E,E,52,[[["self"]],[T]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[29]]]],[11,"span",E,E,53,[[["self"]],["span"]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[41],E,E,53,[[["self"]],[T]]],[11,R[42],E,E,53,[[["self"],[T]]]],[11,R[8],E,E,53,[[[U]],[R[3]]]],[11,R[9],E,E,53,[[],[R[3]]]],[11,R[28],E,E,53,[[["self"]],[T]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[29]]]],[11,"span",E,E,54,[[["self"]],["span"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[41],E,E,54,[[["self"]],[T]]],[11,R[42],E,E,54,[[["self"],[T]]]],[11,R[8],E,E,54,[[[U]],[R[3]]]],[11,R[9],E,E,54,[[],[R[3]]]],[11,R[28],E,E,54,[[["self"]],[T]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[29]]]],[11,"span",E,E,55,[[["self"]],["span"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[41],E,E,55,[[["self"]],[T]]],[11,R[42],E,E,55,[[["self"],[T]]]],[11,R[8],E,E,55,[[[U]],[R[3]]]],[11,R[9],E,E,55,[[],[R[3]]]],[11,R[28],E,E,55,[[["self"]],[T]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[29]]]],[11,"span",E,E,56,[[["self"]],["span"]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[41],E,E,56,[[["self"]],[T]]],[11,R[42],E,E,56,[[["self"],[T]]]],[11,R[8],E,E,56,[[[U]],[R[3]]]],[11,R[9],E,E,56,[[],[R[3]]]],[11,R[28],E,E,56,[[["self"]],[T]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[29]]]],[11,"span",E,E,57,[[["self"]],["span"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[41],E,E,57,[[["self"]],[T]]],[11,R[42],E,E,57,[[["self"],[T]]]],[11,R[8],E,E,57,[[[U]],[R[3]]]],[11,R[9],E,E,57,[[],[R[3]]]],[11,R[28],E,E,57,[[["self"]],[T]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[29]]]],[11,"span",E,E,58,[[["self"]],["span"]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[41],E,E,58,[[["self"]],[T]]],[11,R[42],E,E,58,[[["self"],[T]]]],[11,R[8],E,E,58,[[[U]],[R[3]]]],[11,R[9],E,E,58,[[],[R[3]]]],[11,R[28],E,E,58,[[["self"]],[T]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[29]]]],[11,"span",E,E,59,[[["self"]],["span"]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[41],E,E,59,[[["self"]],[T]]],[11,R[42],E,E,59,[[["self"],[T]]]],[11,R[8],E,E,59,[[[U]],[R[3]]]],[11,R[9],E,E,59,[[],[R[3]]]],[11,R[28],E,E,59,[[["self"]],[T]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[29]]]],[11,"span",E,E,60,[[["self"]],["span"]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[41],E,E,60,[[["self"]],[T]]],[11,R[42],E,E,60,[[["self"],[T]]]],[11,R[8],E,E,60,[[[U]],[R[3]]]],[11,R[9],E,E,60,[[],[R[3]]]],[11,R[28],E,E,60,[[["self"]],[T]]],[11,R[10],E,E,60,[[["self"]],[T]]],[11,R[11],E,E,60,[[["self"]],[R[29]]]],[11,"span",E,E,61,[[["self"]],["span"]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[41],E,E,61,[[["self"]],[T]]],[11,R[42],E,E,61,[[["self"],[T]]]],[11,R[8],E,E,61,[[[U]],[R[3]]]],[11,R[9],E,E,61,[[],[R[3]]]],[11,R[28],E,E,61,[[["self"]],[T]]],[11,R[10],E,E,61,[[["self"]],[T]]],[11,R[11],E,E,61,[[["self"]],[R[29]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[41],E,E,62,[[["self"]],[T]]],[11,R[42],E,E,62,[[["self"],[T]]]],[11,R[8],E,E,62,[[[U]],[R[3]]]],[11,R[9],E,E,62,[[],[R[3]]]],[11,R[28],E,E,62,[[["self"]],[T]]],[11,R[10],E,E,62,[[["self"]],[T]]],[11,R[11],E,E,62,[[["self"]],[R[29]]]],[11,"from",E,E,208,[[[T]],[T]]],[11,"into",E,E,208,[[],[U]]],[11,R[98],E,E,208,[[["self"]],["string"]]],[11,R[41],E,E,208,[[["self"]],[T]]],[11,R[42],E,E,208,[[["self"],[T]]]],[11,R[8],E,E,208,[[[U]],[R[3]]]],[11,R[9],E,E,208,[[],[R[3]]]],[11,R[28],E,E,208,[[["self"]],[T]]],[11,R[10],E,E,208,[[["self"]],[T]]],[11,R[11],E,E,208,[[["self"]],[R[29]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[41],E,E,63,[[["self"]],[T]]],[11,R[42],E,E,63,[[["self"],[T]]]],[11,R[8],E,E,63,[[[U]],[R[3]]]],[11,R[9],E,E,63,[[],[R[3]]]],[11,R[28],E,E,63,[[["self"]],[T]]],[11,R[10],E,E,63,[[["self"]],[T]]],[11,R[11],E,E,63,[[["self"]],[R[29]]]],[11,"span",E,E,64,[[["self"]],["span"]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[41],E,E,64,[[["self"]],[T]]],[11,R[42],E,E,64,[[["self"],[T]]]],[11,R[8],E,E,64,[[[U]],[R[3]]]],[11,R[9],E,E,64,[[],[R[3]]]],[11,R[28],E,E,64,[[["self"]],[T]]],[11,R[10],E,E,64,[[["self"]],[T]]],[11,R[11],E,E,64,[[["self"]],[R[29]]]],[11,"span",E,E,65,[[["self"]],["span"]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[41],E,E,65,[[["self"]],[T]]],[11,R[42],E,E,65,[[["self"],[T]]]],[11,R[8],E,E,65,[[[U]],[R[3]]]],[11,R[9],E,E,65,[[],[R[3]]]],[11,R[28],E,E,65,[[["self"]],[T]]],[11,R[10],E,E,65,[[["self"]],[T]]],[11,R[11],E,E,65,[[["self"]],[R[29]]]],[11,"span",E,E,66,[[["self"]],["span"]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[41],E,E,66,[[["self"]],[T]]],[11,R[42],E,E,66,[[["self"],[T]]]],[11,R[8],E,E,66,[[[U]],[R[3]]]],[11,R[9],E,E,66,[[],[R[3]]]],[11,R[28],E,E,66,[[["self"]],[T]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[11],E,E,66,[[["self"]],[R[29]]]],[11,"span",E,E,67,[[["self"]],["span"]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[41],E,E,67,[[["self"]],[T]]],[11,R[42],E,E,67,[[["self"],[T]]]],[11,R[8],E,E,67,[[[U]],[R[3]]]],[11,R[9],E,E,67,[[],[R[3]]]],[11,R[28],E,E,67,[[["self"]],[T]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[11],E,E,67,[[["self"]],[R[29]]]],[11,"span",E,E,68,[[["self"]],["span"]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[41],E,E,68,[[["self"]],[T]]],[11,R[42],E,E,68,[[["self"],[T]]]],[11,R[8],E,E,68,[[[U]],[R[3]]]],[11,R[9],E,E,68,[[],[R[3]]]],[11,R[28],E,E,68,[[["self"]],[T]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[11],E,E,68,[[["self"]],[R[29]]]],[11,"span",E,E,69,[[["self"]],["span"]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[41],E,E,69,[[["self"]],[T]]],[11,R[42],E,E,69,[[["self"],[T]]]],[11,R[8],E,E,69,[[[U]],[R[3]]]],[11,R[9],E,E,69,[[],[R[3]]]],[11,R[28],E,E,69,[[["self"]],[T]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[11],E,E,69,[[["self"]],[R[29]]]],[11,"span",E,E,70,[[["self"]],["span"]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[41],E,E,70,[[["self"]],[T]]],[11,R[42],E,E,70,[[["self"],[T]]]],[11,R[8],E,E,70,[[[U]],[R[3]]]],[11,R[9],E,E,70,[[],[R[3]]]],[11,R[28],E,E,70,[[["self"]],[T]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[11],E,E,70,[[["self"]],[R[29]]]],[11,"span",E,E,71,[[["self"]],["span"]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[41],E,E,71,[[["self"]],[T]]],[11,R[42],E,E,71,[[["self"],[T]]]],[11,R[8],E,E,71,[[[U]],[R[3]]]],[11,R[9],E,E,71,[[],[R[3]]]],[11,R[28],E,E,71,[[["self"]],[T]]],[11,R[10],E,E,71,[[["self"]],[T]]],[11,R[11],E,E,71,[[["self"]],[R[29]]]],[11,"span",E,E,72,[[["self"]],["span"]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[41],E,E,72,[[["self"]],[T]]],[11,R[42],E,E,72,[[["self"],[T]]]],[11,R[8],E,E,72,[[[U]],[R[3]]]],[11,R[9],E,E,72,[[],[R[3]]]],[11,R[28],E,E,72,[[["self"]],[T]]],[11,R[10],E,E,72,[[["self"]],[T]]],[11,R[11],E,E,72,[[["self"]],[R[29]]]],[11,"span",E,E,73,[[["self"]],["span"]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[41],E,E,73,[[["self"]],[T]]],[11,R[42],E,E,73,[[["self"],[T]]]],[11,R[8],E,E,73,[[[U]],[R[3]]]],[11,R[9],E,E,73,[[],[R[3]]]],[11,R[28],E,E,73,[[["self"]],[T]]],[11,R[10],E,E,73,[[["self"]],[T]]],[11,R[11],E,E,73,[[["self"]],[R[29]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[41],E,E,74,[[["self"]],[T]]],[11,R[42],E,E,74,[[["self"],[T]]]],[11,R[8],E,E,74,[[[U]],[R[3]]]],[11,R[9],E,E,74,[[],[R[3]]]],[11,R[28],E,E,74,[[["self"]],[T]]],[11,R[10],E,E,74,[[["self"]],[T]]],[11,R[11],E,E,74,[[["self"]],[R[29]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[41],E,E,75,[[["self"]],[T]]],[11,R[42],E,E,75,[[["self"],[T]]]],[11,R[8],E,E,75,[[[U]],[R[3]]]],[11,R[9],E,E,75,[[],[R[3]]]],[11,R[28],E,E,75,[[["self"]],[T]]],[11,R[10],E,E,75,[[["self"]],[T]]],[11,R[11],E,E,75,[[["self"]],[R[29]]]],[11,"peek",E,E,76,[[["cursor"]],["bool"]]],[11,R[941],E,E,76,[[],["str"]]],[11,"span",E,E,76,[[["self"]],["span"]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[41],E,E,76,[[["self"]],[T]]],[11,R[42],E,E,76,[[["self"],[T]]]],[11,R[8],E,E,76,[[[U]],[R[3]]]],[11,R[9],E,E,76,[[],[R[3]]]],[11,R[28],E,E,76,[[["self"]],[T]]],[11,R[10],E,E,76,[[["self"]],[T]]],[11,R[11],E,E,76,[[["self"]],[R[29]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[41],E,E,77,[[["self"]],[T]]],[11,R[42],E,E,77,[[["self"],[T]]]],[11,R[8],E,E,77,[[[U]],[R[3]]]],[11,R[9],E,E,77,[[],[R[3]]]],[11,R[28],E,E,77,[[["self"]],[T]]],[11,R[10],E,E,77,[[["self"]],[T]]],[11,R[11],E,E,77,[[["self"]],[R[29]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[41],E,E,78,[[["self"]],[T]]],[11,R[42],E,E,78,[[["self"],[T]]]],[11,R[8],E,E,78,[[[U]],[R[3]]]],[11,R[9],E,E,78,[[],[R[3]]]],[11,R[28],E,E,78,[[["self"]],[T]]],[11,R[10],E,E,78,[[["self"]],[T]]],[11,R[11],E,E,78,[[["self"]],[R[29]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[41],E,E,79,[[["self"]],[T]]],[11,R[42],E,E,79,[[["self"],[T]]]],[11,R[8],E,E,79,[[[U]],[R[3]]]],[11,R[9],E,E,79,[[],[R[3]]]],[11,R[28],E,E,79,[[["self"]],[T]]],[11,R[10],E,E,79,[[["self"]],[T]]],[11,R[11],E,E,79,[[["self"]],[R[29]]]],[11,"span",E,E,80,[[["self"]],["span"]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[41],E,E,80,[[["self"]],[T]]],[11,R[42],E,E,80,[[["self"],[T]]]],[11,R[8],E,E,80,[[[U]],[R[3]]]],[11,R[9],E,E,80,[[],[R[3]]]],[11,R[28],E,E,80,[[["self"]],[T]]],[11,R[10],E,E,80,[[["self"]],[T]]],[11,R[11],E,E,80,[[["self"]],[R[29]]]],[11,"span",E,E,81,[[["self"]],["span"]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[41],E,E,81,[[["self"]],[T]]],[11,R[42],E,E,81,[[["self"],[T]]]],[11,R[8],E,E,81,[[[U]],[R[3]]]],[11,R[9],E,E,81,[[],[R[3]]]],[11,R[28],E,E,81,[[["self"]],[T]]],[11,R[10],E,E,81,[[["self"]],[T]]],[11,R[11],E,E,81,[[["self"]],[R[29]]]],[11,"span",E,E,82,[[["self"]],["span"]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[41],E,E,82,[[["self"]],[T]]],[11,R[42],E,E,82,[[["self"],[T]]]],[11,R[8],E,E,82,[[[U]],[R[3]]]],[11,R[9],E,E,82,[[],[R[3]]]],[11,R[28],E,E,82,[[["self"]],[T]]],[11,R[10],E,E,82,[[["self"]],[T]]],[11,R[11],E,E,82,[[["self"]],[R[29]]]],[11,"span",E,E,83,[[["self"]],["span"]]],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[41],E,E,83,[[["self"]],[T]]],[11,R[42],E,E,83,[[["self"],[T]]]],[11,R[8],E,E,83,[[[U]],[R[3]]]],[11,R[9],E,E,83,[[],[R[3]]]],[11,R[28],E,E,83,[[["self"]],[T]]],[11,R[10],E,E,83,[[["self"]],[T]]],[11,R[11],E,E,83,[[["self"]],[R[29]]]],[11,"span",E,E,84,[[["self"]],["span"]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[41],E,E,84,[[["self"]],[T]]],[11,R[42],E,E,84,[[["self"],[T]]]],[11,R[8],E,E,84,[[[U]],[R[3]]]],[11,R[9],E,E,84,[[],[R[3]]]],[11,R[28],E,E,84,[[["self"]],[T]]],[11,R[10],E,E,84,[[["self"]],[T]]],[11,R[11],E,E,84,[[["self"]],[R[29]]]],[11,"span",E,E,85,[[["self"]],["span"]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[41],E,E,85,[[["self"]],[T]]],[11,R[42],E,E,85,[[["self"],[T]]]],[11,R[8],E,E,85,[[[U]],[R[3]]]],[11,R[9],E,E,85,[[],[R[3]]]],[11,R[28],E,E,85,[[["self"]],[T]]],[11,R[10],E,E,85,[[["self"]],[T]]],[11,R[11],E,E,85,[[["self"]],[R[29]]]],[11,"span",E,E,86,[[["self"]],["span"]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[41],E,E,86,[[["self"]],[T]]],[11,R[42],E,E,86,[[["self"],[T]]]],[11,R[8],E,E,86,[[[U]],[R[3]]]],[11,R[9],E,E,86,[[],[R[3]]]],[11,R[28],E,E,86,[[["self"]],[T]]],[11,R[10],E,E,86,[[["self"]],[T]]],[11,R[11],E,E,86,[[["self"]],[R[29]]]],[11,"peek",R[942],E,87,[[["cursor"]],["bool"]]],[11,R[941],E,E,87,[[],["str"]]],[11,"span",E,E,87,[[["self"]],["span"]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[41],E,E,87,[[["self"]],[T]]],[11,R[42],E,E,87,[[["self"],[T]]]],[11,R[8],E,E,87,[[[U]],[R[3]]]],[11,R[9],E,E,87,[[],[R[3]]]],[11,R[28],E,E,87,[[["self"]],[T]]],[11,R[10],E,E,87,[[["self"]],[T]]],[11,R[11],E,E,87,[[["self"]],[R[29]]]],[11,"peek",E,E,88,[[["cursor"]],["bool"]]],[11,R[941],E,E,88,[[],["str"]]],[11,"span",E,E,88,[[["self"]],["span"]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[41],E,E,88,[[["self"]],[T]]],[11,R[42],E,E,88,[[["self"],[T]]]],[11,R[8],E,E,88,[[[U]],[R[3]]]],[11,R[9],E,E,88,[[],[R[3]]]],[11,R[28],E,E,88,[[["self"]],[T]]],[11,R[10],E,E,88,[[["self"]],[T]]],[11,R[11],E,E,88,[[["self"]],[R[29]]]],[11,"peek",E,E,89,[[["cursor"]],["bool"]]],[11,R[941],E,E,89,[[],["str"]]],[11,"span",E,E,89,[[["self"]],["span"]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[41],E,E,89,[[["self"]],[T]]],[11,R[42],E,E,89,[[["self"],[T]]]],[11,R[8],E,E,89,[[[U]],[R[3]]]],[11,R[9],E,E,89,[[],[R[3]]]],[11,R[28],E,E,89,[[["self"]],[T]]],[11,R[10],E,E,89,[[["self"]],[T]]],[11,R[11],E,E,89,[[["self"]],[R[29]]]],[11,"peek",E,E,90,[[["cursor"]],["bool"]]],[11,R[941],E,E,90,[[],["str"]]],[11,"span",E,E,90,[[["self"]],["span"]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[41],E,E,90,[[["self"]],[T]]],[11,R[42],E,E,90,[[["self"],[T]]]],[11,R[8],E,E,90,[[[U]],[R[3]]]],[11,R[9],E,E,90,[[],[R[3]]]],[11,R[28],E,E,90,[[["self"]],[T]]],[11,R[10],E,E,90,[[["self"]],[T]]],[11,R[11],E,E,90,[[["self"]],[R[29]]]],[11,"peek",E,E,91,[[["cursor"]],["bool"]]],[11,R[941],E,E,91,[[],["str"]]],[11,"span",E,E,91,[[["self"]],["span"]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[41],E,E,91,[[["self"]],[T]]],[11,R[42],E,E,91,[[["self"],[T]]]],[11,R[8],E,E,91,[[[U]],[R[3]]]],[11,R[9],E,E,91,[[],[R[3]]]],[11,R[28],E,E,91,[[["self"]],[T]]],[11,R[10],E,E,91,[[["self"]],[T]]],[11,R[11],E,E,91,[[["self"]],[R[29]]]],[11,"peek",E,E,92,[[["cursor"]],["bool"]]],[11,R[941],E,E,92,[[],["str"]]],[11,"span",E,E,92,[[["self"]],["span"]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[41],E,E,92,[[["self"]],[T]]],[11,R[42],E,E,92,[[["self"],[T]]]],[11,R[8],E,E,92,[[[U]],[R[3]]]],[11,R[9],E,E,92,[[],[R[3]]]],[11,R[28],E,E,92,[[["self"]],[T]]],[11,R[10],E,E,92,[[["self"]],[T]]],[11,R[11],E,E,92,[[["self"]],[R[29]]]],[11,"peek",E,E,93,[[["cursor"]],["bool"]]],[11,R[941],E,E,93,[[],["str"]]],[11,"span",E,E,93,[[["self"]],["span"]]],[11,"from",E,E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[41],E,E,93,[[["self"]],[T]]],[11,R[42],E,E,93,[[["self"],[T]]]],[11,R[8],E,E,93,[[[U]],[R[3]]]],[11,R[9],E,E,93,[[],[R[3]]]],[11,R[28],E,E,93,[[["self"]],[T]]],[11,R[10],E,E,93,[[["self"]],[T]]],[11,R[11],E,E,93,[[["self"]],[R[29]]]],[11,"peek",E,E,94,[[["cursor"]],["bool"]]],[11,R[941],E,E,94,[[],["str"]]],[11,"span",E,E,94,[[["self"]],["span"]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[41],E,E,94,[[["self"]],[T]]],[11,R[42],E,E,94,[[["self"],[T]]]],[11,R[8],E,E,94,[[[U]],[R[3]]]],[11,R[9],E,E,94,[[],[R[3]]]],[11,R[28],E,E,94,[[["self"]],[T]]],[11,R[10],E,E,94,[[["self"]],[T]]],[11,R[11],E,E,94,[[["self"]],[R[29]]]],[11,"peek",E,E,95,[[["cursor"]],["bool"]]],[11,R[941],E,E,95,[[],["str"]]],[11,"span",E,E,95,[[["self"]],["span"]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[41],E,E,95,[[["self"]],[T]]],[11,R[42],E,E,95,[[["self"],[T]]]],[11,R[8],E,E,95,[[[U]],[R[3]]]],[11,R[9],E,E,95,[[],[R[3]]]],[11,R[28],E,E,95,[[["self"]],[T]]],[11,R[10],E,E,95,[[["self"]],[T]]],[11,R[11],E,E,95,[[["self"]],[R[29]]]],[11,"peek",E,E,96,[[["cursor"]],["bool"]]],[11,R[941],E,E,96,[[],["str"]]],[11,"span",E,E,96,[[["self"]],["span"]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[41],E,E,96,[[["self"]],[T]]],[11,R[42],E,E,96,[[["self"],[T]]]],[11,R[8],E,E,96,[[[U]],[R[3]]]],[11,R[9],E,E,96,[[],[R[3]]]],[11,R[28],E,E,96,[[["self"]],[T]]],[11,R[10],E,E,96,[[["self"]],[T]]],[11,R[11],E,E,96,[[["self"]],[R[29]]]],[11,"peek",E,E,97,[[["cursor"]],["bool"]]],[11,R[941],E,E,97,[[],["str"]]],[11,"span",E,E,97,[[["self"]],["span"]]],[11,"from",E,E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[41],E,E,97,[[["self"]],[T]]],[11,R[42],E,E,97,[[["self"],[T]]]],[11,R[8],E,E,97,[[[U]],[R[3]]]],[11,R[9],E,E,97,[[],[R[3]]]],[11,R[28],E,E,97,[[["self"]],[T]]],[11,R[10],E,E,97,[[["self"]],[T]]],[11,R[11],E,E,97,[[["self"]],[R[29]]]],[11,"peek",E,E,98,[[["cursor"]],["bool"]]],[11,R[941],E,E,98,[[],["str"]]],[11,"span",E,E,98,[[["self"]],["span"]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[41],E,E,98,[[["self"]],[T]]],[11,R[42],E,E,98,[[["self"],[T]]]],[11,R[8],E,E,98,[[[U]],[R[3]]]],[11,R[9],E,E,98,[[],[R[3]]]],[11,R[28],E,E,98,[[["self"]],[T]]],[11,R[10],E,E,98,[[["self"]],[T]]],[11,R[11],E,E,98,[[["self"]],[R[29]]]],[11,"peek",E,E,99,[[["cursor"]],["bool"]]],[11,R[941],E,E,99,[[],["str"]]],[11,"span",E,E,99,[[["self"]],["span"]]],[11,"from",E,E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[41],E,E,99,[[["self"]],[T]]],[11,R[42],E,E,99,[[["self"],[T]]]],[11,R[8],E,E,99,[[[U]],[R[3]]]],[11,R[9],E,E,99,[[],[R[3]]]],[11,R[28],E,E,99,[[["self"]],[T]]],[11,R[10],E,E,99,[[["self"]],[T]]],[11,R[11],E,E,99,[[["self"]],[R[29]]]],[11,"peek",E,E,100,[[["cursor"]],["bool"]]],[11,R[941],E,E,100,[[],["str"]]],[11,"span",E,E,100,[[["self"]],["span"]]],[11,"from",E,E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[41],E,E,100,[[["self"]],[T]]],[11,R[42],E,E,100,[[["self"],[T]]]],[11,R[8],E,E,100,[[[U]],[R[3]]]],[11,R[9],E,E,100,[[],[R[3]]]],[11,R[28],E,E,100,[[["self"]],[T]]],[11,R[10],E,E,100,[[["self"]],[T]]],[11,R[11],E,E,100,[[["self"]],[R[29]]]],[11,"peek",E,E,101,[[["cursor"]],["bool"]]],[11,R[941],E,E,101,[[],["str"]]],[11,"span",E,E,101,[[["self"]],["span"]]],[11,"from",E,E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[41],E,E,101,[[["self"]],[T]]],[11,R[42],E,E,101,[[["self"],[T]]]],[11,R[8],E,E,101,[[[U]],[R[3]]]],[11,R[9],E,E,101,[[],[R[3]]]],[11,R[28],E,E,101,[[["self"]],[T]]],[11,R[10],E,E,101,[[["self"]],[T]]],[11,R[11],E,E,101,[[["self"]],[R[29]]]],[11,"peek",E,E,102,[[["cursor"]],["bool"]]],[11,R[941],E,E,102,[[],["str"]]],[11,"span",E,E,102,[[["self"]],["span"]]],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[41],E,E,102,[[["self"]],[T]]],[11,R[42],E,E,102,[[["self"],[T]]]],[11,R[8],E,E,102,[[[U]],[R[3]]]],[11,R[9],E,E,102,[[],[R[3]]]],[11,R[28],E,E,102,[[["self"]],[T]]],[11,R[10],E,E,102,[[["self"]],[T]]],[11,R[11],E,E,102,[[["self"]],[R[29]]]],[11,"peek",E,E,103,[[["cursor"]],["bool"]]],[11,R[941],E,E,103,[[],["str"]]],[11,"span",E,E,103,[[["self"]],["span"]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[41],E,E,103,[[["self"]],[T]]],[11,R[42],E,E,103,[[["self"],[T]]]],[11,R[8],E,E,103,[[[U]],[R[3]]]],[11,R[9],E,E,103,[[],[R[3]]]],[11,R[28],E,E,103,[[["self"]],[T]]],[11,R[10],E,E,103,[[["self"]],[T]]],[11,R[11],E,E,103,[[["self"]],[R[29]]]],[11,"peek",E,E,104,[[["cursor"]],["bool"]]],[11,R[941],E,E,104,[[],["str"]]],[11,"span",E,E,104,[[["self"]],["span"]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[41],E,E,104,[[["self"]],[T]]],[11,R[42],E,E,104,[[["self"],[T]]]],[11,R[8],E,E,104,[[[U]],[R[3]]]],[11,R[9],E,E,104,[[],[R[3]]]],[11,R[28],E,E,104,[[["self"]],[T]]],[11,R[10],E,E,104,[[["self"]],[T]]],[11,R[11],E,E,104,[[["self"]],[R[29]]]],[11,"peek",E,E,105,[[["cursor"]],["bool"]]],[11,R[941],E,E,105,[[],["str"]]],[11,"span",E,E,105,[[["self"]],["span"]]],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[41],E,E,105,[[["self"]],[T]]],[11,R[42],E,E,105,[[["self"],[T]]]],[11,R[8],E,E,105,[[[U]],[R[3]]]],[11,R[9],E,E,105,[[],[R[3]]]],[11,R[28],E,E,105,[[["self"]],[T]]],[11,R[10],E,E,105,[[["self"]],[T]]],[11,R[11],E,E,105,[[["self"]],[R[29]]]],[11,"peek",E,E,106,[[["cursor"]],["bool"]]],[11,R[941],E,E,106,[[],["str"]]],[11,"span",E,E,106,[[["self"]],["span"]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[41],E,E,106,[[["self"]],[T]]],[11,R[42],E,E,106,[[["self"],[T]]]],[11,R[8],E,E,106,[[[U]],[R[3]]]],[11,R[9],E,E,106,[[],[R[3]]]],[11,R[28],E,E,106,[[["self"]],[T]]],[11,R[10],E,E,106,[[["self"]],[T]]],[11,R[11],E,E,106,[[["self"]],[R[29]]]],[11,"peek",E,E,107,[[["cursor"]],["bool"]]],[11,R[941],E,E,107,[[],["str"]]],[11,"span",E,E,107,[[["self"]],["span"]]],[11,"from",E,E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[41],E,E,107,[[["self"]],[T]]],[11,R[42],E,E,107,[[["self"],[T]]]],[11,R[8],E,E,107,[[[U]],[R[3]]]],[11,R[9],E,E,107,[[],[R[3]]]],[11,R[28],E,E,107,[[["self"]],[T]]],[11,R[10],E,E,107,[[["self"]],[T]]],[11,R[11],E,E,107,[[["self"]],[R[29]]]],[11,"peek",E,E,108,[[["cursor"]],["bool"]]],[11,R[941],E,E,108,[[],["str"]]],[11,"span",E,E,108,[[["self"]],["span"]]],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[41],E,E,108,[[["self"]],[T]]],[11,R[42],E,E,108,[[["self"],[T]]]],[11,R[8],E,E,108,[[[U]],[R[3]]]],[11,R[9],E,E,108,[[],[R[3]]]],[11,R[28],E,E,108,[[["self"]],[T]]],[11,R[10],E,E,108,[[["self"]],[T]]],[11,R[11],E,E,108,[[["self"]],[R[29]]]],[11,"peek",E,E,109,[[["cursor"]],["bool"]]],[11,R[941],E,E,109,[[],["str"]]],[11,"span",E,E,109,[[["self"]],["span"]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[41],E,E,109,[[["self"]],[T]]],[11,R[42],E,E,109,[[["self"],[T]]]],[11,R[8],E,E,109,[[[U]],[R[3]]]],[11,R[9],E,E,109,[[],[R[3]]]],[11,R[28],E,E,109,[[["self"]],[T]]],[11,R[10],E,E,109,[[["self"]],[T]]],[11,R[11],E,E,109,[[["self"]],[R[29]]]],[11,"peek",E,E,110,[[["cursor"]],["bool"]]],[11,R[941],E,E,110,[[],["str"]]],[11,"span",E,E,110,[[["self"]],["span"]]],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[41],E,E,110,[[["self"]],[T]]],[11,R[42],E,E,110,[[["self"],[T]]]],[11,R[8],E,E,110,[[[U]],[R[3]]]],[11,R[9],E,E,110,[[],[R[3]]]],[11,R[28],E,E,110,[[["self"]],[T]]],[11,R[10],E,E,110,[[["self"]],[T]]],[11,R[11],E,E,110,[[["self"]],[R[29]]]],[11,"peek",E,E,111,[[["cursor"]],["bool"]]],[11,R[941],E,E,111,[[],["str"]]],[11,"span",E,E,111,[[["self"]],["span"]]],[11,"from",E,E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[41],E,E,111,[[["self"]],[T]]],[11,R[42],E,E,111,[[["self"],[T]]]],[11,R[8],E,E,111,[[[U]],[R[3]]]],[11,R[9],E,E,111,[[],[R[3]]]],[11,R[28],E,E,111,[[["self"]],[T]]],[11,R[10],E,E,111,[[["self"]],[T]]],[11,R[11],E,E,111,[[["self"]],[R[29]]]],[11,"peek",E,E,112,[[["cursor"]],["bool"]]],[11,R[941],E,E,112,[[],["str"]]],[11,"span",E,E,112,[[["self"]],["span"]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[41],E,E,112,[[["self"]],[T]]],[11,R[42],E,E,112,[[["self"],[T]]]],[11,R[8],E,E,112,[[[U]],[R[3]]]],[11,R[9],E,E,112,[[],[R[3]]]],[11,R[28],E,E,112,[[["self"]],[T]]],[11,R[10],E,E,112,[[["self"]],[T]]],[11,R[11],E,E,112,[[["self"]],[R[29]]]],[11,"peek",E,E,113,[[["cursor"]],["bool"]]],[11,R[941],E,E,113,[[],["str"]]],[11,"span",E,E,113,[[["self"]],["span"]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[41],E,E,113,[[["self"]],[T]]],[11,R[42],E,E,113,[[["self"],[T]]]],[11,R[8],E,E,113,[[[U]],[R[3]]]],[11,R[9],E,E,113,[[],[R[3]]]],[11,R[28],E,E,113,[[["self"]],[T]]],[11,R[10],E,E,113,[[["self"]],[T]]],[11,R[11],E,E,113,[[["self"]],[R[29]]]],[11,"peek",E,E,114,[[["cursor"]],["bool"]]],[11,R[941],E,E,114,[[],["str"]]],[11,"span",E,E,114,[[["self"]],["span"]]],[11,"from",E,E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[41],E,E,114,[[["self"]],[T]]],[11,R[42],E,E,114,[[["self"],[T]]]],[11,R[8],E,E,114,[[[U]],[R[3]]]],[11,R[9],E,E,114,[[],[R[3]]]],[11,R[28],E,E,114,[[["self"]],[T]]],[11,R[10],E,E,114,[[["self"]],[T]]],[11,R[11],E,E,114,[[["self"]],[R[29]]]],[11,"peek",E,E,115,[[["cursor"]],["bool"]]],[11,R[941],E,E,115,[[],["str"]]],[11,"span",E,E,115,[[["self"]],["span"]]],[11,"from",E,E,115,[[[T]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,R[41],E,E,115,[[["self"]],[T]]],[11,R[42],E,E,115,[[["self"],[T]]]],[11,R[8],E,E,115,[[[U]],[R[3]]]],[11,R[9],E,E,115,[[],[R[3]]]],[11,R[28],E,E,115,[[["self"]],[T]]],[11,R[10],E,E,115,[[["self"]],[T]]],[11,R[11],E,E,115,[[["self"]],[R[29]]]],[11,"peek",E,E,116,[[["cursor"]],["bool"]]],[11,R[941],E,E,116,[[],["str"]]],[11,"span",E,E,116,[[["self"]],["span"]]],[11,"from",E,E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[41],E,E,116,[[["self"]],[T]]],[11,R[42],E,E,116,[[["self"],[T]]]],[11,R[8],E,E,116,[[[U]],[R[3]]]],[11,R[9],E,E,116,[[],[R[3]]]],[11,R[28],E,E,116,[[["self"]],[T]]],[11,R[10],E,E,116,[[["self"]],[T]]],[11,R[11],E,E,116,[[["self"]],[R[29]]]],[11,"peek",E,E,117,[[["cursor"]],["bool"]]],[11,R[941],E,E,117,[[],["str"]]],[11,"span",E,E,117,[[["self"]],["span"]]],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,R[41],E,E,117,[[["self"]],[T]]],[11,R[42],E,E,117,[[["self"],[T]]]],[11,R[8],E,E,117,[[[U]],[R[3]]]],[11,R[9],E,E,117,[[],[R[3]]]],[11,R[28],E,E,117,[[["self"]],[T]]],[11,R[10],E,E,117,[[["self"]],[T]]],[11,R[11],E,E,117,[[["self"]],[R[29]]]],[11,"peek",E,E,118,[[["cursor"]],["bool"]]],[11,R[941],E,E,118,[[],["str"]]],[11,"span",E,E,118,[[["self"]],["span"]]],[11,"from",E,E,118,[[[T]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,R[41],E,E,118,[[["self"]],[T]]],[11,R[42],E,E,118,[[["self"],[T]]]],[11,R[8],E,E,118,[[[U]],[R[3]]]],[11,R[9],E,E,118,[[],[R[3]]]],[11,R[28],E,E,118,[[["self"]],[T]]],[11,R[10],E,E,118,[[["self"]],[T]]],[11,R[11],E,E,118,[[["self"]],[R[29]]]],[11,"peek",E,E,119,[[["cursor"]],["bool"]]],[11,R[941],E,E,119,[[],["str"]]],[11,"span",E,E,119,[[["self"]],["span"]]],[11,"from",E,E,119,[[[T]],[T]]],[11,"into",E,E,119,[[],[U]]],[11,R[41],E,E,119,[[["self"]],[T]]],[11,R[42],E,E,119,[[["self"],[T]]]],[11,R[8],E,E,119,[[[U]],[R[3]]]],[11,R[9],E,E,119,[[],[R[3]]]],[11,R[28],E,E,119,[[["self"]],[T]]],[11,R[10],E,E,119,[[["self"]],[T]]],[11,R[11],E,E,119,[[["self"]],[R[29]]]],[11,"peek",E,E,120,[[["cursor"]],["bool"]]],[11,R[941],E,E,120,[[],["str"]]],[11,"span",E,E,120,[[["self"]],["span"]]],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,R[41],E,E,120,[[["self"]],[T]]],[11,R[42],E,E,120,[[["self"],[T]]]],[11,R[8],E,E,120,[[[U]],[R[3]]]],[11,R[9],E,E,120,[[],[R[3]]]],[11,R[28],E,E,120,[[["self"]],[T]]],[11,R[10],E,E,120,[[["self"]],[T]]],[11,R[11],E,E,120,[[["self"]],[R[29]]]],[11,"peek",E,E,121,[[["cursor"]],["bool"]]],[11,R[941],E,E,121,[[],["str"]]],[11,"span",E,E,121,[[["self"]],["span"]]],[11,"from",E,E,121,[[[T]],[T]]],[11,"into",E,E,121,[[],[U]]],[11,R[41],E,E,121,[[["self"]],[T]]],[11,R[42],E,E,121,[[["self"],[T]]]],[11,R[8],E,E,121,[[[U]],[R[3]]]],[11,R[9],E,E,121,[[],[R[3]]]],[11,R[28],E,E,121,[[["self"]],[T]]],[11,R[10],E,E,121,[[["self"]],[T]]],[11,R[11],E,E,121,[[["self"]],[R[29]]]],[11,"peek",E,E,122,[[["cursor"]],["bool"]]],[11,R[941],E,E,122,[[],["str"]]],[11,"span",E,E,122,[[["self"]],["span"]]],[11,"from",E,E,122,[[[T]],[T]]],[11,"into",E,E,122,[[],[U]]],[11,R[41],E,E,122,[[["self"]],[T]]],[11,R[42],E,E,122,[[["self"],[T]]]],[11,R[8],E,E,122,[[[U]],[R[3]]]],[11,R[9],E,E,122,[[],[R[3]]]],[11,R[28],E,E,122,[[["self"]],[T]]],[11,R[10],E,E,122,[[["self"]],[T]]],[11,R[11],E,E,122,[[["self"]],[R[29]]]],[11,"peek",E,E,123,[[["cursor"]],["bool"]]],[11,R[941],E,E,123,[[],["str"]]],[11,"span",E,E,123,[[["self"]],["span"]]],[11,"from",E,E,123,[[[T]],[T]]],[11,"into",E,E,123,[[],[U]]],[11,R[41],E,E,123,[[["self"]],[T]]],[11,R[42],E,E,123,[[["self"],[T]]]],[11,R[8],E,E,123,[[[U]],[R[3]]]],[11,R[9],E,E,123,[[],[R[3]]]],[11,R[28],E,E,123,[[["self"]],[T]]],[11,R[10],E,E,123,[[["self"]],[T]]],[11,R[11],E,E,123,[[["self"]],[R[29]]]],[11,"peek",E,E,124,[[["cursor"]],["bool"]]],[11,R[941],E,E,124,[[],["str"]]],[11,"span",E,E,124,[[["self"]],["span"]]],[11,"from",E,E,124,[[[T]],[T]]],[11,"into",E,E,124,[[],[U]]],[11,R[41],E,E,124,[[["self"]],[T]]],[11,R[42],E,E,124,[[["self"],[T]]]],[11,R[8],E,E,124,[[[U]],[R[3]]]],[11,R[9],E,E,124,[[],[R[3]]]],[11,R[28],E,E,124,[[["self"]],[T]]],[11,R[10],E,E,124,[[["self"]],[T]]],[11,R[11],E,E,124,[[["self"]],[R[29]]]],[11,"peek",E,E,125,[[["cursor"]],["bool"]]],[11,R[941],E,E,125,[[],["str"]]],[11,"span",E,E,125,[[["self"]],["span"]]],[11,"from",E,E,125,[[[T]],[T]]],[11,"into",E,E,125,[[],[U]]],[11,R[41],E,E,125,[[["self"]],[T]]],[11,R[42],E,E,125,[[["self"],[T]]]],[11,R[8],E,E,125,[[[U]],[R[3]]]],[11,R[9],E,E,125,[[],[R[3]]]],[11,R[28],E,E,125,[[["self"]],[T]]],[11,R[10],E,E,125,[[["self"]],[T]]],[11,R[11],E,E,125,[[["self"]],[R[29]]]],[11,"peek",E,E,126,[[["cursor"]],["bool"]]],[11,R[941],E,E,126,[[],["str"]]],[11,"span",E,E,126,[[["self"]],["span"]]],[11,"from",E,E,126,[[[T]],[T]]],[11,"into",E,E,126,[[],[U]]],[11,R[41],E,E,126,[[["self"]],[T]]],[11,R[42],E,E,126,[[["self"],[T]]]],[11,R[8],E,E,126,[[[U]],[R[3]]]],[11,R[9],E,E,126,[[],[R[3]]]],[11,R[28],E,E,126,[[["self"]],[T]]],[11,R[10],E,E,126,[[["self"]],[T]]],[11,R[11],E,E,126,[[["self"]],[R[29]]]],[11,"peek",E,E,127,[[["cursor"]],["bool"]]],[11,R[941],E,E,127,[[],["str"]]],[11,"span",E,E,127,[[["self"]],["span"]]],[11,"from",E,E,127,[[[T]],[T]]],[11,"into",E,E,127,[[],[U]]],[11,R[41],E,E,127,[[["self"]],[T]]],[11,R[42],E,E,127,[[["self"],[T]]]],[11,R[8],E,E,127,[[[U]],[R[3]]]],[11,R[9],E,E,127,[[],[R[3]]]],[11,R[28],E,E,127,[[["self"]],[T]]],[11,R[10],E,E,127,[[["self"]],[T]]],[11,R[11],E,E,127,[[["self"]],[R[29]]]],[11,"peek",E,E,128,[[["cursor"]],["bool"]]],[11,R[941],E,E,128,[[],["str"]]],[11,"span",E,E,128,[[["self"]],["span"]]],[11,"from",E,E,128,[[[T]],[T]]],[11,"into",E,E,128,[[],[U]]],[11,R[41],E,E,128,[[["self"]],[T]]],[11,R[42],E,E,128,[[["self"],[T]]]],[11,R[8],E,E,128,[[[U]],[R[3]]]],[11,R[9],E,E,128,[[],[R[3]]]],[11,R[28],E,E,128,[[["self"]],[T]]],[11,R[10],E,E,128,[[["self"]],[T]]],[11,R[11],E,E,128,[[["self"]],[R[29]]]],[11,"peek",E,E,129,[[["cursor"]],["bool"]]],[11,R[941],E,E,129,[[],["str"]]],[11,"span",E,E,129,[[["self"]],["span"]]],[11,"from",E,E,129,[[[T]],[T]]],[11,"into",E,E,129,[[],[U]]],[11,R[41],E,E,129,[[["self"]],[T]]],[11,R[42],E,E,129,[[["self"],[T]]]],[11,R[8],E,E,129,[[[U]],[R[3]]]],[11,R[9],E,E,129,[[],[R[3]]]],[11,R[28],E,E,129,[[["self"]],[T]]],[11,R[10],E,E,129,[[["self"]],[T]]],[11,R[11],E,E,129,[[["self"]],[R[29]]]],[11,"peek",E,E,130,[[["cursor"]],["bool"]]],[11,R[941],E,E,130,[[],["str"]]],[11,"span",E,E,130,[[["self"]],["span"]]],[11,"from",E,E,130,[[[T]],[T]]],[11,"into",E,E,130,[[],[U]]],[11,R[41],E,E,130,[[["self"]],[T]]],[11,R[42],E,E,130,[[["self"],[T]]]],[11,R[8],E,E,130,[[[U]],[R[3]]]],[11,R[9],E,E,130,[[],[R[3]]]],[11,R[28],E,E,130,[[["self"]],[T]]],[11,R[10],E,E,130,[[["self"]],[T]]],[11,R[11],E,E,130,[[["self"]],[R[29]]]],[11,"peek",E,E,131,[[["cursor"]],["bool"]]],[11,R[941],E,E,131,[[],["str"]]],[11,"span",E,E,131,[[["self"]],["span"]]],[11,"from",E,E,131,[[[T]],[T]]],[11,"into",E,E,131,[[],[U]]],[11,R[41],E,E,131,[[["self"]],[T]]],[11,R[42],E,E,131,[[["self"],[T]]]],[11,R[8],E,E,131,[[[U]],[R[3]]]],[11,R[9],E,E,131,[[],[R[3]]]],[11,R[28],E,E,131,[[["self"]],[T]]],[11,R[10],E,E,131,[[["self"]],[T]]],[11,R[11],E,E,131,[[["self"]],[R[29]]]],[11,"peek",E,E,132,[[["cursor"]],["bool"]]],[11,R[941],E,E,132,[[],["str"]]],[11,"span",E,E,132,[[["self"]],["span"]]],[11,"from",E,E,132,[[[T]],[T]]],[11,"into",E,E,132,[[],[U]]],[11,R[41],E,E,132,[[["self"]],[T]]],[11,R[42],E,E,132,[[["self"],[T]]]],[11,R[8],E,E,132,[[[U]],[R[3]]]],[11,R[9],E,E,132,[[],[R[3]]]],[11,R[28],E,E,132,[[["self"]],[T]]],[11,R[10],E,E,132,[[["self"]],[T]]],[11,R[11],E,E,132,[[["self"]],[R[29]]]],[11,"peek",E,E,133,[[["cursor"]],["bool"]]],[11,R[941],E,E,133,[[],["str"]]],[11,"span",E,E,133,[[["self"]],["span"]]],[11,"from",E,E,133,[[[T]],[T]]],[11,"into",E,E,133,[[],[U]]],[11,R[41],E,E,133,[[["self"]],[T]]],[11,R[42],E,E,133,[[["self"],[T]]]],[11,R[8],E,E,133,[[[U]],[R[3]]]],[11,R[9],E,E,133,[[],[R[3]]]],[11,R[28],E,E,133,[[["self"]],[T]]],[11,R[10],E,E,133,[[["self"]],[T]]],[11,R[11],E,E,133,[[["self"]],[R[29]]]],[11,"peek",E,E,134,[[["cursor"]],["bool"]]],[11,R[941],E,E,134,[[],["str"]]],[11,"span",E,E,134,[[["self"]],["span"]]],[11,"from",E,E,134,[[[T]],[T]]],[11,"into",E,E,134,[[],[U]]],[11,R[41],E,E,134,[[["self"]],[T]]],[11,R[42],E,E,134,[[["self"],[T]]]],[11,R[8],E,E,134,[[[U]],[R[3]]]],[11,R[9],E,E,134,[[],[R[3]]]],[11,R[28],E,E,134,[[["self"]],[T]]],[11,R[10],E,E,134,[[["self"]],[T]]],[11,R[11],E,E,134,[[["self"]],[R[29]]]],[11,"peek",E,E,135,[[["cursor"]],["bool"]]],[11,R[941],E,E,135,[[],["str"]]],[11,"span",E,E,135,[[["self"]],["span"]]],[11,"from",E,E,135,[[[T]],[T]]],[11,"into",E,E,135,[[],[U]]],[11,R[41],E,E,135,[[["self"]],[T]]],[11,R[42],E,E,135,[[["self"],[T]]]],[11,R[8],E,E,135,[[[U]],[R[3]]]],[11,R[9],E,E,135,[[],[R[3]]]],[11,R[28],E,E,135,[[["self"]],[T]]],[11,R[10],E,E,135,[[["self"]],[T]]],[11,R[11],E,E,135,[[["self"]],[R[29]]]],[11,"peek",E,E,136,[[["cursor"]],["bool"]]],[11,R[941],E,E,136,[[],["str"]]],[11,"span",E,E,136,[[["self"]],["span"]]],[11,"from",E,E,136,[[[T]],[T]]],[11,"into",E,E,136,[[],[U]]],[11,R[41],E,E,136,[[["self"]],[T]]],[11,R[42],E,E,136,[[["self"],[T]]]],[11,R[8],E,E,136,[[[U]],[R[3]]]],[11,R[9],E,E,136,[[],[R[3]]]],[11,R[28],E,E,136,[[["self"]],[T]]],[11,R[10],E,E,136,[[["self"]],[T]]],[11,R[11],E,E,136,[[["self"]],[R[29]]]],[11,"peek",E,E,137,[[["cursor"]],["bool"]]],[11,R[941],E,E,137,[[],["str"]]],[11,"span",E,E,137,[[["self"]],["span"]]],[11,"from",E,E,137,[[[T]],[T]]],[11,"into",E,E,137,[[],[U]]],[11,R[41],E,E,137,[[["self"]],[T]]],[11,R[42],E,E,137,[[["self"],[T]]]],[11,R[8],E,E,137,[[[U]],[R[3]]]],[11,R[9],E,E,137,[[],[R[3]]]],[11,R[28],E,E,137,[[["self"]],[T]]],[11,R[10],E,E,137,[[["self"]],[T]]],[11,R[11],E,E,137,[[["self"]],[R[29]]]],[11,"peek",E,E,138,[[["cursor"]],["bool"]]],[11,R[941],E,E,138,[[],["str"]]],[11,"span",E,E,138,[[["self"]],["span"]]],[11,"from",E,E,138,[[[T]],[T]]],[11,"into",E,E,138,[[],[U]]],[11,R[41],E,E,138,[[["self"]],[T]]],[11,R[42],E,E,138,[[["self"],[T]]]],[11,R[8],E,E,138,[[[U]],[R[3]]]],[11,R[9],E,E,138,[[],[R[3]]]],[11,R[28],E,E,138,[[["self"]],[T]]],[11,R[10],E,E,138,[[["self"]],[T]]],[11,R[11],E,E,138,[[["self"]],[R[29]]]],[11,"peek",E,E,139,[[["cursor"]],["bool"]]],[11,R[941],E,E,139,[[],["str"]]],[11,"span",E,E,139,[[["self"]],["span"]]],[11,"from",E,E,139,[[[T]],[T]]],[11,"into",E,E,139,[[],[U]]],[11,R[41],E,E,139,[[["self"]],[T]]],[11,R[42],E,E,139,[[["self"],[T]]]],[11,R[8],E,E,139,[[[U]],[R[3]]]],[11,R[9],E,E,139,[[],[R[3]]]],[11,R[28],E,E,139,[[["self"]],[T]]],[11,R[10],E,E,139,[[["self"]],[T]]],[11,R[11],E,E,139,[[["self"]],[R[29]]]],[11,"peek",E,E,140,[[["cursor"]],["bool"]]],[11,R[941],E,E,140,[[],["str"]]],[11,"span",E,E,140,[[["self"]],["span"]]],[11,"from",E,E,140,[[[T]],[T]]],[11,"into",E,E,140,[[],[U]]],[11,R[41],E,E,140,[[["self"]],[T]]],[11,R[42],E,E,140,[[["self"],[T]]]],[11,R[8],E,E,140,[[[U]],[R[3]]]],[11,R[9],E,E,140,[[],[R[3]]]],[11,R[28],E,E,140,[[["self"]],[T]]],[11,R[10],E,E,140,[[["self"]],[T]]],[11,R[11],E,E,140,[[["self"]],[R[29]]]],[11,"peek",E,E,141,[[["cursor"]],["bool"]]],[11,R[941],E,E,141,[[],["str"]]],[11,"span",E,E,141,[[["self"]],["span"]]],[11,"from",E,E,141,[[[T]],[T]]],[11,"into",E,E,141,[[],[U]]],[11,R[41],E,E,141,[[["self"]],[T]]],[11,R[42],E,E,141,[[["self"],[T]]]],[11,R[8],E,E,141,[[[U]],[R[3]]]],[11,R[9],E,E,141,[[],[R[3]]]],[11,R[28],E,E,141,[[["self"]],[T]]],[11,R[10],E,E,141,[[["self"]],[T]]],[11,R[11],E,E,141,[[["self"]],[R[29]]]],[11,"peek",E,E,142,[[["cursor"]],["bool"]]],[11,R[941],E,E,142,[[],["str"]]],[11,"span",E,E,142,[[["self"]],["span"]]],[11,"from",E,E,142,[[[T]],[T]]],[11,"into",E,E,142,[[],[U]]],[11,R[41],E,E,142,[[["self"]],[T]]],[11,R[42],E,E,142,[[["self"],[T]]]],[11,R[8],E,E,142,[[[U]],[R[3]]]],[11,R[9],E,E,142,[[],[R[3]]]],[11,R[28],E,E,142,[[["self"]],[T]]],[11,R[10],E,E,142,[[["self"]],[T]]],[11,R[11],E,E,142,[[["self"]],[R[29]]]],[11,"peek",E,E,143,[[["cursor"]],["bool"]]],[11,R[941],E,E,143,[[],["str"]]],[11,"span",E,E,143,[[["self"]],["span"]]],[11,"from",E,E,143,[[[T]],[T]]],[11,"into",E,E,143,[[],[U]]],[11,R[41],E,E,143,[[["self"]],[T]]],[11,R[42],E,E,143,[[["self"],[T]]]],[11,R[8],E,E,143,[[[U]],[R[3]]]],[11,R[9],E,E,143,[[],[R[3]]]],[11,R[28],E,E,143,[[["self"]],[T]]],[11,R[10],E,E,143,[[["self"]],[T]]],[11,R[11],E,E,143,[[["self"]],[R[29]]]],[11,"peek",E,E,144,[[["cursor"]],["bool"]]],[11,R[941],E,E,144,[[],["str"]]],[11,"span",E,E,144,[[["self"]],["span"]]],[11,"from",E,E,144,[[[T]],[T]]],[11,"into",E,E,144,[[],[U]]],[11,R[41],E,E,144,[[["self"]],[T]]],[11,R[42],E,E,144,[[["self"],[T]]]],[11,R[8],E,E,144,[[[U]],[R[3]]]],[11,R[9],E,E,144,[[],[R[3]]]],[11,R[28],E,E,144,[[["self"]],[T]]],[11,R[10],E,E,144,[[["self"]],[T]]],[11,R[11],E,E,144,[[["self"]],[R[29]]]],[11,"peek",E,E,145,[[["cursor"]],["bool"]]],[11,R[941],E,E,145,[[],["str"]]],[11,"span",E,E,145,[[["self"]],["span"]]],[11,"from",E,E,145,[[[T]],[T]]],[11,"into",E,E,145,[[],[U]]],[11,R[41],E,E,145,[[["self"]],[T]]],[11,R[42],E,E,145,[[["self"],[T]]]],[11,R[8],E,E,145,[[[U]],[R[3]]]],[11,R[9],E,E,145,[[],[R[3]]]],[11,R[28],E,E,145,[[["self"]],[T]]],[11,R[10],E,E,145,[[["self"]],[T]]],[11,R[11],E,E,145,[[["self"]],[R[29]]]],[11,"peek",E,E,146,[[["cursor"]],["bool"]]],[11,R[941],E,E,146,[[],["str"]]],[11,"span",E,E,146,[[["self"]],["span"]]],[11,"from",E,E,146,[[[T]],[T]]],[11,"into",E,E,146,[[],[U]]],[11,R[41],E,E,146,[[["self"]],[T]]],[11,R[42],E,E,146,[[["self"],[T]]]],[11,R[8],E,E,146,[[[U]],[R[3]]]],[11,R[9],E,E,146,[[],[R[3]]]],[11,R[28],E,E,146,[[["self"]],[T]]],[11,R[10],E,E,146,[[["self"]],[T]]],[11,R[11],E,E,146,[[["self"]],[R[29]]]],[11,"peek",E,E,147,[[["cursor"]],["bool"]]],[11,R[941],E,E,147,[[],["str"]]],[11,"span",E,E,147,[[["self"]],["span"]]],[11,"from",E,E,147,[[[T]],[T]]],[11,"into",E,E,147,[[],[U]]],[11,R[41],E,E,147,[[["self"]],[T]]],[11,R[42],E,E,147,[[["self"],[T]]]],[11,R[8],E,E,147,[[[U]],[R[3]]]],[11,R[9],E,E,147,[[],[R[3]]]],[11,R[28],E,E,147,[[["self"]],[T]]],[11,R[10],E,E,147,[[["self"]],[T]]],[11,R[11],E,E,147,[[["self"]],[R[29]]]],[11,"peek",E,E,148,[[["cursor"]],["bool"]]],[11,R[941],E,E,148,[[],["str"]]],[11,"span",E,E,148,[[["self"]],["span"]]],[11,"from",E,E,148,[[[T]],[T]]],[11,"into",E,E,148,[[],[U]]],[11,R[41],E,E,148,[[["self"]],[T]]],[11,R[42],E,E,148,[[["self"],[T]]]],[11,R[8],E,E,148,[[[U]],[R[3]]]],[11,R[9],E,E,148,[[],[R[3]]]],[11,R[28],E,E,148,[[["self"]],[T]]],[11,R[10],E,E,148,[[["self"]],[T]]],[11,R[11],E,E,148,[[["self"]],[R[29]]]],[11,"peek",E,E,149,[[["cursor"]],["bool"]]],[11,R[941],E,E,149,[[],["str"]]],[11,"span",E,E,149,[[["self"]],["span"]]],[11,"from",E,E,149,[[[T]],[T]]],[11,"into",E,E,149,[[],[U]]],[11,R[41],E,E,149,[[["self"]],[T]]],[11,R[42],E,E,149,[[["self"],[T]]]],[11,R[8],E,E,149,[[[U]],[R[3]]]],[11,R[9],E,E,149,[[],[R[3]]]],[11,R[28],E,E,149,[[["self"]],[T]]],[11,R[10],E,E,149,[[["self"]],[T]]],[11,R[11],E,E,149,[[["self"]],[R[29]]]],[11,"peek",E,E,150,[[["cursor"]],["bool"]]],[11,R[941],E,E,150,[[],["str"]]],[11,"span",E,E,150,[[["self"]],["span"]]],[11,"from",E,E,150,[[[T]],[T]]],[11,"into",E,E,150,[[],[U]]],[11,R[41],E,E,150,[[["self"]],[T]]],[11,R[42],E,E,150,[[["self"],[T]]]],[11,R[8],E,E,150,[[[U]],[R[3]]]],[11,R[9],E,E,150,[[],[R[3]]]],[11,R[28],E,E,150,[[["self"]],[T]]],[11,R[10],E,E,150,[[["self"]],[T]]],[11,R[11],E,E,150,[[["self"]],[R[29]]]],[11,"peek",E,E,151,[[["cursor"]],["bool"]]],[11,R[941],E,E,151,[[],["str"]]],[11,"span",E,E,151,[[["self"]],["span"]]],[11,"from",E,E,151,[[[T]],[T]]],[11,"into",E,E,151,[[],[U]]],[11,R[41],E,E,151,[[["self"]],[T]]],[11,R[42],E,E,151,[[["self"],[T]]]],[11,R[8],E,E,151,[[[U]],[R[3]]]],[11,R[9],E,E,151,[[],[R[3]]]],[11,R[28],E,E,151,[[["self"]],[T]]],[11,R[10],E,E,151,[[["self"]],[T]]],[11,R[11],E,E,151,[[["self"]],[R[29]]]],[11,"peek",E,E,152,[[["cursor"]],["bool"]]],[11,R[941],E,E,152,[[],["str"]]],[11,"span",E,E,152,[[["self"]],["span"]]],[11,"from",E,E,152,[[[T]],[T]]],[11,"into",E,E,152,[[],[U]]],[11,R[41],E,E,152,[[["self"]],[T]]],[11,R[42],E,E,152,[[["self"],[T]]]],[11,R[8],E,E,152,[[[U]],[R[3]]]],[11,R[9],E,E,152,[[],[R[3]]]],[11,R[28],E,E,152,[[["self"]],[T]]],[11,R[10],E,E,152,[[["self"]],[T]]],[11,R[11],E,E,152,[[["self"]],[R[29]]]],[11,"peek",E,E,153,[[["cursor"]],["bool"]]],[11,R[941],E,E,153,[[],["str"]]],[11,"span",E,E,153,[[["self"]],["span"]]],[11,"from",E,E,153,[[[T]],[T]]],[11,"into",E,E,153,[[],[U]]],[11,R[41],E,E,153,[[["self"]],[T]]],[11,R[42],E,E,153,[[["self"],[T]]]],[11,R[8],E,E,153,[[[U]],[R[3]]]],[11,R[9],E,E,153,[[],[R[3]]]],[11,R[28],E,E,153,[[["self"]],[T]]],[11,R[10],E,E,153,[[["self"]],[T]]],[11,R[11],E,E,153,[[["self"]],[R[29]]]],[11,"peek",E,E,154,[[["cursor"]],["bool"]]],[11,R[941],E,E,154,[[],["str"]]],[11,"span",E,E,154,[[["self"]],["span"]]],[11,"from",E,E,154,[[[T]],[T]]],[11,"into",E,E,154,[[],[U]]],[11,R[41],E,E,154,[[["self"]],[T]]],[11,R[42],E,E,154,[[["self"],[T]]]],[11,R[8],E,E,154,[[[U]],[R[3]]]],[11,R[9],E,E,154,[[],[R[3]]]],[11,R[28],E,E,154,[[["self"]],[T]]],[11,R[10],E,E,154,[[["self"]],[T]]],[11,R[11],E,E,154,[[["self"]],[R[29]]]],[11,"peek",E,E,155,[[["cursor"]],["bool"]]],[11,R[941],E,E,155,[[],["str"]]],[11,"span",E,E,155,[[["self"]],["span"]]],[11,"from",E,E,155,[[[T]],[T]]],[11,"into",E,E,155,[[],[U]]],[11,R[41],E,E,155,[[["self"]],[T]]],[11,R[42],E,E,155,[[["self"],[T]]]],[11,R[8],E,E,155,[[[U]],[R[3]]]],[11,R[9],E,E,155,[[],[R[3]]]],[11,R[28],E,E,155,[[["self"]],[T]]],[11,R[10],E,E,155,[[["self"]],[T]]],[11,R[11],E,E,155,[[["self"]],[R[29]]]],[11,"peek",E,E,156,[[["cursor"]],["bool"]]],[11,R[941],E,E,156,[[],["str"]]],[11,"span",E,E,156,[[["self"]],["span"]]],[11,"from",E,E,156,[[[T]],[T]]],[11,"into",E,E,156,[[],[U]]],[11,R[41],E,E,156,[[["self"]],[T]]],[11,R[42],E,E,156,[[["self"],[T]]]],[11,R[8],E,E,156,[[[U]],[R[3]]]],[11,R[9],E,E,156,[[],[R[3]]]],[11,R[28],E,E,156,[[["self"]],[T]]],[11,R[10],E,E,156,[[["self"]],[T]]],[11,R[11],E,E,156,[[["self"]],[R[29]]]],[11,"peek",E,E,157,[[["cursor"]],["bool"]]],[11,R[941],E,E,157,[[],["str"]]],[11,"span",E,E,157,[[["self"]],["span"]]],[11,"from",E,E,157,[[[T]],[T]]],[11,"into",E,E,157,[[],[U]]],[11,R[41],E,E,157,[[["self"]],[T]]],[11,R[42],E,E,157,[[["self"],[T]]]],[11,R[8],E,E,157,[[[U]],[R[3]]]],[11,R[9],E,E,157,[[],[R[3]]]],[11,R[28],E,E,157,[[["self"]],[T]]],[11,R[10],E,E,157,[[["self"]],[T]]],[11,R[11],E,E,157,[[["self"]],[R[29]]]],[11,"peek",E,E,158,[[["cursor"]],["bool"]]],[11,R[941],E,E,158,[[],["str"]]],[11,"span",E,E,158,[[["self"]],["span"]]],[11,"from",E,E,158,[[[T]],[T]]],[11,"into",E,E,158,[[],[U]]],[11,R[41],E,E,158,[[["self"]],[T]]],[11,R[42],E,E,158,[[["self"],[T]]]],[11,R[8],E,E,158,[[[U]],[R[3]]]],[11,R[9],E,E,158,[[],[R[3]]]],[11,R[28],E,E,158,[[["self"]],[T]]],[11,R[10],E,E,158,[[["self"]],[T]]],[11,R[11],E,E,158,[[["self"]],[R[29]]]],[11,"peek",E,E,159,[[["cursor"]],["bool"]]],[11,R[941],E,E,159,[[],["str"]]],[11,"span",E,E,159,[[["self"]],["span"]]],[11,"from",E,E,159,[[[T]],[T]]],[11,"into",E,E,159,[[],[U]]],[11,R[41],E,E,159,[[["self"]],[T]]],[11,R[42],E,E,159,[[["self"],[T]]]],[11,R[8],E,E,159,[[[U]],[R[3]]]],[11,R[9],E,E,159,[[],[R[3]]]],[11,R[28],E,E,159,[[["self"]],[T]]],[11,R[10],E,E,159,[[["self"]],[T]]],[11,R[11],E,E,159,[[["self"]],[R[29]]]],[11,"peek",E,E,160,[[["cursor"]],["bool"]]],[11,R[941],E,E,160,[[],["str"]]],[11,"span",E,E,160,[[["self"]],["span"]]],[11,"from",E,E,160,[[[T]],[T]]],[11,"into",E,E,160,[[],[U]]],[11,R[41],E,E,160,[[["self"]],[T]]],[11,R[42],E,E,160,[[["self"],[T]]]],[11,R[8],E,E,160,[[[U]],[R[3]]]],[11,R[9],E,E,160,[[],[R[3]]]],[11,R[28],E,E,160,[[["self"]],[T]]],[11,R[10],E,E,160,[[["self"]],[T]]],[11,R[11],E,E,160,[[["self"]],[R[29]]]],[11,"peek",E,E,161,[[["cursor"]],["bool"]]],[11,R[941],E,E,161,[[],["str"]]],[11,"span",E,E,161,[[["self"]],["span"]]],[11,"from",E,E,161,[[[T]],[T]]],[11,"into",E,E,161,[[],[U]]],[11,R[41],E,E,161,[[["self"]],[T]]],[11,R[42],E,E,161,[[["self"],[T]]]],[11,R[8],E,E,161,[[[U]],[R[3]]]],[11,R[9],E,E,161,[[],[R[3]]]],[11,R[28],E,E,161,[[["self"]],[T]]],[11,R[10],E,E,161,[[["self"]],[T]]],[11,R[11],E,E,161,[[["self"]],[R[29]]]],[11,"peek",E,E,162,[[["cursor"]],["bool"]]],[11,R[941],E,E,162,[[],["str"]]],[11,"span",E,E,162,[[["self"]],["span"]]],[11,"from",E,E,162,[[[T]],[T]]],[11,"into",E,E,162,[[],[U]]],[11,R[41],E,E,162,[[["self"]],[T]]],[11,R[42],E,E,162,[[["self"],[T]]]],[11,R[8],E,E,162,[[[U]],[R[3]]]],[11,R[9],E,E,162,[[],[R[3]]]],[11,R[28],E,E,162,[[["self"]],[T]]],[11,R[10],E,E,162,[[["self"]],[T]]],[11,R[11],E,E,162,[[["self"]],[R[29]]]],[11,"peek",E,E,163,[[["cursor"]],["bool"]]],[11,R[941],E,E,163,[[],["str"]]],[11,"span",E,E,163,[[["self"]],["span"]]],[11,"from",E,E,163,[[[T]],[T]]],[11,"into",E,E,163,[[],[U]]],[11,R[41],E,E,163,[[["self"]],[T]]],[11,R[42],E,E,163,[[["self"],[T]]]],[11,R[8],E,E,163,[[[U]],[R[3]]]],[11,R[9],E,E,163,[[],[R[3]]]],[11,R[28],E,E,163,[[["self"]],[T]]],[11,R[10],E,E,163,[[["self"]],[T]]],[11,R[11],E,E,163,[[["self"]],[R[29]]]],[11,"peek",E,E,164,[[["cursor"]],["bool"]]],[11,R[941],E,E,164,[[],["str"]]],[11,"span",E,E,164,[[["self"]],["span"]]],[11,"from",E,E,164,[[[T]],[T]]],[11,"into",E,E,164,[[],[U]]],[11,R[41],E,E,164,[[["self"]],[T]]],[11,R[42],E,E,164,[[["self"],[T]]]],[11,R[8],E,E,164,[[[U]],[R[3]]]],[11,R[9],E,E,164,[[],[R[3]]]],[11,R[28],E,E,164,[[["self"]],[T]]],[11,R[10],E,E,164,[[["self"]],[T]]],[11,R[11],E,E,164,[[["self"]],[R[29]]]],[11,"peek",E,E,165,[[["cursor"]],["bool"]]],[11,R[941],E,E,165,[[],["str"]]],[11,"span",E,E,165,[[["self"]],["span"]]],[11,"from",E,E,165,[[[T]],[T]]],[11,"into",E,E,165,[[],[U]]],[11,R[41],E,E,165,[[["self"]],[T]]],[11,R[42],E,E,165,[[["self"],[T]]]],[11,R[8],E,E,165,[[[U]],[R[3]]]],[11,R[9],E,E,165,[[],[R[3]]]],[11,R[28],E,E,165,[[["self"]],[T]]],[11,R[10],E,E,165,[[["self"]],[T]]],[11,R[11],E,E,165,[[["self"]],[R[29]]]],[11,"peek",E,E,166,[[["cursor"]],["bool"]]],[11,R[941],E,E,166,[[],["str"]]],[11,"span",E,E,166,[[["self"]],["span"]]],[11,"from",E,E,166,[[[T]],[T]]],[11,"into",E,E,166,[[],[U]]],[11,R[41],E,E,166,[[["self"]],[T]]],[11,R[42],E,E,166,[[["self"],[T]]]],[11,R[8],E,E,166,[[[U]],[R[3]]]],[11,R[9],E,E,166,[[],[R[3]]]],[11,R[28],E,E,166,[[["self"]],[T]]],[11,R[10],E,E,166,[[["self"]],[T]]],[11,R[11],E,E,166,[[["self"]],[R[29]]]],[11,"peek",E,E,167,[[["cursor"]],["bool"]]],[11,R[941],E,E,167,[[],["str"]]],[11,"span",E,E,167,[[["self"]],["span"]]],[11,"from",E,E,167,[[[T]],[T]]],[11,"into",E,E,167,[[],[U]]],[11,R[41],E,E,167,[[["self"]],[T]]],[11,R[42],E,E,167,[[["self"],[T]]]],[11,R[8],E,E,167,[[[U]],[R[3]]]],[11,R[9],E,E,167,[[],[R[3]]]],[11,R[28],E,E,167,[[["self"]],[T]]],[11,R[10],E,E,167,[[["self"]],[T]]],[11,R[11],E,E,167,[[["self"]],[R[29]]]],[11,"peek",E,E,168,[[["cursor"]],["bool"]]],[11,R[941],E,E,168,[[],["str"]]],[11,"span",E,E,168,[[["self"]],["span"]]],[11,"from",E,E,168,[[[T]],[T]]],[11,"into",E,E,168,[[],[U]]],[11,R[41],E,E,168,[[["self"]],[T]]],[11,R[42],E,E,168,[[["self"],[T]]]],[11,R[8],E,E,168,[[[U]],[R[3]]]],[11,R[9],E,E,168,[[],[R[3]]]],[11,R[28],E,E,168,[[["self"]],[T]]],[11,R[10],E,E,168,[[["self"]],[T]]],[11,R[11],E,E,168,[[["self"]],[R[29]]]],[11,"peek",E,E,169,[[["cursor"]],["bool"]]],[11,R[941],E,E,169,[[],["str"]]],[11,"span",E,E,169,[[["self"]],["span"]]],[11,"from",E,E,169,[[[T]],[T]]],[11,"into",E,E,169,[[],[U]]],[11,R[41],E,E,169,[[["self"]],[T]]],[11,R[42],E,E,169,[[["self"],[T]]]],[11,R[8],E,E,169,[[[U]],[R[3]]]],[11,R[9],E,E,169,[[],[R[3]]]],[11,R[28],E,E,169,[[["self"]],[T]]],[11,R[10],E,E,169,[[["self"]],[T]]],[11,R[11],E,E,169,[[["self"]],[R[29]]]],[11,"peek",E,E,170,[[["cursor"]],["bool"]]],[11,R[941],E,E,170,[[],["str"]]],[11,"span",E,E,170,[[["self"]],["span"]]],[11,"from",E,E,170,[[[T]],[T]]],[11,"into",E,E,170,[[],[U]]],[11,R[41],E,E,170,[[["self"]],[T]]],[11,R[42],E,E,170,[[["self"],[T]]]],[11,R[8],E,E,170,[[[U]],[R[3]]]],[11,R[9],E,E,170,[[],[R[3]]]],[11,R[28],E,E,170,[[["self"]],[T]]],[11,R[10],E,E,170,[[["self"]],[T]]],[11,R[11],E,E,170,[[["self"]],[R[29]]]],[11,"peek",E,E,171,[[["cursor"]],["bool"]]],[11,R[941],E,E,171,[[],["str"]]],[11,"span",E,E,171,[[["self"]],["span"]]],[11,"from",E,E,171,[[[T]],[T]]],[11,"into",E,E,171,[[],[U]]],[11,R[41],E,E,171,[[["self"]],[T]]],[11,R[42],E,E,171,[[["self"],[T]]]],[11,R[8],E,E,171,[[[U]],[R[3]]]],[11,R[9],E,E,171,[[],[R[3]]]],[11,R[28],E,E,171,[[["self"]],[T]]],[11,R[10],E,E,171,[[["self"]],[T]]],[11,R[11],E,E,171,[[["self"]],[R[29]]]],[11,"peek",E,E,172,[[["cursor"]],["bool"]]],[11,R[941],E,E,172,[[],["str"]]],[11,"span",E,E,172,[[["self"]],["span"]]],[11,"from",E,E,172,[[[T]],[T]]],[11,"into",E,E,172,[[],[U]]],[11,R[41],E,E,172,[[["self"]],[T]]],[11,R[42],E,E,172,[[["self"],[T]]]],[11,R[8],E,E,172,[[[U]],[R[3]]]],[11,R[9],E,E,172,[[],[R[3]]]],[11,R[28],E,E,172,[[["self"]],[T]]],[11,R[10],E,E,172,[[["self"]],[T]]],[11,R[11],E,E,172,[[["self"]],[R[29]]]],[11,"peek",E,E,173,[[["cursor"]],["bool"]]],[11,R[941],E,E,173,[[],["str"]]],[11,"span",E,E,173,[[["self"]],["span"]]],[11,"from",E,E,173,[[[T]],[T]]],[11,"into",E,E,173,[[],[U]]],[11,R[41],E,E,173,[[["self"]],[T]]],[11,R[42],E,E,173,[[["self"],[T]]]],[11,R[8],E,E,173,[[[U]],[R[3]]]],[11,R[9],E,E,173,[[],[R[3]]]],[11,R[28],E,E,173,[[["self"]],[T]]],[11,R[10],E,E,173,[[["self"]],[T]]],[11,R[11],E,E,173,[[["self"]],[R[29]]]],[11,"peek",E,E,174,[[["cursor"]],["bool"]]],[11,R[941],E,E,174,[[],["str"]]],[11,"span",E,E,174,[[["self"]],["span"]]],[11,"from",E,E,174,[[[T]],[T]]],[11,"into",E,E,174,[[],[U]]],[11,R[41],E,E,174,[[["self"]],[T]]],[11,R[42],E,E,174,[[["self"],[T]]]],[11,R[8],E,E,174,[[[U]],[R[3]]]],[11,R[9],E,E,174,[[],[R[3]]]],[11,R[28],E,E,174,[[["self"]],[T]]],[11,R[10],E,E,174,[[["self"]],[T]]],[11,R[11],E,E,174,[[["self"]],[R[29]]]],[11,"peek",E,E,175,[[["cursor"]],["bool"]]],[11,R[941],E,E,175,[[],["str"]]],[11,"span",E,E,175,[[["self"]],["span"]]],[11,"from",E,E,175,[[[T]],[T]]],[11,"into",E,E,175,[[],[U]]],[11,R[41],E,E,175,[[["self"]],[T]]],[11,R[42],E,E,175,[[["self"],[T]]]],[11,R[8],E,E,175,[[[U]],[R[3]]]],[11,R[9],E,E,175,[[],[R[3]]]],[11,R[28],E,E,175,[[["self"]],[T]]],[11,R[10],E,E,175,[[["self"]],[T]]],[11,R[11],E,E,175,[[["self"]],[R[29]]]],[11,"peek",E,E,176,[[["cursor"]],["bool"]]],[11,R[941],E,E,176,[[],["str"]]],[11,"span",E,E,176,[[["self"]],["span"]]],[11,"from",E,E,176,[[[T]],[T]]],[11,"into",E,E,176,[[],[U]]],[11,R[41],E,E,176,[[["self"]],[T]]],[11,R[42],E,E,176,[[["self"],[T]]]],[11,R[8],E,E,176,[[[U]],[R[3]]]],[11,R[9],E,E,176,[[],[R[3]]]],[11,R[28],E,E,176,[[["self"]],[T]]],[11,R[10],E,E,176,[[["self"]],[T]]],[11,R[11],E,E,176,[[["self"]],[R[29]]]],[11,"peek",E,E,177,[[["cursor"]],["bool"]]],[11,R[941],E,E,177,[[],["str"]]],[11,"span",E,E,177,[[["self"]],["span"]]],[11,"from",E,E,177,[[[T]],[T]]],[11,"into",E,E,177,[[],[U]]],[11,R[41],E,E,177,[[["self"]],[T]]],[11,R[42],E,E,177,[[["self"],[T]]]],[11,R[8],E,E,177,[[[U]],[R[3]]]],[11,R[9],E,E,177,[[],[R[3]]]],[11,R[28],E,E,177,[[["self"]],[T]]],[11,R[10],E,E,177,[[["self"]],[T]]],[11,R[11],E,E,177,[[["self"]],[R[29]]]],[11,"peek",E,E,178,[[["cursor"]],["bool"]]],[11,R[941],E,E,178,[[],["str"]]],[11,"span",E,E,178,[[["self"]],["span"]]],[11,"from",E,E,178,[[[T]],[T]]],[11,"into",E,E,178,[[],[U]]],[11,R[41],E,E,178,[[["self"]],[T]]],[11,R[42],E,E,178,[[["self"],[T]]]],[11,R[8],E,E,178,[[[U]],[R[3]]]],[11,R[9],E,E,178,[[],[R[3]]]],[11,R[28],E,E,178,[[["self"]],[T]]],[11,R[10],E,E,178,[[["self"]],[T]]],[11,R[11],E,E,178,[[["self"]],[R[29]]]],[11,"peek",E,E,179,[[["cursor"]],["bool"]]],[11,R[941],E,E,179,[[],["str"]]],[11,"span",E,E,179,[[["self"]],["span"]]],[11,"from",E,E,179,[[[T]],[T]]],[11,"into",E,E,179,[[],[U]]],[11,R[41],E,E,179,[[["self"]],[T]]],[11,R[42],E,E,179,[[["self"],[T]]]],[11,R[8],E,E,179,[[[U]],[R[3]]]],[11,R[9],E,E,179,[[],[R[3]]]],[11,R[28],E,E,179,[[["self"]],[T]]],[11,R[10],E,E,179,[[["self"]],[T]]],[11,R[11],E,E,179,[[["self"]],[R[29]]]],[11,"peek",E,E,180,[[["cursor"]],["bool"]]],[11,R[941],E,E,180,[[],["str"]]],[11,"span",E,E,180,[[["self"]],["span"]]],[11,"from",E,E,180,[[[T]],[T]]],[11,"into",E,E,180,[[],[U]]],[11,R[41],E,E,180,[[["self"]],[T]]],[11,R[42],E,E,180,[[["self"],[T]]]],[11,R[8],E,E,180,[[[U]],[R[3]]]],[11,R[9],E,E,180,[[],[R[3]]]],[11,R[28],E,E,180,[[["self"]],[T]]],[11,R[10],E,E,180,[[["self"]],[T]]],[11,R[11],E,E,180,[[["self"]],[R[29]]]],[11,"peek",E,E,181,[[["cursor"]],["bool"]]],[11,R[941],E,E,181,[[],["str"]]],[11,"span",E,E,181,[[["self"]],["span"]]],[11,"from",E,E,181,[[[T]],[T]]],[11,"into",E,E,181,[[],[U]]],[11,R[41],E,E,181,[[["self"]],[T]]],[11,R[42],E,E,181,[[["self"],[T]]]],[11,R[8],E,E,181,[[[U]],[R[3]]]],[11,R[9],E,E,181,[[],[R[3]]]],[11,R[28],E,E,181,[[["self"]],[T]]],[11,R[10],E,E,181,[[["self"]],[T]]],[11,R[11],E,E,181,[[["self"]],[R[29]]]],[11,"peek",E,E,182,[[["cursor"]],["bool"]]],[11,R[941],E,E,182,[[],["str"]]],[11,"span",E,E,182,[[["self"]],["span"]]],[11,"from",E,E,182,[[[T]],[T]]],[11,"into",E,E,182,[[],[U]]],[11,R[41],E,E,182,[[["self"]],[T]]],[11,R[42],E,E,182,[[["self"],[T]]]],[11,R[8],E,E,182,[[[U]],[R[3]]]],[11,R[9],E,E,182,[[],[R[3]]]],[11,R[28],E,E,182,[[["self"]],[T]]],[11,R[10],E,E,182,[[["self"]],[T]]],[11,R[11],E,E,182,[[["self"]],[R[29]]]],[11,"peek",E,E,183,[[["cursor"]],["bool"]]],[11,R[941],E,E,183,[[],["str"]]],[11,"span",E,E,183,[[["self"]],["span"]]],[11,"from",E,E,183,[[[T]],[T]]],[11,"into",E,E,183,[[],[U]]],[11,R[41],E,E,183,[[["self"]],[T]]],[11,R[42],E,E,183,[[["self"],[T]]]],[11,R[8],E,E,183,[[[U]],[R[3]]]],[11,R[9],E,E,183,[[],[R[3]]]],[11,R[28],E,E,183,[[["self"]],[T]]],[11,R[10],E,E,183,[[["self"]],[T]]],[11,R[11],E,E,183,[[["self"]],[R[29]]]],[11,"peek",E,E,184,[[["cursor"]],["bool"]]],[11,R[941],E,E,184,[[],["str"]]],[11,"span",E,E,184,[[["self"]],["span"]]],[11,"from",E,E,184,[[[T]],[T]]],[11,"into",E,E,184,[[],[U]]],[11,R[41],E,E,184,[[["self"]],[T]]],[11,R[42],E,E,184,[[["self"],[T]]]],[11,R[8],E,E,184,[[[U]],[R[3]]]],[11,R[9],E,E,184,[[],[R[3]]]],[11,R[28],E,E,184,[[["self"]],[T]]],[11,R[10],E,E,184,[[["self"]],[T]]],[11,R[11],E,E,184,[[["self"]],[R[29]]]],[11,"peek",E,E,185,[[["cursor"]],["bool"]]],[11,R[941],E,E,185,[[],["str"]]],[11,"span",E,E,185,[[["self"]],["span"]]],[11,"from",E,E,185,[[[T]],[T]]],[11,"into",E,E,185,[[],[U]]],[11,R[41],E,E,185,[[["self"]],[T]]],[11,R[42],E,E,185,[[["self"],[T]]]],[11,R[8],E,E,185,[[[U]],[R[3]]]],[11,R[9],E,E,185,[[],[R[3]]]],[11,R[28],E,E,185,[[["self"]],[T]]],[11,R[10],E,E,185,[[["self"]],[T]]],[11,R[11],E,E,185,[[["self"]],[R[29]]]],[11,"peek",E,E,186,[[["cursor"]],["bool"]]],[11,R[941],E,E,186,[[],["str"]]],[11,"from",E,E,186,[[[T]],[T]]],[11,"into",E,E,186,[[],[U]]],[11,R[41],E,E,186,[[["self"]],[T]]],[11,R[42],E,E,186,[[["self"],[T]]]],[11,R[8],E,E,186,[[[U]],[R[3]]]],[11,R[9],E,E,186,[[],[R[3]]]],[11,R[28],E,E,186,[[["self"]],[T]]],[11,R[10],E,E,186,[[["self"]],[T]]],[11,R[11],E,E,186,[[["self"]],[R[29]]]],[11,"peek",E,E,187,[[["cursor"]],["bool"]]],[11,R[941],E,E,187,[[],["str"]]],[11,"from",E,E,187,[[[T]],[T]]],[11,"into",E,E,187,[[],[U]]],[11,R[41],E,E,187,[[["self"]],[T]]],[11,R[42],E,E,187,[[["self"],[T]]]],[11,R[8],E,E,187,[[[U]],[R[3]]]],[11,R[9],E,E,187,[[],[R[3]]]],[11,R[28],E,E,187,[[["self"]],[T]]],[11,R[10],E,E,187,[[["self"]],[T]]],[11,R[11],E,E,187,[[["self"]],[R[29]]]],[11,"peek",E,E,188,[[["cursor"]],["bool"]]],[11,R[941],E,E,188,[[],["str"]]],[11,"from",E,E,188,[[[T]],[T]]],[11,"into",E,E,188,[[],[U]]],[11,R[41],E,E,188,[[["self"]],[T]]],[11,R[42],E,E,188,[[["self"],[T]]]],[11,R[8],E,E,188,[[[U]],[R[3]]]],[11,R[9],E,E,188,[[],[R[3]]]],[11,R[28],E,E,188,[[["self"]],[T]]],[11,R[10],E,E,188,[[["self"]],[T]]],[11,R[11],E,E,188,[[["self"]],[R[29]]]],[11,"peek",E,E,189,[[["cursor"]],["bool"]]],[11,R[941],E,E,189,[[],["str"]]],[11,"from",E,E,189,[[[T]],[T]]],[11,"into",E,E,189,[[],[U]]],[11,R[41],E,E,189,[[["self"]],[T]]],[11,R[42],E,E,189,[[["self"],[T]]]],[11,R[8],E,E,189,[[[U]],[R[3]]]],[11,R[9],E,E,189,[[],[R[3]]]],[11,R[28],E,E,189,[[["self"]],[T]]],[11,R[10],E,E,189,[[["self"]],[T]]],[11,R[11],E,E,189,[[["self"]],[R[29]]]],[11,"from",R[943],E,197,[[[T]],[T]]],[11,"into",E,E,197,[[],[U]]],[11,R[8],E,E,197,[[[U]],[R[3]]]],[11,R[9],E,E,197,[[],[R[3]]]],[11,R[28],E,E,197,[[["self"]],[T]]],[11,R[10],E,E,197,[[["self"]],[T]]],[11,R[11],E,E,197,[[["self"]],[R[29]]]],[11,"from",E,E,198,[[[T]],[T]]],[11,"into",E,E,198,[[],[U]]],[11,R[41],E,E,198,[[["self"]],[T]]],[11,R[42],E,E,198,[[["self"],[T]]]],[11,R[8],E,E,198,[[[U]],[R[3]]]],[11,R[9],E,E,198,[[],[R[3]]]],[11,R[28],E,E,198,[[["self"]],[T]]],[11,R[10],E,E,198,[[["self"]],[T]]],[11,R[11],E,E,198,[[["self"]],[R[29]]]],[11,"span",R[944],E,201,[[["self"]],["span"]]],[11,"from",E,E,201,[[[T]],[T]]],[11,"into",E,E,201,[[],[U]]],[11,R[23],E,E,201,[[],["i"]]],[11,R[41],E,E,201,[[["self"]],[T]]],[11,R[42],E,E,201,[[["self"],[T]]]],[11,R[8],E,E,201,[[[U]],[R[3]]]],[11,R[9],E,E,201,[[],[R[3]]]],[11,R[28],E,E,201,[[["self"]],[T]]],[11,R[10],E,E,201,[[["self"]],[T]]],[11,R[11],E,E,201,[[["self"]],[R[29]]]],[11,"from",E,E,242,[[[T]],[T]]],[11,"into",E,E,242,[[],[U]]],[11,R[23],E,E,242,[[],["i"]]],[11,R[41],E,E,242,[[["self"]],[T]]],[11,R[42],E,E,242,[[["self"],[T]]]],[11,R[8],E,E,242,[[[U]],[R[3]]]],[11,R[9],E,E,242,[[],[R[3]]]],[11,R[28],E,E,242,[[["self"]],[T]]],[11,R[10],E,E,242,[[["self"]],[T]]],[11,R[11],E,E,242,[[["self"]],[R[29]]]],[11,"from",E,E,243,[[[T]],[T]]],[11,"into",E,E,243,[[],[U]]],[11,R[23],E,E,243,[[],["i"]]],[11,R[8],E,E,243,[[[U]],[R[3]]]],[11,R[9],E,E,243,[[],[R[3]]]],[11,R[28],E,E,243,[[["self"]],[T]]],[11,R[10],E,E,243,[[["self"]],[T]]],[11,R[11],E,E,243,[[["self"]],[R[29]]]],[11,"from",E,E,244,[[[T]],[T]]],[11,"into",E,E,244,[[],[U]]],[11,R[23],E,E,244,[[],["i"]]],[11,R[41],E,E,244,[[["self"]],[T]]],[11,R[42],E,E,244,[[["self"],[T]]]],[11,R[8],E,E,244,[[[U]],[R[3]]]],[11,R[9],E,E,244,[[],[R[3]]]],[11,R[28],E,E,244,[[["self"]],[T]]],[11,R[10],E,E,244,[[["self"]],[T]]],[11,R[11],E,E,244,[[["self"]],[R[29]]]],[11,"from",E,E,245,[[[T]],[T]]],[11,"into",E,E,245,[[],[U]]],[11,R[23],E,E,245,[[],["i"]]],[11,R[41],E,E,245,[[["self"]],[T]]],[11,R[42],E,E,245,[[["self"],[T]]]],[11,R[8],E,E,245,[[[U]],[R[3]]]],[11,R[9],E,E,245,[[],[R[3]]]],[11,R[28],E,E,245,[[["self"]],[T]]],[11,R[10],E,E,245,[[["self"]],[T]]],[11,R[11],E,E,245,[[["self"]],[R[29]]]],[11,"from",E,E,246,[[[T]],[T]]],[11,"into",E,E,246,[[],[U]]],[11,R[23],E,E,246,[[],["i"]]],[11,R[41],E,E,246,[[["self"]],[T]]],[11,R[42],E,E,246,[[["self"],[T]]]],[11,R[8],E,E,246,[[[U]],[R[3]]]],[11,R[9],E,E,246,[[],[R[3]]]],[11,R[28],E,E,246,[[["self"]],[T]]],[11,R[10],E,E,246,[[["self"]],[T]]],[11,R[11],E,E,246,[[["self"]],[R[29]]]],[11,"from",E,E,247,[[[T]],[T]]],[11,"into",E,E,247,[[],[U]]],[11,R[23],E,E,247,[[],["i"]]],[11,R[8],E,E,247,[[[U]],[R[3]]]],[11,R[9],E,E,247,[[],[R[3]]]],[11,R[28],E,E,247,[[["self"]],[T]]],[11,R[10],E,E,247,[[["self"]],[T]]],[11,R[11],E,E,247,[[["self"]],[R[29]]]],[11,"span",E,E,200,[[["self"]],["span"]]],[11,"from",E,E,200,[[[T]],[T]]],[11,"into",E,E,200,[[],[U]]],[11,R[41],E,E,200,[[["self"]],[T]]],[11,R[42],E,E,200,[[["self"],[T]]]],[11,R[8],E,E,200,[[[U]],[R[3]]]],[11,R[9],E,E,200,[[],[R[3]]]],[11,R[28],E,E,200,[[["self"]],[T]]],[11,R[10],E,E,200,[[["self"]],[T]]],[11,R[11],E,E,200,[[["self"]],[R[29]]]],[11,"from",R[931],E,248,[[[T]],[T]]],[11,"into",E,E,248,[[],[U]]],[11,R[8],E,E,248,[[[U]],[R[3]]]],[11,R[9],E,E,248,[[],[R[3]]]],[11,R[28],E,E,248,[[["self"]],[T]]],[11,R[10],E,E,248,[[["self"]],[T]]],[11,R[11],E,E,248,[[["self"]],[R[29]]]],[11,"from",E,E,207,[[[T]],[T]]],[11,"into",E,E,207,[[],[U]]],[11,R[98],E,E,207,[[["self"]],["string"]]],[11,R[8],E,E,207,[[[U]],[R[3]]]],[11,R[9],E,E,207,[[],[R[3]]]],[11,R[28],E,E,207,[[["self"]],[T]]],[11,R[10],E,E,207,[[["self"]],[T]]],[11,R[11],E,E,207,[[["self"]],[R[29]]]],[11,"from",E,E,206,[[[T]],[T]]],[11,"into",E,E,206,[[],[U]]],[11,R[41],E,E,206,[[["self"]],[T]]],[11,R[42],E,E,206,[[["self"],[T]]]],[11,R[8],E,E,206,[[[U]],[R[3]]]],[11,R[9],E,E,206,[[],[R[3]]]],[11,R[28],E,E,206,[[["self"]],[T]]],[11,R[10],E,E,206,[[["self"]],[T]]],[11,R[11],E,E,206,[[["self"]],[R[29]]]],[11,"fmt","syn",E,209,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,R[172],E,E,209,[[["self"],["ident"]],[[R[24]],[R[25],[R[24]]]]]],[11,"cmp",E,E,209,[[["self"],["ident"]],[R[24]]]],[11,"fmt",E,E,209,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"clone",E,E,209,[[["self"]],["ident"]]],[11,"hash",E,E,209,[[["self"],["h"]]]],[11,"eq",E,E,209,[[["self"],[T]],["bool"]]],[11,"eq",E,E,209,[[["self"],["ident"]],["bool"]]],[11,R[945],E,E,209,[[["self"],[R[330]]]]],[11,"peek",E,E,31,[[["cursor"]],["bool"]]],[11,R[941],E,E,31,[[],["str"]]],[11,"peek",E,E,76,[[["cursor"]],["bool"]]],[11,R[941],E,E,76,[[],["str"]]],[11,"peek",E,E,191,[[["cursor"]],["bool"]]],[11,R[941],E,E,191,[[],["str"]]],[11,"peek",E,E,192,[[["cursor"]],["bool"]]],[11,R[941],E,E,192,[[],["str"]]],[11,"peek",E,E,193,[[["cursor"]],["bool"]]],[11,R[941],E,E,193,[[],["str"]]],[11,"peek",E,E,194,[[["cursor"]],["bool"]]],[11,R[941],E,E,194,[[],["str"]]],[11,"peek",E,E,195,[[["cursor"]],["bool"]]],[11,R[941],E,E,195,[[],["str"]]],[11,"peek",E,E,196,[[["cursor"]],["bool"]]],[11,R[941],E,E,196,[[],["str"]]],[11,"peek",E,E,32,[[["cursor"]],["bool"]]],[11,R[941],E,E,32,[[],["str"]]],[11,"peek",R[942],E,87,[[["cursor"]],["bool"]]],[11,R[941],E,E,87,[[],["str"]]],[11,"peek",E,E,188,[[["cursor"]],["bool"]]],[11,R[941],E,E,188,[[],["str"]]],[11,"peek",E,E,186,[[["cursor"]],["bool"]]],[11,R[941],E,E,186,[[],["str"]]],[11,"peek",E,E,187,[[["cursor"]],["bool"]]],[11,R[941],E,E,187,[[],["str"]]],[11,"peek",E,E,189,[[["cursor"]],["bool"]]],[11,R[941],E,E,189,[[],["str"]]],[11,"peek",E,E,88,[[["cursor"]],["bool"]]],[11,R[941],E,E,88,[[],["str"]]],[11,"peek",E,E,89,[[["cursor"]],["bool"]]],[11,R[941],E,E,89,[[],["str"]]],[11,"peek",E,E,90,[[["cursor"]],["bool"]]],[11,R[941],E,E,90,[[],["str"]]],[11,"peek",E,E,91,[[["cursor"]],["bool"]]],[11,R[941],E,E,91,[[],["str"]]],[11,"peek",E,E,92,[[["cursor"]],["bool"]]],[11,R[941],E,E,92,[[],["str"]]],[11,"peek",E,E,93,[[["cursor"]],["bool"]]],[11,R[941],E,E,93,[[],["str"]]],[11,"peek",E,E,94,[[["cursor"]],["bool"]]],[11,R[941],E,E,94,[[],["str"]]],[11,"peek",E,E,95,[[["cursor"]],["bool"]]],[11,R[941],E,E,95,[[],["str"]]],[11,"peek",E,E,96,[[["cursor"]],["bool"]]],[11,R[941],E,E,96,[[],["str"]]],[11,"peek",E,E,97,[[["cursor"]],["bool"]]],[11,R[941],E,E,97,[[],["str"]]],[11,"peek",E,E,98,[[["cursor"]],["bool"]]],[11,R[941],E,E,98,[[],["str"]]],[11,"peek",E,E,99,[[["cursor"]],["bool"]]],[11,R[941],E,E,99,[[],["str"]]],[11,"peek",E,E,100,[[["cursor"]],["bool"]]],[11,R[941],E,E,100,[[],["str"]]],[11,"peek",E,E,101,[[["cursor"]],["bool"]]],[11,R[941],E,E,101,[[],["str"]]],[11,"peek",E,E,102,[[["cursor"]],["bool"]]],[11,R[941],E,E,102,[[],["str"]]],[11,"peek",E,E,103,[[["cursor"]],["bool"]]],[11,R[941],E,E,103,[[],["str"]]],[11,"peek",E,E,104,[[["cursor"]],["bool"]]],[11,R[941],E,E,104,[[],["str"]]],[11,"peek",E,E,105,[[["cursor"]],["bool"]]],[11,R[941],E,E,105,[[],["str"]]],[11,"peek",E,E,106,[[["cursor"]],["bool"]]],[11,R[941],E,E,106,[[],["str"]]],[11,"peek",E,E,107,[[["cursor"]],["bool"]]],[11,R[941],E,E,107,[[],["str"]]],[11,"peek",E,E,108,[[["cursor"]],["bool"]]],[11,R[941],E,E,108,[[],["str"]]],[11,"peek",E,E,109,[[["cursor"]],["bool"]]],[11,R[941],E,E,109,[[],["str"]]],[11,"peek",E,E,110,[[["cursor"]],["bool"]]],[11,R[941],E,E,110,[[],["str"]]],[11,"peek",E,E,111,[[["cursor"]],["bool"]]],[11,R[941],E,E,111,[[],["str"]]],[11,"peek",E,E,112,[[["cursor"]],["bool"]]],[11,R[941],E,E,112,[[],["str"]]],[11,"peek",E,E,113,[[["cursor"]],["bool"]]],[11,R[941],E,E,113,[[],["str"]]],[11,"peek",E,E,114,[[["cursor"]],["bool"]]],[11,R[941],E,E,114,[[],["str"]]],[11,"peek",E,E,115,[[["cursor"]],["bool"]]],[11,R[941],E,E,115,[[],["str"]]],[11,"peek",E,E,116,[[["cursor"]],["bool"]]],[11,R[941],E,E,116,[[],["str"]]],[11,"peek",E,E,117,[[["cursor"]],["bool"]]],[11,R[941],E,E,117,[[],["str"]]],[11,"peek",E,E,118,[[["cursor"]],["bool"]]],[11,R[941],E,E,118,[[],["str"]]],[11,"peek",E,E,119,[[["cursor"]],["bool"]]],[11,R[941],E,E,119,[[],["str"]]],[11,"peek",E,E,120,[[["cursor"]],["bool"]]],[11,R[941],E,E,120,[[],["str"]]],[11,"peek",E,E,121,[[["cursor"]],["bool"]]],[11,R[941],E,E,121,[[],["str"]]],[11,"peek",E,E,122,[[["cursor"]],["bool"]]],[11,R[941],E,E,122,[[],["str"]]],[11,"peek",E,E,123,[[["cursor"]],["bool"]]],[11,R[941],E,E,123,[[],["str"]]],[11,"peek",E,E,124,[[["cursor"]],["bool"]]],[11,R[941],E,E,124,[[],["str"]]],[11,"peek",E,E,125,[[["cursor"]],["bool"]]],[11,R[941],E,E,125,[[],["str"]]],[11,"peek",E,E,126,[[["cursor"]],["bool"]]],[11,R[941],E,E,126,[[],["str"]]],[11,"peek",E,E,127,[[["cursor"]],["bool"]]],[11,R[941],E,E,127,[[],["str"]]],[11,"peek",E,E,128,[[["cursor"]],["bool"]]],[11,R[941],E,E,128,[[],["str"]]],[11,"peek",E,E,129,[[["cursor"]],["bool"]]],[11,R[941],E,E,129,[[],["str"]]],[11,"peek",E,E,130,[[["cursor"]],["bool"]]],[11,R[941],E,E,130,[[],["str"]]],[11,"peek",E,E,131,[[["cursor"]],["bool"]]],[11,R[941],E,E,131,[[],["str"]]],[11,"peek",E,E,132,[[["cursor"]],["bool"]]],[11,R[941],E,E,132,[[],["str"]]],[11,"peek",E,E,133,[[["cursor"]],["bool"]]],[11,R[941],E,E,133,[[],["str"]]],[11,"peek",E,E,134,[[["cursor"]],["bool"]]],[11,R[941],E,E,134,[[],["str"]]],[11,"peek",E,E,135,[[["cursor"]],["bool"]]],[11,R[941],E,E,135,[[],["str"]]],[11,"peek",E,E,136,[[["cursor"]],["bool"]]],[11,R[941],E,E,136,[[],["str"]]],[11,"peek",E,E,137,[[["cursor"]],["bool"]]],[11,R[941],E,E,137,[[],["str"]]],[11,"peek",E,E,138,[[["cursor"]],["bool"]]],[11,R[941],E,E,138,[[],["str"]]],[11,"peek",E,E,139,[[["cursor"]],["bool"]]],[11,R[941],E,E,139,[[],["str"]]],[11,"peek",E,E,140,[[["cursor"]],["bool"]]],[11,R[941],E,E,140,[[],["str"]]],[11,"peek",E,E,141,[[["cursor"]],["bool"]]],[11,R[941],E,E,141,[[],["str"]]],[11,"peek",E,E,142,[[["cursor"]],["bool"]]],[11,R[941],E,E,142,[[],["str"]]],[11,"peek",E,E,143,[[["cursor"]],["bool"]]],[11,R[941],E,E,143,[[],["str"]]],[11,"peek",E,E,144,[[["cursor"]],["bool"]]],[11,R[941],E,E,144,[[],["str"]]],[11,"peek",E,E,145,[[["cursor"]],["bool"]]],[11,R[941],E,E,145,[[],["str"]]],[11,"peek",E,E,146,[[["cursor"]],["bool"]]],[11,R[941],E,E,146,[[],["str"]]],[11,"peek",E,E,147,[[["cursor"]],["bool"]]],[11,R[941],E,E,147,[[],["str"]]],[11,"peek",E,E,148,[[["cursor"]],["bool"]]],[11,R[941],E,E,148,[[],["str"]]],[11,"peek",E,E,149,[[["cursor"]],["bool"]]],[11,R[941],E,E,149,[[],["str"]]],[11,"peek",E,E,150,[[["cursor"]],["bool"]]],[11,R[941],E,E,150,[[],["str"]]],[11,"peek",E,E,151,[[["cursor"]],["bool"]]],[11,R[941],E,E,151,[[],["str"]]],[11,"peek",E,E,152,[[["cursor"]],["bool"]]],[11,R[941],E,E,152,[[],["str"]]],[11,"peek",E,E,153,[[["cursor"]],["bool"]]],[11,R[941],E,E,153,[[],["str"]]],[11,"peek",E,E,154,[[["cursor"]],["bool"]]],[11,R[941],E,E,154,[[],["str"]]],[11,"peek",E,E,155,[[["cursor"]],["bool"]]],[11,R[941],E,E,155,[[],["str"]]],[11,"peek",E,E,156,[[["cursor"]],["bool"]]],[11,R[941],E,E,156,[[],["str"]]],[11,"peek",E,E,157,[[["cursor"]],["bool"]]],[11,R[941],E,E,157,[[],["str"]]],[11,"peek",E,E,158,[[["cursor"]],["bool"]]],[11,R[941],E,E,158,[[],["str"]]],[11,"peek",E,E,159,[[["cursor"]],["bool"]]],[11,R[941],E,E,159,[[],["str"]]],[11,"peek",E,E,160,[[["cursor"]],["bool"]]],[11,R[941],E,E,160,[[],["str"]]],[11,"peek",E,E,161,[[["cursor"]],["bool"]]],[11,R[941],E,E,161,[[],["str"]]],[11,"peek",E,E,162,[[["cursor"]],["bool"]]],[11,R[941],E,E,162,[[],["str"]]],[11,"peek",E,E,163,[[["cursor"]],["bool"]]],[11,R[941],E,E,163,[[],["str"]]],[11,"peek",E,E,164,[[["cursor"]],["bool"]]],[11,R[941],E,E,164,[[],["str"]]],[11,"peek",E,E,165,[[["cursor"]],["bool"]]],[11,R[941],E,E,165,[[],["str"]]],[11,"peek",E,E,166,[[["cursor"]],["bool"]]],[11,R[941],E,E,166,[[],["str"]]],[11,"peek",E,E,167,[[["cursor"]],["bool"]]],[11,R[941],E,E,167,[[],["str"]]],[11,"peek",E,E,168,[[["cursor"]],["bool"]]],[11,R[941],E,E,168,[[],["str"]]],[11,"peek",E,E,169,[[["cursor"]],["bool"]]],[11,R[941],E,E,169,[[],["str"]]],[11,"peek",E,E,170,[[["cursor"]],["bool"]]],[11,R[941],E,E,170,[[],["str"]]],[11,"peek",E,E,171,[[["cursor"]],["bool"]]],[11,R[941],E,E,171,[[],["str"]]],[11,"peek",E,E,172,[[["cursor"]],["bool"]]],[11,R[941],E,E,172,[[],["str"]]],[11,"peek",E,E,173,[[["cursor"]],["bool"]]],[11,R[941],E,E,173,[[],["str"]]],[11,"peek",E,E,174,[[["cursor"]],["bool"]]],[11,R[941],E,E,174,[[],["str"]]],[11,"peek",E,E,175,[[["cursor"]],["bool"]]],[11,R[941],E,E,175,[[],["str"]]],[11,"peek",E,E,176,[[["cursor"]],["bool"]]],[11,R[941],E,E,176,[[],["str"]]],[11,"peek",E,E,177,[[["cursor"]],["bool"]]],[11,R[941],E,E,177,[[],["str"]]],[11,"peek",E,E,178,[[["cursor"]],["bool"]]],[11,R[941],E,E,178,[[],["str"]]],[11,"peek",E,E,179,[[["cursor"]],["bool"]]],[11,R[941],E,E,179,[[],["str"]]],[11,"peek",E,E,180,[[["cursor"]],["bool"]]],[11,R[941],E,E,180,[[],["str"]]],[11,"peek",E,E,181,[[["cursor"]],["bool"]]],[11,R[941],E,E,181,[[],["str"]]],[11,"peek",E,E,182,[[["cursor"]],["bool"]]],[11,R[941],E,E,182,[[],["str"]]],[11,"peek",E,E,183,[[["cursor"]],["bool"]]],[11,R[941],E,E,183,[[],["str"]]],[11,"peek",E,E,184,[[["cursor"]],["bool"]]],[11,R[941],E,E,184,[[],["str"]]],[11,"peek",E,E,185,[[["cursor"]],["bool"]]],[11,R[941],E,E,185,[[],["str"]]],[11,"peek","syn",E,209,[[["cursor"]],["bool"]]],[11,R[941],E,E,209,[[],["str"]]],[11,R[946],E,E,209,[[[R[917]]],[R[3]]]],[11,"unraw",E,E,209,[[["self"]],["ident"]]],[11,R[947],R[931],E,207,[[["self"]]]],[11,"parse",R[942],E,87,[[[R[917]]],[R[3]]]],[11,"parse",E,E,88,[[[R[917]]],[R[3]]]],[11,"parse",E,E,89,[[[R[917]]],[R[3]]]],[11,"parse",E,E,90,[[[R[917]]],[R[3]]]],[11,"parse",E,E,91,[[[R[917]]],[R[3]]]],[11,"parse",E,E,92,[[[R[917]]],[R[3]]]],[11,"parse",E,E,93,[[[R[917]]],[R[3]]]],[11,"parse",E,E,94,[[[R[917]]],[R[3]]]],[11,"parse",E,E,95,[[[R[917]]],[R[3]]]],[11,"parse",E,E,96,[[[R[917]]],[R[3]]]],[11,"parse",E,E,97,[[[R[917]]],[R[3]]]],[11,"parse",E,E,98,[[[R[917]]],[R[3]]]],[11,"parse",E,E,99,[[[R[917]]],[R[3]]]],[11,"parse",E,E,100,[[[R[917]]],[R[3]]]],[11,"parse",E,E,101,[[[R[917]]],[R[3]]]],[11,"parse",E,E,102,[[[R[917]]],[R[3]]]],[11,"parse",E,E,103,[[[R[917]]],[R[3]]]],[11,"parse",E,E,104,[[[R[917]]],[R[3]]]],[11,"parse",E,E,105,[[[R[917]]],[R[3]]]],[11,"parse",E,E,106,[[[R[917]]],[R[3]]]],[11,"parse",E,E,107,[[[R[917]]],[R[3]]]],[11,"parse",E,E,108,[[[R[917]]],[R[3]]]],[11,"parse",E,E,109,[[[R[917]]],[R[3]]]],[11,"parse",E,E,110,[[[R[917]]],[R[3]]]],[11,"parse",E,E,111,[[[R[917]]],[R[3]]]],[11,"parse",E,E,112,[[[R[917]]],[R[3]]]],[11,"parse",E,E,113,[[[R[917]]],[R[3]]]],[11,"parse",E,E,114,[[[R[917]]],[R[3]]]],[11,"parse",E,E,115,[[[R[917]]],[R[3]]]],[11,"parse",E,E,116,[[[R[917]]],[R[3]]]],[11,"parse",E,E,117,[[[R[917]]],[R[3]]]],[11,"parse",E,E,118,[[[R[917]]],[R[3]]]],[11,"parse",E,E,119,[[[R[917]]],[R[3]]]],[11,"parse",E,E,120,[[[R[917]]],[R[3]]]],[11,"parse",E,E,121,[[[R[917]]],[R[3]]]],[11,"parse",E,E,122,[[[R[917]]],[R[3]]]],[11,"parse",E,E,123,[[[R[917]]],[R[3]]]],[11,"parse",E,E,124,[[[R[917]]],[R[3]]]],[11,"parse",E,E,125,[[[R[917]]],[R[3]]]],[11,"parse",E,E,126,[[[R[917]]],[R[3]]]],[11,"parse",E,E,127,[[[R[917]]],[R[3]]]],[11,"parse",E,E,128,[[[R[917]]],[R[3]]]],[11,"parse",E,E,129,[[[R[917]]],[R[3]]]],[11,"parse",E,E,130,[[[R[917]]],[R[3]]]],[11,"parse",E,E,131,[[[R[917]]],[R[3]]]],[11,"parse",E,E,132,[[[R[917]]],[R[3]]]],[11,"parse",E,E,133,[[[R[917]]],[R[3]]]],[11,"parse",E,E,134,[[[R[917]]],[R[3]]]],[11,"parse",E,E,135,[[[R[917]]],[R[3]]]],[11,"parse",E,E,136,[[[R[917]]],[R[3]]]],[11,"parse",E,E,137,[[[R[917]]],[R[3]]]],[11,"parse",E,E,138,[[[R[917]]],[R[3]]]],[11,"parse",E,E,139,[[[R[917]]],[R[3]]]],[11,"parse",E,E,140,[[[R[917]]],[R[3]]]],[11,"parse",E,E,141,[[[R[917]]],[R[3]]]],[11,"parse",E,E,142,[[[R[917]]],[R[3]]]],[11,"parse",E,E,143,[[[R[917]]],[R[3]]]],[11,"parse",E,E,144,[[[R[917]]],[R[3]]]],[11,"parse",E,E,145,[[[R[917]]],[R[3]]]],[11,"parse",E,E,146,[[[R[917]]],[R[3]]]],[11,"parse",E,E,147,[[[R[917]]],[R[3]]]],[11,"parse",E,E,148,[[[R[917]]],[R[3]]]],[11,"parse",E,E,149,[[[R[917]]],[R[3]]]],[11,"parse",E,E,150,[[[R[917]]],[R[3]]]],[11,"parse",E,E,151,[[[R[917]]],[R[3]]]],[11,"parse",E,E,152,[[[R[917]]],[R[3]]]],[11,"parse",E,E,153,[[[R[917]]],[R[3]]]],[11,"parse",E,E,154,[[[R[917]]],[R[3]]]],[11,"parse",E,E,155,[[[R[917]]],[R[3]]]],[11,"parse",E,E,156,[[[R[917]]],[R[3]]]],[11,"parse",E,E,157,[[[R[917]]],[R[3]]]],[11,"parse",E,E,158,[[[R[917]]],[R[3]]]],[11,"parse",E,E,159,[[[R[917]]],[R[3]]]],[11,"parse",E,E,160,[[[R[917]]],[R[3]]]],[11,"parse",E,E,161,[[[R[917]]],[R[3]]]],[11,"parse",E,E,162,[[[R[917]]],[R[3]]]],[11,"parse",E,E,163,[[[R[917]]],[R[3]]]],[11,"parse",E,E,164,[[[R[917]]],[R[3]]]],[11,"parse",E,E,165,[[[R[917]]],[R[3]]]],[11,"parse",E,E,166,[[[R[917]]],[R[3]]]],[11,"parse",E,E,167,[[[R[917]]],[R[3]]]],[11,"parse",E,E,168,[[[R[917]]],[R[3]]]],[11,"parse",E,E,169,[[[R[917]]],[R[3]]]],[11,"parse",E,E,170,[[[R[917]]],[R[3]]]],[11,"parse",E,E,171,[[[R[917]]],[R[3]]]],[11,"parse",E,E,172,[[[R[917]]],[R[3]]]],[11,"parse",E,E,173,[[[R[917]]],[R[3]]]],[11,"parse",E,E,174,[[[R[917]]],[R[3]]]],[11,"parse",E,E,175,[[[R[917]]],[R[3]]]],[11,"parse",E,E,176,[[[R[917]]],[R[3]]]],[11,"parse",E,E,177,[[[R[917]]],[R[3]]]],[11,"parse",E,E,178,[[[R[917]]],[R[3]]]],[11,"parse",E,E,179,[[[R[917]]],[R[3]]]],[11,"parse",E,E,180,[[[R[917]]],[R[3]]]],[11,"parse",E,E,181,[[[R[917]]],[R[3]]]],[11,"parse",E,E,182,[[[R[917]]],[R[3]]]],[11,"parse",E,E,183,[[[R[917]]],[R[3]]]],[11,"parse",E,E,184,[[[R[917]]],[R[3]]]],[11,"parse",E,E,185,[[[R[917]]],[R[3]]]],[11,"parse","syn",E,209,[[[R[917]]],[R[3]]]],[11,"parse",E,E,64,[[[R[917]]],[R[3]]]],[11,"parse",E,E,1,[[[R[917]]],[R[3]]]],[11,"parse",E,E,2,[[[R[917]]],[R[3]]]],[11,"parse",E,E,65,[[[R[917]]],[R[3]]]],[11,"parse",E,E,6,[[[R[917]]],[R[3]]]],[11,"parse",E,E,4,[[[R[917]]],[R[3]]]],[11,"parse",E,E,5,[[[R[917]]],[R[3]]]],[11,"parse",E,E,67,[[[R[917]]],[R[3]]]],[11,"parse",E,E,68,[[[R[917]]],[R[3]]]],[11,"parse",E,E,15,[[[R[917]]],[R[3]]]],[11,"parse",E,E,17,[[[R[917]]],[R[3]]]],[11,"parse",E,E,69,[[[R[917]]],[R[3]]]],[11,"parse",E,E,20,[[[R[917]]],[R[3]]]],[11,"parse",E,E,23,[[[R[917]]],[R[3]]]],[11,"parse",E,E,70,[[[R[917]]],[R[3]]]],[11,"parse",E,E,24,[[[R[917]]],[R[3]]]],[11,"parse",E,E,21,[[[R[917]]],[R[3]]]],[11,"parse",E,E,29,[[[R[917]]],[R[3]]]],[11,"parse",E,E,72,[[[R[917]]],[R[3]]]],[11,"parse",E,E,28,[[[R[917]]],[R[3]]]],[11,"parse",E,E,71,[[[R[917]]],[R[3]]]],[11,"parse",E,E,22,[[[R[917]]],[R[3]]]],[11,"parse",E,E,30,[[[R[917]]],[R[3]]]],[11,"parse",E,E,73,[[[R[917]]],[R[3]]]],[11,"parse",E,E,31,[[[R[917]]],[R[3]]]],[11,"parse",E,E,76,[[[R[917]]],[R[3]]]],[11,"parse",E,E,191,[[[R[917]]],[R[3]]]],[11,"parse",E,E,192,[[[R[917]]],[R[3]]]],[11,"parse",E,E,193,[[[R[917]]],[R[3]]]],[11,"parse",E,E,194,[[[R[917]]],[R[3]]]],[11,"parse",E,E,195,[[[R[917]]],[R[3]]]],[11,"parse",E,E,196,[[[R[917]]],[R[3]]]],[11,"parse",E,E,32,[[[R[917]]],[R[3]]]],[11,"parse",E,E,34,[[[R[917]]],[R[3]]]],[11,"parse",E,E,38,[[[R[917]]],[R[3]]]],[11,"parse",E,E,80,[[[R[917]]],[R[3]]]],[11,"parse",E,E,81,[[[R[917]]],[R[3]]]],[11,"parse",E,E,84,[[[R[917]]],[R[3]]]],[11,"parse",E,E,52,[[[R[917]]],[R[3]]]],[11,"parse",E,E,41,[[[R[917]]],[R[3]]]],[11,"parse",E,E,50,[[[R[917]]],[R[3]]]],[11,"parse",E,E,51,[[[R[917]]],[R[3]]]],[11,"parse",E,E,42,[[[R[917]]],[R[3]]]],[11,"parse",E,E,47,[[[R[917]]],[R[3]]]],[11,"parse",E,E,45,[[[R[917]]],[R[3]]]],[11,"parse",E,E,54,[[[R[917]]],[R[3]]]],[11,"parse",E,E,46,[[[R[917]]],[R[3]]]],[11,"parse",E,E,49,[[[R[917]]],[R[3]]]],[11,"parse",E,E,83,[[[R[917]]],[R[3]]]],[11,"parse",E,E,53,[[[R[917]]],[R[3]]]],[11,"parse",E,E,44,[[[R[917]]],[R[3]]]],[11,"parse",E,E,43,[[[R[917]]],[R[3]]]],[11,"parse",E,E,48,[[[R[917]]],[R[3]]]],[11,"parse",E,E,40,[[[R[917]]],[R[3]]]],[11,"parse",E,E,82,[[[R[917]]],[R[3]]]],[11,"parse",E,E,39,[[[R[917]]],[R[3]]]],[11,"parse",E,E,60,[[[R[917]]],[R[3]]]],[11,"parse",E,E,85,[[[R[917]]],[R[3]]]],[11,"parse",E,E,56,[[[R[917]]],[R[3]]]],[11,"parse",E,E,59,[[[R[917]]],[R[3]]]],[11,"parse",E,E,61,[[[R[917]]],[R[3]]]],[11,"parse",E,E,57,[[[R[917]]],[R[3]]]],[11,"from",E,E,209,[[[R[955]]],["ident"]]],[11,"from",E,E,209,[[["selftype"]],["ident"]]],[11,"from",E,E,209,[[["super"]],["ident"]]],[11,"from",E,E,209,[[["crate"]],["ident"]]],[11,"from",E,E,209,[[["extern"]],["ident"]]],[11,"from",E,E,209,[[[R[954]]],["ident"]]],[11,"from",E,E,64,[[["ident"]],["meta"]]],[11,"from",E,E,64,[[["metalist"]],["meta"]]],[11,"from",E,E,64,[[[R[956]]],["meta"]]],[11,"from",E,E,65,[[["meta"]],[R[948]]]],[11,"from",E,E,65,[[["lit"]],[R[948]]]],[11,"from",E,E,66,[[[R[957]]],["fields"]]],[11,"from",E,E,66,[[[R[958]]],["fields"]]],[11,"from",E,E,67,[[[R[959]]],[R[949]]]],[11,"from",E,E,67,[[["viscrate"]],[R[949]]]],[11,"from",E,E,67,[[[R[960]]],[R[949]]]],[11,"from",E,E,68,[[["exprbox"]],["expr"]]],[11,"from",E,E,68,[[[R[961]]],["expr"]]],[11,"from",E,E,68,[[[R[962]]],["expr"]]],[11,"from",E,E,68,[[["exprcall"]],["expr"]]],[11,"from",E,E,68,[[[R[963]]],["expr"]]],[11,"from",E,E,68,[[[R[964]]],["expr"]]],[11,"from",E,E,68,[[[R[965]]],["expr"]]],[11,"from",E,E,68,[[[R[966]]],["expr"]]],[11,"from",E,E,68,[[["exprlit"]],["expr"]]],[11,"from",E,E,68,[[["exprcast"]],["expr"]]],[11,"from",E,E,68,[[["exprtype"]],["expr"]]],[11,"from",E,E,68,[[["exprlet"]],["expr"]]],[11,"from",E,E,68,[[["exprif"]],["expr"]]],[11,"from",E,E,68,[[[R[967]]],["expr"]]],[11,"from",E,E,68,[[[R[968]]],["expr"]]],[11,"from",E,E,68,[[["exprloop"]],["expr"]]],[11,"from",E,E,68,[[[R[969]]],["expr"]]],[11,"from",E,E,68,[[[R[970]]],["expr"]]],[11,"from",E,E,68,[[[R[971]]],["expr"]]],[11,"from",E,E,68,[[[R[972]]],["expr"]]],[11,"from",E,E,68,[[[R[973]]],["expr"]]],[11,"from",E,E,68,[[[R[974]]],["expr"]]],[11,"from",E,E,68,[[[R[975]]],["expr"]]],[11,"from",E,E,68,[[[R[976]]],["expr"]]],[11,"from",E,E,68,[[[R[977]]],["expr"]]],[11,"from",E,E,68,[[["exprpath"]],["expr"]]],[11,"from",E,E,68,[[[R[978]]],["expr"]]],[11,"from",E,E,68,[[[R[979]]],["expr"]]],[11,"from",E,E,68,[[[R[980]]],["expr"]]],[11,"from",E,E,68,[[[R[981]]],["expr"]]],[11,"from",E,E,68,[[[R[982]]],["expr"]]],[11,"from",E,E,68,[[[R[983]]],["expr"]]],[11,"from",E,E,68,[[[R[984]]],["expr"]]],[11,"from",E,E,68,[[[R[985]]],["expr"]]],[11,"from",E,E,68,[[[R[986]]],["expr"]]],[11,"from",E,E,68,[[["exprtry"]],["expr"]]],[11,"from",E,E,68,[[[R[987]]],["expr"]]],[11,"from",E,E,68,[[[R[988]]],["expr"]]],[11,"from",E,E,68,[[[R[989]]],["expr"]]],[11,"from",E,E,68,[[[R[990]]],["expr"]]],[11,"from",E,E,20,[[["usize"]],["index"]]],[11,"from",E,E,70,[[[R[992]]],[R[950]]]],[11,"from",E,E,70,[[[R[993]]],[R[950]]]],[11,"from",E,E,70,[[[R[994]]],[R[950]]]],[11,"from",E,E,29,[[["ident"]],["self"]]],[11,"from",E,E,72,[[[R[997]]],[R[951]]]],[11,"from",E,E,72,[[[R[827]]],[R[951]]]],[11,"from",E,E,73,[[[R[999]]],[R[952]]]],[11,"from",E,E,73,[[[R[1000]]],[R[952]]]],[11,"from",E,E,73,[[[R[1001]]],[R[952]]]],[11,"from",E,E,76,[[["litstr"]],["lit"]]],[11,"from",E,E,76,[[["litbytestr"]],["lit"]]],[11,"from",E,E,76,[[["litbyte"]],["lit"]]],[11,"from",E,E,76,[[["litchar"]],["lit"]]],[11,"from",E,E,76,[[["litint"]],["lit"]]],[11,"from",E,E,76,[[["litfloat"]],["lit"]]],[11,"from",E,E,76,[[["litbool"]],["lit"]]],[11,"from",E,E,76,[[[R[1002]]],["lit"]]],[11,"from",E,E,79,[[["datastruct"]],["data"]]],[11,"from",E,E,79,[[["dataenum"]],["data"]]],[11,"from",E,E,79,[[["dataunion"]],["data"]]],[11,"from",E,E,84,[[["typeslice"]],["type"]]],[11,"from",E,E,84,[[["typearray"]],["type"]]],[11,"from",E,E,84,[[["typeptr"]],["type"]]],[11,"from",E,E,84,[[[R[1003]]],["type"]]],[11,"from",E,E,84,[[["typebarefn"]],["type"]]],[11,"from",E,E,84,[[["typenever"]],["type"]]],[11,"from",E,E,84,[[["typetuple"]],["type"]]],[11,"from",E,E,84,[[["typepath"]],["type"]]],[11,"from",E,E,84,[[[R[1004]]],["type"]]],[11,"from",E,E,84,[[[R[1005]]],["type"]]],[11,"from",E,E,84,[[["typeparen"]],["type"]]],[11,"from",E,E,84,[[["typegroup"]],["type"]]],[11,"from",E,E,84,[[["typeinfer"]],["type"]]],[11,"from",E,E,84,[[["typemacro"]],["type"]]],[11,"from",E,E,84,[[[R[1006]]],["type"]]],[11,"from",E,E,60,[[[T]],["self"]]],[11,"from",E,E,61,[[[T]],["self"]]],[11,"from",E,E,208,[[[R[953]]],["self"]]],[11,"cmp",E,E,31,[[["self"],[R[827]]],[R[24]]]],[11,"extend",R[944],E,201,[[["self"],[R[319]]]]],[11,"extend",E,E,201,[[["self"],[R[319]]]]],[11,"drop",R[931],E,207,[[["self"]]]],[11,"next",R[944],E,242,[[["self"]],[R[25]]]],[11,"next",E,E,243,[[["self"]],[R[25]]]],[11,"next",E,E,244,[[["self"]],[R[25]]]],[11,"next",E,E,245,[[["self"]],[R[25]]]],[11,"next",E,E,246,[[["self"]],[R[25]]]],[11,"next",E,E,247,[[["self"]],[R[25]]]],[11,R[172],"syn",E,31,[[["self"],[R[827]]],[[R[25],[R[24]]],[R[24]]]]],[11,"len",R[944],E,242,[[["self"]],["usize"]]],[11,"len",E,E,243,[[["self"]],["usize"]]],[11,"len",E,E,244,[[["self"]],["usize"]]],[11,"len",E,E,245,[[["self"]],["usize"]]],[11,"len",E,E,246,[[["self"]],["usize"]]],[11,"len",E,E,247,[[["self"]],["usize"]]],[11,"eq","syn",E,31,[[["self"],[R[827]]],["bool"]]],[11,"eq",R[943],E,198,[[["self"],["cursor"]],["bool"]]],[11,"ne",E,E,198,[[["self"],["cursor"]],["bool"]]],[11,R[327],R[942],E,87,[[],["self"]]],[11,R[327],E,E,88,[[],["self"]]],[11,R[327],E,E,89,[[],["self"]]],[11,R[327],E,E,90,[[],["self"]]],[11,R[327],E,E,91,[[],["self"]]],[11,R[327],E,E,92,[[],["self"]]],[11,R[327],E,E,93,[[],["self"]]],[11,R[327],E,E,94,[[],["self"]]],[11,R[327],E,E,95,[[],["self"]]],[11,R[327],E,E,96,[[],["self"]]],[11,R[327],E,E,97,[[],["self"]]],[11,R[327],E,E,98,[[],["self"]]],[11,R[327],E,E,99,[[],["self"]]],[11,R[327],E,E,100,[[],["self"]]],[11,R[327],E,E,101,[[],["self"]]],[11,R[327],E,E,102,[[],["self"]]],[11,R[327],E,E,103,[[],["self"]]],[11,R[327],E,E,104,[[],["self"]]],[11,R[327],E,E,105,[[],["self"]]],[11,R[327],E,E,106,[[],["self"]]],[11,R[327],E,E,107,[[],["self"]]],[11,R[327],E,E,108,[[],["self"]]],[11,R[327],E,E,109,[[],["self"]]],[11,R[327],E,E,110,[[],["self"]]],[11,R[327],E,E,111,[[],["self"]]],[11,R[327],E,E,112,[[],["self"]]],[11,R[327],E,E,113,[[],["self"]]],[11,R[327],E,E,114,[[],["self"]]],[11,R[327],E,E,115,[[],["self"]]],[11,R[327],E,E,116,[[],["self"]]],[11,R[327],E,E,117,[[],["self"]]],[11,R[327],E,E,118,[[],["self"]]],[11,R[327],E,E,119,[[],["self"]]],[11,R[327],E,E,120,[[],["self"]]],[11,R[327],E,E,121,[[],["self"]]],[11,R[327],E,E,122,[[],["self"]]],[11,R[327],E,E,123,[[],["self"]]],[11,R[327],E,E,124,[[],["self"]]],[11,R[327],E,E,125,[[],["self"]]],[11,R[327],E,E,126,[[],["self"]]],[11,R[327],E,E,127,[[],["self"]]],[11,R[327],E,E,128,[[],["self"]]],[11,R[327],E,E,129,[[],["self"]]],[11,R[327],E,E,130,[[],["self"]]],[11,R[327],E,E,131,[[],["self"]]],[11,R[327],E,E,132,[[],["self"]]],[11,R[327],E,E,133,[[],["self"]]],[11,R[327],E,E,134,[[],["self"]]],[11,R[327],E,E,135,[[],["self"]]],[11,R[327],E,E,136,[[],["self"]]],[11,R[327],E,E,137,[[],["self"]]],[11,R[327],E,E,138,[[],["self"]]],[11,R[327],E,E,139,[[],["self"]]],[11,R[327],E,E,140,[[],["self"]]],[11,R[327],E,E,141,[[],["self"]]],[11,R[327],E,E,142,[[],["self"]]],[11,R[327],E,E,143,[[],["self"]]],[11,R[327],E,E,144,[[],["self"]]],[11,R[327],E,E,145,[[],["self"]]],[11,R[327],E,E,146,[[],["self"]]],[11,R[327],E,E,147,[[],["self"]]],[11,R[327],E,E,148,[[],["self"]]],[11,R[327],E,E,149,[[],["self"]]],[11,R[327],E,E,150,[[],["self"]]],[11,R[327],E,E,151,[[],["self"]]],[11,R[327],E,E,152,[[],["self"]]],[11,R[327],E,E,153,[[],["self"]]],[11,R[327],E,E,154,[[],["self"]]],[11,R[327],E,E,155,[[],["self"]]],[11,R[327],E,E,156,[[],["self"]]],[11,R[327],E,E,157,[[],["self"]]],[11,R[327],E,E,158,[[],["self"]]],[11,R[327],E,E,159,[[],["self"]]],[11,R[327],E,E,160,[[],["self"]]],[11,R[327],E,E,161,[[],["self"]]],[11,R[327],E,E,162,[[],["self"]]],[11,R[327],E,E,163,[[],["self"]]],[11,R[327],E,E,164,[[],["self"]]],[11,R[327],E,E,165,[[],["self"]]],[11,R[327],E,E,166,[[],["self"]]],[11,R[327],E,E,167,[[],["self"]]],[11,R[327],E,E,168,[[],["self"]]],[11,R[327],E,E,169,[[],["self"]]],[11,R[327],E,E,170,[[],["self"]]],[11,R[327],E,E,171,[[],["self"]]],[11,R[327],E,E,172,[[],["self"]]],[11,R[327],E,E,173,[[],["self"]]],[11,R[327],E,E,174,[[],["self"]]],[11,R[327],E,E,175,[[],["self"]]],[11,R[327],E,E,176,[[],["self"]]],[11,R[327],E,E,177,[[],["self"]]],[11,R[327],E,E,178,[[],["self"]]],[11,R[327],E,E,179,[[],["self"]]],[11,R[327],E,E,180,[[],["self"]]],[11,R[327],E,E,181,[[],["self"]]],[11,R[327],E,E,182,[[],["self"]]],[11,R[327],E,E,183,[[],["self"]]],[11,R[327],E,E,184,[[],["self"]]],[11,R[327],E,E,185,[[],["self"]]],[11,R[327],E,E,186,[[],["self"]]],[11,R[327],E,E,187,[[],["self"]]],[11,R[327],E,E,188,[[],["self"]]],[11,R[327],E,E,189,[[],["self"]]],[11,R[327],"syn",E,23,[[],[R[991]]]],[11,R[327],E,E,21,[[],[R[996]]]],[11,R[327],E,E,86,[[],["self"]]],[11,R[327],R[944],E,201,[[],["self"]]],[11,R[23],E,E,201,[[]]],[11,"clone",R[942],E,87,[[["self"]],[R[954]]]],[11,"clone",E,E,88,[[["self"]],["abstract"]]],[11,"clone",E,E,89,[[["self"]],["as"]]],[11,"clone",E,E,90,[[["self"]],["async"]]],[11,"clone",E,E,91,[[["self"]],["auto"]]],[11,"clone",E,E,92,[[["self"]],["become"]]],[11,"clone",E,E,93,[[["self"]],["box"]]],[11,"clone",E,E,94,[[["self"]],["break"]]],[11,"clone",E,E,95,[[["self"]],["const"]]],[11,"clone",E,E,96,[[["self"]],["continue"]]],[11,"clone",E,E,97,[[["self"]],["crate"]]],[11,"clone",E,E,98,[[["self"]],[R[327]]]],[11,"clone",E,E,99,[[["self"]],["do"]]],[11,"clone",E,E,100,[[["self"]],["dyn"]]],[11,"clone",E,E,101,[[["self"]],["else"]]],[11,"clone",E,E,102,[[["self"]],["enum"]]],[11,"clone",E,E,103,[[["self"]],["existential"]]],[11,"clone",E,E,104,[[["self"]],["extern"]]],[11,"clone",E,E,105,[[["self"]],["final"]]],[11,"clone",E,E,106,[[["self"]],["fn"]]],[11,"clone",E,E,107,[[["self"]],["for"]]],[11,"clone",E,E,108,[[["self"]],["if"]]],[11,"clone",E,E,109,[[["self"]],["impl"]]],[11,"clone",E,E,110,[[["self"]],["in"]]],[11,"clone",E,E,111,[[["self"]],["let"]]],[11,"clone",E,E,112,[[["self"]],["loop"]]],[11,"clone",E,E,113,[[["self"]],["macro"]]],[11,"clone",E,E,114,[[["self"]],["match"]]],[11,"clone",E,E,115,[[["self"]],["mod"]]],[11,"clone",E,E,116,[[["self"]],["move"]]],[11,"clone",E,E,117,[[["self"]],["mut"]]],[11,"clone",E,E,118,[[["self"]],["override"]]],[11,"clone",E,E,119,[[["self"]],["priv"]]],[11,"clone",E,E,120,[[["self"]],["pub"]]],[11,"clone",E,E,121,[[["self"]],["ref"]]],[11,"clone",E,E,122,[[["self"]],["return"]]],[11,"clone",E,E,123,[[["self"]],["selftype"]]],[11,"clone",E,E,124,[[["self"]],[R[955]]]],[11,"clone",E,E,125,[[["self"]],["static"]]],[11,"clone",E,E,126,[[["self"]],["struct"]]],[11,"clone",E,E,127,[[["self"]],["super"]]],[11,"clone",E,E,128,[[["self"]],["trait"]]],[11,"clone",E,E,129,[[["self"]],["try"]]],[11,"clone",E,E,130,[[["self"]],["type"]]],[11,"clone",E,E,131,[[["self"]],["typeof"]]],[11,"clone",E,E,132,[[["self"]],["union"]]],[11,"clone",E,E,133,[[["self"]],["unsafe"]]],[11,"clone",E,E,134,[[["self"]],["unsized"]]],[11,"clone",E,E,135,[[["self"]],["use"]]],[11,"clone",E,E,136,[[["self"]],["virtual"]]],[11,"clone",E,E,137,[[["self"]],["where"]]],[11,"clone",E,E,138,[[["self"]],["while"]]],[11,"clone",E,E,139,[[["self"]],["yield"]]],[11,"clone",E,E,140,[[["self"]],["add"]]],[11,"clone",E,E,141,[[["self"]],["addeq"]]],[11,"clone",E,E,142,[[["self"]],["and"]]],[11,"clone",E,E,143,[[["self"]],["andand"]]],[11,"clone",E,E,144,[[["self"]],["andeq"]]],[11,"clone",E,E,145,[[["self"]],["at"]]],[11,"clone",E,E,146,[[["self"]],["bang"]]],[11,"clone",E,E,147,[[["self"]],["caret"]]],[11,"clone",E,E,148,[[["self"]],["careteq"]]],[11,"clone",E,E,149,[[["self"]],["colon"]]],[11,"clone",E,E,150,[[["self"]],["colon2"]]],[11,"clone",E,E,151,[[["self"]],["comma"]]],[11,"clone",E,E,152,[[["self"]],["div"]]],[11,"clone",E,E,153,[[["self"]],["diveq"]]],[11,"clone",E,E,154,[[["self"]],["dollar"]]],[11,"clone",E,E,155,[[["self"]],["dot"]]],[11,"clone",E,E,156,[[["self"]],["dot2"]]],[11,"clone",E,E,157,[[["self"]],["dot3"]]],[11,"clone",E,E,158,[[["self"]],["dotdoteq"]]],[11,"clone",E,E,159,[[["self"]],["eq"]]],[11,"clone",E,E,160,[[["self"]],["eqeq"]]],[11,"clone",E,E,161,[[["self"]],["ge"]]],[11,"clone",E,E,162,[[["self"]],["gt"]]],[11,"clone",E,E,163,[[["self"]],["le"]]],[11,"clone",E,E,164,[[["self"]],["lt"]]],[11,"clone",E,E,165,[[["self"]],["muleq"]]],[11,"clone",E,E,166,[[["self"]],["ne"]]],[11,"clone",E,E,167,[[["self"]],["or"]]],[11,"clone",E,E,168,[[["self"]],["oreq"]]],[11,"clone",E,E,169,[[["self"]],["oror"]]],[11,"clone",E,E,170,[[["self"]],["pound"]]],[11,"clone",E,E,171,[[["self"]],["question"]]],[11,"clone",E,E,172,[[["self"]],["rarrow"]]],[11,"clone",E,E,173,[[["self"]],["larrow"]]],[11,"clone",E,E,174,[[["self"]],["rem"]]],[11,"clone",E,E,175,[[["self"]],["remeq"]]],[11,"clone",E,E,176,[[["self"]],["fatarrow"]]],[11,"clone",E,E,177,[[["self"]],["semi"]]],[11,"clone",E,E,178,[[["self"]],["shl"]]],[11,"clone",E,E,179,[[["self"]],["shleq"]]],[11,"clone",E,E,180,[[["self"]],["shr"]]],[11,"clone",E,E,181,[[["self"]],["shreq"]]],[11,"clone",E,E,182,[[["self"]],["star"]]],[11,"clone",E,E,183,[[["self"]],["sub"]]],[11,"clone",E,E,184,[[["self"]],["subeq"]]],[11,"clone",E,E,185,[[["self"]],["tilde"]]],[11,"clone",E,E,186,[[["self"]],["brace"]]],[11,"clone",E,E,187,[[["self"]],["bracket"]]],[11,"clone",E,E,188,[[["self"]],["paren"]]],[11,"clone",E,E,189,[[["self"]],["group"]]],[11,"clone","syn",E,0,[[["self"]],["attribute"]]],[11,"clone",E,E,63,[[["self"]],["attrstyle"]]],[11,"clone",E,E,64,[[["self"]],["meta"]]],[11,"clone",E,E,1,[[["self"]],["metalist"]]],[11,"clone",E,E,2,[[["self"]],[R[956]]]],[11,"clone",E,E,65,[[["self"]],[R[948]]]],[11,"clone",E,E,6,[[["self"]],["variant"]]],[11,"clone",E,E,66,[[["self"]],["fields"]]],[11,"clone",E,E,4,[[["self"]],[R[957]]]],[11,"clone",E,E,5,[[["self"]],[R[958]]]],[11,"clone",E,E,3,[[["self"]],["field"]]],[11,"clone",E,E,67,[[["self"]],[R[949]]]],[11,"clone",E,E,8,[[["self"]],[R[959]]]],[11,"clone",E,E,7,[[["self"]],["viscrate"]]],[11,"clone",E,E,9,[[["self"]],[R[960]]]],[11,"clone",E,E,68,[[["self"]],["expr"]]],[11,"clone",E,E,215,[[["self"]],["exprbox"]]],[11,"clone",E,E,222,[[["self"]],[R[961]]]],[11,"clone",E,E,210,[[["self"]],[R[962]]]],[11,"clone",E,E,11,[[["self"]],["exprcall"]]],[11,"clone",E,E,227,[[["self"]],[R[963]]]],[11,"clone",E,E,235,[[["self"]],[R[964]]]],[11,"clone",E,E,10,[[["self"]],[R[965]]]],[11,"clone",E,E,18,[[["self"]],[R[966]]]],[11,"clone",E,E,15,[[["self"]],["exprlit"]]],[11,"clone",E,E,12,[[["self"]],["exprcast"]]],[11,"clone",E,E,236,[[["self"]],["exprtype"]]],[11,"clone",E,E,223,[[["self"]],["exprlet"]]],[11,"clone",E,E,221,[[["self"]],["exprif"]]],[11,"clone",E,E,238,[[["self"]],[R[967]]]],[11,"clone",E,E,219,[[["self"]],[R[968]]]],[11,"clone",E,E,224,[[["self"]],["exprloop"]]],[11,"clone",E,E,226,[[["self"]],[R[969]]]],[11,"clone",E,E,217,[[["self"]],[R[970]]]],[11,"clone",E,E,237,[[["self"]],[R[971]]]],[11,"clone",E,E,214,[[["self"]],[R[972]]]],[11,"clone",E,E,211,[[["self"]],[R[973]]]],[11,"clone",E,E,212,[[["self"]],[R[974]]]],[11,"clone",E,E,13,[[["self"]],[R[975]]]],[11,"clone",E,E,14,[[["self"]],[R[976]]]],[11,"clone",E,E,228,[[["self"]],[R[977]]]],[11,"clone",E,E,17,[[["self"]],["exprpath"]]],[11,"clone",E,E,229,[[["self"]],[R[978]]]],[11,"clone",E,E,216,[[["self"]],[R[979]]]],[11,"clone",E,E,218,[[["self"]],[R[980]]]],[11,"clone",E,E,231,[[["self"]],[R[981]]]],[11,"clone",E,E,225,[[["self"]],[R[982]]]],[11,"clone",E,E,232,[[["self"]],[R[983]]]],[11,"clone",E,E,230,[[["self"]],[R[984]]]],[11,"clone",E,E,16,[[["self"]],[R[985]]]],[11,"clone",E,E,220,[[["self"]],[R[986]]]],[11,"clone",E,E,233,[[["self"]],["exprtry"]]],[11,"clone",E,E,213,[[["self"]],[R[987]]]],[11,"clone",E,E,234,[[["self"]],[R[988]]]],[11,"clone",E,E,239,[[["self"]],[R[989]]]],[11,"clone",E,E,19,[[["self"]],[R[990]]]],[11,"clone",E,E,69,[[["self"]],["member"]]],[11,"clone",E,E,20,[[["self"]],["index"]]],[11,"clone",E,E,23,[[["self"]],[R[991]]]],[11,"clone",E,E,70,[[["self"]],[R[950]]]],[11,"clone",E,E,29,[[["self"]],[R[992]]]],[11,"clone",E,E,24,[[["self"]],[R[993]]]],[11,"clone",E,E,22,[[["self"]],[R[994]]]],[11,"clone",E,E,240,[[["self"]],["implgenerics"]]],[11,"clone",E,E,190,[[["self"]],["typegenerics"]]],[11,"clone",E,E,241,[[["self"]],[R[995]]]],[11,"clone",E,E,21,[[["self"]],[R[996]]]],[11,"clone",E,E,72,[[["self"]],[R[951]]]],[11,"clone",E,E,28,[[["self"]],[R[997]]]],[11,"clone",E,E,71,[[["self"]],["traitboundmodifier"]]],[11,"clone",E,E,30,[[["self"]],[R[998]]]],[11,"clone",E,E,73,[[["self"]],[R[952]]]],[11,"clone",E,E,27,[[["self"]],[R[999]]]],[11,"clone",E,E,26,[[["self"]],[R[1000]]]],[11,"clone",E,E,25,[[["self"]],[R[1001]]]],[11,"clone",E,E,31,[[["self"]],[R[827]]]],[11,"clone",E,E,76,[[["self"]],["lit"]]],[11,"clone",E,E,191,[[["self"]],["litstr"]]],[11,"clone",E,E,192,[[["self"]],["litbytestr"]]],[11,"clone",E,E,193,[[["self"]],["litbyte"]]],[11,"clone",E,E,194,[[["self"]],["litchar"]]],[11,"clone",E,E,195,[[["self"]],["litint"]]],[11,"clone",E,E,196,[[["self"]],["litfloat"]]],[11,"clone",E,E,32,[[["self"]],["litbool"]]],[11,"clone",E,E,33,[[["self"]],[R[1002]]]],[11,"clone",E,E,77,[[["self"]],["strstyle"]]],[11,"clone",E,E,75,[[["self"]],[R[918]]]],[11,"clone",E,E,74,[[["self"]],[R[919]]]],[11,"clone",E,E,34,[[["self"]],["macro"]]],[11,"clone",E,E,78,[[["self"]],["macrodelimiter"]]],[11,"clone",E,E,38,[[["self"]],["deriveinput"]]],[11,"clone",E,E,79,[[["self"]],["data"]]],[11,"clone",E,E,36,[[["self"]],["datastruct"]]],[11,"clone",E,E,35,[[["self"]],["dataenum"]]],[11,"clone",E,E,37,[[["self"]],["dataunion"]]],[11,"clone",E,E,80,[[["self"]],["binop"]]],[11,"clone",E,E,81,[[["self"]],["unop"]]],[11,"clone",E,E,84,[[["self"]],["type"]]],[11,"clone",E,E,52,[[["self"]],["typeslice"]]],[11,"clone",E,E,41,[[["self"]],["typearray"]]],[11,"clone",E,E,50,[[["self"]],["typeptr"]]],[11,"clone",E,E,51,[[["self"]],[R[1003]]]],[11,"clone",E,E,42,[[["self"]],["typebarefn"]]],[11,"clone",E,E,47,[[["self"]],["typenever"]]],[11,"clone",E,E,54,[[["self"]],["typetuple"]]],[11,"clone",E,E,49,[[["self"]],["typepath"]]],[11,"clone",E,E,53,[[["self"]],[R[1004]]]],[11,"clone",E,E,44,[[["self"]],[R[1005]]]],[11,"clone",E,E,48,[[["self"]],["typeparen"]]],[11,"clone",E,E,43,[[["self"]],["typegroup"]]],[11,"clone",E,E,45,[[["self"]],["typeinfer"]]],[11,"clone",E,E,46,[[["self"]],["typemacro"]]],[11,"clone",E,E,55,[[["self"]],[R[1006]]]],[11,"clone",E,E,39,[[["self"]],["abi"]]],[11,"clone",E,E,40,[[["self"]],["barefnarg"]]],[11,"clone",E,E,82,[[["self"]],["barefnargname"]]],[11,"clone",E,E,83,[[["self"]],["returntype"]]],[11,"clone",E,E,60,[[["self"]],["path"]]],[11,"clone",E,E,61,[[["self"]],["pathsegment"]]],[11,"clone",E,E,86,[[["self"]],["patharguments"]]],[11,"clone",E,E,85,[[["self"]],["genericargument"]]],[11,"clone",E,E,56,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone",E,E,57,[[["self"]],["binding"]]],[11,"clone",E,E,58,[[["self"]],["constraint"]]],[11,"clone",E,E,59,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone",E,E,62,[[["self"]],["qself"]]],[11,"clone",R[943],E,198,[[["self"]],["cursor"]]],[11,"clone",R[944],E,201,[[["self"]],[R[926]]]],[11,"clone",E,E,242,[[["self"]],["self"]]],[11,"clone",E,E,244,[[["self"]],["intopairs"]]],[11,"clone",E,E,245,[[["self"]],[R[338]]]],[11,"clone",E,E,246,[[["self"]],["self"]]],[11,"clone",E,E,200,[[["self"]],["pair"]]],[11,"clone",R[931],E,206,[[["self"]],["stepcursor"]]],[11,"clone","syn",E,208,[[["self"]],["self"]]],[11,"deref",R[942],E,87,[[["self"]]]],[11,"deref",E,E,140,[[["self"]]]],[11,"deref",E,E,142,[[["self"]]]],[11,"deref",E,E,145,[[["self"]]]],[11,"deref",E,E,146,[[["self"]]]],[11,"deref",E,E,147,[[["self"]]]],[11,"deref",E,E,149,[[["self"]]]],[11,"deref",E,E,151,[[["self"]]]],[11,"deref",E,E,152,[[["self"]]]],[11,"deref",E,E,154,[[["self"]]]],[11,"deref",E,E,155,[[["self"]]]],[11,"deref",E,E,159,[[["self"]]]],[11,"deref",E,E,162,[[["self"]]]],[11,"deref",E,E,164,[[["self"]]]],[11,"deref",E,E,167,[[["self"]]]],[11,"deref",E,E,170,[[["self"]]]],[11,"deref",E,E,171,[[["self"]]]],[11,"deref",E,E,174,[[["self"]]]],[11,"deref",E,E,177,[[["self"]]]],[11,"deref",E,E,182,[[["self"]]]],[11,"deref",E,E,183,[[["self"]]]],[11,"deref",E,E,185,[[["self"]]]],[11,"deref",R[931],E,206,[[["self"]]]],[11,"fmt","syn",E,31,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[931],E,207,[[["self"],[R[13]]],[R[3]]]],[11,"fmt","syn",E,208,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[931],E,207,[[["self"],[R[13]]],[R[3]]]],[11,"fmt","syn",E,208,[[["self"],[R[13]]],[R[3]]]],[11,R[14],R[942],E,87,[[["self"]]]],[11,R[14],E,E,140,[[["self"]]]],[11,R[14],E,E,142,[[["self"]]]],[11,R[14],E,E,145,[[["self"]]]],[11,R[14],E,E,146,[[["self"]]]],[11,R[14],E,E,147,[[["self"]]]],[11,R[14],E,E,149,[[["self"]]]],[11,R[14],E,E,151,[[["self"]]]],[11,R[14],E,E,152,[[["self"]]]],[11,R[14],E,E,154,[[["self"]]]],[11,R[14],E,E,155,[[["self"]]]],[11,R[14],E,E,159,[[["self"]]]],[11,R[14],E,E,162,[[["self"]]]],[11,R[14],E,E,164,[[["self"]]]],[11,R[14],E,E,167,[[["self"]]]],[11,R[14],E,E,170,[[["self"]]]],[11,R[14],E,E,171,[[["self"]]]],[11,R[14],E,E,174,[[["self"]]]],[11,R[14],E,E,177,[[["self"]]]],[11,R[14],E,E,182,[[["self"]]]],[11,R[14],E,E,183,[[["self"]]]],[11,R[14],E,E,185,[[["self"]]]],[11,"index",R[944],E,201,[[["self"],["usize"]]]],[11,R[1642],E,E,201,[[["self"],["usize"]]]],[11,"hash","syn",E,31,[[["self"],["h"]]]],[11,R[339],R[944],E,201,[[[R[319]]],["self"]]],[11,R[339],E,E,201,[[[R[319]]],["self"]]],[11,R[53],"syn",E,208,[[["self"]],["str"]]],[11,R[945],R[942],E,87,[[["self"],[R[330]]]]],[11,R[945],E,E,88,[[["self"],[R[330]]]]],[11,R[945],E,E,89,[[["self"],[R[330]]]]],[11,R[945],E,E,90,[[["self"],[R[330]]]]],[11,R[945],E,E,91,[[["self"],[R[330]]]]],[11,R[945],E,E,92,[[["self"],[R[330]]]]],[11,R[945],E,E,93,[[["self"],[R[330]]]]],[11,R[945],E,E,94,[[["self"],[R[330]]]]],[11,R[945],E,E,95,[[["self"],[R[330]]]]],[11,R[945],E,E,96,[[["self"],[R[330]]]]],[11,R[945],E,E,97,[[["self"],[R[330]]]]],[11,R[945],E,E,98,[[["self"],[R[330]]]]],[11,R[945],E,E,99,[[["self"],[R[330]]]]],[11,R[945],E,E,100,[[["self"],[R[330]]]]],[11,R[945],E,E,101,[[["self"],[R[330]]]]],[11,R[945],E,E,102,[[["self"],[R[330]]]]],[11,R[945],E,E,103,[[["self"],[R[330]]]]],[11,R[945],E,E,104,[[["self"],[R[330]]]]],[11,R[945],E,E,105,[[["self"],[R[330]]]]],[11,R[945],E,E,106,[[["self"],[R[330]]]]],[11,R[945],E,E,107,[[["self"],[R[330]]]]],[11,R[945],E,E,108,[[["self"],[R[330]]]]],[11,R[945],E,E,109,[[["self"],[R[330]]]]],[11,R[945],E,E,110,[[["self"],[R[330]]]]],[11,R[945],E,E,111,[[["self"],[R[330]]]]],[11,R[945],E,E,112,[[["self"],[R[330]]]]],[11,R[945],E,E,113,[[["self"],[R[330]]]]],[11,R[945],E,E,114,[[["self"],[R[330]]]]],[11,R[945],E,E,115,[[["self"],[R[330]]]]],[11,R[945],E,E,116,[[["self"],[R[330]]]]],[11,R[945],E,E,117,[[["self"],[R[330]]]]],[11,R[945],E,E,118,[[["self"],[R[330]]]]],[11,R[945],E,E,119,[[["self"],[R[330]]]]],[11,R[945],E,E,120,[[["self"],[R[330]]]]],[11,R[945],E,E,121,[[["self"],[R[330]]]]],[11,R[945],E,E,122,[[["self"],[R[330]]]]],[11,R[945],E,E,123,[[["self"],[R[330]]]]],[11,R[945],E,E,124,[[["self"],[R[330]]]]],[11,R[945],E,E,125,[[["self"],[R[330]]]]],[11,R[945],E,E,126,[[["self"],[R[330]]]]],[11,R[945],E,E,127,[[["self"],[R[330]]]]],[11,R[945],E,E,128,[[["self"],[R[330]]]]],[11,R[945],E,E,129,[[["self"],[R[330]]]]],[11,R[945],E,E,130,[[["self"],[R[330]]]]],[11,R[945],E,E,131,[[["self"],[R[330]]]]],[11,R[945],E,E,132,[[["self"],[R[330]]]]],[11,R[945],E,E,133,[[["self"],[R[330]]]]],[11,R[945],E,E,134,[[["self"],[R[330]]]]],[11,R[945],E,E,135,[[["self"],[R[330]]]]],[11,R[945],E,E,136,[[["self"],[R[330]]]]],[11,R[945],E,E,137,[[["self"],[R[330]]]]],[11,R[945],E,E,138,[[["self"],[R[330]]]]],[11,R[945],E,E,139,[[["self"],[R[330]]]]],[11,R[945],E,E,140,[[["self"],[R[330]]]]],[11,R[945],E,E,141,[[["self"],[R[330]]]]],[11,R[945],E,E,142,[[["self"],[R[330]]]]],[11,R[945],E,E,143,[[["self"],[R[330]]]]],[11,R[945],E,E,144,[[["self"],[R[330]]]]],[11,R[945],E,E,145,[[["self"],[R[330]]]]],[11,R[945],E,E,146,[[["self"],[R[330]]]]],[11,R[945],E,E,147,[[["self"],[R[330]]]]],[11,R[945],E,E,148,[[["self"],[R[330]]]]],[11,R[945],E,E,149,[[["self"],[R[330]]]]],[11,R[945],E,E,150,[[["self"],[R[330]]]]],[11,R[945],E,E,151,[[["self"],[R[330]]]]],[11,R[945],E,E,152,[[["self"],[R[330]]]]],[11,R[945],E,E,153,[[["self"],[R[330]]]]],[11,R[945],E,E,154,[[["self"],[R[330]]]]],[11,R[945],E,E,155,[[["self"],[R[330]]]]],[11,R[945],E,E,156,[[["self"],[R[330]]]]],[11,R[945],E,E,157,[[["self"],[R[330]]]]],[11,R[945],E,E,158,[[["self"],[R[330]]]]],[11,R[945],E,E,159,[[["self"],[R[330]]]]],[11,R[945],E,E,160,[[["self"],[R[330]]]]],[11,R[945],E,E,161,[[["self"],[R[330]]]]],[11,R[945],E,E,162,[[["self"],[R[330]]]]],[11,R[945],E,E,163,[[["self"],[R[330]]]]],[11,R[945],E,E,164,[[["self"],[R[330]]]]],[11,R[945],E,E,165,[[["self"],[R[330]]]]],[11,R[945],E,E,166,[[["self"],[R[330]]]]],[11,R[945],E,E,167,[[["self"],[R[330]]]]],[11,R[945],E,E,168,[[["self"],[R[330]]]]],[11,R[945],E,E,169,[[["self"],[R[330]]]]],[11,R[945],E,E,170,[[["self"],[R[330]]]]],[11,R[945],E,E,171,[[["self"],[R[330]]]]],[11,R[945],E,E,172,[[["self"],[R[330]]]]],[11,R[945],E,E,173,[[["self"],[R[330]]]]],[11,R[945],E,E,174,[[["self"],[R[330]]]]],[11,R[945],E,E,175,[[["self"],[R[330]]]]],[11,R[945],E,E,176,[[["self"],[R[330]]]]],[11,R[945],E,E,177,[[["self"],[R[330]]]]],[11,R[945],E,E,178,[[["self"],[R[330]]]]],[11,R[945],E,E,179,[[["self"],[R[330]]]]],[11,R[945],E,E,180,[[["self"],[R[330]]]]],[11,R[945],E,E,181,[[["self"],[R[330]]]]],[11,R[945],E,E,182,[[["self"],[R[330]]]]],[11,R[945],E,E,183,[[["self"],[R[330]]]]],[11,R[945],E,E,184,[[["self"],[R[330]]]]],[11,R[945],E,E,185,[[["self"],[R[330]]]]],[11,R[945],"syn",E,64,[[["self"],[R[330]]]]],[11,R[945],E,E,65,[[["self"],[R[330]]]]],[11,R[945],E,E,0,[[["self"],[R[330]]]]],[11,R[945],E,E,1,[[["self"],[R[330]]]]],[11,R[945],E,E,2,[[["self"],[R[330]]]]],[11,R[945],E,E,66,[[["self"],[R[330]]]]],[11,R[945],E,E,67,[[["self"],[R[330]]]]],[11,R[945],E,E,6,[[["self"],[R[330]]]]],[11,R[945],E,E,4,[[["self"],[R[330]]]]],[11,R[945],E,E,5,[[["self"],[R[330]]]]],[11,R[945],E,E,3,[[["self"],[R[330]]]]],[11,R[945],E,E,8,[[["self"],[R[330]]]]],[11,R[945],E,E,7,[[["self"],[R[330]]]]],[11,R[945],E,E,9,[[["self"],[R[330]]]]],[11,R[945],E,E,68,[[["self"],[R[330]]]]],[11,R[945],E,E,11,[[["self"],[R[330]]]]],[11,R[945],E,E,10,[[["self"],[R[330]]]]],[11,R[945],E,E,18,[[["self"],[R[330]]]]],[11,R[945],E,E,15,[[["self"],[R[330]]]]],[11,R[945],E,E,12,[[["self"],[R[330]]]]],[11,R[945],E,E,13,[[["self"],[R[330]]]]],[11,R[945],E,E,69,[[["self"],[R[330]]]]],[11,R[945],E,E,20,[[["self"],[R[330]]]]],[11,R[945],E,E,14,[[["self"],[R[330]]]]],[11,R[945],E,E,17,[[["self"],[R[330]]]]],[11,R[945],E,E,16,[[["self"],[R[330]]]]],[11,R[945],E,E,19,[[["self"],[R[330]]]]],[11,R[945],E,E,70,[[["self"],[R[330]]]]],[11,R[945],E,E,72,[[["self"],[R[330]]]]],[11,R[945],E,E,73,[[["self"],[R[330]]]]],[11,R[945],E,E,23,[[["self"],[R[330]]]]],[11,R[945],E,E,240,[[["self"],[R[330]]]]],[11,R[945],E,E,190,[[["self"],[R[330]]]]],[11,R[945],E,E,241,[[["self"],[R[330]]]]],[11,R[945],E,E,21,[[["self"],[R[330]]]]],[11,R[945],E,E,24,[[["self"],[R[330]]]]],[11,R[945],E,E,29,[[["self"],[R[330]]]]],[11,R[945],E,E,28,[[["self"],[R[330]]]]],[11,R[945],E,E,71,[[["self"],[R[330]]]]],[11,R[945],E,E,22,[[["self"],[R[330]]]]],[11,R[945],E,E,30,[[["self"],[R[330]]]]],[11,R[945],E,E,27,[[["self"],[R[330]]]]],[11,R[945],E,E,26,[[["self"],[R[330]]]]],[11,R[945],E,E,25,[[["self"],[R[330]]]]],[11,R[945],E,E,31,[[["self"],[R[330]]]]],[11,R[945],E,E,76,[[["self"],[R[330]]]]],[11,R[945],E,E,191,[[["self"],[R[330]]]]],[11,R[945],E,E,192,[[["self"],[R[330]]]]],[11,R[945],E,E,193,[[["self"],[R[330]]]]],[11,R[945],E,E,194,[[["self"],[R[330]]]]],[11,R[945],E,E,195,[[["self"],[R[330]]]]],[11,R[945],E,E,196,[[["self"],[R[330]]]]],[11,R[945],E,E,32,[[["self"],[R[330]]]]],[11,R[945],E,E,33,[[["self"],[R[330]]]]],[11,R[945],E,E,34,[[["self"],[R[330]]]]],[11,R[945],E,E,38,[[["self"],[R[330]]]]],[11,R[945],E,E,80,[[["self"],[R[330]]]]],[11,R[945],E,E,81,[[["self"],[R[330]]]]],[11,R[945],E,E,84,[[["self"],[R[330]]]]],[11,R[945],E,E,52,[[["self"],[R[330]]]]],[11,R[945],E,E,41,[[["self"],[R[330]]]]],[11,R[945],E,E,50,[[["self"],[R[330]]]]],[11,R[945],E,E,51,[[["self"],[R[330]]]]],[11,R[945],E,E,42,[[["self"],[R[330]]]]],[11,R[945],E,E,47,[[["self"],[R[330]]]]],[11,R[945],E,E,54,[[["self"],[R[330]]]]],[11,R[945],E,E,49,[[["self"],[R[330]]]]],[11,R[945],E,E,53,[[["self"],[R[330]]]]],[11,R[945],E,E,44,[[["self"],[R[330]]]]],[11,R[945],E,E,43,[[["self"],[R[330]]]]],[11,R[945],E,E,48,[[["self"],[R[330]]]]],[11,R[945],E,E,45,[[["self"],[R[330]]]]],[11,R[945],E,E,46,[[["self"],[R[330]]]]],[11,R[945],E,E,55,[[["self"],[R[330]]]]],[11,R[945],E,E,83,[[["self"],[R[330]]]]],[11,R[945],E,E,40,[[["self"],[R[330]]]]],[11,R[945],E,E,82,[[["self"],[R[330]]]]],[11,R[945],E,E,39,[[["self"],[R[330]]]]],[11,R[945],E,E,60,[[["self"],[R[330]]]]],[11,R[945],E,E,61,[[["self"],[R[330]]]]],[11,R[945],E,E,86,[[["self"],[R[330]]]]],[11,R[945],E,E,85,[[["self"],[R[330]]]]],[11,R[945],E,E,56,[[["self"],[R[330]]]]],[11,R[945],E,E,57,[[["self"],[R[330]]]]],[11,R[945],E,E,58,[[["self"],[R[330]]]]],[11,R[945],E,E,59,[[["self"],[R[330]]]]],[11,R[945],R[944],E,201,[[["self"],[R[330]]]]],[11,R[945],E,E,200,[[["self"],[R[330]]]]],[11,"new","syn",R[1007],209,[[["str"],["span"]],["ident"]]],[11,"span",E,R[1008],209,[[["self"]],["span"]]],[11,R[332],E,R[1009],209,[[["self"],["span"]]]],[11,"peek",R[931],R[1010],248,[[["self"],["peek"]],["bool"]]],[11,"error",E,R[939],248,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,R[1011]],[3,"Field"],[3,R[1012]],[3,R[1013]],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,R[1014]],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,R[1015]],[3,"Index"],[3,R[1016]],[3,"ConstParam"],[3,"Generics"],[3,R[1017]],[3,R[1018]],[3,R[1019]],[3,R[1020]],[3,"TraitBound"],[3,"TypeParam"],[3,R[1021]],[3,R[881]],[3,"LitBool"],[3,R[1022]],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,R[1023]],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,R[1024]],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,R[1025]],[3,"TypeSlice"],[3,R[1026]],[3,"TypeTuple"],[3,R[1027]],[3,R[1028]],[3,"Binding"],[3,R[913]],[3,R[1029]],[3,"Path"],[3,R[1030]],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,R[1031]],[4,R[1032]],[4,R[1033]],[4,R[1034]],[4,R[1035]],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,R[1036]],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,R[1037]],[4,"ReturnType"],[4,"Type"],[4,R[1038]],[4,R[1039]],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,R[915]],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,R[1040]],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,R[1041]],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,R[1042]],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,R[925]],[8,"Spanned"],[8,R[1043]],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,R[1044]],[3,"Error"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,R[1045]],[3,"ExprAsync"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,R[1046]],[3,R[1047]],[3,R[1048]],[3,"ExprGroup"],[3,"ExprIf"],[3,R[1049]],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,R[1050]],[3,"ExprRange"],[3,R[1051]],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,R[1052]],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,R[1053]],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,R[328]],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"]]};
searchIndex["tiff"]={"doc":R[2083],"i":[[4,"TiffError","tiff","Tiff error kinds.",N,N],[13,R[2084],E,R[2085],0,N],[13,R[2086],E,R[2087],0,N],[13,"IoError",E,R[2088],0,N],[13,R[1480],E,"The Limits of the Decoder is exceeded,",0,N],[4,R[1502],E,E,N,N],[13,"TiffSignatureNotFound",E,E,1,N],[13,"TiffSignatureInvalid",E,E,1,N],[13,"ImageFileDirectoryNotFound",E,E,1,N],[13,"InconsistentSizesEncountered",E,E,1,N],[13,"InvalidTag",E,E,1,N],[13,"RequiredTagNotFound",E,E,1,N],[13,"UnknownPredictor",E,E,1,N],[13,"UnsignedIntegerExpected",E,E,1,N],[4,R[1503],E,E,N,N],[13,"HorizontalPredictor",E,E,2,N],[13,"InterpretationWithBits",E,E,2,N],[13,"UnknownInterpretation",E,E,2,N],[13,"UnknownCompressionMethod",E,E,2,N],[13,"UnsupportedCompressionMethod",E,E,2,N],[13,"UnsupportedSampleDepth",E,E,2,N],[13,"UnsupportedColorType",E,E,2,N],[13,"UnsupportedBitsPerChannel",E,E,2,N],[13,"UnsupportedPlanarConfig",E,E,2,N],[13,"UnsupportedDataType",E,E,2,N],[4,R[1489],E,R[2089],N,N],[13,"Gray",E,R[2090],3,N],[13,"RGB",E,R[2091],3,N],[13,"Palette",E,R[2092],3,N],[13,"GrayA",E,R[2093],3,N],[13,"RGBA",E,R[2094],3,N],[13,"CMYK",E,"Pixel is CMYK",3,N],[0,"decoder",E,E,N,N],[3,"Limits",R[1484],"Decoding limits",N,N],[3,"Decoder",E,"The representation of a TIFF decoder",N,N],[4,R[1504],E,"Result of a decoding process",N,N],[13,"U8",E,"A vector of unsigned bytes",4,N],[13,"U16",E,"A vector of unsigned words",4,N],[4,R[1505],E,E,N,N],[13,"U8",E,"A slice of unsigned bytes",5,N],[13,"U16",E,"A slice of unsigned words",5,N],[4,R[1481],E,E,N,N],[13,"WhiteIsZero",E,E,6,N],[13,"BlackIsZero",E,E,6,N],[13,"RGB",E,E,6,N],[13,"RGBPalette",E,E,6,N],[13,"TransparencyMask",E,E,6,N],[13,"CMYK",E,E,6,N],[13,"YCbCr",E,E,6,N],[13,"CIELab",E,E,6,N],[4,R[1506],E,E,N,N],[13,"None",E,E,7,N],[13,"Huffman",E,E,7,N],[13,"Fax3",E,E,7,N],[13,"Fax4",E,E,7,N],[13,"LZW",E,E,7,N],[13,"JPEG",E,E,7,N],[13,"PackBits",E,E,7,N],[4,R[1482],E,E,N,N],[13,"Chunky",E,E,8,N],[13,"Planar",E,E,8,N],[0,"ifd",E,"Function for reading TIFF tags",N,N],[3,"Entry",R[1495],E,N,N],[4,"Tag",E,"TIFF tag",N,N],[13,"Artist",E,E,9,N],[13,"BitsPerSample",E,E,9,N],[13,"CellLength",E,E,9,N],[13,"CellWidth",E,E,9,N],[13,"ColorMap",E,E,9,N],[13,R[722],E,E,9,N],[13,"Copyright",E,E,9,N],[13,"DateTime",E,E,9,N],[13,"ExtraSamples",E,E,9,N],[13,"FillOrder",E,E,9,N],[13,"FreeByteCounts",E,E,9,N],[13,"FreeOffsets",E,E,9,N],[13,"GrayResponseCurve",E,E,9,N],[13,"GrayResponseUnit",E,E,9,N],[13,"HostComputer",E,E,9,N],[13,"ImageDescription",E,E,9,N],[13,"ImageLength",E,E,9,N],[13,"ImageWidth",E,E,9,N],[13,"Make",E,E,9,N],[13,"MaxSampleValue",E,E,9,N],[13,"MinSampleValue",E,E,9,N],[13,"Model",E,E,9,N],[13,"NewSubfileType",E,E,9,N],[13,"Orientation",E,E,9,N],[13,R[1481],E,E,9,N],[13,R[1482],E,E,9,N],[13,R[1488],E,E,9,N],[13,"RowsPerStrip",E,E,9,N],[13,"SamplesPerPixel",E,E,9,N],[13,"Software",E,E,9,N],[13,"StripByteCounts",E,E,9,N],[13,"StripOffsets",E,E,9,N],[13,"SubfileType",E,E,9,N],[13,"Threshholding",E,E,9,N],[13,"XResolution",E,E,9,N],[13,"YResolution",E,E,9,N],[13,"Predictor",E,E,9,N],[13,"Unknown",E,E,9,N],[4,"Type",E,E,N,N],[13,"BYTE",E,E,10,N],[13,"ASCII",E,E,10,N],[13,"SHORT",E,E,10,N],[13,"LONG",E,E,10,N],[13,"RATIONAL",E,E,10,N],[4,"Value",E,E,N,N],[13,"Unsigned",E,E,11,N],[13,"List",E,E,11,N],[13,"Rational",E,E,11,N],[13,"Ascii",E,E,11,N],[6,"Directory",E,"Type representing an Image File Directory",N,N],[11,R[786],E,E,9,[[["u16"]],["tag"]]],[11,"to_u16",E,E,9,[[["self"]],["u16"]]],[11,"into_u32",E,E,11,[[],[[R[1483],["u32"]],["u32"]]]],[11,"into_u32_vec",E,E,11,[[],[["vec",["u32"]],[R[1483],["vec"]]]]],[11,"new",E,E,12,[[["type"],["u32"]],["entry"]]],[11,"val",E,E,12,[[["self"],["limits"],["decoder"]],[[R[1483],["value"]],["value"]]]],[11,"as_buffer",R[1484],E,4,[[["self"],["usize"]],[R[1486]]]],[11,"new",E,R[1926],13,[[["r"]],[[R[1483],["decoder"]],["decoder"]]]],[11,"with_limits",E,E,13,[[["limits"]],["decoder"]]],[11,R[1967],E,E,13,[[["self"]],[R[1483]]]],[11,R[1164],E,E,13,[[["self"]],[[R[1483],[R[1164]]],[R[1164]]]]],[11,"init",E,"Initializes the decoder.",13,[[],[[R[1483],["decoder"]],["decoder"]]]],[11,"next_image",E,"Reads in the next image. If there is no further image in…",13,[[["self"]],[R[1483]]]],[11,"more_images",E,"Returns `true` if there is at least one more image…",13,[[["self"]],["bool"]]],[11,"byte_order",E,"Returns the byte_order",13,[[["self"]],["byteorder"]]],[11,"read_short",E,"Reads a TIFF short value",13,[[["self"]],[["u16"],["error"],[R[3],["u16","error"]]]]],[11,"read_long",E,"Reads a TIFF long value",13,[[["self"]],[["u32"],[R[3],["u32","error"]],["error"]]]],[11,"read_string",E,"Reads a string",13,[[["self"],["usize"]],[[R[1483],["string"]],["string"]]]],[11,"read_offset",E,"Reads a TIFF IFA offset/value field",13,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"goto_offset",E,"Moves the cursor to the specified offset",13,[[["self"],["u32"]],[R[3]]]],[11,"find_tag",E,"Tries to retrieve a tag. Return `Ok(None)` if the tag is…",13,[[["self"],["tag"]],[[R[1483],[R[25]]],[R[25],["value"]]]]],[11,"find_tag_u32",E,R[1485],13,[[["self"],["tag"]],[[R[1483],[R[25]]],[R[25],["u32"]]]]],[11,"find_tag_u32_vec",E,R[1485],13,[[["self"],["tag"]],[[R[1483],[R[25]]],[R[25],["vec"]]]]],[11,"get_tag",E,"Tries to retrieve a tag. Returns an error if the tag is…",13,[[["self"],["tag"]],[["value"],[R[1483],["value"]]]]],[11,"get_tag_u32",E,R[1485],13,[[["self"],["tag"]],[[R[1483],["u32"]],["u32"]]]],[11,"get_tag_u32_vec",E,R[1485],13,[[["self"],["tag"]],[["vec",["u32"]],[R[1483],["vec"]]]]],[11,"strip_count",E,"Number of strips in image",13,[[["self"]],[[R[1483],["u32"]],["u32"]]]],[11,"read_strip_to_buffer",E,E,13,[[["self"],[R[1486]]],[R[1483]]]],[11,"read_strip",E,"Read a single strip from the image and return it as a Vector",13,[[["self"]],[[R[1483],[R[1487]]],[R[1487]]]]],[11,R[1991],E,"Decodes the entire image and return it as a Vector",13,[[["self"]],[[R[1483],[R[1487]]],[R[1487]]]]],[0,"encoder","tiff",E,N,N],[3,"Rational",R[1490],"Type to represent tiff values of type `RATIONAL`",N,N],[12,"n",E,E,14,N],[12,"d",E,E,14,N],[3,R[1507],E,"Tiff encoder.",N,N],[3,R[1508],E,"Low level interface to encode ifd directories.",N,N],[3,R[1509],E,"Type to encode images strip by strip.",N,N],[4,R[1488],E,"Type to represent resolution units",N,N],[13,"None",E,E,15,N],[13,"Inch",E,E,15,N],[13,"Centimeter",E,E,15,N],[0,R[1164],E,E,N,N],[3,"Gray8",R[1496],E,N,N],[3,"Gray16",E,E,N,N],[3,"RGB8",E,E,N,N],[3,"RGB16",E,E,N,N],[3,"RGBA8",E,E,N,N],[3,"RGBA16",E,E,N,N],[3,"CMYK8",E,E,N,N],[8,R[1489],E,"Trait for different colortypes that can be encoded.",N,N],[16,"Inner",E,"The type of each sample of this colortype",16,N],[18,"TIFF_VALUE",E,"The value of the tiff tag `PhotometricInterpretation`",16,N],[18,"BITS_PER_SAMPLE",E,"The value of the tiff tag `BitsPerSample`",16,N],[8,"TiffValue",R[1490],"Trait for types that can be encoded in a tiff file",N,N],[18,"BYTE_LEN",E,E,17,N],[18,"FIELD_TYPE",E,E,17,N],[10,"count",E,E,17,[[["self"]],["u32"]]],[11,"bytes",E,E,17,[[["self"]],["u32"]]],[10,"write",E,E,17,[[["self"],["tiffwriter"]],[R[1483]]]],[11,"new",E,E,18,[[["w"]],[[R[1491]],[R[1483],[R[1491]]]]]],[11,"new_directory",E,"Create a `DirectoryEncoder` to encode an ifd directory.",18,[[["self"]],[[R[1492]],[R[1483],[R[1492]]]]]],[11,"new_image",E,"Create an 'ImageEncoder' to encode an image one slice at a…",18,[[["self"],["u32"]],[[R[1493]],[R[1483],[R[1493]]]]]],[11,"write_image",E,"Convenience function to write an entire image from memory.",18,[[["self"],["u32"]],[R[1483]]]],[11,"write_tag",E,"Write a single ifd tag.",19,[[["self"],["tiffvalue"],["tag"]]]],[11,"write_data",E,"Write some data to the tiff file, the offset of the data…",19,[[["self"],["tiffvalue"]],[[R[1483],["u64"]],["u64"]]]],[11,"finish",E,"Write out the ifd directory.",19,[[],[R[1483]]]],[11,"next_strip_sample_count",E,"Number of samples the next strip should have.",20,[[["self"]],["u64"]]],[11,"write_strip",E,"Write a single strip.",20,[[["self"]],[R[1483]]]],[11,"resolution",E,"Set image resolution",20,[[["self"],[R[1494]],["rational"]]]],[11,"resolution_unit",E,"Set image resolution unit",20,[[["self"],[R[1494]]]]],[11,"x_resolution",E,"Set image x-resolution",20,[[["self"],["rational"]]]],[11,"y_resolution",E,"Set image y-resolution",20,[[["self"],["rational"]]]],[11,"encoder",E,"Get a reference of the underlying `DirectoryEncoder`",20,[[["self"]],[R[1492]]]],[11,"finish",E,"Write out image and ifd directory.",20,[[],[R[1483]]]],[6,"TiffResult","tiff",R[2095],N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[98],E,E,0,[[["self"]],["string"]]],[11,R[8],E,E,0,[[[U]],[R[3]]]],[11,R[9],E,E,0,[[],[R[3]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[29]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[98],E,E,1,[[["self"]],["string"]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"],[T]]]],[11,R[8],E,E,1,[[[U]],[R[3]]]],[11,R[9],E,E,1,[[],[R[3]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[98],E,E,2,[[["self"]],["string"]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"],[T]]]],[11,R[8],E,E,2,[[[U]],[R[3]]]],[11,R[9],E,E,2,[[],[R[3]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"],[T]]]],[11,R[8],E,E,3,[[[U]],[R[3]]]],[11,R[9],E,E,3,[[],[R[3]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[29]]]],[11,"from",R[1484],E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[42],E,E,21,[[["self"],[T]]]],[11,R[8],E,E,21,[[[U]],[R[3]]]],[11,R[9],E,E,21,[[],[R[3]]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[29]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[8],E,E,13,[[[U]],[R[3]]]],[11,R[9],E,E,13,[[],[R[3]]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[29]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[8],E,E,4,[[[U]],[R[3]]]],[11,R[9],E,E,4,[[],[R[3]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[29]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[8],E,E,5,[[[U]],[R[3]]]],[11,R[9],E,E,5,[[],[R[3]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[29]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[42],E,E,6,[[["self"],[T]]]],[11,R[8],E,E,6,[[[U]],[R[3]]]],[11,R[9],E,E,6,[[],[R[3]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[29]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[42],E,E,7,[[["self"],[T]]]],[11,R[8],E,E,7,[[[U]],[R[3]]]],[11,R[9],E,E,7,[[],[R[3]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[29]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"],[T]]]],[11,R[8],E,E,8,[[[U]],[R[3]]]],[11,R[9],E,E,8,[[],[R[3]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[29]]]],[11,"from",R[1495],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[42],E,E,12,[[["self"],[T]]]],[11,R[8],E,E,12,[[[U]],[R[3]]]],[11,R[9],E,E,12,[[],[R[3]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[29]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[42],E,E,9,[[["self"],[T]]]],[11,R[8],E,E,9,[[[U]],[R[3]]]],[11,R[9],E,E,9,[[],[R[3]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[29]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[42],E,E,10,[[["self"],[T]]]],[11,R[8],E,E,10,[[[U]],[R[3]]]],[11,R[9],E,E,10,[[],[R[3]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[29]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[42],E,E,11,[[["self"],[T]]]],[11,R[8],E,E,11,[[[U]],[R[3]]]],[11,R[9],E,E,11,[[],[R[3]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[29]]]],[11,"from",R[1490],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[42],E,E,14,[[["self"],[T]]]],[11,R[8],E,E,14,[[[U]],[R[3]]]],[11,R[9],E,E,14,[[],[R[3]]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[29]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[8],E,E,18,[[[U]],[R[3]]]],[11,R[9],E,E,18,[[],[R[3]]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[29]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[8],E,E,19,[[[U]],[R[3]]]],[11,R[9],E,E,19,[[],[R[3]]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[29]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[8],E,E,20,[[[U]],[R[3]]]],[11,R[9],E,E,20,[[],[R[3]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[29]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[8],E,E,15,[[[U]],[R[3]]]],[11,R[9],E,E,15,[[],[R[3]]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[29]]]],[11,"from",R[1496],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[8],E,E,22,[[[U]],[R[3]]]],[11,R[9],E,E,22,[[],[R[3]]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[29]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[8],E,E,23,[[[U]],[R[3]]]],[11,R[9],E,E,23,[[],[R[3]]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[29]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[8],E,E,24,[[[U]],[R[3]]]],[11,R[9],E,E,24,[[],[R[3]]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[29]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[8],E,E,25,[[[U]],[R[3]]]],[11,R[9],E,E,25,[[],[R[3]]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[29]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[8],E,E,26,[[[U]],[R[3]]]],[11,R[9],E,E,26,[[],[R[3]]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[29]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[8],E,E,27,[[[U]],[R[3]]]],[11,R[9],E,E,27,[[],[R[3]]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[29]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[8],E,E,28,[[[U]],[R[3]]]],[11,R[9],E,E,28,[[],[R[3]]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[29]]]],[11,"count",R[1490],E,14,[[["self"]],["u32"]]],[11,"write",E,E,14,[[["self"],["tiffwriter"]],[R[1483]]]],[11,"from","tiff",E,0,[[["error"]],["tifferror"]]],[11,"from",E,E,0,[[["fromutf8error"]],["tifferror"]]],[11,"drop",R[1490],E,19,[[["self"]]]],[11,"drop",E,E,20,[[["self"]]]],[11,"eq",R[1495],E,9,[[["self"],["tag"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["tag"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["value"]],["bool"]]],[11,"eq",R[1484],E,6,[[["self"],[R[1499]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[1500]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[1501]]],["bool"]]],[11,"eq","tiff",E,1,[[["self"],[R[1497]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1497]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[1498]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[1498]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[1164]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[1164]]],["bool"]]],[11,R[327],R[1484],E,21,[[],["limits"]]],[11,"clone",R[1495],E,9,[[["self"]],["tag"]]],[11,"clone",E,E,10,[[["self"]],["type"]]],[11,"clone",E,E,11,[[["self"]],["value"]]],[11,"clone",E,E,12,[[["self"]],["entry"]]],[11,"clone",R[1484],E,6,[[["self"]],[R[1499]]]],[11,"clone",E,E,7,[[["self"]],[R[1500]]]],[11,"clone",E,E,8,[[["self"]],[R[1501]]]],[11,"clone",E,E,21,[[["self"]],["limits"]]],[11,"clone",R[1490],E,14,[[["self"]],["rational"]]],[11,"clone","tiff",E,1,[[["self"]],[R[1497]]]],[11,"clone",E,E,2,[[["self"]],[R[1498]]]],[11,"clone",E,E,3,[[["self"]],[R[1164]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[1495],E,9,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[1484],E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[13]]],[R[3]]]],[11,"fmt","tiff",E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"hash",R[1495],E,9,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",R[1484],E,6,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash","tiff",E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,R[53],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[[R[25],["error"]],["error"]]]],[11,R[781],R[1495],E,10,[[["i64"]],[R[25]]]],[11,R[782],E,E,10,[[["u64"]],[R[25]]]],[11,R[781],R[1484],E,6,[[["i64"]],[R[25]]]],[11,R[782],E,E,6,[[["u64"]],[R[25]]]],[11,R[781],E,E,7,[[["i64"]],[R[25]]]],[11,R[782],E,E,7,[[["u64"]],[R[25]]]],[11,R[781],E,E,8,[[["i64"]],[R[25]]]],[11,R[782],E,E,8,[[["u64"]],[R[25]]]]],"p":[[4,"TiffError"],[4,R[1502]],[4,R[1503]],[4,R[1489]],[4,R[1504]],[4,R[1505]],[4,R[1481]],[4,R[1506]],[4,R[1482]],[4,"Tag"],[4,"Type"],[4,"Value"],[3,"Entry"],[3,"Decoder"],[3,"Rational"],[4,R[1488]],[8,R[1489]],[8,"TiffValue"],[3,R[1507]],[3,R[1508]],[3,R[1509]],[3,"Limits"],[3,"Gray8"],[3,"Gray16"],[3,"RGB8"],[3,"RGB16"],[3,"RGBA8"],[3,"RGBA16"],[3,"CMYK8"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",N,N],[8,R[17],E,"Methods for determining if a character is a valid…",N,N],[10,"is_xid_start",E,"Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue",E,"Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,R[17]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);