var searchIndex={};
searchIndex["y4m"] = {"doc":"YUV4MPEG2 (.y4m) Encoder/Decoder","i":[[3,"Ratio","y4m","Simple ratio structure since stdlib lacks one.",null,null],[12,"num","","Numerator.",0,null],[12,"den","","Denominator.",0,null],[3,"Limits","","Limits on the resources `Decoder` is allowed to use.",null,null],[12,"bytes","","Maximum allowed size of frame buffer, default is 1 GiB.",1,null],[3,"Decoder","","YUV4MPEG2 decoder.",null,null],[3,"Frame","","A single frame.",null,null],[3,"EncoderBuilder","","Encoder builder. Allows to set y4m file parameters using…",null,null],[3,"Encoder","","YUV4MPEG2 encoder.",null,null],[4,"Error","","Both encoding and decoding errors.",null,null],[13,"EOF","","End of the file. Technically not an error, but it's easier…",2,null],[13,"BadInput","","Bad input parameters provided.",2,null],[13,"UnknownColorspace","","Unknown colorspace (possibly just unimplemented).",2,null],[13,"ParseError","","Error while parsing the file/frame header.",2,null],[13,"IoError","","Error while reading/writing the file.",2,null],[13,"OutOfMemory","","Out of memory (limits exceeded).",2,null],[4,"ParseError","","Granular ParseError Definiations",null,null],[13,"InvalidY4M","","Error reading y4m header",3,null],[13,"Int","","Error parsing int",3,null],[13,"Utf8","","Error parsing UTF8",3,null],[13,"General","","General Parsing Error",3,null],[4,"Colorspace","","Colorspace (color model/pixel format). Only subset of them…",null,null],[13,"Cmono","","Grayscale only, 8-bit.",4,null],[13,"C420","","4:2:0 with coincident chroma planes, 8-bit.",4,null],[13,"C420p10","","4:2:0 with coincident chroma planes, 10-bit.",4,null],[13,"C420p12","","4:2:0 with coincident chroma planes, 12-bit.",4,null],[13,"C420jpeg","","4:2:0 with biaxially-displaced chroma planes, 8-bit.",4,null],[13,"C420paldv","","4:2:0 with vertically-displaced chroma planes, 8-bit.",4,null],[13,"C420mpeg2","","Found in some files. Same as `C420`.",4,null],[13,"C422","","4:2:2, 8-bit.",4,null],[13,"C422p10","","4:2:2, 10-bit.",4,null],[13,"C422p12","","4:2:2, 12-bit.",4,null],[13,"C444","","4:4:4, 8-bit.",4,null],[13,"C444p10","","4:4:4, 10-bit.",4,null],[13,"C444p12","","4:4:4, 12-bit.",4,null],[5,"decode","","Create a new decoder instance. Alias for `Decoder::new`.",null,[[["r"]],[["result",["decoder","error"]],["decoder"],["error"]]]],[5,"encode","","Create a new encoder builder. Alias for…",null,[[["usize"],["ratio"]],["encoderbuilder"]]],[11,"new","","Create a new ratio.",0,[[["usize"]],["ratio"]]],[11,"get_bit_depth","","Return the bit depth per sample",4,[[],["usize"]]],[11,"get_bytes_per_sample","","Return the number of bytes in a sample",4,[[],["usize"]]],[11,"new","","Create a new decoder instance.",5,[[["r"]],[["result",["decoder","error"]],["decoder"],["error"]]]],[11,"new_with_limits","","Create a new decoder instance with custom limits.",5,[[["limits"],["r"]],[["result",["decoder","error"]],["decoder"],["error"]]]],[11,"read_frame","","Iterate over frames. End of input is indicated by…",5,[[["self"]],[["error"],["frame"],["result",["frame","error"]]]]],[11,"get_width","","Return file width.",5,[[["self"]],["usize"]]],[11,"get_height","","Return file height.",5,[[["self"]],["usize"]]],[11,"get_framerate","","Return file framerate.",5,[[["self"]],["ratio"]]],[11,"get_colorspace","","Return file colorspace.",5,[[["self"]],["colorspace"]]],[11,"get_raw_params","","Return file raw parameters.",5,[[["self"]]]],[11,"get_bit_depth","","Return the bit depth per sample",5,[[["self"]],["usize"]]],[11,"get_bytes_per_sample","","Return the number of bytes in a sample",5,[[["self"]],["usize"]]],[11,"new","","Create a new frame with optional parameters. No heap…",6,[[["vec",["u8"]],["option",["vec"]]],["frame"]]],[11,"from_u16","","Create a new frame from data in 16-bit format.",6,[[["option",["vec"]],["vec",["u8"]]],["frame"]]],[11,"get_y_plane","","Return Y (first) plane.",6,[[["self"]]]],[11,"get_u_plane","","Return U (second) plane. Empty in case of grayscale.",6,[[["self"]]]],[11,"get_v_plane","","Return V (third) plane. Empty in case of grayscale.",6,[[["self"]]]],[11,"get_raw_params","","Return frame raw parameters if any.",6,[[["self"]],["option"]]],[11,"new","","Create a new encoder builder.",7,[[["usize"],["ratio"]],["encoderbuilder"]]],[11,"with_colorspace","","Specify file colorspace.",7,[[["colorspace"]],["self"]]],[11,"write_header","","Write header to the stream and create encoder instance.",7,[[["w"]],[["error"],["encoder"],["result",["encoder","error"]]]]],[11,"write_frame","","Write next frame to the stream.",8,[[["self"],["frame"]],[["error"],["result",["error"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",2,[[["error"]],["error"]]],[11,"from","","",2,[[["parseinterror"]],["error"]]],[11,"from","","",2,[[["utf8error"]],["error"]]],[11,"clone","","",0,[[["self"]],["ratio"]]],[11,"clone","","",4,[[["self"]],["colorspace"]]],[11,"clone","","",1,[[["self"]],["limits"]]],[11,"default","","",1,[[],["limits"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Ratio"],[3,"Limits"],[4,"Error"],[4,"ParseError"],[4,"Colorspace"],[3,"Decoder"],[3,"Frame"],[3,"EncoderBuilder"],[3,"Encoder"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);